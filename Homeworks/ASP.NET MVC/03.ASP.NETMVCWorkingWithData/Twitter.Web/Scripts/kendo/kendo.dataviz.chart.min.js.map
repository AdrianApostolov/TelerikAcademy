{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals",1,10,100,2,20,200,3,30,300,4,40,400,5,50,500,6,60,600,7,70,700,8,80,800,9,90,900,1000,"values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","Math","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","measureText","style","measureBox","TextMetrics","current","measure","doc","document","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","baselineMarker","styleKey","cacheKey","cachedResult","width","height","baseline","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","e","geometryChange","suspend","resume","_observerField","field","mixins","returnSelf","DefaultAggregates","_defaults","intersection","b1","b2","ua","ua_t","y","u_b","Point2D","applySeriesDefaults","themeOptions","seriesType","baseOptions","series","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","type","data","tooltip","bar","column","rangeColumn","line","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","applySeriesColors","currentSeries","seriesColor","defaults","colors","seriesColors","resolveAxisAliases","alias","each","CATEGORY","VALUE","X","Y","applyAxisDefaults","themeAxisDefaults","axisDefaults","axisName","axes","concat","axisOptions","axisColor","labels","title","categoriesCount","seriesCount","categories","getField","row","getter","getDateField","toDate","STRING","parseDate","isArray","toTime","addDuration","date","unit","weekStartDay","hours","getHours","YEARS","getFullYear","adjustDST","MONTHS","getMonth","WEEKS","startOfWeek","DAYS","getDate","HOURS","addTicks","TIME_PER_HOUR","MINUTES","TIME_PER_MINUTE","getSeconds","setSeconds","SECONDS","TIME_PER_SECOND","getMilliseconds","setMilliseconds","day","getDay","daysToSubtract","TIME_PER_DAY","floorDate","ceilDate","dateDiff","a","b","diff","offsetDiff","getTimezoneOffset","absoluteDateDiff","ticks","tzOffsetBefore","tzOffsetDiff","duration","floor","TIME_PER_UNIT","dateIndex","start","baseUnit","baseUnitStep","startDate","timeIndex","singleItemOrArray","axisGroupBox","axisBox","contentBox","wrap","clone","Box2D","equalsIgnoreCase","dateEquals","appendIfNotNull","lteDateIndex","sortedDates","currentDate","low","high","countNumbers","num","count","areNumbers","axisRanges","axis","ranges","range","evalOptions","context","state","dryRun","property","propValue","excluded","depth","needsEval","MAX_EXPAND_DEPTH","hasOwnProperty","isFn","OBJECT","groupSeries","nameTemplate","groupIx","seriesClone","legacyTemplate","groupNameTemplate","dataLength","visibleInLegend","logToConsole","_slotCount","_groupIx","group","filterSeriesByType","types","indexOf","item","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","isDateAxis","sampleCategory","dateCategory","DATE","transpose","rows","rowIx","colIx","colCount","rowCount","ensureTree","fieldName","target","path","setter","seriesTotal","pointData","sum","SeriesBinder","bindPoint","valueFields","parseFloat","fields","visible","abs","hasGradientOverlay","overlay","gradient","anyHasZIndex","elements","zIndex","preventDefault","_defaultPrevented","pointByCategoryName","points","category","hasValue","toChartAxisRanges","axisRange","acceptKey","mouseKey","accept","ctrlKey","shiftKey","altKey","PlotAreaFactory","BarLabel","LegendItem","LegendLayout","Legend","CategoryAxis","DateCategoryAxis","DateValueAxis","ClusterLayout","StackWrap","PointEventsMixin","NoteMixin","Bar","BarChartAnimation","FadeInAnimation","ErrorRangeCalculator","CategoricalChart","BarChart","RangeBar","RangeBarChart","BulletChart","Bullet","Target","ErrorBarBase","CategoricalErrorBar","ScatterErrorBar","LinePoint","Bubble","LineSegment","LineChartMixin","ClipAnimationMixin","LineChart","ClipAnimation","StepLineSegment","SplineSegment","AreaSegmentMixin","AreaSegment","AreaChart","SplineAreaSegment","StepAreaSegment","ScatterChart","ScatterLineChart","BubbleChart","Candlestick","CandlestickChart","OHLCPoint","OHLCChart","BoxPlotChart","BoxPlot","PieSegment","PieChartMixin","PieChart","DonutSegment","DonutChart","WaterfallChart","WaterfallSegment","Pane","ChartContainer","PlotAreaBase","CategoricalPlotArea","AxisGroupRangeTracker","XYPlotArea","PiePlotArea","DonutPlotArea","PieAnimation","BubbleAnimation","Highlight","BaseTooltip","Tooltip","SharedTooltip","Crosshair","CrosshairTooltip","Aggregates","Selection","Pannable","ZoomSelection","MousewheelZoom","SeriesAggregator","ChartAxis","isPlainObject","noop","proxy","Observable","DataSource","Widget","ui","isFunction","Axis","AxisLabel","BoxElement","ChartElement","Color","CurveProcessor","FloatElement","Note","LogarithmicAxis","NumericAxis","RootElement","Ring","ShapeElement","ShapeBuilder","TextBox","Title","alignPathToPixel","autoFormat","getSpacing","interpolate","interpolateValue","mwDelta","geom","geometry","draw","NS","ABOVE","AREA","AUTO","FIT","AXIS_LABEL_CLICK","BAR","BAR_ALIGN_MIN_WIDTH","BAR_BORDER_BRIGHTNESS","BELOW","BLACK","BOTH","BOTTOM","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","CENTER","CHANGE","CIRCLE","CONTEXTMENU_NS","CLIP","COLOR","COLUMN","COORD_PRECISION","CROSS","CSS_PREFIX","CUSTOM","DATABOUND","DEFAULT_FONT","DEFAULT_HEIGHT","DEFAULT_PRECISION","DEFAULT_WIDTH","DEFAULT_ERROR_BAR_WIDTH","DONUT","DONUT_SECTOR_ANIM_DELAY","DRAG","DRAG_END","DRAG_START","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","FADEIN","FIRST","FROM","FUNNEL","GLASS","HORIZONTAL","HORIZONTAL_WATERFALL","INITIAL_ANIMATION_DURATION","INSIDE_BASE","INSIDE_END","INTERPOLATE","LEAVE","LEFT","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LINE","LINE_MARKER_SIZE","LINEAR","LOGARITHMIC","MAX","MIN","MIN_VALUE","MOUSELEAVE_NS","MOUSEMOVE_TRACKING","MOUSEOVER_NS","MOUSEOUT_NS","MOUSEMOVE_NS","MOUSEMOVE_DELAY","MOUSEWHEEL_DELAY","MOUSEWHEEL_NS","NOTE_CLICK","NOTE_HOVER","NOTE_TEXT","OHLC","OUTSIDE_END","PIE","PIE_SECTOR_ANIM_DELAY","PLOT_AREA_CLICK","POINTER","RANGE_BAR","RANGE_COLUMN","RENDER","RIGHT","ROUNDED_BEVEL","ROUNDED_GLASS","SCATTER","SCATTER_LINE","SELECT_START","SELECT","SELECT_END","SERIES_CLICK","SERIES_HOVER","START_SCALE","STEP","SMOOTH","STD_ERR","STD_DEV","SUMMARY_FIELD","TIME_PER_WEEK","TIME_PER_MONTH","TIME_PER_YEAR","years","months","weeks","days","minutes","seconds","TO","TOP","TOOLTIP_ANIMATION_DURATION","TOOLTIP_OFFSET","TOOLTIP_SHOW_DELAY","TOOLTIP_HIDE_DELAY","TOOLTIP_INVERSE","VERTICAL_AREA","VERTICAL_BULLET","VERTICAL_LINE","WATERFALL","WHITE","ZERO","ZOOM_ACCELERATION","ZOOM_START","ZOOM","ZOOM_END","BASE_UNITS","EQUALLY_SPACED_SERIES","DateLabelFormats","Chart","userOptions","dataSource","chart","destroy","fn","call","addClass","css","_originalOptions","_initTheme","_initSurface","bind","events","wrapper","_initDataSource","notify","themes","themeName","theme","seriesCopies","_applyDefaults","_dataChangeHandler","_onDataChanged","_bindCategories","_hasDataSource","_redraw","_attachEvents","autoBind","fetch","setDataSource","unbind","_hasData","items","renderAs","chartArea","legend","categoryAxis","highlight","negativeValues","transitions","valueAxis","plotArea","xAxis","yAxis","panes","pannable","zoomable","refresh","_bindSeries","getSize","dimensions","_resize","t","redraw","paneName","pane","_model","_plotArea","findPane","getAxis","toggleHighlight","show","seriesName","categoryName","_highlight","firstSeries","srcSeries","pointsBySeriesName","charts","togglePointHighlight","surface","_surfaceWrap","clear","resize","Surface","view","model","_getModel","_destroyView","renderVisual","traverse","animation","setup","visual","play","_tooltip","_createTooltip","_setupSelection","_createPannable","_createZoomSelection","_createMousewheelZoom","exportVisual","originalChartArea","_sharedTooltip","shared","_pannable","selection","_zoomSelection","mousewheel","_mousewheelZoom","_tooltipleave","hideCrosshairs","hide","_modelOptions","buildTitle","_createPlotArea","reflow","skipSeries","selections","_selections","_selectStartHandler","_selectStart","_selectHandler","_select","_selectEndHandler","_selectEnd","select","vertical","justified","on","_click","_mouseover","_mouseout","_mousewheel","_mouseleave","_mousemove","throttle","_shouldAttachMouseMove","UserEvents","_userEvents","global","filter","multiTouch","fastTap","tap","_tap","_start","move","_move","end","_end","_getChartElement","leave","_events","_startNavigation","currentAxis","delta","_navState","originalEvent","pan","startLocation","location","translateRange","_endNavigation","zoom","prevented","totalDelta","origEvent","mousewheelZoom","updateRanges","scaleRange","_mwTimeout","clearTimeout","setTimeout","chartEvent","coords","_eventCoordinates","findPointPane","slice","inAxis","containsPoint","backgroundBox","cancel","_suppressHover","_unsetActivePoint","match","chartElement","eventTarget","parent","aliasFor","closest","isTouch","client","clientX","clientY","_toModelCoordinates","offset","paddingLeft","parseInt","paddingTop","win","left","scrollLeft","top","scrollTop","_activePoint","_startHover","click","point","tooltipOptions","isHighlighted","hover","tooltipTracking","_mouseMoveTracking","seriesPoint","getNearestPoint","seriesIx","off","_trackCrosshairs","_trackSharedTooltip","crosshairs","showAt","pointArgs","hoverArgs","pointCategoryIndex","_tooltipCategoryIx","pointsByCategoryIndex","eventArgs","categoryPoints","relatedTarget","_sourceSeries","grouped","processedSeries","_isBindable","_deferRedraw","support","vml","_clearRedrawTimeout","_redrawTimeout","clearInterval","seriesData","axisIx","categoriesData","definitions","_bindCategoryAxis","categoryIx","dataItems","_bindCategoryAxisFromSeries","s","onAxis","dataIx","dataRow","getFn","dateAxis","uniqueCategories","categoryField","_legendItemClick","seriesIndex","pointIndex","transitionsState","originalSeries","_legendItemHover","pointsBySeriesIndex","setOptions","_setEvents","ExportMixin","PDFMixin","_registry","register","seriesTypes","registry","_valueFields","_otherFields","_nullValue","_undefinedValue","otherFields","binder","_makeValue","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","content","barLabel","textBox","position","margin","padding","background","border","aboveAxis","delay","createVisual","noclip","targetBox","children","align","vAlign","x1","y1","x2","y2","rotation","right","bottom","alignToClipBox","clipBox","parentBox","paddingBox","createContainer","createMarker","createLabel","container","markerOptions","markerColor","markers","labelOptions","renderComplete","cursor","eventSink","_itemOverlay","Path","fromRect","toRect","fill","opacity","stroke","appendVisual","widget","args","that","customVisual","active","renderChildren","defaultVisual","addVisual","render","legendItem","Layout","spacing","lineSpacing","orientation","rect","bbox","clippedBBox","rectToBox","createItems","offsetX","offsetY","userAlign","shrinkToFit","innerElement","isVertical","reverse","hasItems","containerCustomReflow","containerReflow","containerBox","alignTarget","translate","_initFields","_initCategories","_ticks","outOfRangeMin","outOfRangeMax","definedMin","definedMax","srcCategories","ceil","majorGridLines","rangeIndices","totalRange","totalRangeIndices","limit","_seriesMax","getScale","lineBox","scale","getTickPositions","stepSize","positions","getLabelsTickPositions","tickPositions","getMajorTickPositions","unshift","labelTickIndex","label","arrangeLabels","hideOutOfRangeLabels","firstLabel","lastLabel","getTicks","majorTicks","getMinorTickPositions","minorTicks","getHash","_hash","getSlot","from","to","p1","p2","lineStart","slotBox","singleSlot","startValue","lineEnd","getCategory","categoryIndex","zoomRange","rate","totalMax","totalMin","labelsCount","labelsRange","skip","step","createAxisLabel","dataItem","axisLabelText","shouldRenderNote","limitRange","pointsRange","diffStart","diffEnd","useDefault","roundToBaseUnit","userSetBaseUnit","userSetBaseUnitStep","defaultBaseUnit","autoBaseUnit","_groupsStart","groupCategories","dateFormats","autoBaseUnitSteps","maxDateGroups","parseNoteValue","rounds","cat","lastCat","minDiff","_categoryRange","_range","categoryLimits","categoriesRange","minIdx","maxIdx","_roundToTotalStep","currentRange","datesRange","panRange","totalLimits","indicesRange","baseUnitIndex","autoBaseUnitStep","maxDiff","rangeDiff","stepIndex","rangeMax","rangeMin","autoUnit","stepOptions","unitSteps","nextStep","autoUnitIx","span","units","totalUnits","_timeScale","timeRange","maxCategory","lineSize","_collapse","nextDate","groups","upper","roundToNext","roundedStep","roundedDate","unitFormat","format","seriesMin","seriesMax","axisCrossingValue","axisCrossingValues","applyDefaults","timeUnits","baseUnitTime","autoMin","autoMax","userMajorUnit","majorUnit","autoMajorUnit","actualUnits","unitsToAdd","head","tail","minorUnit","getDivisions","stepValue","dir","startEdge","divisions","getValue","exact","limittedRange","endValue","gap","childBox","cluster","slots","slotSize","currentChild","positionAxis","childrenCount","snapTo","percentage","runningTotal","total","createNote","notes","noteText","note","_rendered","errorBar","labelText","labelTemplate","formatValue","owner","formatPointValue","errorBars","rectVisual","sender","getChart","Group","createRect","strokeOpacity","getBorderColor","dashType","lineJoin","createGradientOverlay","baseColor","createHighlight","highlightVisual","highlightVisualArgs","borderColor","brightness","_brightness","toHex","tooltipAnchor","tooltipWidth","tooltipHeight","isStacked","overlapsBox","overlaps","Animation","fromScale","origin","Point","transform","abort","scaleX","scaleY","AnimationFactory","easing","fadeTo","errorValue","initGlobalRanges","prototype","percentRegex","standardDeviationRegex","RegExp","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","globalRange","getStandardError","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","seriesCategoryAxis","valueAxisRanges","seriesPoints","seriesOptions","_evalSeries","invertAxes","clip","traverseDataPoints","addValue","pointOptions","pointType","plotValue","categoryPts","categorySum","otherValues","other","stack","otherStack","isStacked100","plotRange","positive","prevValue","isStackedBar","otherValue","seriesValueAxis","categoryAxisCrossingValue","stackLimits","stackName","pIx","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","addErrorBar","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","updateRange","createPoint","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","categorySlot","valueSlot","pointSlot","reflowPoint","reflowCategories","crossingValues","axisIndex","slotX","slotY","callback","currentCategory","_outOfRangeCallback","_bindPoint","outOfRangePoint","bindCache","_bindCache","clusterType","stackType","stackWrap","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","stackAxis","zeroSlot","childrenLength","createAnimation","_setAnimationOptions","_setChildrenAnimation","pointVisual","fromOptions","toOptions","labelFrom","_createLabel","labelTo","rangeBar","plotLimits","wrapData","seriesItem","bulletOptions","shape","targetSlot","targetValueSlot","targetSlotX","targetSlotY","set","bodyVisual","endCaps","linePoints","valueBox","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","boxSize","createDefaultVisual","lineOptions","moveTo","lineTo","seriesAxes","marker","markerBorder","markerBox","_childBox","noteTargetBox","reflowLabel","anchor","alignTo","defaultColor","shadow","getElement","halfSize","Rect","showTooltip","radius","Circle","segment","closed","visualPoints","fromPoints","close","renderSegments","sortedPoints","pointCount","lastSegment","_segments","sortPoints","seriesMissingValues","createSegment","_addSegment","missingValues","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","clipPath","root","getRoot","animationPoints","_setEnd","segments","topRight","bottomRight","setX","calculateStepPoints","prevPoint","prevMarkerBoxCenter","markerBoxCenter","isInterpolate","revDir","curveProcessor","curve","process","firstPoint","lastPoint","valueAxisLineBox","categoryAxisLineBox","stackPoints","_linePoints","createArea","createLine","lineCap","prevSegment","_gapStackPoints","stackPoint","_stackPoints","currentSeriesIx","gapStackPoint","startIdx","endIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","strokeSegments","_strokeSegments","createFill","createStroke","prevStrokeSegments","prevAnchor","stackSegments","firstAnchor","fillSegments","Segment","controlOut","controlIn","closeFill","fillPath","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","missingValue","_maxSize","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","mid","ocSlot","lhSlot","open","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","oSlot","cSlot","oPoints","cPoints","lhPoints","lower","q1","median","q3","filterOutliers","outliers","mean","extremes","whiskerSlot","boxSlot","medianSlot","meanSlot","meanPoints","whiskerPoints","medianPoints","renderOutliers","markersBorder","outlierValue","outerFence","reflowOutliers","centerX","sector","distance","font","animationDelay","lp","labelWidth","labelHeight","labelsOptions","labelsDistance","angle","middle","expand","startAngle","innerRadius","ir","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","createRing","adjacentBox","createLegendItem","itemLabelOptions","pointVisible","legendOptions","inactiveItems","inactiveItemsLabels","legendItems","connectors","anglePerValue","explode","currentAngle","colorsCount","evalSegmentOptions","segmentOptions","seriesConfig","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","seriesConfigs","boxCenter","leftSideLabels","rightSideLabels","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","firstBox","lr","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelDistance","boxY","hAlignLabel","connectorLine","centerPoint","sr","crossing","_connectorLines","seriesId","pointInCircle","originalX","direction","cx","cy","holeSize","totalSize","seriesWithoutSize","currentSize","createSegments","summary","totalCategories","fromBox","toBox","guid","createTitle","chartContainer","titleOptions","appendAxis","appendChart","empty","removeAxis","removeChart","pop","visualStyle","createGridLines","stackRoot","clipRoot","gridLines","j","altAxis","allAxes","vGridLines","hGridLines","createGradient","shouldClip","_clipBox","axisValueField","clipRect","unclipLabels","initSeries","createPanes","createCrosshairs","currentPane","paneOptions","panesLength","paneIndex","currentCrosshair","crosshair","removeCrosshairs","matchingPane","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","groupAxes","paneAxes","paneIx","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","reflowAxes","reflowCharts","crossingAxes","valuesToAdd","alignAxisTo","targetAxis","crossingValue","targetCrossingValue","slot","slotEdge","targetEdge","alignAxes","paneId","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","overflowY","shrinked","fitAxes","paneBox","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","remainingHeight","remainingPanes","autoHeightPanes","axisA","axisB","axesCount","bgBox","bg","_bgVisual","paneByPoint","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","reset","paneSeries","visibleSeries","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","aggregateSeries","filterSeries","outOfRangePoints","_outOfRangeMinPoint","_outOfRangeMaxPoint","aggregator","outOfRangeMinCategory","outOfRangeMaxCategory","srcData","srcPoints","aggregatorSeries","outOfRangeMinIdx","outOfRangeMaxIdx","aggregatePoints","categoriesToAdd","update","grep","defaultPaneName","stackableChartOptions","axisSeries","unique","categoryAxes","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","_deferLabels","isJustified","axisType","defaultAxisRange","tracker","defaultRange","query","roundToMajorUnit","pointPane","updateAxisOptions","axesOptions","chartAxisRanges","chartRange","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","createPieChart","pieChart","createDonutChart","donutChart","_points","hasHighlight","toggleHandler","toggle","mobileScrollerSelector","padding-top","padding-right","padding-bottom","padding-left","attr","_mobileScroller","_clearShowTimeout","remove","_offset","_ensureElement","stop","animate","showTimeout","_padding","_chartPadding","_measure","chartPadding","chartOffset","zoomLevel","viewport","pageYOffset","documentElement","pageXOffset","movable","_fit","outerHeight","outerWidth","setStyle","pointColor","percBrightness","toggleClass","backgroundColor","borderWidth","_hideElement","appendTo","contains","fadeOut","always","_pointContent","tooltipTemplate","xLow","xHigh","yLow","yHigh","_pointAnchor","viewPortSize","html","sharedTemplate","categoryFormat","_content","_slotAnchor","hCenter","categoryText","stickyMode","moveLine","getBox","dim","axisLineBox","getAnchor","halfWidth","halfHeight","bottomLeft","topLeft","sumOrNull","avg","aggregates","getValueAxis","selectorPrefix","_dateAxis","find","leftMask","rightMask","leftHandle","rightHandle","_index","cssText","userEvents","stopPropagation","gesturestart","_gesturechange","gesturechange","add","removeClass","_state","_rangeEventArgs","_value","moveTarget","parents","oldRange","is","p0","touches","rightClick","which","_slot","leftMaskWidth","rightMaskWidth","zDir","lock","_active","_panAxes","updatedAxes","_marquee","zoomPane","elementOffset","_zoomPane","_elementOffset","_zoomPaneClipBox","selectionPosition","_selectionPosition","_updateAxisRanges","initialDelta","defaultAggregates","fieldAggregate","sa","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","srcValues","_bindPoints","firstDataItem","_bindField","_axis","easeOutElastic","asin","sin","plugin","errorLow","errorHigh"],"mappings":"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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = {\n                    width: 0,\n                    height: 0,\n                    baseline: 0\n                };\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function (e) {\n                this.trigger('geometryChange', e);\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'kendo.data',\n        'kendo.userevents',\n        'kendo.dataviz.core',\n        'kendo.drawing',\n        'kendo.dataviz.themes'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [\n            {\n                id: 'dataviz.chart-polar',\n                name: 'Polar & Radar',\n                description: 'Support for Polar and Radar charts.',\n                depends: ['dataviz.chart.polar'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-funnel',\n                name: 'Funnel chart',\n                description: 'Support for Funnel chart.',\n                depends: ['dataviz.chart.funnel'],\n                requireJS: false\n            },\n            {\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var each = $.each, isArray = $.isArray, isPlainObject = $.isPlainObject, map = $.map, math = Math, noop = $.noop, extend = $.extend, proxy = $.proxy, kendo = window.kendo, Class = kendo.Class, Observable = kendo.Observable, DataSource = kendo.data.DataSource, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, getter = kendo.getter, isFn = kendo.isFunction, template = kendo.template, dataviz = kendo.dataviz, Axis = dataviz.Axis, AxisLabel = dataviz.AxisLabel, Box2D = dataviz.Box2D, BoxElement = dataviz.BoxElement, ChartElement = dataviz.ChartElement, Color = kendo.drawing.Color, CurveProcessor = dataviz.CurveProcessor, FloatElement = dataviz.FloatElement, Note = dataviz.Note, LogarithmicAxis = dataviz.LogarithmicAxis, NumericAxis = dataviz.NumericAxis, Point2D = dataviz.Point2D, RootElement = dataviz.RootElement, Ring = dataviz.Ring, ShapeElement = dataviz.ShapeElement, ShapeBuilder = dataviz.ShapeBuilder, TextBox = dataviz.TextBox, Title = dataviz.Title, alignPathToPixel = dataviz.alignPathToPixel, autoFormat = dataviz.autoFormat, dateComparer = dataviz.dateComparer, getSpacing = dataviz.getSpacing, inArray = dataviz.inArray, interpolate = dataviz.interpolateValue, mwDelta = dataviz.mwDelta, round = dataviz.round, util = kendo.util, append = util.append, defined = util.defined, last = util.last, limitValue = util.limitValue, sparseArrayLimits = util.sparseArrayLimits, sparseArrayMin = util.sparseArrayMin, sparseArrayMax = util.sparseArrayMax, renderTemplate = util.renderTemplate, valueOrDefault = util.valueOrDefault, geom = dataviz.geometry, draw = dataviz.drawing;\n        var NS = '.kendoChart', ABOVE = 'above', AREA = 'area', AUTO = 'auto', FIT = 'fit', AXIS_LABEL_CLICK = dataviz.AXIS_LABEL_CLICK, BAR = 'bar', BAR_ALIGN_MIN_WIDTH = 6, BAR_BORDER_BRIGHTNESS = 0.8, BELOW = 'below', BLACK = '#000', BOTH = 'both', BOTTOM = 'bottom', BOX_PLOT = 'boxPlot', BUBBLE = 'bubble', BULLET = 'bullet', CANDLESTICK = 'candlestick', CATEGORY = 'category', CENTER = 'center', CHANGE = 'change', CIRCLE = 'circle', CONTEXTMENU_NS = 'contextmenu' + NS, CLIP = dataviz.CLIP, COLOR = 'color', COLUMN = 'column', COORD_PRECISION = dataviz.COORD_PRECISION, CROSS = 'cross', CSS_PREFIX = 'k-', CUSTOM = 'custom', DATABOUND = 'dataBound', DATE = 'date', DAYS = 'days', DEFAULT_FONT = dataviz.DEFAULT_FONT, DEFAULT_HEIGHT = dataviz.DEFAULT_HEIGHT, DEFAULT_PRECISION = dataviz.DEFAULT_PRECISION, DEFAULT_WIDTH = dataviz.DEFAULT_WIDTH, DEFAULT_ERROR_BAR_WIDTH = 4, DONUT = 'donut', DONUT_SECTOR_ANIM_DELAY = 50, DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', ERROR_LOW_FIELD = 'errorLow', ERROR_HIGH_FIELD = 'errorHigh', X_ERROR_LOW_FIELD = 'xErrorLow', X_ERROR_HIGH_FIELD = 'xErrorHigh', Y_ERROR_LOW_FIELD = 'yErrorLow', Y_ERROR_HIGH_FIELD = 'yErrorHigh', FADEIN = 'fadeIn', FIRST = 'first', FROM = 'from', FUNNEL = 'funnel', GLASS = 'glass', HORIZONTAL = 'horizontal', HORIZONTAL_WATERFALL = 'horizontalWaterfall', HOURS = 'hours', INITIAL_ANIMATION_DURATION = dataviz.INITIAL_ANIMATION_DURATION, INSIDE_BASE = 'insideBase', INSIDE_END = 'insideEnd', INTERPOLATE = 'interpolate', LEAVE = 'leave', LEFT = 'left', LEGEND_ITEM_CLICK = 'legendItemClick', LEGEND_ITEM_HOVER = 'legendItemHover', LINE = 'line', LINE_MARKER_SIZE = 8, LINEAR = 'linear', LOGARITHMIC = 'log', MAX = 'max', MAX_EXPAND_DEPTH = 5, MAX_VALUE = Number.MAX_VALUE, MIN = 'min', MIN_VALUE = -Number.MAX_VALUE, MINUTES = 'minutes', MONTHS = 'months', MOUSELEAVE_NS = 'mouseleave' + NS, MOUSEMOVE_TRACKING = 'mousemove.tracking', MOUSEOVER_NS = 'mouseover' + NS, MOUSEOUT_NS = 'mouseout' + NS, MOUSEMOVE_NS = 'mousemove' + NS, MOUSEMOVE_DELAY = 20, MOUSEWHEEL_DELAY = 150, MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, NOTE_CLICK = dataviz.NOTE_CLICK, NOTE_HOVER = dataviz.NOTE_HOVER, NOTE_TEXT = 'noteText', OBJECT = 'object', OHLC = 'ohlc', OUTSIDE_END = 'outsideEnd', PIE = 'pie', PIE_SECTOR_ANIM_DELAY = 70, PLOT_AREA_CLICK = 'plotAreaClick', POINTER = 'pointer', RANGE_BAR = 'rangeBar', RANGE_COLUMN = 'rangeColumn', RENDER = 'render', RIGHT = 'right', ROUNDED_BEVEL = 'roundedBevel', ROUNDED_GLASS = 'roundedGlass', SCATTER = 'scatter', SCATTER_LINE = 'scatterLine', SECONDS = 'seconds', SELECT_START = 'selectStart', SELECT = 'select', SELECT_END = 'selectEnd', SERIES_CLICK = 'seriesClick', SERIES_HOVER = 'seriesHover', START_SCALE = 0.001, STEP = 'step', SMOOTH = 'smooth', STD_ERR = 'stderr', STD_DEV = 'stddev', STRING = 'string', SUMMARY_FIELD = 'summary', TIME_PER_SECOND = 1000, TIME_PER_MINUTE = 60 * TIME_PER_SECOND, TIME_PER_HOUR = 60 * TIME_PER_MINUTE, TIME_PER_DAY = 24 * TIME_PER_HOUR, TIME_PER_WEEK = 7 * TIME_PER_DAY, TIME_PER_MONTH = 31 * TIME_PER_DAY, TIME_PER_YEAR = 365 * TIME_PER_DAY, TIME_PER_UNIT = {\n                'years': TIME_PER_YEAR,\n                'months': TIME_PER_MONTH,\n                'weeks': TIME_PER_WEEK,\n                'days': TIME_PER_DAY,\n                'hours': TIME_PER_HOUR,\n                'minutes': TIME_PER_MINUTE,\n                'seconds': TIME_PER_SECOND\n            }, TO = 'to', TOP = 'top', TOOLTIP_ANIMATION_DURATION = 150, TOOLTIP_OFFSET = 5, TOOLTIP_SHOW_DELAY = 100, TOOLTIP_HIDE_DELAY = 100, TOOLTIP_INVERSE = 'chart-tooltip-inverse', VALUE = 'value', VERTICAL_AREA = 'verticalArea', VERTICAL_BULLET = 'verticalBullet', VERTICAL_LINE = 'verticalLine', WATERFALL = 'waterfall', WEEKS = 'weeks', WHITE = '#fff', X = 'x', Y = 'y', YEARS = 'years', ZERO = 'zero', ZOOM_ACCELERATION = 3, ZOOM_START = 'zoomStart', ZOOM = 'zoom', ZOOM_END = 'zoomEnd', BASE_UNITS = [\n                SECONDS,\n                MINUTES,\n                HOURS,\n                DAYS,\n                WEEKS,\n                MONTHS,\n                YEARS\n            ], EQUALLY_SPACED_SERIES = [\n                BAR,\n                COLUMN,\n                OHLC,\n                CANDLESTICK,\n                BOX_PLOT,\n                BULLET,\n                RANGE_COLUMN,\n                RANGE_BAR,\n                WATERFALL,\n                HORIZONTAL_WATERFALL\n            ];\n        var DateLabelFormats = {\n            seconds: 'HH:mm:ss',\n            minutes: 'HH:mm',\n            hours: 'HH:mm',\n            days: 'M/d',\n            weeks: 'M/d',\n            months: 'MMM \\'yy',\n            years: 'yyyy'\n        };\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var chart = this, options, dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(chart, element);\n                chart.element.addClass(CSS_PREFIX + this.options.name.toLowerCase()).css('position', 'relative');\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    userOptions.dataSource = undefined;\n                }\n                options = deepExtend({}, chart.options, userOptions);\n                chart._originalOptions = deepExtend({}, options);\n                chart._initTheme(options);\n                chart._initSurface();\n                chart.bind(chart.events, chart.options);\n                chart.wrapper = chart.element;\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                chart._initDataSource(userOptions);\n                kendo.notify(chart, dataviz.ui);\n            },\n            _initTheme: function (options) {\n                var chart = this, themes = dataviz.ui.themes || {}, themeName = options.theme, theme = themes[themeName] || themes[themeName.toLowerCase()], themeOptions = themeName && theme ? theme.chart : {}, seriesCopies = [], series = options.series || [], i;\n                for (i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                chart._applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    options.seriesColors = undefined;\n                }\n                chart.options = deepExtend({}, themeOptions, options);\n                applySeriesColors(chart.options);\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind(CHANGE, chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                chart._redraw();\n                chart._attachEvents();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                PLOT_AREA_CLICK,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                RENDER\n            ],\n            items: function () {\n                return $();\n            },\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                chartArea: {},\n                legend: {\n                    visible: true,\n                    labels: {}\n                },\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {\n                    type: COLUMN,\n                    data: [],\n                    highlight: { visible: true },\n                    labels: {},\n                    negativeValues: { visible: false }\n                },\n                series: [],\n                seriesColors: null,\n                tooltip: { visible: false },\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            refresh: function () {\n                var chart = this;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            _resize: function () {\n                var t = this.options.transitions;\n                this.options.transitions = false;\n                this._redraw();\n                this.options.transitions = t;\n            },\n            redraw: function (paneName) {\n                var chart = this, pane, plotArea;\n                chart._applyDefaults(chart.options);\n                applySeriesColors(chart.options);\n                if (paneName) {\n                    plotArea = chart._model._plotArea;\n                    pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    chart._redraw();\n                }\n            },\n            getAxis: function (name) {\n                var axes = this._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    if (axes[idx].options.name === name) {\n                        return new ChartAxis(axes[idx]);\n                    }\n                }\n            },\n            toggleHighlight: function (show, options) {\n                var plotArea = this._plotArea;\n                var highlight = this._highlight;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var seriesName, categoryName, points;\n                if (isPlainObject(options)) {\n                    seriesName = options.series;\n                    categoryName = options.category;\n                } else {\n                    seriesName = categoryName = options;\n                }\n                if (firstSeries.type === DONUT) {\n                    points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                    points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                } else {\n                    points = plotArea.pointsBySeriesName(seriesName);\n                }\n                if (points) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        highlight.togglePointHighlight(points[idx], show);\n                    }\n                }\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea;\n                if (chartArea.width) {\n                    wrap.css('width', chartArea.width);\n                }\n                if (chartArea.height) {\n                    wrap.css('height', chartArea.height);\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    if (surface) {\n                        surface.destroy();\n                    }\n                    this.surface = draw.Surface.create(wrap, { type: this.options.renderAs });\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var chart = this, model = chart._getModel(), view;\n                chart._destroyView();\n                chart._model = model;\n                chart._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                chart._initSurface();\n                chart.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                chart._tooltip = chart._createTooltip();\n                chart._highlight = new Highlight(view);\n                chart._setupSelection();\n                chart._createPannable();\n                chart._createZoomSelection();\n                chart._createMousewheelZoom();\n                if (!chart._hasDataSource || chart._hasData || !chart.options.autoBind) {\n                    chart.trigger(RENDER);\n                }\n            },\n            exportVisual: function (options) {\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = this.options.chartArea;\n                    var originalChartArea = this._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = this._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    visual = model.visual;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                var chart = this, options = chart.options;\n                return chart._plotArea instanceof CategoricalPlotArea && options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _createTooltip: function () {\n                var chart = this, options = chart.options, element = chart.element, tooltip;\n                if (chart._sharedTooltip()) {\n                    tooltip = new SharedTooltip(element, chart._plotArea, options.tooltip);\n                } else {\n                    tooltip = new Tooltip(element, options.tooltip);\n                }\n                tooltip.bind(LEAVE, proxy(chart._tooltipleave, chart));\n                return tooltip;\n            },\n            _tooltipleave: function () {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight;\n                plotArea.hideCrosshairs();\n                highlight.hide();\n            },\n            _applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            _getModel: function () {\n                var chart = this, options = chart.options, model = new RootElement(chart._modelOptions()), plotArea;\n                model.chart = chart;\n                Title.buildTitle(options.title, model);\n                plotArea = model._plotArea = chart._createPlotArea();\n                if (options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var chart = this, options = chart.options, element = chart.element, height = math.floor(element.height()), width = math.floor(element.width());\n                chart._size = null;\n                return deepExtend({\n                    width: width || DEFAULT_WIDTH,\n                    height: height || DEFAULT_HEIGHT,\n                    transitions: options.transitions\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var chart = this, options = chart.options;\n                return PlotAreaFactory.current.create(skipSeries ? [] : options.series, options);\n            },\n            _setupSelection: function () {\n                var chart = this, plotArea = chart._plotArea, axes = plotArea.axes, selections = chart._selections = [], selection, i, axis, min, max, options;\n                if (!chart._selectStartHandler) {\n                    chart._selectStartHandler = proxy(chart._selectStart, chart);\n                    chart._selectHandler = proxy(chart._select, chart);\n                    chart._selectEndHandler = proxy(chart._selectEnd, chart);\n                }\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        min = 0;\n                        max = options.categories.length - 1;\n                        if (axis instanceof DateCategoryAxis) {\n                            min = options.categories[min];\n                            max = options.categories[max];\n                        }\n                        if (!options.justified) {\n                            if (axis instanceof DateCategoryAxis) {\n                                max = addDuration(max, 1, options.baseUnit, options.weekStartDay);\n                            } else {\n                                max++;\n                            }\n                        }\n                        selection = new Selection(chart, axis, deepExtend({\n                            min: min,\n                            max: max\n                        }, options.select));\n                        selection.bind(SELECT_START, chart._selectStartHandler);\n                        selection.bind(SELECT, chart._selectHandler);\n                        selection.bind(SELECT_END, chart._selectEndHandler);\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _attachEvents: function () {\n                var chart = this, element = chart.element;\n                element.on(CONTEXTMENU_NS, proxy(chart._click, chart));\n                element.on(MOUSEOVER_NS, proxy(chart._mouseover, chart));\n                element.on(MOUSEOUT_NS, proxy(chart._mouseout, chart));\n                element.on(MOUSEWHEEL_NS, proxy(chart._mousewheel, chart));\n                element.on(MOUSELEAVE_NS, proxy(chart._mouseleave, chart));\n                chart._mousemove = kendo.throttle(proxy(chart._mousemove, chart), MOUSEMOVE_DELAY);\n                if (chart._shouldAttachMouseMove()) {\n                    element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n                if (kendo.UserEvents) {\n                    chart._userEvents = new kendo.UserEvents(element, {\n                        global: true,\n                        filter: ':not(.k-selector)',\n                        multiTouch: false,\n                        fastTap: true,\n                        tap: proxy(chart._tap, chart),\n                        start: proxy(chart._start, chart),\n                        move: proxy(chart._move, chart),\n                        end: proxy(chart._end, chart)\n                    });\n                }\n            },\n            _mouseout: function (e) {\n                var chart = this, element = chart._getChartElement(e);\n                if (element && element.leave) {\n                    element.leave(chart, e);\n                }\n            },\n            _start: function (e) {\n                var chart = this, events = chart._events;\n                if (defined(events[DRAG_START] || events[DRAG] || events[DRAG_END])) {\n                    chart._startNavigation(e, DRAG_START);\n                }\n                if (chart._pannable) {\n                    chart._pannable.start(e);\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.start(e);\n                }\n            },\n            _move: function (e) {\n                var chart = this, state = chart._navState, pannable = chart._pannable, axes, ranges = {}, i, currentAxis, axisName, axis, delta;\n                if (pannable) {\n                    e.preventDefault();\n                    ranges = pannable.move(e);\n                    if (ranges && !chart.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    e.preventDefault();\n                    axes = state.axes;\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        axisName = currentAxis.options.name;\n                        if (axisName) {\n                            axis = currentAxis.options.vertical ? e.y : e.x;\n                            delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges;\n                    chart.trigger(DRAG, {\n                        axisRanges: ranges,\n                        originalEvent: e\n                    });\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                this._endNavigation(e, DRAG_END);\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                    }\n                }\n                if (this._pannable) {\n                    this._pannable.end(e);\n                }\n            },\n            _mousewheel: function (e) {\n                var chart = this, origEvent = e.originalEvent, prevented, delta = mwDelta(e), totalDelta, state = chart._navState, axes, i, currentAxis, axisName, ranges = {}, mousewheelZoom = chart._mousewheelZoom;\n                if (mousewheelZoom) {\n                    e.preventDefault();\n                    ranges = mousewheelZoom.updateRanges(delta);\n                    if (ranges && !chart.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        mousewheelZoom.zoom();\n                    }\n                } else {\n                    if (!state) {\n                        prevented = chart._startNavigation(origEvent, ZOOM_START);\n                        if (!prevented) {\n                            state = chart._navState;\n                        }\n                    }\n                    if (state) {\n                        totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        axes = chart._navState.axes;\n                        for (i = 0; i < axes.length; i++) {\n                            currentAxis = axes[i];\n                            axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        chart.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (chart._mwTimeout) {\n                            clearTimeout(chart._mwTimeout);\n                        }\n                        chart._mwTimeout = setTimeout(function () {\n                            chart._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, chartEvent) {\n                var chart = this, coords = chart._eventCoordinates(e), plotArea = chart._model._plotArea, pane = plotArea.findPointPane(coords), axes = plotArea.axes.slice(0), i, currentAxis, inAxis = false, prevented;\n                if (!pane) {\n                    return;\n                }\n                for (i = 0; i < axes.length; i++) {\n                    currentAxis = axes[i];\n                    if (currentAxis.box.containsPoint(coords)) {\n                        inAxis = true;\n                        break;\n                    }\n                }\n                if (!inAxis && plotArea.backgroundBox().containsPoint(coords)) {\n                    prevented = chart.trigger(chartEvent, {\n                        axisRanges: axisRanges(axes),\n                        originalEvent: e\n                    });\n                    if (prevented) {\n                        chart._userEvents.cancel();\n                    } else {\n                        chart._suppressHover = true;\n                        chart._unsetActivePoint();\n                        chart._navState = {\n                            pane: pane,\n                            axes: axes\n                        };\n                    }\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                var chart = this;\n                if (chart._navState) {\n                    chart.trigger(chartEvent, {\n                        axisRanges: chart._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    chart._suppressHover = false;\n                    chart._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (!element) {\n                    return;\n                }\n                var chartElement;\n                while (element && !chartElement) {\n                    chartElement = element.chartElement;\n                    element = element.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var chart = this, isTouch = defined((e.x || {}).client), clientX = isTouch ? e.x.client : e.clientX, clientY = isTouch ? e.y.client : e.clientY;\n                return chart._toModelCoordinates(clientX, clientY);\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element, offset = element.offset(), paddingLeft = parseInt(element.css('paddingLeft'), 10), paddingTop = parseInt(element.css('paddingTop'), 10), win = $(window);\n                return new Point2D(clientX - offset.left - paddingLeft + win.scrollLeft(), clientY - offset.top - paddingTop + win.scrollTop());\n            },\n            _tap: function (e) {\n                var chart = this, element = chart._getChartElement(e);\n                if (chart._activePoint === element) {\n                    chart._click(e);\n                } else {\n                    if (!chart._startHover(e)) {\n                        chart._unsetActivePoint();\n                    }\n                    chart._click(e);\n                }\n            },\n            _click: function (e) {\n                var chart = this, element = chart._getChartElement(e);\n                while (element) {\n                    if (element.click) {\n                        element.click(chart, e);\n                    }\n                    element = element.parent;\n                }\n            },\n            _startHover: function (e) {\n                var chart = this, element = chart._getChartElement(e), tooltip = chart._tooltip, highlight = chart._highlight, tooltipOptions = chart.options.tooltip, point;\n                if (chart._suppressHover || !highlight || highlight.isHighlighted(element) || chart._sharedTooltip()) {\n                    return;\n                }\n                point = chart._getChartElement(e, function (element) {\n                    return element.hover;\n                });\n                if (point && !point.hover(chart, e)) {\n                    chart._activePoint = point;\n                    tooltipOptions = deepExtend({}, tooltipOptions, point.options.tooltip);\n                    if (tooltipOptions.visible) {\n                        tooltip.show(point);\n                    }\n                    highlight.show(point);\n                    return point.tooltipTracking;\n                }\n            },\n            _mouseover: function (e) {\n                var chart = this;\n                if (chart._startHover(e)) {\n                    $(document).on(MOUSEMOVE_TRACKING, proxy(chart._mouseMoveTracking, chart));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var chart = this, options = chart.options, tooltip = chart._tooltip, highlight = chart._highlight, coords = chart._eventCoordinates(e), point = chart._activePoint, tooltipOptions, seriesPoint;\n                if (chart._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint != point) {\n                            seriesPoint.hover(chart, e);\n                            chart._activePoint = seriesPoint;\n                            tooltipOptions = deepExtend({}, options.tooltip, point.options.tooltip);\n                            if (tooltipOptions.visible) {\n                                tooltip.show(seriesPoint);\n                            }\n                            highlight.show(seriesPoint);\n                        }\n                    }\n                } else {\n                    $(document).off(MOUSEMOVE_TRACKING);\n                    chart._unsetActivePoint();\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                this._trackCrosshairs(coords);\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs, i, current;\n                for (i = 0; i < crosshairs.length; i++) {\n                    current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e) {\n                var chart = this, options = chart.options, plotArea = chart._plotArea, categoryAxis = plotArea.categoryAxis, tooltip = chart._tooltip, tooltipOptions = options.tooltip, highlight = chart._highlight, index, points;\n                if (plotArea.box.containsPoint(coords)) {\n                    index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== chart._tooltipCategoryIx) {\n                        points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = $.map(points, function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                        } else {\n                            tooltip.hide();\n                        }\n                        chart._tooltipCategoryIx = index;\n                    }\n                }\n            },\n            _mouseleave: function (e) {\n                var chart = this, plotArea = chart._plotArea, tooltip = chart._tooltip, highlight = chart._highlight, target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length)) {\n                    chart._mousemove.cancel();\n                    plotArea.hideCrosshairs();\n                    highlight.hide();\n                    setTimeout(proxy(tooltip.hide, tooltip), TOOLTIP_HIDE_DELAY);\n                    chart._tooltipCategoryIx = null;\n                }\n            },\n            _unsetActivePoint: function () {\n                var chart = this, tooltip = chart._tooltip, highlight = chart._highlight;\n                chart._activePoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _onDataChanged: function () {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], currentSeries;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        append(processedSeries, groupSeries(currentSeries, data));\n                    } else {\n                        processedSeries.push(currentSeries || []);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                applySeriesColors(chart.options);\n                chart._bindSeries();\n                chart._bindCategories();\n                chart._hasData = true;\n                chart._deferRedraw();\n            },\n            _deferRedraw: function () {\n                var chart = this;\n                if (kendo.support.vml) {\n                    chart._clearRedrawTimeout();\n                    chart._redrawTimeout = setTimeout(function () {\n                        if (!chart.surface) {\n                            return;\n                        }\n                        chart.trigger(DATABOUND);\n                        chart._redraw();\n                    }, 0);\n                } else {\n                    chart.trigger(DATABOUND);\n                    chart._redraw();\n                }\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else {\n                    this._bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var chart = this, items = [], result, series = chart.options.series, seriesLength = series.length, seriesIx, s, onAxis, data, dataIx, dataLength, dataRow, category, uniqueCategories = {}, getFn, dateAxis;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    s = series[seriesIx];\n                    onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    data = s.data;\n                    dataLength = data.length;\n                    if (s.categoryField && onAxis && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        getFn = dateAxis ? getDateField : getField;\n                        for (dataIx = 0; dataIx < dataLength; dataIx++) {\n                            dataRow = data[dataIx];\n                            category = getFn(s.categoryField, dataRow);\n                            if (dateAxis || !uniqueCategories[category]) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories[category] = true;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dateComparer(a[0], b[0]);\n                        });\n                    }\n                    result = transpose(items);\n                    axis.categories = result[0];\n                    axis.dataItems = result[1];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], originalSeries = (chart._sourceSeries || [])[seriesIndex] || currentSeries, transitionsState, visible, point;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    point = originalSeries.data[pointIndex];\n                    if (!defined(point.visible)) {\n                        visible = false;\n                    } else {\n                        visible = !point.visible;\n                    }\n                    point.visible = visible;\n                } else {\n                    visible = !originalSeries.visible;\n                    originalSeries.visible = visible;\n                    currentSeries.visible = visible;\n                }\n                if (chart.options.transitions) {\n                    chart.options.transitions = false;\n                    transitionsState = true;\n                }\n                chart.redraw();\n                if (transitionsState) {\n                    chart.options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var chart = this, plotArea = chart._plotArea, highlight = chart._highlight, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex], index, items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    index = pointIndex;\n                } else {\n                    index = seriesIndex;\n                }\n                items = plotArea.pointsBySeriesIndex(index);\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                var chart = this;\n                return chart._plotArea.crosshairs.length || chart._tooltip && chart._sharedTooltip();\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                options.dataSource = undefined;\n                chart._originalOptions = deepExtend(chart._originalOptions, options);\n                chart.options = deepExtend({}, chart._originalOptions);\n                chart._sourceSeries = null;\n                $(document).off(MOUSEMOVE_NS);\n                Widget.fn._setEvents.call(chart, options);\n                chart._initTheme(chart.options);\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                if (chart._shouldAttachMouseMove()) {\n                    chart.element.on(MOUSEMOVE_NS, chart._mousemove);\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                $(document).off(MOUSEMOVE_TRACKING);\n                if (chart._userEvents) {\n                    chart._userEvents.destroy();\n                }\n                chart._destroyView();\n                chart.surface.destroy();\n                chart.surface = null;\n                chart._clearRedrawTimeout();\n                Widget.fn.destroy.call(chart);\n            },\n            _destroyView: function () {\n                var chart = this, model = chart._model, selections = chart._selections;\n                if (model) {\n                    model.destroy();\n                    chart._model = null;\n                }\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n                chart._unsetActivePoint();\n                if (chart._tooltip) {\n                    chart._tooltip.destroy();\n                }\n                if (chart._highlight) {\n                    chart._highlight.destroy();\n                }\n                if (chart._zoomSelection) {\n                    chart._zoomSelection.destroy();\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options) {\n                var registry = this._registry, match = registry[0], i, entry, series;\n                for (i = 0; i < registry.length; i++) {\n                    entry = registry[i];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var binder = this, i, type;\n                valueFields = valueFields || [VALUE];\n                for (i = 0; i < seriesTypes.length; i++) {\n                    type = seriesTypes[i];\n                    binder._valueFields[type] = valueFields;\n                    binder._otherFields[type] = otherFields;\n                    binder._nullValue[type] = binder._makeValue(valueFields, null);\n                    binder._undefinedValue[type] = binder._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var binder = this, data = series.data, pointData = defined(item) ? item : data[pointIx], result = { valueFields: { value: pointData } }, fields, fieldData, srcValueFields, srcPointFields, valueFields = binder.valueFields(series), otherFields = binder._otherFields[series.type], value;\n                if (pointData === null) {\n                    value = binder._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = binder._undefinedValue[series.type];\n                } else if (isArray(pointData)) {\n                    fieldData = pointData.slice(valueFields.length);\n                    value = binder._bindFromArray(pointData, valueFields);\n                    fields = binder._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    srcPointFields = binder.sourceFields(series, otherFields);\n                    value = binder._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = binder._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {}, i, length = fields.length, fieldName;\n                for (i = 0; i < length; i++) {\n                    fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {}, i, length;\n                if (fields) {\n                    length = math.min(fields.length, array.length);\n                    for (i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                var value = {}, i, length, fieldName, srcFieldName;\n                if (fields) {\n                    length = fields.length;\n                    srcFields = srcFields || fields;\n                    for (i = 0; i < length; i++) {\n                        fieldName = fields[i];\n                        srcFieldName = srcFields[i];\n                        value[fieldName] = getField(srcFieldName, object);\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var i, length, fieldName, sourceFields, sourceFieldName;\n                if (canonicalFields) {\n                    length = canonicalFields.length;\n                    sourceFields = [];\n                    for (i = 0; i < length; i++) {\n                        fieldName = canonicalFields[i];\n                        sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] || fieldName);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var BarLabel = ChartElement.extend({\n            init: function (content, options) {\n                var barLabel = this;\n                ChartElement.fn.init.call(barLabel, options);\n                this.textBox = new TextBox(content, barLabel.options);\n                barLabel.append(this.textBox);\n            },\n            options: {\n                position: OUTSIDE_END,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                color: BLACK,\n                background: '',\n                border: {\n                    width: 1,\n                    color: ''\n                },\n                aboveAxis: true,\n                vertical: false,\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                zIndex: 2\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var barLabel = this, options = barLabel.options, vertical = options.vertical, aboveAxis = options.aboveAxis, text = barLabel.children[0], box = text.box, padding = text.options.padding;\n                text.options.align = vertical ? CENTER : LEFT;\n                text.options.vAlign = vertical ? TOP : CENTER;\n                if (options.position == INSIDE_END) {\n                    if (vertical) {\n                        text.options.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            text.options.vAlign = BOTTOM;\n                        }\n                    } else {\n                        text.options.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position == CENTER) {\n                    text.options.vAlign = CENTER;\n                    text.options.align = CENTER;\n                } else if (options.position == INSIDE_BASE) {\n                    if (vertical) {\n                        text.options.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        text.options.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position == OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        text.options.align = CENTER;\n                        if (aboveAxis) {\n                            targetBox = new Box2D(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            targetBox = new Box2D(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (targetBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (targetBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(targetBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var barLabel = this, vertical = barLabel.options.vertical, field = vertical ? Y : X, start = field + '1', end = field + '2', text = barLabel.children[0], parentBox = barLabel.parent.box, targetBox;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    targetBox = text.paddingBox.clone();\n                    targetBox[start] = math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                var item = this;\n                BoxElement.fn.init.call(item, options);\n                item.createContainer();\n                item.createMarker();\n                item.createLabel();\n            },\n            createContainer: function () {\n                var item = this;\n                item.container = new FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER\n                });\n                item.append(item.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var item = this, options = item.options, labelOptions = deepExtend({}, options.labels);\n                item.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                ChartElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = draw.Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args)) {\n                    e.preventDefault();\n                    widget._legendItemClick(args.seriesIndex, args.pointIndex);\n                }\n            },\n            hover: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    e.preventDefault();\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            leave: function (widget) {\n                widget._unsetActivePoint();\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: $(e.target),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var that = this;\n                var options = that.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    that.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: that.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            that.createVisual();\n                            that.renderChildren();\n                            that.renderComplete();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    ChartElement.fn.renderVisual.call(that);\n                }\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            render: function () {\n                var legendItem, items = this.children;\n                var options = this.options;\n                var vertical = options.vertical;\n                this.visual = new draw.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal'\n                });\n                for (var idx = 0; idx < items.length; idx++) {\n                    legendItem = items[idx];\n                    legendItem.reflow(new Box2D());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box2D();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: noop\n        });\n        var Legend = ChartElement.extend({\n            init: function (options) {\n                var legend = this;\n                ChartElement.fn.init.call(legend, options);\n                if (!inArray(legend.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    legend.options.position = RIGHT;\n                }\n                legend.createContainer();\n                legend.createItems();\n            },\n            options: {\n                position: RIGHT,\n                items: [],\n                labels: { margin: { left: 6 } },\n                offsetX: 0,\n                offsetY: 0,\n                margin: getSpacing(5),\n                padding: getSpacing(5),\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                item: { cursor: POINTER },\n                spacing: 6,\n                background: '',\n                zIndex: 1,\n                markers: {\n                    border: { width: 1 },\n                    width: 7,\n                    height: 7,\n                    type: 'rect',\n                    align: LEFT,\n                    vAlign: CENTER\n                }\n            },\n            createContainer: function () {\n                var legend = this, options = legend.options, userAlign = options.align, position = options.position, align = position, vAlign = CENTER;\n                if (position == CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign == 'start') {\n                        align = LEFT;\n                    } else if (userAlign == 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign == 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign == 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                legend.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                legend.append(legend.container);\n            },\n            createItems: function () {\n                var legend = this, options = legend.options, items = options.items, count = items.length, vertical = legend.isVertical(), innerElement, i, item;\n                innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing\n                });\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                for (i = 0; i < count; i++) {\n                    item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                legend.container.append(innerElement);\n            },\n            isVertical: function () {\n                var legend = this, options = legend.options, orientation = options.orientation, position = options.position, vertical = position == CUSTOM && orientation != HORIZONTAL || (defined(orientation) ? orientation != HORIZONTAL : inArray(position, [\n                        LEFT,\n                        RIGHT\n                    ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var legend = this, options = legend.options;\n                targetBox = targetBox.clone();\n                if (!legend.hasItems()) {\n                    legend.box = targetBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    legend.containerCustomReflow(targetBox);\n                    legend.box = targetBox;\n                } else {\n                    legend.containerReflow(targetBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var legend = this, options = legend.options, position = options.position, pos = position == TOP || position == BOTTOM ? X : Y, containerBox = targetBox.clone(), container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), alignTarget = targetBox.clone(), box;\n                if (position == LEFT || position == RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    legend.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                legend.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var legend = this, options = legend.options, offsetX = options.offsetX, offsetY = options.offsetY, container = legend.container, width = options.width, height = options.height, vertical = legend.isVertical(), containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(Box2D(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var CategoryAxis = Axis.extend({\n            init: function (options) {\n                var axis = this;\n                options = options || {};\n                this._initFields();\n                this._initCategories(options);\n                Axis.fn.init.call(axis, options);\n            },\n            _initFields: function () {\n                this._ticks = {};\n                this.outOfRangeMin = 0;\n                this.outOfRangeMax = 0;\n            },\n            _initCategories: function (options) {\n                var categories = (options.categories || []).slice(0);\n                var definedMin = defined(options.min);\n                var definedMax = defined(options.max);\n                options.categories = categories;\n                if ((definedMin || definedMax) && categories.length) {\n                    options.srcCategories = options.categories;\n                    var min = definedMin ? math.floor(options.min) : 0;\n                    var max = definedMax ? options.justified ? math.floor(options.max) + 1 : math.ceil(options.max) : categories.length;\n                    options.categories = options.categories.slice(min, max);\n                }\n            },\n            options: {\n                type: CATEGORY,\n                categories: [],\n                vertical: false,\n                majorGridLines: {\n                    visible: false,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { zIndex: 1 },\n                justified: false\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var length = options.categories.length || 1;\n                var min = isNumber(options.min) ? options.min % 1 : 0;\n                var max;\n                if (isNumber(options.max) && options.max % 1 !== 0 && options.max < this.totalRange().max) {\n                    max = length - (1 - options.max % 1);\n                } else {\n                    max = length - (options.justified ? 1 : 0);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            totalRangeIndices: function (limit) {\n                var options = this.options;\n                var min = isNumber(options.min) ? options.min : 0;\n                var max;\n                if (isNumber(options.max)) {\n                    max = options.max;\n                } else if (isNumber(options.min)) {\n                    max = min + options.categories.length;\n                } else {\n                    max = (options.srcCategories || options.categories).length - (options.justified ? 1 : 0) || 1;\n                }\n                if (limit) {\n                    var totalRange = this.totalRange();\n                    min = limitValue(min, 0, totalRange.max);\n                    max = limitValue(max, 0, totalRange.max);\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: isNumber(options.min) ? options.min : 0,\n                    max: isNumber(options.max) ? options.max : options.categories.length\n                };\n            },\n            totalRange: function () {\n                var options = this.options;\n                return {\n                    min: 0,\n                    max: math.max(this._seriesMax || 0, (options.srcCategories || options.categories).length) - (options.justified ? 1 : 0)\n                };\n            },\n            getScale: function () {\n                var range = this.rangeIndices();\n                var min = range.min;\n                var max = range.max;\n                var lineBox = this.lineBox();\n                var size = this.options.vertical ? lineBox.height() : lineBox.width();\n                var scale = size / (max - min || 1);\n                return scale * (this.options.reverse ? -1 : 1);\n            },\n            getTickPositions: function (stepSize) {\n                var axis = this, options = axis.options, vertical = options.vertical, lineBox = axis.lineBox(), reverse = options.reverse, scale = axis.getScale(), range = axis.rangeIndices(), min = range.min, max = range.max, current = min % 1 !== 0 ? math.floor(min / 1) + stepSize : min, pos = lineBox[(vertical ? Y : X) + (reverse ? 2 : 1)], positions = [];\n                while (current <= max) {\n                    positions.push(pos + round(scale * (current - min), COORD_PRECISION));\n                    current += stepSize;\n                }\n                return positions;\n            },\n            getLabelsTickPositions: function () {\n                var tickPositions = this.getMajorTickPositions().slice(0);\n                var range = this.rangeIndices();\n                var scale = this.getScale();\n                var box = this.lineBox();\n                var options = this.options;\n                var axis = options.vertical ? Y : X;\n                var start = options.reverse ? 2 : 1;\n                var end = options.reverse ? 1 : 2;\n                if (range.min % 1 !== 0) {\n                    tickPositions.unshift(box[axis + start] - scale * (range.min % 1));\n                }\n                if (range.max % 1 !== 0) {\n                    tickPositions.push(box[axis + end] + scale * (1 - range.max % 1));\n                }\n                return tickPositions;\n            },\n            labelTickIndex: function (label) {\n                var index = label.index;\n                var range = this.rangeIndices();\n                if (range.min > 0) {\n                    index = index - math.floor(range.min);\n                }\n                return index;\n            },\n            arrangeLabels: function () {\n                Axis.fn.arrangeLabels.call(this);\n                this.hideOutOfRangeLabels();\n            },\n            hideOutOfRangeLabels: function () {\n                var box = this.box, labels = this.labels, valueAxis = this.options.vertical ? Y : X, start = box[valueAxis + 1], end = box[valueAxis + 2], firstLabel = labels[0], lastLabel = last(labels);\n                if (labels.length) {\n                    if (firstLabel.box[valueAxis + 1] > end || firstLabel.box[valueAxis + 2] < start) {\n                        firstLabel.options.visible = false;\n                    }\n                    if (lastLabel.box[valueAxis + 1] > end || lastLabel.box[valueAxis + 2] < start) {\n                        lastLabel.options.visible = false;\n                    }\n                }\n            },\n            getMajorTickPositions: function () {\n                return this.getTicks().majorTicks;\n            },\n            getMinorTickPositions: function () {\n                return this.getTicks().minorTicks;\n            },\n            getTicks: function () {\n                var axis = this, cache = axis._ticks, options = axis.options, range = axis.rangeIndices(), reverse = options.reverse, justified = options.justified, lineBox = axis.lineBox(), hash;\n                hash = lineBox.getHash() + range.min + ',' + range.max + reverse + justified;\n                if (cache._hash !== hash) {\n                    cache._hash = hash;\n                    cache.majorTicks = axis.getTickPositions(1);\n                    cache.minorTicks = axis.getTickPositions(0.5);\n                }\n                return cache;\n            },\n            getSlot: function (from, to, limit) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), min = range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)], slotBox = lineBox.clone(), p1, p2;\n                var singleSlot = !defined(to);\n                from = valueOrDefault(from, 0);\n                to = valueOrDefault(to, from);\n                to = math.max(to - 1, from);\n                to = math.max(from, to);\n                p1 = lineStart + (from - min) * scale;\n                p2 = lineStart + (to + 1 - min) * scale;\n                if (singleSlot && justified) {\n                    p2 = p1;\n                }\n                if (limit) {\n                    p1 = limitValue(p1, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                    p2 = limitValue(p2, lineBox[valueAxis + 1], lineBox[valueAxis + 2]);\n                }\n                slotBox[valueAxis + 1] = reverse ? p2 : p1;\n                slotBox[valueAxis + 2] = reverse ? p1 : p2;\n                return slotBox;\n            },\n            pointCategoryIndex: function (point) {\n                var axis = this, options = axis.options, reverse = options.reverse, justified = options.justified, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.rangeIndices(), startValue = reverse ? range.max : range.min, scale = this.getScale(), lineStart = lineBox[valueAxis + 1], lineEnd = lineBox[valueAxis + 2], pos = point[valueAxis];\n                if (pos < lineStart || pos > lineEnd) {\n                    return null;\n                }\n                var size = pos - lineStart;\n                var value = size / scale;\n                value = startValue + value;\n                var diff = value % 1;\n                if (justified) {\n                    value = math.round(value);\n                } else if (diff === 0 && value > 0) {\n                    value--;\n                }\n                return math.floor(value);\n            },\n            getCategory: function (point) {\n                var index = this.pointCategoryIndex(point);\n                if (index === null) {\n                    return null;\n                }\n                return this.options.categories[index];\n            },\n            categoryIndex: function (value) {\n                var options = this.options;\n                var index = indexOf(value, options.srcCategories || options.categories);\n                return index - math.floor(options.min || 0);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = options.categories.length, scale = size / range, offset = round(delta / scale, DEFAULT_PRECISION);\n                return {\n                    min: offset,\n                    max: range + offset\n                };\n            },\n            zoomRange: function (rate) {\n                var rangeIndices = this.totalRangeIndices();\n                var totalRange = this.totalRange();\n                var totalMax = totalRange.max;\n                var totalMin = totalRange.min;\n                var min = limitValue(rangeIndices.min + rate, totalMin, totalMax);\n                var max = limitValue(rangeIndices.max - rate, totalMin, totalMax);\n                if (max - min > 0) {\n                    return {\n                        min: min,\n                        max: max\n                    };\n                }\n            },\n            scaleRange: function (scale) {\n                var axis = this, options = axis.options, range = options.categories.length, delta = scale * range;\n                return {\n                    min: -delta,\n                    max: range + delta\n                };\n            },\n            labelsCount: function () {\n                var labelsRange = this.labelsRange();\n                return labelsRange.max - labelsRange.min;\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var justified = options.justified;\n                var range = this.totalRangeIndices(true);\n                var min = range.min;\n                var max = range.max;\n                var start = math.floor(min);\n                var skip;\n                if (!justified) {\n                    min = math.floor(min);\n                    max = math.ceil(max);\n                } else {\n                    min = math.ceil(min);\n                    max = math.floor(max);\n                }\n                if (min > labelOptions.skip) {\n                    skip = labelOptions.skip + labelOptions.step * math.ceil((min - labelOptions.skip) / labelOptions.step);\n                } else {\n                    skip = labelOptions.skip;\n                }\n                return {\n                    min: skip - start,\n                    max: (options.categories.length ? max + (justified ? 1 : 0) : 0) - start\n                };\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var axis = this, options = axis.options, dataItem = options.dataItems ? options.dataItems[index] : null, category = valueOrDefault(options.categories[index], ''), text = axis.axisLabelText(category, dataItem, labelOptions);\n                return new AxisLabel(category, text, index, dataItem, labelOptions);\n            },\n            shouldRenderNote: function (value) {\n                var categories = this.options.categories;\n                return categories.length && (categories.length > value && value >= 0);\n            },\n            pan: function (delta) {\n                var range = this.totalRangeIndices(true), scale = this.getScale(), offset = round(delta / scale, DEFAULT_PRECISION), totalRange = this.totalRange(), min = range.min + offset, max = range.max + offset;\n                return this.limitRange(min, max, 0, totalRange.max, offset);\n            },\n            pointsRange: function (start, end) {\n                var axis = this, options = axis.options, reverse = options.reverse, valueAxis = options.vertical ? Y : X, lineBox = axis.lineBox(), range = axis.totalRangeIndices(true), scale = this.getScale(), lineStart = lineBox[valueAxis + (reverse ? 2 : 1)];\n                var diffStart = start[valueAxis] - lineStart;\n                var diffEnd = end[valueAxis] - lineStart;\n                var min = range.min + diffStart / scale;\n                var max = range.min + diffEnd / scale;\n                return {\n                    min: math.min(min, max),\n                    max: math.max(min, max)\n                };\n            }\n        });\n        var DateCategoryAxis = CategoryAxis.extend({\n            init: function (options) {\n                var axis = this, baseUnit, useDefault;\n                options = options || {};\n                options = deepExtend({ roundToBaseUnit: true }, options, {\n                    categories: toDate(options.categories),\n                    min: toDate(options.min),\n                    max: toDate(options.max)\n                });\n                options.userSetBaseUnit = options.userSetBaseUnit || options.baseUnit;\n                options.userSetBaseUnitStep = options.userSetBaseUnitStep || options.baseUnitStep;\n                if (options.categories && options.categories.length > 0) {\n                    baseUnit = (options.baseUnit || '').toLowerCase();\n                    useDefault = baseUnit !== FIT && !inArray(baseUnit, BASE_UNITS);\n                    if (useDefault) {\n                        options.baseUnit = axis.defaultBaseUnit(options);\n                    }\n                    if (baseUnit === FIT || options.baseUnitStep === AUTO) {\n                        axis.autoBaseUnit(options);\n                    }\n                    this._groupsStart = addDuration(options.categories[0], 0, options.baseUnit, options.weekStartDay);\n                    axis.groupCategories(options);\n                } else {\n                    options.baseUnit = options.baseUnit || DAYS;\n                }\n                this._initFields();\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                labels: { dateFormats: DateLabelFormats },\n                autoBaseUnitSteps: {\n                    seconds: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    minutes: [\n                        1,\n                        2,\n                        5,\n                        15,\n                        30\n                    ],\n                    hours: [\n                        1,\n                        2,\n                        3\n                    ],\n                    days: [\n                        1,\n                        2,\n                        3\n                    ],\n                    weeks: [\n                        1,\n                        2\n                    ],\n                    months: [\n                        1,\n                        2,\n                        3,\n                        6\n                    ],\n                    years: [\n                        1,\n                        2,\n                        3,\n                        5,\n                        10,\n                        25,\n                        50\n                    ]\n                },\n                maxDateGroups: 10\n            },\n            shouldRenderNote: function (value) {\n                var axis = this, range = axis.range(), categories = axis.options.categories || [];\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0 && categories.length;\n            },\n            parseNoteValue: function (value) {\n                return toDate(value);\n            },\n            translateRange: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / (range.max - range.min), offset = round(delta / scale, DEFAULT_PRECISION), from, to;\n                if (range.min && range.max) {\n                    from = addTicks(options.min || range.min, offset);\n                    to = addTicks(options.max || range.max, offset);\n                    range = {\n                        min: addDuration(from, 0, baseUnit, weekStartDay),\n                        max: addDuration(to, 0, baseUnit, weekStartDay)\n                    };\n                }\n                return range;\n            },\n            scaleRange: function (delta) {\n                var axis = this, rounds = math.abs(delta), range = axis.range(), from = range.min, to = range.max, step;\n                if (range.min && range.max) {\n                    while (rounds--) {\n                        range = dateDiff(from, to);\n                        step = math.round(range * 0.1);\n                        if (delta < 0) {\n                            from = addTicks(from, step);\n                            to = addTicks(to, -step);\n                        } else {\n                            from = addTicks(from, -step);\n                            to = addTicks(to, step);\n                        }\n                    }\n                    range = {\n                        min: from,\n                        max: to\n                    };\n                }\n                return range;\n            },\n            defaultBaseUnit: function (options) {\n                var categories = options.categories, count = defined(categories) ? categories.length : 0, categoryIx, cat, diff, minDiff = MAX_VALUE, lastCat, unit;\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    cat = categories[categoryIx];\n                    if (cat && lastCat) {\n                        diff = absoluteDateDiff(cat, lastCat);\n                        if (diff > 0) {\n                            minDiff = math.min(minDiff, diff);\n                            if (minDiff >= TIME_PER_YEAR) {\n                                unit = YEARS;\n                            } else if (minDiff >= TIME_PER_MONTH - TIME_PER_DAY * 3) {\n                                unit = MONTHS;\n                            } else if (minDiff >= TIME_PER_WEEK) {\n                                unit = WEEKS;\n                            } else if (minDiff >= TIME_PER_DAY) {\n                                unit = DAYS;\n                            } else if (minDiff >= TIME_PER_HOUR) {\n                                unit = HOURS;\n                            } else if (minDiff >= TIME_PER_MINUTE) {\n                                unit = MINUTES;\n                            } else {\n                                unit = SECONDS;\n                            }\n                        }\n                    }\n                    lastCat = cat;\n                }\n                return unit || DAYS;\n            },\n            _categoryRange: function (categories) {\n                var range = categories._range;\n                if (!range) {\n                    range = categories._range = sparseArrayLimits(categories);\n                }\n                return range;\n            },\n            totalRange: function () {\n                return {\n                    min: 0,\n                    max: this.options.categories.length\n                };\n            },\n            rangeIndices: function () {\n                var options = this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var categories = options.categories;\n                var categoryLimits = this.categoriesRange();\n                var min = toDate(options.min || categoryLimits.min);\n                var max = toDate(options.max || categoryLimits.max);\n                var minIdx = 0, maxIdx = 0;\n                if (categories.length) {\n                    minIdx = dateIndex(min, categories[0], baseUnit, baseUnitStep);\n                    maxIdx = dateIndex(max, categories[0], baseUnit, baseUnitStep);\n                    if (options.roundToBaseUnit) {\n                        minIdx = math.floor(minIdx);\n                        maxIdx = options.justified ? math.floor(maxIdx) : math.ceil(maxIdx);\n                    }\n                }\n                return {\n                    min: minIdx,\n                    max: maxIdx\n                };\n            },\n            labelsRange: function () {\n                var options = this.options;\n                var labelOptions = options.labels;\n                var range = this.rangeIndices();\n                var min = math.floor(range.min);\n                var max = math.ceil(range.max);\n                return {\n                    min: min + labelOptions.skip,\n                    max: options.categories.length ? max + (options.justified ? 1 : 0) : 0\n                };\n            },\n            categoriesRange: function () {\n                var options = this.options;\n                var range = this._categoryRange(options.srcCategories || options.categories);\n                var max = toDate(range.max);\n                if (!options.justified && dateEquals(max, this._roundToTotalStep(max, options, false))) {\n                    max = this._roundToTotalStep(max, options, true, true);\n                }\n                return {\n                    min: toDate(range.min),\n                    max: max\n                };\n            },\n            currentRange: function () {\n                var options = this.options;\n                var round = options.roundToBaseUnit !== false;\n                var totalRange = this.categoriesRange();\n                var min = options.min;\n                var max = options.max;\n                if (!min) {\n                    min = round ? this._roundToTotalStep(totalRange.min, options, false) : totalRange.min;\n                }\n                if (!max) {\n                    max = round ? this._roundToTotalStep(totalRange.max, options, !options.justified) : totalRange.max;\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            datesRange: function () {\n                var range = this._categoryRange(this.options.srcCategories || this.options.categories);\n                return {\n                    min: toDate(range.min),\n                    max: toDate(range.max)\n                };\n            },\n            pan: function (delta) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = this.currentRange(), totalLimits = this.totalLimits(), min = range.min, max = range.max, scale = size / (max - min), offset = round(delta / scale, DEFAULT_PRECISION), panRange, from, to;\n                from = addTicks(min, offset);\n                to = addTicks(max, offset);\n                panRange = this.limitRange(toTime(from), toTime(to), toTime(totalLimits.min), toTime(totalLimits.max), offset);\n                if (panRange) {\n                    panRange.min = toDate(panRange.min);\n                    panRange.max = toDate(panRange.max);\n                    panRange.baseUnit = baseUnit;\n                    panRange.baseUnitStep = options.baseUnitStep || 1;\n                    panRange.userSetBaseUnit = options.userSetBaseUnit;\n                    panRange.userSetBaseUnitStep = options.userSetBaseUnitStep;\n                    return panRange;\n                }\n            },\n            pointsRange: function (start, end) {\n                var pointsRange = CategoryAxis.fn.pointsRange.call(this, start, end);\n                var datesRange = this.currentRange();\n                var indicesRange = this.rangeIndices();\n                var scale = dateDiff(datesRange.max, datesRange.min) / (indicesRange.max - indicesRange.min);\n                var options = this.options;\n                var min = addTicks(datesRange.min, pointsRange.min * scale);\n                var max = addTicks(datesRange.min, pointsRange.max * scale);\n                return {\n                    min: min,\n                    max: max,\n                    baseUnit: options.userSetBaseUnit,\n                    baseUnitStep: options.userSetBaseUnitStep\n                };\n            },\n            zoomRange: function (delta) {\n                var options = this.options;\n                var totalLimits = this.totalLimits();\n                var currentRange = this.currentRange();\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var weekStartDay = options.weekStartDay;\n                var rangeMax = currentRange.max;\n                var rangeMin = currentRange.min;\n                var min = addDuration(rangeMin, delta * baseUnitStep, baseUnit, weekStartDay);\n                var max = addDuration(rangeMax, -delta * baseUnitStep, baseUnit, weekStartDay);\n                if (options.userSetBaseUnit == FIT) {\n                    var autoBaseUnitSteps = options.autoBaseUnitSteps;\n                    var maxDateGroups = options.maxDateGroups;\n                    var baseUnitIndex = indexOf(baseUnit, BASE_UNITS);\n                    var autoBaseUnitStep;\n                    var diff = dateDiff(max, min);\n                    var maxDiff = last(autoBaseUnitSteps[baseUnit]) * maxDateGroups * TIME_PER_UNIT[baseUnit];\n                    var rangeDiff = dateDiff(rangeMax, rangeMin);\n                    var ticks;\n                    if (diff < TIME_PER_UNIT[baseUnit] && baseUnit !== SECONDS) {\n                        baseUnit = BASE_UNITS[baseUnitIndex - 1];\n                        autoBaseUnitStep = last(autoBaseUnitSteps[baseUnit]);\n                        ticks = (rangeDiff - (maxDateGroups - 1) * autoBaseUnitStep * TIME_PER_UNIT[baseUnit]) / 2;\n                        min = addTicks(rangeMin, ticks);\n                        max = addTicks(rangeMax, -ticks);\n                    } else if (diff > maxDiff && baseUnit !== YEARS) {\n                        var stepIndex = 0;\n                        do {\n                            baseUnitIndex++;\n                            baseUnit = BASE_UNITS[baseUnitIndex];\n                            stepIndex = 0;\n                            ticks = 2 * TIME_PER_UNIT[baseUnit];\n                            do {\n                                autoBaseUnitStep = autoBaseUnitSteps[baseUnit][stepIndex];\n                                stepIndex++;\n                            } while (stepIndex < autoBaseUnitSteps[baseUnit].length && ticks * autoBaseUnitStep < rangeDiff);\n                        } while (baseUnit !== YEARS && ticks * autoBaseUnitStep < rangeDiff);\n                        ticks = (ticks * autoBaseUnitStep - rangeDiff) / 2;\n                        if (ticks > 0) {\n                            min = addTicks(rangeMin, -ticks);\n                            max = addTicks(rangeMax, ticks);\n                            min = addTicks(min, limitValue(max, totalLimits.min, totalLimits.max) - max);\n                            max = addTicks(max, limitValue(min, totalLimits.min, totalLimits.max) - min);\n                        }\n                    }\n                }\n                min = toDate(limitValue(min, totalLimits.min, totalLimits.max));\n                max = toDate(limitValue(max, totalLimits.min, totalLimits.max));\n                if (dateDiff(max, min) > 0) {\n                    return {\n                        min: min,\n                        max: max,\n                        baseUnit: options.userSetBaseUnit,\n                        baseUnitStep: options.userSetBaseUnitStep\n                    };\n                }\n            },\n            totalLimits: function () {\n                var options = this.options;\n                var datesRange = this.datesRange();\n                var min = this._roundToTotalStep(toDate(datesRange.min), options, false);\n                var max = datesRange.max;\n                if (!options.justified) {\n                    max = this._roundToTotalStep(max, options, true, dateEquals(max, this._roundToTotalStep(max, options, false)));\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            range: function (options) {\n                options = options || this.options;\n                var categories = options.categories, autoUnit = options.baseUnit === FIT, baseUnit = autoUnit ? BASE_UNITS[0] : options.baseUnit, baseUnitStep = options.baseUnitStep || 1, stepOptions = {\n                        baseUnit: baseUnit,\n                        baseUnitStep: baseUnitStep,\n                        weekStartDay: options.weekStartDay\n                    }, categoryLimits = this._categoryRange(categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max);\n                return {\n                    min: this._roundToTotalStep(min, stepOptions, false),\n                    max: this._roundToTotalStep(max, stepOptions, true, true)\n                };\n            },\n            autoBaseUnit: function (options) {\n                var axis = this, categoryLimits = this._categoryRange(options.categories), min = toDate(options.min || categoryLimits.min), max = toDate(options.max || categoryLimits.max), autoUnit = options.baseUnit === FIT, autoUnitIx = 0, baseUnit = autoUnit ? BASE_UNITS[autoUnitIx++] : options.baseUnit, span = max - min, units = span / TIME_PER_UNIT[baseUnit], totalUnits = units, maxDateGroups = options.maxDateGroups || axis.options.maxDateGroups, autoBaseUnitSteps = deepExtend({}, axis.options.autoBaseUnitSteps, options.autoBaseUnitSteps), unitSteps, step, nextStep;\n                while (!step || units >= maxDateGroups) {\n                    unitSteps = unitSteps || autoBaseUnitSteps[baseUnit].slice(0);\n                    nextStep = unitSteps.shift();\n                    if (nextStep) {\n                        step = nextStep;\n                        units = totalUnits / step;\n                    } else if (baseUnit === last(BASE_UNITS)) {\n                        step = math.ceil(totalUnits / maxDateGroups);\n                        break;\n                    } else if (autoUnit) {\n                        baseUnit = BASE_UNITS[autoUnitIx++] || last(BASE_UNITS);\n                        totalUnits = span / TIME_PER_UNIT[baseUnit];\n                        unitSteps = null;\n                    } else {\n                        if (units > maxDateGroups) {\n                            step = math.ceil(totalUnits / maxDateGroups);\n                        }\n                        break;\n                    }\n                }\n                options.baseUnitStep = step;\n                options.baseUnit = baseUnit;\n            },\n            _timeScale: function () {\n                var axis = this, range = axis.range(), options = axis.options, lineBox = axis.lineBox(), vertical = options.vertical, lineSize = vertical ? lineBox.height() : lineBox.width(), timeRange;\n                if (options.justified && options._collapse !== false) {\n                    var categoryLimits = this._categoryRange(options.categories);\n                    var maxCategory = toTime(categoryLimits.max);\n                    timeRange = toDate(maxCategory) - range.min;\n                } else {\n                    timeRange = range.max - range.min;\n                }\n                return lineSize / timeRange;\n            },\n            groupCategories: function (options) {\n                var axis = this, categories = options.categories, maxCategory = toDate(sparseArrayMax(categories)), baseUnit = options.baseUnit, baseUnitStep = options.baseUnitStep || 1, range = axis.range(options), max = range.max, date, nextDate, groups = [];\n                for (date = range.min; date < max; date = nextDate) {\n                    groups.push(date);\n                    nextDate = addDuration(date, baseUnitStep, baseUnit, options.weekStartDay);\n                    if (nextDate > maxCategory && !options.max) {\n                        break;\n                    }\n                }\n                options.srcCategories = categories;\n                options.categories = groups;\n            },\n            _roundToTotalStep: function (value, options, upper, roundToNext) {\n                options = options || this.options;\n                var baseUnit = options.baseUnit;\n                var baseUnitStep = options.baseUnitStep || 1;\n                var start = this._groupsStart;\n                if (start) {\n                    var step = dateIndex(value, start, baseUnit, baseUnitStep);\n                    var roundedStep = upper ? math.ceil(step) : math.floor(step);\n                    if (roundToNext) {\n                        roundedStep++;\n                    }\n                    return addDuration(start, roundedStep * baseUnitStep, baseUnit, options.weekStartDay);\n                } else {\n                    return addDuration(value, upper ? baseUnitStep : 0, baseUnit, options.weekStartDay);\n                }\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options, dataItem = options.dataItems ? options.dataItems[index] : null, date = options.categories[index], baseUnit = options.baseUnit, visible = true, unitFormat = labelOptions.dateFormats[baseUnit];\n                if (options.justified) {\n                    var roundedDate = floorDate(date, baseUnit, options.weekStartDay);\n                    visible = dateEquals(roundedDate, date);\n                } else if (!options.roundToBaseUnit) {\n                    visible = !dateEquals(this.range().max, date);\n                }\n                if (visible) {\n                    labelOptions.format = labelOptions.format || unitFormat;\n                    var text = this.axisLabelText(date, dataItem, labelOptions);\n                    if (text) {\n                        return new AxisLabel(date, text, index, dataItem, labelOptions);\n                    }\n                }\n            },\n            categoryIndex: function (value) {\n                var axis = this;\n                var options = axis.options;\n                var categories = options.categories;\n                var index = -1;\n                if (categories.length) {\n                    index = math.floor(dateIndex(toDate(value), categories[0], options.baseUnit, options.baseUnitStep || 1));\n                }\n                return index;\n            },\n            getSlot: function (a, b, limit) {\n                var axis = this;\n                if (typeof a === OBJECT) {\n                    a = axis.categoryIndex(a);\n                }\n                if (typeof b === OBJECT) {\n                    b = axis.categoryIndex(b);\n                }\n                return CategoryAxis.fn.getSlot.call(axis, a, b, limit);\n            }\n        });\n        var DateValueAxis = Axis.extend({\n            init: function (seriesMin, seriesMax, options) {\n                var axis = this;\n                options = options || {};\n                deepExtend(options, {\n                    min: toDate(options.min),\n                    max: toDate(options.max),\n                    axisCrossingValue: toDate(options.axisCrossingValues || options.axisCrossingValue)\n                });\n                options = axis.applyDefaults(toDate(seriesMin), toDate(seriesMax), options);\n                Axis.fn.init.call(axis, options);\n            },\n            options: {\n                type: DATE,\n                majorGridLines: {\n                    visible: true,\n                    width: 1,\n                    color: BLACK\n                },\n                labels: { dateFormats: DateLabelFormats }\n            },\n            applyDefaults: function (seriesMin, seriesMax, options) {\n                var axis = this, min = options.min || seriesMin, max = options.max || seriesMax, baseUnit = options.baseUnit || (max && min ? axis.timeUnits(absoluteDateDiff(max, min)) : HOURS), baseUnitTime = TIME_PER_UNIT[baseUnit], autoMin = floorDate(toTime(min) - 1, baseUnit) || toDate(max), autoMax = ceilDate(toTime(max) + 1, baseUnit), userMajorUnit = options.majorUnit ? options.majorUnit : undefined, majorUnit = userMajorUnit || dataviz.ceil(dataviz.autoMajorUnit(autoMin.getTime(), autoMax.getTime()), baseUnitTime) / baseUnitTime, actualUnits = duration(autoMin, autoMax, baseUnit), totalUnits = dataviz.ceil(actualUnits, majorUnit), unitsToAdd = totalUnits - actualUnits, head = math.floor(unitsToAdd / 2), tail = unitsToAdd - head;\n                if (!options.baseUnit) {\n                    delete options.baseUnit;\n                }\n                options.baseUnit = options.baseUnit || baseUnit;\n                options.min = options.min || addDuration(autoMin, -head, baseUnit);\n                options.max = options.max || addDuration(autoMax, tail, baseUnit);\n                options.minorUnit = options.minorUnit || majorUnit / 5;\n                options.majorUnit = majorUnit;\n                this.totalMin = toTime(floorDate(toTime(seriesMin) - 1, baseUnit));\n                this.totalMax = toTime(ceilDate(toTime(seriesMax) + 1, baseUnit));\n                return options;\n            },\n            range: function () {\n                var options = this.options;\n                return {\n                    min: options.min,\n                    max: options.max\n                };\n            },\n            getDivisions: function (stepValue) {\n                var options = this.options;\n                return math.floor(duration(options.min, options.max, options.baseUnit) / stepValue + 1);\n            },\n            getTickPositions: function (step) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var reverse = options.reverse;\n                var lineBox = this.lineBox();\n                var dir = (vertical ? -1 : 1) * (reverse ? -1 : 1);\n                var startEdge = dir === 1 ? 1 : 2;\n                var start = lineBox[(vertical ? Y : X) + startEdge];\n                var divisions = this.getDivisions(step);\n                var timeRange = dateDiff(options.max, options.min);\n                var lineSize = vertical ? lineBox.height() : lineBox.width();\n                var scale = lineSize / timeRange;\n                var positions = [start];\n                for (var i = 1; i < divisions; i++) {\n                    var date = addDuration(options.min, i * options.majorUnit, options.baseUnit);\n                    var pos = start + dateDiff(date, options.min) * scale * dir;\n                    positions.push(round(pos, COORD_PRECISION));\n                }\n                return positions;\n            },\n            getMajorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.majorUnit);\n            },\n            getMinorTickPositions: function () {\n                var axis = this;\n                return axis.getTickPositions(axis.options.minorUnit);\n            },\n            getSlot: function (a, b, limit) {\n                return NumericAxis.fn.getSlot.call(this, toDate(a), toDate(b), limit);\n            },\n            getValue: function (point) {\n                var value = NumericAxis.fn.getValue.call(this, point);\n                return value !== null ? toDate(value) : null;\n            },\n            labelsCount: function () {\n                return this.getDivisions(this.options.majorUnit);\n            },\n            createAxisLabel: function (index, labelOptions) {\n                var options = this.options;\n                var offset = index * options.majorUnit;\n                var date = options.min;\n                if (offset > 0) {\n                    date = addDuration(date, offset, options.baseUnit);\n                }\n                var unitFormat = labelOptions.dateFormats[options.baseUnit];\n                labelOptions.format = labelOptions.format || unitFormat;\n                var text = this.axisLabelText(date, null, labelOptions);\n                return new AxisLabel(date, text, index, null, labelOptions);\n            },\n            timeUnits: function (delta) {\n                var unit = HOURS;\n                if (delta >= TIME_PER_YEAR) {\n                    unit = YEARS;\n                } else if (delta >= TIME_PER_MONTH) {\n                    unit = MONTHS;\n                } else if (delta >= TIME_PER_WEEK) {\n                    unit = WEEKS;\n                } else if (delta >= TIME_PER_DAY) {\n                    unit = DAYS;\n                }\n                return unit;\n            },\n            translateRange: function (delta, exact) {\n                var axis = this, options = axis.options, baseUnit = options.baseUnit, weekStartDay = options.weekStartDay, lineBox = axis.lineBox(), size = options.vertical ? lineBox.height() : lineBox.width(), range = axis.range(), scale = size / dateDiff(range.max, range.min), offset = round(delta / scale, DEFAULT_PRECISION), from = addTicks(options.min, offset), to = addTicks(options.max, offset);\n                if (!exact) {\n                    from = addDuration(from, 0, baseUnit, weekStartDay);\n                    to = addDuration(to, 0, baseUnit, weekStartDay);\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            scaleRange: function (delta) {\n                var axis = this, options = axis.options, rounds = math.abs(delta), from = options.min, to = options.max, range, step;\n                while (rounds--) {\n                    range = dateDiff(from, to);\n                    step = math.round(range * 0.1);\n                    if (delta < 0) {\n                        from = addTicks(from, step);\n                        to = addTicks(to, -step);\n                    } else {\n                        from = addTicks(from, -step);\n                        to = addTicks(to, step);\n                    }\n                }\n                return {\n                    min: from,\n                    max: to\n                };\n            },\n            shouldRenderNote: function (value) {\n                var range = this.range();\n                return dateComparer(value, range.min) >= 0 && dateComparer(value, range.max) <= 0;\n            },\n            pan: function (delta) {\n                var range = this.translateRange(delta, true);\n                var limittedRange = this.limitRange(toTime(range.min), toTime(range.max), this.totalMin, this.totalMax);\n                if (limittedRange) {\n                    return {\n                        min: toDate(limittedRange.min),\n                        max: toDate(limittedRange.max)\n                    };\n                }\n            },\n            pointsRange: function (start, end) {\n                var startValue = this.getValue(start);\n                var endValue = this.getValue(end);\n                var min = math.min(startValue, endValue);\n                var max = math.max(startValue, endValue);\n                return {\n                    min: toDate(min),\n                    max: toDate(max)\n                };\n            },\n            zoomRange: function (delta) {\n                var range = this.scaleRange(delta);\n                var min = toDate(limitValue(toTime(range.min), this.totalMin, this.totalMax));\n                var max = toDate(limitValue(toTime(range.max), this.totalMin, this.totalMax));\n                return {\n                    min: min,\n                    max: max\n                };\n            }\n        });\n        var ClusterLayout = ChartElement.extend({\n            options: {\n                vertical: false,\n                gap: 0,\n                spacing: 0\n            },\n            reflow: function (box) {\n                var cluster = this, options = cluster.options, vertical = options.vertical, axis = vertical ? Y : X, children = cluster.children, gap = options.gap, spacing = options.spacing, count = children.length, slots = count + gap + spacing * (count - 1), slotSize = (vertical ? box.height() : box.width()) / slots, position = box[axis + 1] + slotSize * (gap / 2), childBox, i;\n                for (i = 0; i < count; i++) {\n                    childBox = (children[i].box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    children[i].reflow(childBox);\n                    if (i < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                }\n            }\n        });\n        var StackWrap = ChartElement.extend({\n            options: { vertical: true },\n            reflow: function (targetBox) {\n                var options = this.options, vertical = options.vertical, positionAxis = vertical ? X : Y, children = this.children, box = this.box = new Box2D(), childrenCount = children.length, i;\n                for (i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i], childBox;\n                    if (currentChild.visible !== false) {\n                        childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: $((e || {}).target),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var element = this, options = element.options.notes, text = element.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    element.note = new Note(element.value, text, element.dataItem, element.category, element.series, element.options.notes);\n                    element.append(element.note);\n                }\n            }\n        };\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                var bar = this;\n                ChartElement.fn.init.call(bar);\n                bar.options = options;\n                bar.color = options.color || WHITE;\n                bar.aboveAxis = valueOrDefault(bar.options.aboveAxis, true);\n                bar.value = value;\n            },\n            defaults: {\n                border: { width: 1 },\n                vertical: true,\n                overlay: { gradient: GLASS },\n                labels: {\n                    visible: false,\n                    format: '{0}'\n                },\n                opacity: 1,\n                notes: { label: {} }\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                } else {\n                    this._rendered = true;\n                }\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                var labelText;\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: this.dataItem,\n                            category: this.category,\n                            value: this.value,\n                            percentage: this.percentage,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            series: this.series\n                        });\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, options.labels));\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var bar = this, label = bar.label;\n                bar.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = bar.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (bar.note) {\n                    bar.note.reflow(targetBox);\n                }\n                if (bar.errorBars) {\n                    for (var i = 0; i < bar.errorBars.length; i++) {\n                        bar.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var bar = this;\n                var box = bar.box;\n                var options = bar.options;\n                var customVisual = options.visual;\n                if (bar.visible !== false) {\n                    ChartElement.fn.createVisual.call(bar);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: bar.category,\n                            dataItem: bar.dataItem,\n                            value: bar.value,\n                            sender: bar.getChart(),\n                            series: bar.series,\n                            percentage: bar.percentage,\n                            runningTotal: bar.runningTotal,\n                            total: bar.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                bar.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            bar.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        bar.createRect(bar.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = draw.Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    visual.append(this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = draw.Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var bar = this, options = bar.options, color = bar.color, border = options.border, borderColor = border.color, brightness = border._brightness || BAR_BORDER_BRIGHTNESS;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var bar = this, options = bar.options, box = bar.box, vertical = options.vertical, aboveAxis = bar.aboveAxis, clipBox = bar.owner.pane.clipBox() || box, x, y;\n                if (vertical) {\n                    x = box.x2 + TOOLTIP_OFFSET;\n                    y = aboveAxis ? math.max(box.y1, clipBox.y1) : math.min(box.y2, clipBox.y2) - tooltipHeight;\n                } else {\n                    var x1 = math.max(box.x1, clipBox.x1), x2 = math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        x = aboveAxis ? x2 - tooltipWidth : x1;\n                        y = box.y1 - tooltipHeight - TOOLTIP_OFFSET;\n                    } else {\n                        x = aboveAxis ? x2 + TOOLTIP_OFFSET : x1 - tooltipWidth - TOOLTIP_OFFSET;\n                        y = box.y1;\n                    }\n                }\n                return new Point2D(x, y);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Bar.fn, PointEventsMixin);\n        deepExtend(Bar.fn, NoteMixin);\n        var BarChartAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                var element = this.element;\n                var options = this.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new geom.Point(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(geom.transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = interpolate(this.fromScale.x, 1, pos);\n                var scaleY = interpolate(this.fromScale.y, 1, pos);\n                this.element.transform(geom.transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                draw.Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR, BarChartAnimation);\n        var FadeInAnimation = draw.Animation.extend({\n            options: {\n                duration: 200,\n                easing: LINEAR\n            },\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        draw.AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var ErrorRangeCalculator = function (errorValue, series, field) {\n            var that = this;\n            that.initGlobalRanges(errorValue, series, field);\n        };\n        ErrorRangeCalculator.prototype = ErrorRangeCalculator.fn = {\n            percentRegex: /percent(?:\\w*)\\((\\d+)\\)/,\n            standardDeviationRegex: new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$'),\n            initGlobalRanges: function (errorValue, series, field) {\n                var that = this, data = series.data, deviationMatch = that.standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var average = that.getAverage(data), deviation = that.getStandardDeviation(data, average, false), multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1, errorRange = {\n                            low: average.value - deviation * multiple,\n                            high: average.value + deviation * multiple\n                        };\n                    that.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    that.valueGetter = that.createValueGetter(series, field);\n                    var standardError = that.getStandardError(data, that.getAverage(data));\n                    that.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data, binder = SeriesBinder.current, valueFields = binder.valueFields(series), item = defined(data[0]) ? data[0] : {}, idx, srcValueFields, valueGetter;\n                if (isArray(item)) {\n                    idx = field ? indexOf(field, valueFields) : 0;\n                    valueGetter = getter('[' + idx + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === OBJECT) {\n                    srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[indexOf(field, valueFields)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var that = this, low, high, value;\n                if (!defined(errorValue)) {\n                    return;\n                }\n                if (that.globalRange) {\n                    return that.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = that.percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - math.abs(percentValue);\n                    high = pointValue + math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var squareDifferenceSum = 0, length = data.length, total = isSample ? average.count - 1 : average.count, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += math.pow(value - average.value, 2);\n                    }\n                }\n                return math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var sum = 0, count = 0, length = data.length, value;\n                for (var i = 0; i < length; i++) {\n                    value = this.valueGetter(data[i]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        };\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                chart.valueAxisRanges = {};\n                chart.points = [];\n                chart.categoryPoints = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                invertAxes: false,\n                isStacked: false,\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    var categorySum = 0;\n                    var otherValues = [];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += math.abs(other.value);\n                                otherValues.push(math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var categoryIx = point.categoryIx;\n                var categoryPts = this.categoryPoints[categoryIx];\n                if (this.options.isStacked) {\n                    startValue = startValue || 0;\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this.options.isStacked100) {\n                                plotValue = math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value || axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPts = this.categoryPoints[i];\n                    for (var pIx = 0; pIx < categoryPts.length; pIx++) {\n                        var point = categoryPts[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = math.max(max, to);\n                                    min = math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var chart = this;\n                var chartSeries = chart.options.series;\n                var isStacked = chart.options.isStacked;\n                var limits;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        limits = limitsCache[key];\n                        if (!limits) {\n                            limits = chart.stackLimits(axisName, series.stack);\n                            var errorTotals = chart.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = math.min(limits.min, sparseArrayMin(errorTotals.negative));\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = math.max(limits.max, sparseArrayMax(errorTotals.positive));\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            chart.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var chart = this, value = point.value, series = point.series, seriesIx = point.seriesIx, errorBars = point.options.errorBars, errorRange, lowValue = data.fields[ERROR_LOW_FIELD], highValue = data.fields[ERROR_HIGH_FIELD];\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    chart.seriesErrorRanges = chart.seriesErrorRanges || [];\n                    chart.seriesErrorRanges[seriesIx] = chart.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = chart.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    chart.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var chart = this, series = point.series, low = point.low, high = point.high, isVertical = !chart.options.invertAxes, options = point.options.errorBars, errorBar, stackedErrorRange;\n                if (chart.options.isStacked) {\n                    stackedErrorRange = chart.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    chart.updateRange({ value: low }, fields);\n                    chart.updateRange({ value: high }, fields);\n                }\n                errorBar = new CategoricalErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var chart = this, plotValue = chart.plotRange(point, 0)[1] - point.value, low = point.low + plotValue, high = point.high + plotValue;\n                chart.errorTotals = chart.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    chart.errorTotals.negative[categoryIx] = math.min(chart.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    chart.errorTotals.positive[categoryIx] = math.max(chart.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = chart.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    chart.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = chart.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = chart;\n                    point.dataItem = series.data[categoryIx];\n                    point.noteText = data.fields.noteText;\n                    chart.addErrorBar(point, data, categoryIx);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                chart.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return options;\n            },\n            updateRange: function (data, fields) {\n                var chart = this, axisName = fields.series.axis, value = data.value, axisRange = chart.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, value);\n                    axisRange.max = math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea, axisName = series.axis, axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var chart = this, pointIx = 0, categorySlots = chart.categorySlots = [], chartPoints = chart.points, categoryAxis = chart.categoryAxis, value, valueAxis, point;\n                chart.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    value = chart.pointValue(data);\n                    valueAxis = chart.seriesValueAxis(currentSeries);\n                    point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = chart.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = chart.plotRange(point, valueAxis.startValue());\n                        var valueSlot = valueAxis.getSlot(plotRange[0], plotRange[1], !chart.options.clip);\n                        if (valueSlot) {\n                            var pointSlot = chart.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = chart.aboveAxis(point, valueAxis);\n                            if (chart.options.isStacked100) {\n                                point.percentage = chart.plotValue(point);\n                            }\n                            chart.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.reflowCategories(categorySlots);\n                chart.box = targetBox;\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis, options = valueAxis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var chart = this, options = chart.options, invertAxes = options.invertAxes, slotX = invertAxes ? valueSlot : categorySlot, slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, categories = chart.categoryAxis.options.categories || [], count = categoriesCount(series), categoryIx, seriesIx, pointData, currentCategory, currentSeries, seriesCount = series.length;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                        currentSeries = series[seriesIx];\n                        currentCategory = categories[categoryIx];\n                        pointData = this._bindPoint(currentSeries, seriesIx, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx\n                        });\n                    }\n                }\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this._outOfRangeCallback(series[seriesIx], '_outOfRangeMaxPoint', seriesIx, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        var BarChart = CategoricalChart.extend({\n            options: { animation: { type: BAR } },\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = chart.pointValue(data);\n                var options = chart.options;\n                var children = chart.children;\n                var isStacked = chart.options.isStacked;\n                var point;\n                var pointType = chart.pointType();\n                var pointOptions;\n                var cluster;\n                var clusterType = chart.clusterType();\n                pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position == OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new pointType(value, pointOptions);\n                point.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = chart.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var chart = this, options = chart.options, categorySlot = categoryAxis.getSlot(categoryIx), startValue = valueAxis.startValue(), stackAxis, zeroSlot;\n                if (options.isStacked) {\n                    zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                ChartElement.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var points = this.points;\n                var point, pointVisual;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (this.options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new geom.Point(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        var RangeBar = Bar.extend({\n            defaults: {\n                labels: { format: '{0} - {1}' },\n                tooltip: { format: '{1}' }\n            },\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelText;\n                if (options.template) {\n                    var labelTemplate = template(options.template);\n                    labelText = labelTemplate({\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        value: this.value,\n                        percentage: this.percentage,\n                        runningTotal: this.runningTotal,\n                        total: this.total,\n                        series: this.series\n                    });\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options));\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var rangeBar = this, labelFrom = rangeBar.labelFrom, labelTo = rangeBar.labelTo;\n                rangeBar.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = rangeBar.value.from > rangeBar.value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = rangeBar.value.to > rangeBar.value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (rangeBar.note) {\n                    rangeBar.note.reflow(targetBox);\n                }\n            }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return autoFormat(format, point.value.from, point.value.to);\n            },\n            plotLimits: CategoricalChart.fn.plotLimits,\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, from = value.from, to = value.to, axisRange = chart.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min(axisRange.min, from);\n                    axisRange.max = math.max(axisRange.max, from);\n                    axisRange.min = math.min(axisRange.min, to);\n                    axisRange.max = math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                chart.wrapData(options);\n                CategoricalChart.fn.init.call(chart, plotArea, options);\n            },\n            options: { animation: { type: BAR } },\n            wrapData: function (options) {\n                var series = options.series, i, data, seriesItem;\n                for (i = 0; i < series.length; i++) {\n                    seriesItem = series[i];\n                    data = seriesItem.data;\n                    if (data && !isArray(data[0]) && typeof data[0] != OBJECT) {\n                        seriesItem.data = [data];\n                    }\n                }\n            },\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var options = chart.options;\n                var children = chart.children;\n                var bullet;\n                var bulletOptions;\n                var cluster;\n                bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = chart.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (kendo.isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, current = value.current, target = value.target, axisRange = chart.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = math.min.apply(math, [\n                        axisRange.min,\n                        current,\n                        target\n                    ]);\n                    axisRange.max = math.max.apply(math, [\n                        axisRange.max,\n                        current,\n                        target\n                    ]);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var points = this.points;\n                var point;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    point.options.animation = this.options.animation;\n                    point.createAnimation();\n                }\n            },\n            _setAnimationOptions: BarChart.fn._setAnimationOptions\n        });\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                var bullet = this;\n                ChartElement.fn.init.call(bullet, options);\n                bullet.aboveAxis = bullet.options.aboveAxis;\n                bullet.color = options.color || WHITE;\n                bullet.value = value;\n            },\n            options: {\n                border: { width: 1 },\n                vertical: false,\n                opacity: 1,\n                target: {\n                    shape: '',\n                    border: {\n                        width: 0,\n                        color: 'green'\n                    },\n                    line: { width: 2 }\n                },\n                tooltip: { format: 'Current: {0}</br>Target: {1}' }\n            },\n            render: function () {\n                var bullet = this, options = bullet.options;\n                if (!bullet._rendered) {\n                    bullet._rendered = true;\n                    if (defined(bullet.value.target)) {\n                        bullet.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || bullet.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        bullet.append(bullet.target);\n                    }\n                    bullet.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var bullet = this, options = bullet.options, chart = bullet.owner, target = bullet.target, invertAxes = options.invertAxes, valueAxis = chart.seriesValueAxis(bullet.options), categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis), targetValueSlot = valueAxis.getSlot(bullet.value.target), targetSlotX = invertAxes ? targetValueSlot : categorySlot, targetSlotY = invertAxes ? categorySlot : targetValueSlot, targetSlot;\n                if (target) {\n                    targetSlot = new Box2D(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (bullet.note) {\n                    bullet.note.reflow(box);\n                }\n                bullet.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = draw.Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var bar = this, options = bar.options, box = bar.box, vertical = options.vertical, aboveAxis = bar.aboveAxis, clipBox = bar.owner.pane.clipBox() || box, x, y;\n                if (vertical) {\n                    x = box.x2 + TOOLTIP_OFFSET;\n                    y = aboveAxis ? math.max(box.y1, clipBox.y1) : math.min(box.y2, clipBox.y2) - tooltipHeight;\n                } else {\n                    var x1 = math.max(box.x1, clipBox.x1), x2 = math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        x = aboveAxis ? x2 - tooltipWidth : x1;\n                        y = box.y1 - tooltipHeight - TOOLTIP_OFFSET;\n                    } else {\n                        x = aboveAxis ? x2 + TOOLTIP_OFFSET : x1 - tooltipWidth - TOOLTIP_OFFSET;\n                        y = box.y1;\n                    }\n                }\n                return new Point2D(x, y);\n            },\n            createHighlight: function (style) {\n                return draw.Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                var bullet = this;\n                return bullet.owner.formatPointValue(bullet, format);\n            }\n        });\n        deepExtend(Bullet.fn, PointEventsMixin);\n        deepExtend(Bullet.fn, NoteMixin);\n        var Target = ShapeElement.extend();\n        deepExtend(Target.fn, PointEventsMixin);\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                var errorBar = this;\n                errorBar.low = low;\n                errorBar.high = high;\n                errorBar.isVertical = isVertical;\n                errorBar.chart = chart;\n                errorBar.series = series;\n                ChartElement.fn.init.call(errorBar, options);\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                endCaps: true,\n                line: { width: 1 },\n                zIndex: 1\n            },\n            getAxis: function () {\n            },\n            reflow: function (targetBox) {\n                var linePoints, errorBar = this, endCaps = errorBar.options.endCaps, isVertical = errorBar.isVertical, axis = errorBar.getAxis(), valueBox = axis.getSlot(errorBar.low, errorBar.high), centerBox = targetBox.center(), capsWidth = errorBar.getCapsWidth(targetBox, isVertical), capValue = isVertical ? centerBox.x : centerBox.y, capStart = capValue - capsWidth, capEnd = capValue + capsWidth;\n                if (isVertical) {\n                    linePoints = [\n                        Point2D(centerBox.x, valueBox.y1),\n                        Point2D(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(capStart, valueBox.y1), Point2D(capEnd, valueBox.y1), Point2D(capStart, valueBox.y2), Point2D(capEnd, valueBox.y2));\n                    }\n                    errorBar.box = Box2D(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        Point2D(valueBox.x1, centerBox.y),\n                        Point2D(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(Point2D(valueBox.x1, capStart), Point2D(valueBox.x1, capEnd), Point2D(valueBox.x2, capStart), Point2D(valueBox.x2, capEnd));\n                    }\n                    errorBar.box = Box2D(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                errorBar.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height(), capsWidth = math.min(math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var that = this;\n                var options = that.options;\n                var visual = options.visual;\n                if (visual) {\n                    that.visual = visual({\n                        low: that.low,\n                        high: that.high,\n                        rect: that.box.toRect(),\n                        sender: that.getChart(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            that.createDefaultVisual();\n                            var defaultVisual = that.visual;\n                            delete that.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    that.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var errorBar = this, options = errorBar.options, lineOptions = {\n                        stroke: {\n                            color: options.color,\n                            width: options.line.width,\n                            dashType: options.line.dashType\n                        }\n                    }, linePoints = errorBar.linePoints;\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new draw.Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    this.visual.append(line);\n                }\n            }\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axis = chart.seriesValueAxis(series);\n                return axis;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var errorBar = this, chart = errorBar.chart, series = errorBar.series, axes = chart.seriesAxes(series), axis = errorBar.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point);\n                point.value = value;\n                point.options = options;\n                point.aboveAxis = valueOrDefault(point.options.aboveAxis, true);\n                point.tooltipTracking = true;\n            },\n            defaults: {\n                vertical: true,\n                markers: {\n                    visible: true,\n                    background: WHITE,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    border: { width: 2 },\n                    opacity: 1\n                },\n                labels: {\n                    visible: false,\n                    position: ABOVE,\n                    margin: getSpacing(3),\n                    padding: getSpacing(4),\n                    animation: {\n                        type: FADEIN,\n                        delay: INITIAL_ANIMATION_DURATION\n                    }\n                },\n                notes: { label: {} },\n                highlight: { markers: { border: {} } }\n            },\n            render: function () {\n                var point = this, options = point.options, markers = options.markers, labels = options.labels, labelText = point.value;\n                if (point._rendered) {\n                    return;\n                } else {\n                    point._rendered = true;\n                }\n                if (markers.visible && markers.size) {\n                    point.marker = point.createMarker();\n                    point.append(point.marker);\n                }\n                if (labels.visible) {\n                    if (labels.template) {\n                        var labelTemplate = template(labels.template);\n                        labelText = labelTemplate({\n                            dataItem: point.dataItem,\n                            category: point.category,\n                            value: point.value,\n                            percentage: point.percentage,\n                            series: point.series\n                        });\n                    } else if (labels.format) {\n                        labelText = point.formatValue(labels.format);\n                    }\n                    point.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels));\n                    point.append(point.label);\n                }\n                point.createNote();\n                if (point.errorBar) {\n                    point.append(point.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: noop,\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var point = this, options = point.options, vertical = options.vertical, aboveAxis = point.aboveAxis, childBox, center;\n                point.render();\n                point.box = targetBox;\n                childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                point._childBox = childBox;\n                if (point.marker) {\n                    point.marker.reflow(childBox);\n                }\n                point.reflowLabel(childBox);\n                if (point.errorBars) {\n                    for (var i = 0; i < point.errorBars.length; i++) {\n                        point.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (point.note) {\n                    var noteTargetBox = point.markerBox();\n                    if (!point.marker) {\n                        center = noteTargetBox.center();\n                        noteTargetBox = Box2D(center.x, center.y, center.x, center.y);\n                    }\n                    point.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var point = this, options = point.options, label = point.label, anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(point.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var markers = highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual;\n                var rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geom.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function (tooltipWidth, tooltipHeight) {\n                var point = this, markerBox = point.markerBox(), aboveAxis = point.aboveAxis, x = markerBox.x2 + TOOLTIP_OFFSET, y = aboveAxis ? markerBox.y1 - tooltipHeight : markerBox.y2, clipBox = point.owner.pane.clipBox(), showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    return Point2D(x, y);\n                }\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            }\n        });\n        deepExtend(LinePoint.fn, PointEventsMixin);\n        deepExtend(LinePoint.fn, NoteMixin);\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                var point = this;\n                LinePoint.fn.init.call(point, value, options);\n                point.category = value.category;\n            },\n            defaults: {\n                labels: { position: CENTER },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    }\n                }\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = markers.size / 2 - border.width / 2;\n                var overlay = new draw.Circle(new geom.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                return overlay;\n            }\n        });\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.linePoints = linePoints;\n                segment.series = series;\n                segment.seriesIx = seriesIx;\n            },\n            options: { closed: false },\n            points: function (visualPoints) {\n                var segment = this, linePoints = segment.linePoints.concat(visualPoints || []), points = [];\n                for (var i = 0, length = linePoints.length; i < length; i++) {\n                    if (linePoints[i].visible !== false) {\n                        points.push(linePoints[i]._childBox.toRect().center());\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var options = this.options;\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = draw.Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                var segment = this, seriesIx = segment.seriesIx;\n                return segment.parent.getNearestPoint(coords.x, coords.y, seriesIx);\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, currentSeries, seriesIx, seriesCount = seriesPoints.length, sortedPoints, linePoints, point, pointIx, pointCount, lastSegment;\n                this._segments = [];\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    sortedPoints = chart.sortPoints(seriesPoints[seriesIx]);\n                    pointCount = sortedPoints.length;\n                    linePoints = [];\n                    for (pointIx = 0; pointIx < pointCount; pointIx++) {\n                        point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (chart.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = chart.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues, assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point2D(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.box;\n                    var clipPath = draw.Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                var point;\n                for (var idx = 0; idx < points.length; idx++) {\n                    point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                var chart = this;\n                CategoricalChart.fn.render.apply(chart);\n                chart.updateStackRange();\n                chart.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields.value;\n                var missingValues = chart.seriesMissingValues(series);\n                var point;\n                var pointOptions;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPts = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPts.length; i++) {\n                        var other = categoryPts[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this.plotValue(other);\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.fn, LineChartMixin, ClipAnimationMixin);\n        var ClipAnimation = draw.Animation.extend({\n            options: { duration: INITIAL_ANIMATION_DURATION },\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(interpolate(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        draw.AnimationFactory.current.register(CLIP, ClipAnimation);\n        var StepLineSegment = LineSegment.extend({\n            points: function (visualPoints) {\n                var segment = this, points;\n                points = segment.calculateStepPoints(segment.linePoints);\n                if (visualPoints && visualPoints.length) {\n                    points = points.concat(segment.calculateStepPoints(visualPoints).reverse());\n                }\n                return points;\n            },\n            calculateStepPoints: function (points) {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, categoryAxis = plotArea.seriesCategoryAxis(segment.series), isInterpolate = chart.seriesMissingValues(segment.series) === INTERPOLATE, length = points.length, reverse = categoryAxis.options.reverse, vertical = categoryAxis.options.vertical, dir = reverse ? 2 : 1, revDir = reverse ? 1 : 2, prevPoint, point, i, prevMarkerBoxCenter, markerBoxCenter, result = [];\n                for (i = 1; i < length; i++) {\n                    prevPoint = points[i - 1];\n                    point = points[i];\n                    prevMarkerBoxCenter = prevPoint.markerBox().center();\n                    markerBoxCenter = point.markerBox().center();\n                    if (categoryAxis.options.justified) {\n                        result.push(new geom.Point(prevMarkerBoxCenter.x, prevMarkerBoxCenter.y));\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, markerBoxCenter.y));\n                        } else {\n                            result.push(new geom.Point(markerBoxCenter.x, prevMarkerBoxCenter.y));\n                        }\n                        result.push(new geom.Point(markerBoxCenter.x, markerBoxCenter.y));\n                    } else {\n                        if (vertical) {\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + dir]));\n                            result.push(new geom.Point(prevMarkerBoxCenter.x, prevPoint.box[Y + revDir]));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(prevMarkerBoxCenter.x, point.box[Y + dir]));\n                            }\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + dir]));\n                            result.push(new geom.Point(markerBoxCenter.x, point.box[Y + revDir]));\n                        } else {\n                            result.push(new geom.Point(prevPoint.box[X + dir], prevMarkerBoxCenter.y));\n                            result.push(new geom.Point(prevPoint.box[X + revDir], prevMarkerBoxCenter.y));\n                            if (isInterpolate) {\n                                result.push(new geom.Point(point.box[X + dir], prevMarkerBoxCenter.y));\n                            }\n                            result.push(new geom.Point(point.box[X + dir], markerBoxCenter.y));\n                            result.push(new geom.Point(point.box[X + revDir], markerBoxCenter.y));\n                        }\n                    }\n                }\n                return result || [];\n            }\n        });\n        var SplineSegment = LineSegment.extend({\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new draw.Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var AreaSegmentMixin = {\n            points: function () {\n                var segment = this, chart = segment.parent, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, stackPoints = segment.stackPoints, points = segment._linePoints(stackPoints), pos = invertAxes ? X : Y, firstPoint, lastPoint;\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!segment.stackPoints && points.length > 1) {\n                    firstPoint = points[0];\n                    lastPoint = last(points);\n                    if (invertAxes) {\n                        points.unshift(new geom.Point(end, firstPoint.y));\n                        points.push(new geom.Point(end, lastPoint.y));\n                    } else {\n                        points.unshift(new geom.Point(firstPoint.x, end));\n                        points.push(new geom.Point(lastPoint.x, end));\n                    }\n                }\n                return points;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createArea(color);\n                this.createLine(color);\n            },\n            createLine: function (color) {\n                var series = this.series;\n                var lineOptions = deepExtend({\n                    color: color,\n                    opacity: series.opacity\n                }, series.line);\n                if (lineOptions.visible !== false && lineOptions.width > 0) {\n                    var line = draw.Path.fromPoints(this._linePoints(), {\n                        stroke: {\n                            color: lineOptions.color,\n                            width: lineOptions.width,\n                            opacity: lineOptions.opacity,\n                            dashType: lineOptions.dashType,\n                            lineCap: 'butt'\n                        }\n                    });\n                    this.visual.append(line);\n                }\n            },\n            createArea: function (color) {\n                var series = this.series;\n                var area = draw.Path.fromPoints(this.points(), {\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.visual.append(area);\n            }\n        };\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: LineSegment.fn.points\n        });\n        deepExtend(AreaSegment.fn, AreaSegmentMixin);\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var chart = this, options = chart.options, isStacked = options.isStacked, stackPoints, pointType, style = (currentSeries.line || {}).style;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues != 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                    if (style !== STEP) {\n                        stackPoints = stackPoints.slice(0).reverse();\n                    }\n                }\n                if (style === SMOOTH) {\n                    return new SplineAreaSegment(linePoints, prevSegment, isStacked, currentSeries, seriesIx);\n                }\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, stackPoints, currentSeries, seriesIx);\n            },\n            reflow: function (targetBox) {\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    var stackPoint, pointSlot;\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        stackPoint = stackPoints[idx];\n                        pointSlot = this.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var endIdx = startIdx + linePoints.length;\n                var stackPoints = [];\n                var currentSeriesIx;\n                var point, gapStackPoint;\n                this._stackPoints = this._stackPoints || [];\n                for (var idx = startIdx; idx < endIdx; idx++) {\n                    currentSeriesIx = seriesIx;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][idx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && idx > startIdx && !seriesPoints[currentSeriesIx][idx - 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && idx + 1 < endIdx && !seriesPoints[currentSeriesIx][idx + 1]) {\n                            stackPoints.push(this._previousSegmentPoint(idx, idx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        gapStackPoint = this._createGapStackPoint(idx);\n                        this._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var point;\n                while (seriesIdx > 0 && !point) {\n                    seriesIdx--;\n                    point = seriesPoints[seriesIdx][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[seriesIdx][categoryIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var SplineAreaSegment = AreaSegment.extend({\n            init: function (linePoints, prevSegment, isStacked, currentSeries, seriesIx) {\n                var segment = this;\n                segment.prevSegment = prevSegment;\n                segment.isStacked = isStacked;\n                LineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var curveProcessor = new CurveProcessor(this.options.closed);\n                    var linePoints = LineSegment.fn.points.call(this);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                }\n                return segments;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFn(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new draw.Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                this.createStroke({\n                    stroke: deepExtend({\n                        color: color,\n                        opacity: series.opacity,\n                        lineCap: 'butt'\n                    }, series.line)\n                });\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var prevSegment = this.prevSegment;\n                if (this.isStacked && prevSegment) {\n                    var prevStrokeSegments = prevSegment.strokeSegments();\n                    var prevAnchor = last(prevStrokeSegments).anchor();\n                    fillSegments.push(new draw.Segment(prevAnchor, prevAnchor, last(strokeSegments).anchor()));\n                    var stackSegments = $.map(prevStrokeSegments, function (segment) {\n                        return new draw.Segment(segment.anchor(), segment.controlOut(), segment.controlIn());\n                    }).reverse();\n                    append(fillSegments, stackSegments);\n                    var firstAnchor = fillSegments[0].anchor();\n                    fillSegments.push(new draw.Segment(firstAnchor, firstAnchor, last(stackSegments).anchor()));\n                }\n                var fill = new draw.Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                this.closeFill(fill);\n                this.visual.append(fill);\n            },\n            closeFill: function (fillPath) {\n                var segment = this, chart = segment.parent, prevSegment = segment.prevSegment, plotArea = chart.plotArea, invertAxes = chart.options.invertAxes, valueAxis = chart.seriesValueAxis(segment.series), valueAxisLineBox = valueAxis.lineBox(), categoryAxis = plotArea.seriesCategoryAxis(segment.series), categoryAxisLineBox = categoryAxis.lineBox(), end = invertAxes ? categoryAxisLineBox.x1 : categoryAxisLineBox.y1, pos = invertAxes ? X : Y, segments = segment.strokeSegments(), firstPoint = segments[0].anchor(), lastPoint = last(segments).anchor();\n                end = limitValue(end, valueAxisLineBox[pos + 1], valueAxisLineBox[pos + 2]);\n                if (!(chart.options.isStacked && prevSegment) && segments.length > 1) {\n                    if (invertAxes) {\n                        fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                    } else {\n                        fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                    }\n                }\n            },\n            createStroke: function (style) {\n                if (style.stroke.width > 0) {\n                    var stroke = new draw.Path(style);\n                    stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                    this.visual.append(stroke);\n                }\n            }\n        });\n        var StepAreaSegment = StepLineSegment.extend({\n            init: function (linePoints, stackPoints, currentSeries, seriesIx) {\n                var segment = this;\n                segment.stackPoints = stackPoints;\n                StepLineSegment.fn.init.call(segment, linePoints, currentSeries, seriesIx);\n            },\n            _linePoints: StepLineSegment.fn.points\n        });\n        deepExtend(StepAreaSegment.fn, AreaSegmentMixin);\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.xAxisRanges = {};\n                chart.yAxisRanges = {};\n                chart.points = [];\n                chart.seriesPoints = [];\n                chart.seriesOptions = [];\n                chart._evalSeries = [];\n                chart.render();\n            },\n            options: {\n                series: [],\n                tooltip: { format: '{0}, {1}' },\n                labels: { format: '{0}, {1}' },\n                clip: true\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            addErrorBar: function (point, field, fields) {\n                var errorRange, chart = this, value = point.value[field], valueErrorField = field + 'Value', lowField = field + 'ErrorLow', highField = field + 'ErrorHigh', seriesIx = fields.seriesIx, series = fields.series, errorBars = point.options.errorBars, lowValue = fields[lowField], highValue = fields[highField];\n                if (isNumber(value)) {\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        chart.seriesErrorRanges = chart.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        chart.seriesErrorRanges[field][seriesIx] = chart.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = chart.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        chart.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var chart = this, low = errorRange.low, high = errorRange.high, series = point.series, isVertical = field === Y, options = point.options.errorBars, item = {}, errorBar;\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                errorBar = new ScatterErrorBar(low, high, isVertical, chart, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                chart.updateRange(item, series);\n                item[field] = high;\n                chart.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var chart = this, point, x = value.x, y = value.y, seriesIx = fields.seriesIx, series = this.options.series[seriesIx], missingValues = this.seriesMissingValues(series), seriesPoints = chart.seriesPoints[seriesIx];\n                if (!(hasValue(x) && hasValue(y))) {\n                    value = this.createMissingValue(value, missingValues);\n                }\n                if (value) {\n                    point = chart.createPoint(value, fields);\n                    if (point) {\n                        extend(point, fields);\n                        chart.addErrorBar(point, X, fields);\n                        chart.addErrorBar(point, Y, fields);\n                    }\n                    chart.updateRange(value, fields.series);\n                }\n                chart.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: noop,\n            updateRange: function (value, series) {\n                var chart = this, x = value.x, y = value.y, xAxisName = series.xAxis, yAxisName = series.yAxis, xAxisRange = chart.xAxisRanges[xAxisName], yAxisRange = chart.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = chart.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof x === STRING) {\n                        x = toDate(x);\n                    }\n                    xAxisRange.min = math.min(xAxisRange.min, x);\n                    xAxisRange.max = math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = chart.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (typeof y === STRING) {\n                        y = toDate(y);\n                    }\n                    yAxisRange.min = math.min(yAxisRange.min, y);\n                    yAxisRange.max = math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'tempate',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                if (doEval) {\n                    options = deepExtend({}, options);\n                    evalOptions(options, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return options;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().fn.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, point;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                point = new LinePoint(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var plotArea = this.plotArea, xAxisName = series.xAxis, xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX, yAxisName = series.yAxis, yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var chart = this, chartPoints = chart.points, pointIx = 0, point, seriesAxes, limit = !chart.options.clip;\n                chart.traverseDataPoints(function (value, fields) {\n                    point = chartPoints[pointIx++];\n                    seriesAxes = chart.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit), slotY = seriesAxes.y.getSlot(value.y, value.y, limit), pointSlot;\n                    if (point) {\n                        if (slotX && slotY) {\n                            pointSlot = chart.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                chart.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box2D(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, series = options.series, seriesPoints = chart.seriesPoints, pointIx, seriesIx, currentSeries, currentSeriesPoints, pointData, value, fields;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        pointData = this._bindPoint(currentSeries, seriesIx, pointIx);\n                        value = pointData.valueFields;\n                        fields = pointData.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: chart\n                        }, fields));\n                    }\n                }\n            },\n            _bindPoint: CategoricalChart.fn._bindPoint,\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        deepExtend(ScatterChart.fn, ClipAnimationMixin);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                var chart = this;\n                ScatterChart.fn.render.call(chart);\n                chart.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var pointType, style = currentSeries.style;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.fn, LineChartMixin);\n        var BubbleChart = ScatterChart.extend({\n            init: function (plotArea, options) {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn.init.call(this, plotArea, options);\n            },\n            options: {\n                tooltip: { format: '{3}' },\n                labels: { format: '{3}' }\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = math.max(this._maxSize, math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                var chart = this;\n                chart.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(chart, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var chart = this, series = fields.series, pointsCount = series.data.length, delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount), animationOptions = {\n                        delay: delay,\n                        duration: INITIAL_ANIMATION_DURATION - delay,\n                        type: BUBBLE\n                    }, point, pointOptions;\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = chart.evalPointOptions(pointOptions, value, fields);\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                point = new Bubble(value, pointOptions);\n                point.color = color;\n                chart.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var chart = this, options = chart.options, series = options.series, boxSize = math.min(box.width(), box.height()), seriesIx, pointIx;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx], seriesPoints = chart.seriesPoints[seriesIx], minSize = currentSeries.minSize || math.max(boxSize * 0.02, 10), maxSize = currentSeries.maxSize || boxSize * 0.2, minR = minSize / 2, maxR = maxSize / 2, minArea = math.PI * minR * minR, maxArea = math.PI * maxR * maxR, areaRange = maxArea - minArea, areaRatio = areaRange / chart._maxSize;\n                    for (pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = math.abs(point.value.size) * areaRatio, r = math.sqrt((minArea + area) / math.PI), baseZIndex = valueOrDefault(point.options.zIndex, 0), zIndex = baseZIndex + (1 - r / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: r * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: noop,\n            createVisual: noop\n        });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            options: {\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{4:d}</th>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), points = [], mid, ocSlot, lhSlot;\n                ocSlot = valueAxis.getSlot(value.open, value.close);\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                point.realBody = ocSlot;\n                mid = lhSlot.center().x;\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                point.lines = points;\n                point.box = lhSlot.clone().wrap(ocSlot);\n                if (!point._rendered) {\n                    point._rendered = true;\n                    point.createNote();\n                }\n                point.reflowNote();\n            },\n            reflowNote: function () {\n                var point = this;\n                if (point.note) {\n                    point.note.reflow(point.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new draw.Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = draw.Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({}, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = draw.Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var point = this, options = point.options, border = options.border, borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(point.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = draw.Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var point = this, box = point.box, clipBox = point.owner.pane.clipBox() || box;\n                return new Point2D(box.x2 + TOOLTIP_OFFSET, math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        deepExtend(Candlestick.fn, PointEventsMixin);\n        deepExtend(Candlestick.fn, NoteMixin);\n        var CandlestickChart = CategoricalChart.extend({\n            options: {},\n            reflowCategories: function (categorySlots) {\n                var chart = this, children = chart.children, childrenLength = children.length, i;\n                for (i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var value = data.valueFields;\n                var children = chart.children;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var pointType = chart.pointType();\n                var color = data.fields.color || series.color;\n                pointOptions = chart.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type == CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (kendo.isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value);\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.fn, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), oPoints = [], cPoints = [], lhPoints = [], mid, oSlot, cSlot, lhSlot;\n                lhSlot = valueAxis.getSlot(value.low, value.high);\n                oSlot = valueAxis.getSlot(value.open, value.open);\n                cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                point.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                point.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                point.reflowNote();\n            },\n            createBody: $.noop\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var chart = this;\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var options = chart.options;\n                var children = chart.children;\n                var value = data.valueFields;\n                var valueParts = chart.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var categoryPoints = chart.categoryPoints[categoryIx];\n                var dataItem = series.data[categoryIx];\n                var point, cluster;\n                if (!categoryPoints) {\n                    chart.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = chart.createPoint(data, fields);\n                }\n                cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing\n                    });\n                    chart.append(cluster);\n                }\n                if (point) {\n                    chart.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = chart;\n                    point.dataItem = dataItem;\n                }\n                chart.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var chart = this, axisName = fields.series.axis, axisRange = chart.valueAxisRanges[axisName], parts = chart.splitValue(value).concat(chart.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = chart.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = chart.valueAxisRanges[axisName] = {\n                    min: math.min.apply(math, parts.concat([axisRange.min])),\n                    max: math.max.apply(math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return autoFormat(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length, result = [], i, item;\n                for (i = 0; i < length; i++) {\n                    item = items[i];\n                    if (defined(item)) {\n                        appendIfNotNull(result, item);\n                    }\n                }\n                return result;\n            }\n        });\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                var point = this;\n                ChartElement.fn.init.call(point, options);\n                point.value = value;\n                point.createNote();\n            },\n            options: {\n                border: { _brightness: 0.8 },\n                line: { width: 2 },\n                mean: {\n                    width: 2,\n                    dashType: 'dash'\n                },\n                overlay: { gradient: GLASS },\n                tooltip: { format: '<table style=\\'text-align: left;\\'>' + '<th colspan=\\'2\\'>{6:d}</th>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n                highlight: {\n                    opacity: 1,\n                    border: {\n                        width: 1,\n                        opacity: 1\n                    },\n                    line: {\n                        width: 1,\n                        opacity: 1\n                    }\n                },\n                notes: {\n                    visible: true,\n                    label: {}\n                },\n                outliers: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CROSS,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                },\n                extremes: {\n                    visible: true,\n                    size: LINE_MARKER_SIZE,\n                    type: CIRCLE,\n                    background: WHITE,\n                    border: {\n                        width: 2,\n                        opacity: 1\n                    },\n                    opacity: 0\n                }\n            },\n            reflow: function (box) {\n                var point = this, options = point.options, chart = point.owner, value = point.value, valueAxis = chart.seriesValueAxis(options), mid, whiskerSlot, boxSlot, medianSlot, meanSlot;\n                boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                point.boxSlot = boxSlot;\n                whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                medianSlot = valueAxis.getSlot(value.median);\n                boxSlot.x1 = whiskerSlot.x1 = box.x1;\n                boxSlot.x2 = whiskerSlot.x2 = box.x2;\n                point.realBody = boxSlot;\n                if (value.mean) {\n                    meanSlot = valueAxis.getSlot(value.mean);\n                    point.meanPoints = [[\n                            [\n                                box.x1,\n                                meanSlot.y1\n                            ],\n                            [\n                                box.x2,\n                                meanSlot.y1\n                            ]\n                        ]];\n                }\n                mid = whiskerSlot.center().x;\n                point.whiskerPoints = [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n                point.medianPoints = [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n                point.box = whiskerSlot.clone().wrap(boxSlot);\n                point.reflowNote();\n            },\n            renderOutliers: function (options) {\n                var point = this, markers = options.markers || {}, value = point.value, outliers = value.outliers || [], outerFence = math.abs(value.q3 - value.q1) * 3, markersBorder, shape, outlierValue, i;\n                var elements = [];\n                for (i = 0; i < outliers.length; i++) {\n                    outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(point.color)) {\n                            markersBorder.color = point.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BAR_BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var centerX = this.box.center().x;\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue).move(centerX);\n                    this.box = this.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.line);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.getBorderColor.call(this);\n            }\n        });\n        deepExtend(BoxPlot.fn, PointEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                var segment = this;\n                segment.value = value;\n                segment.sector = sector;\n                ChartElement.fn.init.call(segment, options);\n            },\n            options: {\n                color: WHITE,\n                overlay: { gradient: ROUNDED_BEVEL },\n                border: { width: 0.5 },\n                labels: {\n                    visible: false,\n                    distance: 35,\n                    font: DEFAULT_FONT,\n                    margin: getSpacing(0.5),\n                    align: CIRCLE,\n                    zIndex: 1,\n                    position: OUTSIDE_END\n                },\n                animation: { type: PIE },\n                highlight: {\n                    visible: true,\n                    border: { width: 1 }\n                },\n                visible: true\n            },\n            render: function () {\n                var segment = this, options = segment.options, labels = options.labels, labelText = segment.value, labelTemplate;\n                if (segment._rendered || segment.visible === false) {\n                    return;\n                } else {\n                    segment._rendered = true;\n                }\n                if (labels.template) {\n                    labelTemplate = template(labels.template);\n                    labelText = labelTemplate({\n                        dataItem: segment.dataItem,\n                        category: segment.category,\n                        value: segment.value,\n                        series: segment.series,\n                        percentage: segment.percentage\n                    });\n                } else if (labels.format) {\n                    labelText = autoFormat(labels.format, labelText);\n                }\n                if (labels.visible && labelText) {\n                    segment.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: segment.animationDelay\n                        }\n                    }));\n                    segment.append(segment.label);\n                }\n            },\n            reflow: function (targetBox) {\n                var segment = this;\n                segment.render();\n                segment.box = targetBox;\n                segment.reflowLabel();\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, labelsDistance = labelsOptions.distance, angle = sector.middle(), lp, x1, labelWidth, labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    labelWidth = label.box.width();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r = math.abs((sector.r - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position == INSIDE_END) {\n                        sector.r = sector.r - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.c.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(Box2D(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var segment = this, sector = segment.sector, options = segment.options;\n                ChartElement.fn.createVisual.call(this);\n                if (segment.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: segment.category,\n                            dataItem: segment.dataItem,\n                            value: segment.value,\n                            series: segment.series,\n                            percentage: segment.percentage,\n                            center: new geom.Point(sector.c.x, sector.c.y),\n                            radius: sector.r,\n                            innerRadius: sector.ir,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            createVisual: function () {\n                                var group = new draw.Group();\n                                segment.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            segment.visual.append(visual);\n                        }\n                    } else {\n                        segment.createSegmentVisual(segment.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var segment = this, sector = segment.sector, options = segment.options, borderOptions = options.border || {}, border = borderOptions.width > 0 ? {\n                        stroke: {\n                            color: borderOptions.color,\n                            width: borderOptions.width,\n                            opacity: borderOptions.opacity,\n                            dashType: borderOptions.dashType\n                        }\n                    } : {}, color = options.color, fill = {\n                        color: color,\n                        opacity: options.opacity\n                    }, visual;\n                visual = segment.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.c.x,\n                            sector.c.y\n                        ],\n                        innerRadius: sector.ir,\n                        radius: sector.r,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new draw.Circle(new geom.Circle(new geom.Point(sector.c.x, sector.c.y), sector.r), options);\n                } else {\n                    return ShapeBuilder.current.createRing(sector, options);\n                }\n            },\n            createAnimation: function () {\n                var options = this.options;\n                var center = this.sector.c;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var segment = this, highlight = segment.options.highlight || {}, border = highlight.border || {};\n                return segment.createSegment(segment.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.r,\n                    innerRadius: sector.ir,\n                    center: new geom.Point(sector.c.x, sector.c.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function (width, height) {\n                var point = this, box = point.sector.adjacentBox(TOOLTIP_OFFSET, width, height);\n                return new Point2D(box.x1, box.y1);\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        deepExtend(PieSegment.fn, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var chart = this, legendOptions = chart.options.legend || {}, labelsOptions = legendOptions.labels || {}, inactiveItems = legendOptions.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, text, labelTemplate, markerColor, itemLabelOptions, pointVisible;\n                if (options && options.visibleInLegend !== false) {\n                    pointVisible = options.visible !== false;\n                    text = options.category || '';\n                    labelTemplate = pointVisible ? labelsOptions.template : inactiveItemsLabels.template || labelsOptions.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (text) {\n                        chart.legendItems.push({\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                var chart = this;\n                ChartElement.fn.init.call(chart, options);\n                chart.plotArea = plotArea;\n                chart.points = [];\n                chart.legendItems = [];\n                chart.render();\n            },\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                },\n                inactiveItems: {\n                    markers: {},\n                    labels: {}\n                }\n            },\n            render: function () {\n                var chart = this;\n                chart.traverseDataPoints(proxy(chart.addValue, chart));\n            },\n            traverseDataPoints: function (callback) {\n                var chart = this, options = chart.options, colors = chart.plotArea.options.seriesColors || [], colorsCount = colors.length, series = options.series, seriesCount = series.length, currentSeries, pointData, fields, seriesIx, angle, data, anglePerValue, value, plotValue, explode, total, currentAngle, i, pointIx = 0;\n                for (seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    data = currentSeries.data;\n                    total = seriesTotal(currentSeries);\n                    anglePerValue = 360 / total;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx != seriesCount - 1) {\n                        if (currentSeries.labels.position == OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (i = 0; i < data.length; i++) {\n                        pointData = SeriesBinder.current.bindPoint(currentSeries, i);\n                        value = pointData.valueFields.value;\n                        plotValue = math.abs(value);\n                        fields = pointData.fields;\n                        angle = plotValue * anglePerValue;\n                        explode = data.length != 1 && !!fields.explode;\n                        if (!isFn(currentSeries.color)) {\n                            currentSeries.color = fields.color || colors[i % colorsCount];\n                        }\n                        callback(value, new Ring(null, 0, 0, currentAngle, angle), {\n                            owner: chart,\n                            category: fields.category || '',\n                            index: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? plotValue / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: fields.visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: chart.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (pointData.fields.visible !== false) {\n                            currentAngle += angle;\n                        }\n                        pointIx++;\n                    }\n                    pointIx = 0;\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                segment = new PieSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), newBox = Box2D(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth), newBoxCenter = newBox.center(), seriesConfigs = chart.seriesConfigs || [], boxCenter = box.center(), points = chart.points, count = points.length, seriesCount = options.series.length, leftSideLabels = [], rightSideLabels = [], seriesConfig, seriesIndex, label, segment, sector, r, i, c;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                r = halfMinWidth - padding;\n                c = Point2D(r + newBox.x1 + padding, r + newBox.y1 + padding);\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    sector.r = r;\n                    sector.c = c;\n                    seriesIndex = segment.seriesIx;\n                    if (seriesConfigs.length) {\n                        seriesConfig = seriesConfigs[seriesIndex];\n                        sector.ir = seriesConfig.ir;\n                        sector.r = seriesConfig.r;\n                    }\n                    if (seriesIndex == seriesCount - 1 && segment.explode) {\n                        sector.c = sector.clone().radius(sector.r * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex == seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(chart.labelComparator(true));\n                    chart.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(chart.labelComparator(false));\n                    chart.rightLabelsReflow(rightSideLabels);\n                }\n                chart.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var chart = this, distances = chart.distanceBetweenLabels(labels);\n                chart.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, firstBox = labels[0].box, count = labels.length - 1, lr = sector.r + segment.options.labels.distance, distances = [], secondBox, distance, i;\n                distance = round(firstBox.y1 - (sector.c.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (i = 0; i < count; i++) {\n                    firstBox = labels[i].box;\n                    secondBox = labels[i + 1].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.c.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var chart = this, count = distances.length, remaining, left, right, i;\n                for (i = 0; i < count; i++) {\n                    left = right = i;\n                    remaining = -distances[i];\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = chart._takeDistance(distances, i, --left, remaining);\n                        remaining = chart._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                chart.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                if (distances[position] > 0) {\n                    var available = math.min(distances[position], amount);\n                    amount -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return amount;\n            },\n            reflowLabels: function (distances, labels) {\n                var chart = this, points = chart.points, segment = points[points.length - 1], sector = segment.sector, labelsCount = labels.length, labelOptions = segment.options.labels, labelDistance = labelOptions.distance, boxY = sector.c.y - (sector.r + labelDistance) - labels[0].box.height(), label, boxX, box, i;\n                distances[0] += 2;\n                for (i = 0; i < labelsCount; i++) {\n                    label = labels[i];\n                    boxY += distances[i];\n                    box = label.box;\n                    boxX = chart.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation == RIGHT);\n                    if (label.orientation == RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.r + sector.c.x + labelDistance;\n                        }\n                        label.reflow(Box2D(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.c.x - sector.r - labelDistance;\n                        }\n                        label.reflow(Box2D(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var chart = this, options = chart.options, connectors = options.connectors, points = chart.points, connectorLine, count = points.length, space = 4, sector, angle, segment, seriesIx, label, i;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (i = 0; i < count; i++) {\n                    segment = points[i];\n                    sector = segment.sector;\n                    angle = sector.middle();\n                    label = segment.label;\n                    seriesIx = { seriesId: segment.seriesIx };\n                    if (label) {\n                        connectorLine = new draw.Path({\n                            stroke: {\n                                color: connectors.color,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END && segment.value !== 0) {\n                            var box = label.box, centerPoint = sector.c, start = sector.point(angle), middle = Point2D(box.x1, box.center().y), sr, end, crossing;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation == RIGHT) {\n                                end = Point2D(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.min(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x < sector.c.x) {\n                                    sr = sector.c.x + sector.r + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = Point2D(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = Point2D(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = math.max(crossing.x, middle.x);\n                                if (chart.pointInCircle(crossing, sector.c, sector.r + space) || crossing.x > sector.c.x) {\n                                    sr = sector.c.x - sector.r - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this._connectorLines.push(connectorLine);\n                            this.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                reverse = reverse ? -1 : 1;\n                return function (a, b) {\n                    a = (a.parent.sector.middle() + 270) % 360;\n                    b = (b.parent.sector.middle() + 270) % 360;\n                    return (a - b) * reverse;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var cx = sector.c.x, cy = sector.c.y, r = sector.r, t = math.min(math.abs(cy - y1), math.abs(cy - y2));\n                if (t > r) {\n                    return originalX;\n                } else {\n                    return cx + math.sqrt(r * r - t * t) * (direction ? 1 : -1);\n                }\n            },\n            pointInCircle: function (point, c, r) {\n                return sqr(c.x - point.x) + sqr(c.y - point.y) < sqr(r);\n            },\n            formatPointValue: function (point, format) {\n                return autoFormat(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            }\n        });\n        deepExtend(PieChart.fn, PieChartMixin);\n        var DonutSegment = PieSegment.extend({\n            options: {\n                overlay: { gradient: ROUNDED_GLASS },\n                labels: { position: CENTER },\n                animation: { type: PIE }\n            },\n            reflowLabel: function () {\n                var segment = this, sector = segment.sector.clone(), options = segment.options, label = segment.label, labelsOptions = options.labels, lp, angle = sector.middle(), labelHeight;\n                if (label) {\n                    labelHeight = label.box.height();\n                    if (labelsOptions.position == CENTER) {\n                        sector.r -= (sector.r - sector.ir) / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box2D(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(segment);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        deepExtend(DonutSegment.fn, PointEventsMixin);\n        var DonutChart = PieChart.extend({\n            options: {\n                startAngle: 90,\n                connectors: {\n                    width: 1,\n                    color: '#939393',\n                    padding: 4\n                }\n            },\n            addValue: function (value, sector, fields) {\n                var chart = this, segment;\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                chart.evalSegmentOptions(segmentOptions, value, fields);\n                chart.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                segment = new DonutSegment(value, sector, segmentOptions);\n                extend(segment, fields);\n                chart.append(segment);\n                chart.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var chart = this, options = chart.options, box = targetBox.clone(), space = 5, minWidth = math.min(box.width(), box.height()), halfMinWidth = minWidth / 2, defaultPadding = minWidth - minWidth * 0.85, padding = valueOrDefault(options.padding, defaultPadding), series = options.series, currentSeries, seriesCount = series.length, seriesWithoutSize = 0, holeSize, totalSize, size, margin = 0, i, r, ir = 0, currentSize = 0;\n                chart.seriesConfigs = [];\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                totalSize = halfMinWidth - padding;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i != seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                ir = holeSize;\n                for (i = 0; i < seriesCount; i++) {\n                    currentSeries = series[i];\n                    size = valueOrDefault(currentSeries.size, totalSize / seriesWithoutSize);\n                    ir += margin;\n                    r = ir + size;\n                    chart.seriesConfigs.push({\n                        ir: ir,\n                        r: r\n                    });\n                    margin = currentSeries.margin || 0;\n                    ir = r;\n                }\n                PieChart.fn.reflow.call(chart, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var series = this.options.series;\n                var categories = this.categoryAxis.options.categories || [];\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: categories[categoryIx],\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                var segment = this;\n                ChartElement.fn.init.call(segment);\n                segment.from = from;\n                segment.to = to;\n                segment.series = series;\n            },\n            options: {\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            linePoints: function () {\n                var points = [];\n                var from = this.from;\n                var fromBox = from.box;\n                var toBox = this.to.box;\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = draw.Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        function returnSelf() {\n            return this;\n        }\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                var pane = this;\n                BoxElement.fn.init.call(pane, options);\n                options = pane.options;\n                pane.id = kendo.guid();\n                pane.createTitle();\n                pane.content = new ChartElement();\n                pane.chartContainer = new ChartContainer({}, pane);\n                pane.append(pane.content);\n                pane.axes = [];\n                pane.charts = [];\n            },\n            options: {\n                zIndex: -1,\n                shrinkToFit: true,\n                title: { align: LEFT },\n                visible: true\n            },\n            createTitle: function () {\n                var pane = this;\n                var titleOptions = pane.options.title;\n                if (typeof titleOptions === OBJECT) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                pane.title = Title.buildTitle(titleOptions, pane, Pane.fn.options.title);\n            },\n            appendAxis: function (axis) {\n                var pane = this;\n                pane.content.append(axis);\n                pane.axes.push(axis);\n                axis.pane = pane;\n            },\n            appendChart: function (chart) {\n                var pane = this;\n                if (pane.chartContainer.parent !== pane.content) {\n                    pane.content.append(pane.chartContainer);\n                }\n                pane.charts.push(chart);\n                pane.chartContainer.append(chart);\n                chart.pane = pane;\n            },\n            empty: function () {\n                var pane = this, plotArea = pane.parent, i;\n                if (plotArea) {\n                    for (i = 0; i < pane.axes.length; i++) {\n                        plotArea.removeAxis(pane.axes[i]);\n                    }\n                    for (i = 0; i < pane.charts.length; i++) {\n                        plotArea.removeChart(pane.charts[i]);\n                    }\n                }\n                pane.axes = [];\n                pane.charts = [];\n                pane.content.destroy();\n                pane.content.children = [];\n                pane.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var pane = this;\n                var content;\n                if (last(pane.children) === pane.content) {\n                    content = pane.children.pop();\n                }\n                BoxElement.fn.reflow.call(pane, targetBox);\n                if (content) {\n                    pane.children.push(content);\n                }\n                if (pane.title) {\n                    pane.contentBox.y1 += pane.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: returnSelf,\n            clipRoot: returnSelf,\n            createGridLines: function () {\n                var pane = this, axes = pane.axes, allAxes = axes.concat(pane.parent.axes), vGridLines = [], hGridLines = [], gridLines, i, j, axis, vertical, altAxis;\n                for (i = 0; i < axes.length; i++) {\n                    axis = axes[i];\n                    vertical = axis.options.vertical;\n                    gridLines = vertical ? vGridLines : hGridLines;\n                    for (j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = $.proxy(this.createGradient, this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                var container = this;\n                ChartElement.fn.init.call(container, options);\n                container.pane = pane;\n            },\n            shouldClip: function () {\n                var container = this, children = container.children, length = children.length, i;\n                for (i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                var container = this, pane = container.pane, axes = pane.axes, length = axes.length, clipBox = pane.box.clone(), axisValueField, idx, lineBox, axis;\n                for (idx = 0; idx < length; idx++) {\n                    axis = axes[idx];\n                    axisValueField = axis.options.vertical ? Y : X;\n                    lineBox = axis.lineBox();\n                    clipBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    clipBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                return clipBox;\n            },\n            createVisual: function () {\n                this.visual = new draw.Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = draw.Path.fromRect(clipRect);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: returnSelf,\n            unclipLabels: function () {\n                var container = this, charts = container.children, clipBox = container.clipBox, points, point, i, j, length;\n                for (i = 0; i < charts.length; i++) {\n                    points = charts[i].points || {};\n                    length = points.length;\n                    for (j = 0; j < length; j++) {\n                        point = points[j];\n                        if (point && point.label && point.label.options.visible) {\n                            if (point.overlapsBox(clipBox)) {\n                                if (point.label.alignToClipBox) {\n                                    point.label.alignToClipBox(clipBox);\n                                }\n                                point.label.options.noclip = true;\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                ChartElement.fn.init.call(plotArea, options);\n                plotArea.series = series;\n                plotArea.initSeries();\n                plotArea.charts = [];\n                plotArea.options.legend.items = [];\n                plotArea.axes = [];\n                plotArea.crosshairs = [];\n                plotArea.createPanes();\n                plotArea.render();\n                plotArea.createCrosshairs();\n            },\n            options: {\n                series: [],\n                plotArea: { margin: {} },\n                background: '',\n                border: {\n                    color: BLACK,\n                    width: 0\n                },\n                legend: {\n                    inactiveItems: {\n                        labels: { color: '#919191' },\n                        markers: { color: '#919191' }\n                    }\n                }\n            },\n            initSeries: function () {\n                var series = this.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    currentSeries.index = i;\n                }\n            },\n            createPanes: function () {\n                var plotArea = this, panes = [], paneOptions = plotArea.options.panes || [], i, panesLength = math.max(paneOptions.length, 1), currentPane;\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = new Pane(paneOptions[i]);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    plotArea.append(currentPane);\n                }\n                plotArea.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var plotArea = this, i, j, pane, axis, currentCrosshair;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    for (j = 0; j < pane.axes.length; j++) {\n                        axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            currentCrosshair = new Crosshair(axis, axis.options.crosshair);\n                            plotArea.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var plotArea = this, crosshairs = plotArea.crosshairs, axes = pane.axes, i, j;\n                for (i = crosshairs.length - 1; i >= 0; i--) {\n                    for (j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, i, matchingPane;\n                for (i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var plotArea = this, pane = plotArea.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                plotArea.axes.push(axis);\n                axis.plotArea = plotArea;\n            },\n            removeAxis: function (axisToRemove) {\n                var plotArea = this, i, axis, filteredAxes = [];\n                for (i = 0; i < plotArea.axes.length; i++) {\n                    axis = plotArea.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                plotArea.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    plotArea.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var plotArea = this, i, chart, filteredCharts = [];\n                for (i = 0; i < plotArea.charts.length; i++) {\n                    chart = plotArea.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                plotArea.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length, data = [], i, currentSeries, text, legend = this.options.legend, labels = legend.labels || {}, inactiveItems = legend.inactiveItems || {}, inactiveItemsLabels = inactiveItems.labels || {}, color, itemLabelOptions, markerColor, defaults, seriesVisible, labelTemplate;\n                for (i = 0; i < count; i++) {\n                    currentSeries = series[i];\n                    seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    text = currentSeries.name || '';\n                    labelTemplate = seriesVisible ? labels.template : inactiveItemsLabels.template || labels.template;\n                    if (labelTemplate) {\n                        text = template(labelTemplate)({\n                            text: text,\n                            series: currentSeries\n                        });\n                    }\n                    color = currentSeries.color;\n                    defaults = currentSeries._defaults;\n                    if (isFn(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (text) {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [], yAxes = [], paneAxes, axis, paneIx, axisIx;\n                for (paneIx = 0; paneIx < panes.length; paneIx++) {\n                    paneAxes = panes[paneIx].axes;\n                    for (axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var plotArea = this, series = plotArea.series, seriesByPane = {}, i, pane, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    pane = plotArea.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var i, currentSeries, result = [];\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var plotArea = this, options = plotArea.options.plotArea, panes = plotArea.panes, margin = getSpacing(options.margin);\n                plotArea.box = targetBox.clone().unpad(margin);\n                plotArea.reflowPanes();\n                plotArea.reflowAxes(panes);\n                plotArea.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var plotArea = this, i;\n                panes = [].concat(panes);\n                this.initSeries();\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.removeCrosshairs(panes[i]);\n                    panes[i].empty();\n                }\n                plotArea.render(panes);\n                plotArea.reflowAxes(plotArea.panes);\n                plotArea.reflowCharts(panes);\n                plotArea.createCrosshairs(panes);\n                for (i = 0; i < panes.length; i++) {\n                    panes[i].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options, crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue), valuesToAdd = crossingAxes.length - crossingValues.length, defaultValue = crossingValues[0] || 0, i;\n                for (i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true), slotEdge = axis.options.reverse ? 2 : 1, targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true), targetEdge = targetAxis.options.reverse ? 2 : 1, axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var plotArea = this, xAnchor = xAxes[0], yAnchor = yAxes[0], xAnchorCrossings = plotArea.axisCrossingValues(xAnchor, yAxes), yAnchorCrossings = plotArea.axisCrossingValues(yAnchor, xAxes), leftAnchors = {}, rightAnchors = {}, topAnchors = {}, bottomAnchors = {}, pane, paneId, axis, i;\n                for (i = 0; i < yAxes.length; i++) {\n                    axis = yAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    plotArea.alignAxisTo(axis, xAnchor, yAnchorCrossings[i], xAnchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(xAnchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        leftAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().x2) === round(xAnchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, xAnchor, yAnchorCrossings[i], xAnchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        rightAnchors[paneId] = axis;\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (i = 0; i < xAxes.length; i++) {\n                    axis = xAxes[i];\n                    pane = axis.pane;\n                    paneId = pane.id;\n                    plotArea.alignAxisTo(axis, yAnchor, xAnchorCrossings[i], yAnchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().y1) === round(yAnchor.lineBox().y1)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        plotArea.alignAxisTo(axis, yAnchor, xAnchorCrossings[i], yAnchorCrossings[i]);\n                        if (topAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(topAnchors[paneId].box, TOP).translate(0, -axis.options.margin));\n                        }\n                        topAnchors[paneId] = axis;\n                    }\n                    if (round(axis.lineBox().y2, COORD_PRECISION) === round(yAnchor.lineBox().y2, COORD_PRECISION)) {\n                        if (bottomAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(bottomAnchors[paneId].box, BOTTOM).translate(0, axis.options.margin));\n                        }\n                        bottomAnchors[paneId] = axis;\n                    }\n                    if (i !== 0) {\n                        axis.alignTo(xAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, axisBox = axisGroupBox(axes), overflowX = 0, i, currentPane, currentAxis;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (i = 0; i < axes.length; i++) {\n                        currentAxis = axes[i];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var i, currentPane, axes, overflowY, j, currentAxis, shrinked;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    axes = currentPane.axes;\n                    overflowY = math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (j = 0; j < axes.length; j++) {\n                            currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var plotArea = this, axes = plotArea.groupAxes(panes).any, offsetX = 0, paneAxes, paneBox, axisBox, offsetY, currentPane, currentAxis, i, j;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    paneAxes = currentPane.axes;\n                    paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        axisBox = axisGroupBox(paneAxes);\n                        offsetX = math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        offsetY = math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        for (j = 0; j < paneAxes.length; j++) {\n                            currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (i = 0; i < axes.length; i++) {\n                    currentAxis = axes[i];\n                    currentAxis.reflow(currentAxis.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var plotArea = this, i, axes = plotArea.groupAxes(panes);\n                for (i = 0; i < panes.length; i++) {\n                    plotArea.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    plotArea.alignAxes(axes.x, axes.y);\n                    plotArea.shrinkAxisWidth(panes);\n                    plotArea.autoRotateAxisLabels(axes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisWidth(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.shrinkAxisHeight(panes);\n                    plotArea.alignAxes(axes.x, axes.y);\n                    if (plotArea.shrinkAxisHeight(panes)) {\n                        plotArea.alignAxes(axes.x, axes.y);\n                    }\n                    plotArea.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var axes = this.axes;\n                var panes = this.panes;\n                var axis, idx, rotated;\n                for (idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (idx = 0; idx < panes.length; idx++) {\n                        this.reflowPaneAxes(panes[idx]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes, i, length = axes.length;\n                if (length > 0) {\n                    for (i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var plotArea = this, charts = plotArea.charts, count = charts.length, box = plotArea.box, chartPane, i;\n                for (i = 0; i < count; i++) {\n                    chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var plotArea = this, box = plotArea.box, panes = plotArea.panes, panesLength = panes.length, i, currentPane, paneBox, remainingHeight = box.height(), remainingPanes = panesLength, autoHeightPanes = 0, top = box.y1, height, percents;\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    if (!currentPane.options.height) {\n                        currentPane.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (i = 0; i < panesLength; i++) {\n                    currentPane = panes[i];\n                    paneBox = box.clone().move(box.x1, top);\n                    currentPane.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var plotArea = this, axes = plotArea.axes, axesCount = axes.length, lineBox, box, i, j, axisA, axisB;\n                for (i = 0; i < axesCount; i++) {\n                    axisA = axes[i];\n                    for (j = 0; j < axesCount; j++) {\n                        axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || plotArea.box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var bgBox = this.backgroundBox();\n                var options = this.options.plotArea;\n                var border = options.border || {};\n                var background = options.background;\n                var opacity = options.opacity;\n                if (util.isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = draw.Path.fromRect(bgBox.toRect(), {\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts, result = [], i, j, points, point, chart;\n                if (categoryIndex !== null) {\n                    for (i = 0; i < charts.length; i++) {\n                        chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (j = 0; j < points.length; j++) {\n                                point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && point.options.index === seriesIndex) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesName: function (name) {\n                var charts = this.charts, result = [], points, point, i, j, chart;\n                for (i = 0; i < charts.length; i++) {\n                    chart = charts[i];\n                    points = chart.points;\n                    for (j = 0; j < points.length; j++) {\n                        point = points[j];\n                        if (point && point.series.name === name) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            paneByPoint: function (point) {\n                var plotArea = this, panes = plotArea.panes, pane, i;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            }\n        });\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedCategoryAxes = {};\n                plotArea.namedValueAxes = {};\n                plotArea.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    plotArea.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            plotArea.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                categoryAxis: { categories: [] },\n                valueAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this;\n                panes = panes || plotArea.panes;\n                plotArea.createCategoryAxes(panes);\n                plotArea.aggregateCategories(panes);\n                plotArea.createCategoryAxesLabels(panes);\n                plotArea.createCharts(panes);\n                plotArea.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete plotArea.namedCategoryAxes[axisName];\n                } else {\n                    plotArea.valueAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedValueAxes[axisName];\n                }\n                if (axis === plotArea.categoryAxis) {\n                    delete plotArea.categoryAxis;\n                }\n                if (axis === plotArea.valueAxis) {\n                    delete plotArea.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this.addToLegend(paneSeries);\n                    var visibleSeries = this.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, BOX_PLOT), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var plotArea = this, series = plotArea.srcSeries || plotArea.series, processedSeries = [], i, currentSeries, categoryAxis, axisPane, dateAxis;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    categoryAxis = plotArea.seriesCategoryAxis(currentSeries);\n                    axisPane = plotArea.findPane(categoryAxis.options.pane);\n                    dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = plotArea.aggregateSeries(currentSeries, categoryAxis);\n                    } else if (isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max)) {\n                        currentSeries = plotArea.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                plotArea.srcSeries = series;\n                plotArea.series = processedSeries;\n            },\n            filterSeries: function (currentSeries, categoryAxis) {\n                var range = categoryAxis.totalRangeIndices();\n                var justified = categoryAxis.options.justified;\n                var outOfRangePoints = inArray(currentSeries.type, [\n                    LINE,\n                    VERTICAL_LINE,\n                    AREA,\n                    VERTICAL_AREA\n                ]);\n                var categoryIx;\n                range.min = isNumber(categoryAxis.options.min) ? math.floor(range.min) : 0;\n                range.max = isNumber(categoryAxis.options.max) ? justified ? math.floor(range.max) + 1 : math.ceil(range.max) : currentSeries.data.length;\n                currentSeries = deepExtend({}, currentSeries);\n                if (outOfRangePoints) {\n                    if (range.min - 1 >= 0) {\n                        categoryIx = range.min - 1;\n                        currentSeries._outOfRangeMinPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: categoryAxis.options.srcCategories[categoryIx],\n                            categoryIx: -1\n                        };\n                    }\n                    if (range.max < currentSeries.data.length) {\n                        categoryIx = range.max;\n                        currentSeries._outOfRangeMaxPoint = {\n                            item: currentSeries.data[categoryIx],\n                            category: categoryAxis.options.srcCategories[categoryIx],\n                            categoryIx: range.max - range.min\n                        };\n                    }\n                }\n                categoryAxis._seriesMax = math.max(categoryAxis._seriesMax || 0, currentSeries.data.length);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max);\n                return currentSeries;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var axisOptions = categoryAxis.options, dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE), categories = axisOptions.categories, srcCategories = axisOptions.srcCategories || categories, srcData = series.data, srcPoints = [], result = deepExtend({}, series), aggregatorSeries = deepExtend({}, series), dataItems = axisOptions.dataItems || [], i, category, categoryIx, data, aggregator, getFn = getField, outOfRangeMinIdx = util.MIN_NUM, outOfRangeMinCategory, outOfRangeMaxCategory, outOfRangeMaxIdx = util.MAX_NUM, outOfRangePoints = inArray(series.type, [\n                        LINE,\n                        VERTICAL_LINE,\n                        AREA,\n                        VERTICAL_AREA\n                    ]);\n                result.data = data = [];\n                if (dateAxis) {\n                    getFn = getDateField;\n                }\n                for (i = 0; i < srcData.length; i++) {\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[i]);\n                    } else {\n                        category = srcCategories[i];\n                    }\n                    if (defined(category)) {\n                        categoryIx = categoryAxis.categoryIndex(category);\n                        if (0 <= categoryIx && categoryIx < categories.length) {\n                            srcPoints[categoryIx] = srcPoints[categoryIx] || [];\n                            srcPoints[categoryIx].push(i);\n                        } else if (outOfRangePoints) {\n                            if (categoryIx < 0) {\n                                if (categoryIx == outOfRangeMinIdx) {\n                                    outOfRangeMinCategory.points.push(i);\n                                } else if (categoryIx > outOfRangeMinIdx) {\n                                    outOfRangeMinIdx = categoryIx;\n                                    outOfRangeMinCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            } else if (categoryIx >= categories.length) {\n                                if (categoryIx == outOfRangeMaxIdx) {\n                                    outOfRangeMaxCategory.points.push(i);\n                                } else if (categoryIx < outOfRangeMaxIdx) {\n                                    outOfRangeMaxIdx = categoryIx;\n                                    outOfRangeMaxCategory = {\n                                        category: category,\n                                        points: [i]\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n                aggregator = new SeriesAggregator(aggregatorSeries, SeriesBinder.current, DefaultAggregates.current);\n                for (i = 0; i < categories.length; i++) {\n                    data[i] = aggregator.aggregatePoints(srcPoints[i], categories[i]);\n                    if (srcPoints[i]) {\n                        dataItems[i] = data[i];\n                    }\n                }\n                if (outOfRangeMinCategory && data.length) {\n                    result._outOfRangeMinPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMinCategory.points, outOfRangeMinCategory.category),\n                        categoryIx: outOfRangeMinIdx,\n                        category: outOfRangeMinCategory.category\n                    };\n                }\n                if (outOfRangeMaxCategory && data.length) {\n                    result._outOfRangeMaxPoint = {\n                        item: aggregator.aggregatePoints(outOfRangeMaxCategory.points, outOfRangeMaxCategory.category),\n                        categoryIx: outOfRangeMaxIdx,\n                        category: outOfRangeMaxCategory.category\n                    };\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this, series = chart.options.series, categoryAxis = plotArea.seriesCategoryAxis(series[0]), categories = categoryAxis.options.categories, categoriesToAdd = math.max(0, categoriesCount(series) - categories.length);\n                while (categoriesToAdd--) {\n                    categories.push('');\n                }\n                plotArea.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, axisName = series.axis, axisOptions = [].concat(options.valueAxis), axis = $.grep(axisOptions, function (a) {\n                        return a.name === axisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = (panes[0] || {}).name || 'default', paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var plotArea = this, axisName = series.categoryAxis, axis = axisName ? plotArea.namedCategoryAxes[axisName] : plotArea.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack, isStacked100 = stack && stack.type === '100%', clip;\n                if (defined(pane.options.clip)) {\n                    clip = pane.options.clip;\n                } else if (isStacked100) {\n                    clip = false;\n                }\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var unique = {};\n                var categoryAxes = $.map(series, function (s) {\n                    var name = s.categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        return name;\n                    }\n                });\n                function groupSeries(axis, axisIx) {\n                    return $.grep(series, function (s) {\n                        return axisIx === 0 && !s.categoryAxis || s.categoryAxis == axis;\n                    });\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], barChart = new BarChart(plotArea, extend({\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], rangeColumnChart = new RangeBarChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], bulletChart = new BulletChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], lineChart = new LineChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], areaChart = new AreaChart(plotArea, extend({\n                        invertAxes: plotArea.invertAxes,\n                        series: series\n                    }, plotArea.stackableChartOptions(firstSeries, pane)));\n                plotArea.appendChart(areaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new OHLCChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new CandlestickChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], chart = new BoxPlotChart(plotArea, {\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        series: series,\n                        spacing: firstSeries.spacing,\n                        clip: pane.options.clip\n                    });\n                plotArea.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var plotArea = this, firstSeries = series[0], waterfallChart = new WaterfallChart(plotArea, {\n                        series: series,\n                        invertAxes: plotArea.invertAxes,\n                        gap: firstSeries.gap,\n                        spacing: firstSeries.spacing\n                    });\n                plotArea.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, centeredSeries = filterSeriesByType(plotArea.series, EQUALLY_SPACED_SERIES), seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < plotArea.series.length; seriesIx++) {\n                    var currentSeries = plotArea.series[seriesIx];\n                    if (currentSeries.type === LINE || currentSeries.type === AREA) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (seriesIx = 0; seriesIx < centeredSeries.length; seriesIx++) {\n                    seriesAxis = centeredSeries[seriesIx].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var plotArea = this, series = plotArea.series, seriesIx, seriesAxis;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var plotArea = this, invertAxes = plotArea.invertAxes, definitions = [].concat(plotArea.options.categoryAxis), i, axisOptions, axisPane, categories, type, name, categoryAxis, axes = [], primaryAxis;\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        categories = axisOptions.categories || [];\n                        type = axisOptions.type || '';\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0,\n                            _deferLabels: true\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = plotArea.isJustified();\n                        }\n                        if (plotArea.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new DateCategoryAxis(axisOptions);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions);\n                        }\n                        if (name) {\n                            if (plotArea.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        plotArea.appendAxis(categoryAxis);\n                    }\n                }\n                primaryAxis = plotArea.categoryAxis || axes[0];\n                plotArea.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisY = primaryAxis;\n                } else {\n                    plotArea.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var plotArea = this, series = plotArea.series, i, currentSeries;\n                for (i = 0; i < series.length; i++) {\n                    currentSeries = series[i];\n                    if (!inArray(currentSeries.type, [\n                            AREA,\n                            VERTICAL_AREA\n                        ])) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var plotArea = this, tracker = plotArea.valueAxisRangeTracker, defaultRange = tracker.query(), definitions = [].concat(plotArea.options.valueAxis), invertAxes = plotArea.invertAxes, baseOptions = { vertical: !invertAxes }, axisOptions, axisPane, valueAxis, primaryAxis, axes = [], range, axisType, defaultAxisRange, name, i;\n                if (plotArea.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (i = 0; i < definitions.length; i++) {\n                    axisOptions = definitions[i];\n                    axisPane = plotArea.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        name = axisOptions.name;\n                        defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = math.min(range.min, defaultRange.min);\n                            range.max = math.max(range.max, defaultRange.max);\n                        }\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = LogarithmicAxis;\n                        } else {\n                            axisType = NumericAxis;\n                        }\n                        valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions));\n                        if (name) {\n                            if (plotArea.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            plotArea.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        plotArea.appendAxis(valueAxis);\n                    }\n                }\n                primaryAxis = plotArea.valueAxis || axes[0];\n                plotArea.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    plotArea.axisX = primaryAxis;\n                } else {\n                    plotArea.axisY = primaryAxis;\n                }\n            },\n            click: function (chart, e) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), pane = plotArea.pointPane(point), allAxes, i, axis, categories = [], values = [];\n                if (!pane) {\n                    return;\n                }\n                allAxes = pane.axes;\n                for (i = 0; i < allAxes.length; i++) {\n                    axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, plotArea.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(PLOT_AREA_CLICK, {\n                        element: $(e.target),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var plotArea = this, panes = plotArea.panes, currentPane, i;\n                for (i = 0; i < panes.length; i++) {\n                    currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var axesOptions = axis instanceof CategoryAxis ? [].concat(this.options.categoryAxis) : [].concat(this.options.valueAxis);\n                deepExtend(axesOptions[axis.axisIndex], options);\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                var tracker = this;\n                tracker.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var tracker = this, axisRanges = tracker.axisRanges, range, chartRange, axisName;\n                for (axisName in chartAxisRanges) {\n                    range = axisRanges[axisName];\n                    chartRange = chartAxisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = math.min(range.min, chartRange.min);\n                    range.max = math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var XYPlotArea = PlotAreaBase.extend({\n            init: function (series, options) {\n                var plotArea = this;\n                plotArea.namedXAxes = {};\n                plotArea.namedYAxes = {};\n                plotArea.xAxisRangeTracker = new AxisGroupRangeTracker();\n                plotArea.yAxisRangeTracker = new AxisGroupRangeTracker();\n                PlotAreaBase.fn.init.call(plotArea, series, options);\n            },\n            options: {\n                xAxis: {},\n                yAxis: {}\n            },\n            render: function (panes) {\n                var plotArea = this, seriesByPane = plotArea.groupSeriesByPane(), i, pane, paneSeries, filteredSeries;\n                panes = panes || plotArea.panes;\n                for (i = 0; i < panes.length; i++) {\n                    pane = panes[i];\n                    paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    plotArea.addToLegend(paneSeries);\n                    filteredSeries = plotArea.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    plotArea.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    plotArea.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    plotArea.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                plotArea.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                var plotArea = this;\n                plotArea.xAxisRangeTracker.update(chart.xAxisRanges);\n                plotArea.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(plotArea, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var plotArea = this, axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(plotArea, axis);\n                if (axis.options.vertical) {\n                    plotArea.yAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedYAxes[axisName];\n                } else {\n                    plotArea.xAxisRangeTracker.reset(axisName);\n                    delete plotArea.namedXAxes[axisName];\n                }\n                if (axis === plotArea.axisX) {\n                    delete plotArea.axisX;\n                }\n                if (axis === plotArea.axisY) {\n                    delete plotArea.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var plotArea = this, options = plotArea.options, xAxisName = series.xAxis, xAxisOptions = [].concat(options.xAxis), xAxis = $.grep(xAxisOptions, function (a) {\n                        return a.name === xAxisName;\n                    })[0], yAxisName = series.yAxis, yAxisOptions = [].concat(options.yAxis), yAxis = $.grep(yAxisOptions, function (a) {\n                        return a.name === yAxisName;\n                    })[0], panes = options.panes || [{}], defaultPaneName = panes[0].name || 'default', paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new ScatterLineChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                var plotArea = this;\n                if (series.length > 0) {\n                    plotArea.appendChart(new BubbleChart(plotArea, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var plotArea = this, axisName = options.name, namedAxes = vertical ? plotArea.namedYAxes : plotArea.namedXAxes, tracker = vertical ? plotArea.yAxisRangeTracker : plotArea.xAxisRangeTracker, axisOptions = deepExtend({}, options, { vertical: vertical }), isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC), defaultRange = tracker.query(), defaultAxisRange = isLog ? {\n                        min: 0.1,\n                        max: 1\n                    } : {\n                        min: 0,\n                        max: 1\n                    }, range = tracker.query(axisName) || defaultRange || defaultAxisRange, axis, axisType, seriesIx, series = plotArea.series, currentSeries, seriesAxisName, firstPointValue, typeSamples = [\n                        axisOptions.min,\n                        axisOptions.max\n                    ], inferredDate, i;\n                for (seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName == axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = math.min(range.min, defaultRange.min);\n                    range.max = math.max(range.max, defaultRange.max);\n                }\n                for (i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = DateValueAxis;\n                } else if (isLog) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n                axis = new axisType(range.min, range.max, axisOptions);\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                plotArea.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var plotArea = this, options = plotArea.options, axisPane, xAxesOptions = [].concat(options.xAxis), xAxes = [], yAxesOptions = [].concat(options.yAxis), yAxes = [];\n                each(xAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(plotArea.createXYAxis(this, false, i));\n                    }\n                });\n                each(yAxesOptions, function (i) {\n                    axisPane = plotArea.findPane(this.pane);\n                    if (inArray(axisPane, panes)) {\n                        yAxes.push(plotArea.createXYAxis(this, true, i));\n                    }\n                });\n                plotArea.axisX = plotArea.axisX || xAxes[0];\n                plotArea.axisY = plotArea.axisY || yAxes[0];\n            },\n            click: function (chart, e) {\n                var plotArea = this, coords = chart._eventCoordinates(e), point = new Point2D(coords.x, coords.y), allAxes = plotArea.axes, i, length = allAxes.length, axis, xValues = [], yValues = [], currentValue, values;\n                for (i = 0; i < length; i++) {\n                    axis = allAxes[i];\n                    values = axis.options.vertical ? yValues : xValues;\n                    currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(PLOT_AREA_CLICK, {\n                        element: $(e.target),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var index = indexOf(axis, [].concat(vertical ? this.axisY : this.axisX));\n                var axisOptions = [].concat(vertical ? this.options.yAxis : this.options.xAxis)[index];\n                deepExtend(axisOptions, options);\n            }\n        });\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createPieChart(series);\n            },\n            createPieChart: function (series) {\n                var plotArea = this, firstSeries = series[0], pieChart = new PieChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        startAngle: firstSeries.startAngle,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                var plotArea = this, series = plotArea.series;\n                plotArea.createDonutChart(series);\n            },\n            createDonutChart: function (series) {\n                var plotArea = this, firstSeries = series[0], donutChart = new DonutChart(plotArea, {\n                        series: series,\n                        padding: firstSeries.padding,\n                        connectors: firstSeries.connectors,\n                        legend: plotArea.options.legend\n                    });\n                plotArea.appendChart(donutChart);\n            }\n        });\n        var PieAnimation = draw.Animation.extend({\n            options: {\n                easing: 'easeOutElastic',\n                duration: INITIAL_ANIMATION_DURATION\n            },\n            setup: function () {\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(PIE, PieAnimation);\n        var BubbleAnimation = draw.Animation.extend({\n            options: { easing: 'easeOutElastic' },\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(geom.transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(geom.transform().scale(pos, pos, this.center));\n            }\n        });\n        draw.AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                points = [].concat(points);\n                this.hide();\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this.togglePointHighlight(point, true);\n                        this._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var points = this._points;\n                while (points.length) {\n                    this.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element == point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        var BaseTooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                tooltip.options = deepExtend({}, tooltip.options, options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = BaseTooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = BaseTooltip.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'tooltip ' + CSS_PREFIX + 'chart-tooltip\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + 'border: #= d.border.width #px solid;' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>');\n                }\n                var padding = getSpacing(tooltip.options.padding || {}, 'auto');\n                tooltip.element = $(tooltip.template(tooltip.options)).css({\n                    'padding-top': padding.top,\n                    'padding-right': padding.right,\n                    'padding-bottom': padding.bottom,\n                    'padding-left': padding.left\n                });\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            options: {\n                border: { width: 1 },\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION }\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            _padding: function () {\n                if (!this._chartPadding) {\n                    var chartElement = this.chartElement;\n                    this._chartPadding = {\n                        top: parseInt(chartElement.css('paddingTop'), 10),\n                        left: parseInt(chartElement.css('paddingLeft'), 10)\n                    };\n                }\n                return this._chartPadding;\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.anchor, chartPadding = tooltip._padding(), chartOffset = tooltip.chartElement.offset(), top = round(anchor.y + chartPadding.top + chartOffset.top), left = round(anchor.x + chartPadding.left + chartOffset.left), zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, viewport.outerHeight() / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, viewport.outerWidth() / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            setStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                if (!defined(options.color)) {\n                    var brightness = new Color(background).percBrightness();\n                    this.element.toggleClass(CSS_PREFIX + TOOLTIP_INVERSE, brightness > 180);\n                }\n                this.element.css({\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: options.border.width\n                });\n            },\n            show: function () {\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: this.element.outerWidth(),\n                    height: this.element.outerHeight()\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                    this.hide();\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _pointAnchor: function (point) {\n                var size = this._measure();\n                return point.tooltipAnchor(size.width, size.height);\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip);\n                if (!point || !point.tooltipAnchor || !tooltip.element) {\n                    return;\n                }\n                tooltip.element.html(tooltip._pointContent(point));\n                tooltip.anchor = tooltip._pointAnchor(point);\n                if (tooltip.anchor) {\n                    tooltip.setStyle(options, point);\n                    BaseTooltip.fn.show.call(tooltip, point);\n                } else {\n                    tooltip.hide();\n                }\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (element, plotArea, options) {\n                var tooltip = this;\n                BaseTooltip.fn.init.call(tooltip, element, options);\n                tooltip.plotArea = plotArea;\n            },\n            options: {\n                sharedTemplate: '<table>' + '<th colspan=\\'2\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(point.series.name) { # ' + '<td> #= point.series.name #:</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            showAt: function (points, coords) {\n                var tooltip = this, options = tooltip.options, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, index = axis.pointCategoryIndex(coords), category = axis.getCategory(coords), slot = axis.getSlot(index), content;\n                points = $.grep(points, function (p) {\n                    var tooltip = p.series.tooltip, excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (points.length > 0) {\n                    content = tooltip._content(points, category);\n                    tooltip.element.html(content);\n                    tooltip.anchor = tooltip._slotAnchor(coords, slot);\n                    tooltip.setStyle(options, points[0]);\n                    BaseTooltip.fn.show.call(tooltip);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var tooltip = this, plotArea = tooltip.plotArea, axis = plotArea.categoryAxis, anchor, size = this._measure(), hCenter = point.y - size.height / 2;\n                if (axis.options.vertical) {\n                    anchor = Point2D(point.x, hCenter);\n                } else {\n                    anchor = Point2D(slot.center().x, hCenter);\n                }\n                return anchor;\n            },\n            _content: function (points, category) {\n                var tooltip = this, template, content;\n                template = kendo.template(tooltip.options.sharedTemplate);\n                content = template({\n                    points: points,\n                    category: category,\n                    categoryText: autoFormat(tooltip.options.categoryFormat, category),\n                    content: tooltip._pointContent\n                });\n                return content;\n            }\n        });\n        var Crosshair = ChartElement.extend({\n            init: function (axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n            },\n            options: {\n                color: BLACK,\n                width: 1,\n                zIndex: -1,\n                tooltip: { visible: false }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    if (!this.tooltip) {\n                        this.tooltip = new CrosshairTooltip(this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                    }\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var crosshair = this, axis = crosshair.axis, vertical = axis.options.vertical, box = crosshair.getBox(), point = crosshair.point, dim = vertical ? Y : X, slot, lineStart, lineEnd;\n                lineStart = new geom.Point(box.x1, box.y1);\n                if (vertical) {\n                    lineEnd = new geom.Point(box.x2, box.y1);\n                } else {\n                    lineEnd = new geom.Point(box.x1, box.y2);\n                }\n                if (point) {\n                    if (crosshair.stickyMode) {\n                        slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                crosshair.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var crosshair = this, axis = crosshair.axis, axes = axis.pane.axes, length = axes.length, vertical = axis.options.vertical, box = axis.lineBox().clone(), dim = vertical ? X : Y, axisLineBox, currentAxis, i;\n                for (i = 0; i < length; i++) {\n                    currentAxis = axes[i];\n                    if (currentAxis.options.vertical != vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new draw.Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                var crosshair = this;\n                if (crosshair.tooltip) {\n                    crosshair.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(crosshair);\n            }\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (crosshair, options) {\n                var tooltip = this, chartElement = crosshair.axis.getRoot().chart.element;\n                tooltip.crosshair = crosshair;\n                BaseTooltip.fn.init.call(tooltip, chartElement, deepExtend({}, tooltip.options, { background: crosshair.axis.plotArea.options.seriesColors[0] }, options));\n                tooltip.setStyle(tooltip.options);\n            },\n            options: { padding: 10 },\n            showAt: function (point) {\n                var tooltip = this, element = tooltip.element;\n                if (element) {\n                    tooltip.point = point;\n                    tooltip.element.html(tooltip.content(point));\n                    tooltip.anchor = tooltip.getAnchor();\n                    tooltip.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (point) {\n                var tooltip = this, options = tooltip.options, axis = tooltip.crosshair.axis, axisOptions = axis.options, content, value, tooltipTemplate;\n                value = content = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({ value: value });\n                } else if (options.format) {\n                    content = autoFormat(options.format, value);\n                } else {\n                    if (axisOptions.type === DATE) {\n                        content = autoFormat(axisOptions.labels.dateFormats[axisOptions.baseUnit], value);\n                    }\n                }\n                return content;\n            },\n            getAnchor: function () {\n                var tooltip = this, options = tooltip.options, position = options.position, crosshair = this.crosshair, vertical = !crosshair.axis.options.vertical, lineBox = crosshair.line.bbox(), size = this._measure(), halfWidth = size.width / 2, halfHeight = size.height / 2, padding = options.padding, anchor;\n                if (vertical) {\n                    if (position === BOTTOM) {\n                        anchor = lineBox.bottomLeft().translate(-halfWidth, padding);\n                    } else {\n                        anchor = lineBox.topLeft().translate(-halfWidth, -size.height - padding);\n                    }\n                } else {\n                    if (position === LEFT) {\n                        anchor = lineBox.topLeft().translate(-size.width - padding, -halfHeight);\n                    } else {\n                        anchor = lineBox.topRight().translate(padding, -halfHeight);\n                    }\n                }\n                return anchor;\n            },\n            hide: function () {\n                this.element.hide();\n                this.point = null;\n            },\n            destroy: function () {\n                BaseTooltip.fn.destroy.call(this);\n                this.point = null;\n            }\n        });\n        var Aggregates = {\n            min: function (values) {\n                var min = MAX_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        min = math.min(min, n);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var max = MIN_VALUE, length = values.length, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        max = math.max(max, n);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length, sum = 0, i, n;\n                for (i = 0; i < length; i++) {\n                    n = values[i];\n                    if (isNumber(n)) {\n                        sum += n;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length, count = 0, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var result = values[0], count = countNumbers(values);\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length, i, val;\n                for (i = 0; i < length; i++) {\n                    val = values[i];\n                    if (val !== null && defined(val)) {\n                        return val;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function DefaultAggregates() {\n            this._defaults = {};\n        }\n        DefaultAggregates.prototype = {\n            register: function (seriesTypes, aggregates) {\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        };\n        DefaultAggregates.current = new DefaultAggregates();\n        var Selection = Observable.extend({\n            init: function (chart, categoryAxis, options) {\n                var that = this, chartElement = chart.element, categoryAxisLineBox = categoryAxis.lineBox(), valueAxis = that.getValueAxis(categoryAxis), valueAxisLineBox = valueAxis.lineBox(), selectorPrefix = '.' + CSS_PREFIX, wrapper, padding;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({}, that.options, options);\n                options = that.options;\n                that.chart = chart;\n                that.chartElement = chartElement;\n                that.categoryAxis = categoryAxis;\n                that._dateAxis = that.categoryAxis instanceof DateCategoryAxis;\n                that.valueAxis = valueAxis;\n                if (that._dateAxis) {\n                    deepExtend(options, {\n                        min: toDate(options.min),\n                        max: toDate(options.max),\n                        from: toDate(options.from),\n                        to: toDate(options.to)\n                    });\n                }\n                that.template = Selection.template;\n                if (!that.template) {\n                    that.template = Selection.template = renderTemplate('<div class=\\'' + CSS_PREFIX + 'selector\\' ' + 'style=\\'width: #= d.width #px; height: #= d.height #px;' + ' top: #= d.offset.top #px; left: #= d.offset.left #px;\\'>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'mask\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'selection\\'>' + '<div class=\\'' + CSS_PREFIX + 'selection-bg\\'></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'leftHandle\\'><div></div></div>' + '<div class=\\'' + CSS_PREFIX + 'handle ' + CSS_PREFIX + 'rightHandle\\'><div></div></div>' + '</div></div>');\n                }\n                padding = {\n                    left: parseInt(chartElement.css('paddingLeft'), 10),\n                    right: parseInt(chartElement.css('paddingTop'), 10)\n                };\n                that.options = deepExtend({}, {\n                    width: categoryAxisLineBox.width(),\n                    height: valueAxisLineBox.height(),\n                    padding: padding,\n                    offset: {\n                        left: valueAxisLineBox.x2 + padding.left,\n                        top: valueAxisLineBox.y1 + padding.right\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n                if (that.options.visible) {\n                    that.wrapper = wrapper = $(that.template(that.options)).appendTo(chartElement);\n                    that.selection = wrapper.find(selectorPrefix + 'selection');\n                    that.leftMask = wrapper.find(selectorPrefix + 'mask').first();\n                    that.rightMask = wrapper.find(selectorPrefix + 'mask').last();\n                    that.leftHandle = wrapper.find(selectorPrefix + 'leftHandle');\n                    that.rightHandle = wrapper.find(selectorPrefix + 'rightHandle');\n                    that.options.selection = {\n                        border: {\n                            left: parseFloat(that.selection.css('border-left-width'), 10),\n                            right: parseFloat(that.selection.css('border-right-width'), 10)\n                        }\n                    };\n                    that.leftHandle.css('top', (that.selection.height() - that.leftHandle.height()) / 2);\n                    that.rightHandle.css('top', (that.selection.height() - that.rightHandle.height()) / 2);\n                    that.set(that._index(options.from), that._index(options.to));\n                    that.bind(that.events, that.options);\n                    that.wrapper[0].style.cssText = that.wrapper[0].style.cssText;\n                    that.wrapper.on(MOUSEWHEEL_NS, proxy(that._mousewheel, that));\n                    if (kendo.UserEvents) {\n                        that.userEvents = new kendo.UserEvents(that.wrapper, {\n                            global: true,\n                            stopPropagation: true,\n                            multiTouch: true,\n                            fastTap: true,\n                            start: proxy(that._start, that),\n                            move: proxy(that._move, that),\n                            end: proxy(that._end, that),\n                            tap: proxy(that._tap, that),\n                            gesturestart: proxy(that._gesturechange, that),\n                            gesturechange: proxy(that._gesturechange, that)\n                        });\n                    } else {\n                        that.leftHandle.add(that.rightHandle).removeClass(CSS_PREFIX + 'handle');\n                    }\n                }\n            },\n            events: [\n                SELECT_START,\n                SELECT,\n                SELECT_END\n            ],\n            options: {\n                visible: true,\n                mousewheel: { zoom: BOTH },\n                min: MIN_VALUE,\n                max: MAX_VALUE\n            },\n            destroy: function () {\n                var that = this, userEvents = that.userEvents;\n                if (userEvents) {\n                    userEvents.destroy();\n                }\n                clearTimeout(that._mwTimeout);\n                that._state = null;\n                that.wrapper.remove();\n            },\n            _rangeEventArgs: function (range) {\n                var that = this;\n                return {\n                    axis: that.categoryAxis.options,\n                    from: that._value(range.from),\n                    to: that._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var that = this, options = that.options, target = $(e.event.target), args;\n                if (that._state || !target) {\n                    return;\n                }\n                that.chart._unsetActivePoint();\n                that._state = {\n                    moveTarget: target.parents('.k-handle').add(target).first(),\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: that._index(options.from),\n                        to: that._index(options.to)\n                    }\n                };\n                args = that._rangeEventArgs({\n                    from: that._index(options.from),\n                    to: that._index(options.to)\n                });\n                if (that.trigger(SELECT_START, args)) {\n                    that.userEvents.cancel();\n                    that._state = null;\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, state = that._state, options = that.options, categories = that.categoryAxis.options.categories, from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), delta = state.startLocation - e.x.location, range = state.range, oldRange = {\n                        from: range.from,\n                        to: range.to\n                    }, span = range.to - range.from, target = state.moveTarget, scale = that.wrapper.width() / (categories.length - 1), offset = math.round(delta / scale);\n                if (!target) {\n                    return;\n                }\n                e.preventDefault();\n                if (target.is('.k-selection, .k-selection-bg')) {\n                    range.from = math.min(math.max(min, from - offset), max - span);\n                    range.to = math.min(range.from + span, max);\n                } else if (target.is('.k-leftHandle')) {\n                    range.from = math.min(math.max(min, from - offset), max - 1);\n                    range.to = math.max(range.from + 1, range.to);\n                } else if (target.is('.k-rightHandle')) {\n                    range.to = math.min(math.max(min + 1, to - offset), max);\n                    range.from = math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.move(range.from, range.to);\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                var that = this, range = that._state.range;\n                delete that._state;\n                that.set(range.from, range.to);\n                that.trigger(SELECT_END, that._rangeEventArgs(range));\n            },\n            _gesturechange: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var that = this, chart = that.chart, state = that._state, options = that.options, categoryAxis = that.categoryAxis, range = state.range, p0 = chart._toModelCoordinates(e.touches[0].x.location).x, p1 = chart._toModelCoordinates(e.touches[1].x.location).x, left = math.min(p0, p1), right = math.max(p0, p1);\n                e.preventDefault();\n                state.moveTarget = null;\n                range.from = categoryAxis.pointCategoryIndex(new dataviz.Point2D(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new dataviz.Point2D(right)) || options.max;\n                that.move(range.from, range.to);\n            },\n            _tap: function (e) {\n                var that = this, options = that.options, coords = that.chart._eventCoordinates(e), categoryAxis = that.categoryAxis, categoryIx = categoryAxis.pointCategoryIndex(new dataviz.Point2D(coords.x, categoryAxis.box.y1)), from = that._index(options.from), to = that._index(options.to), min = that._index(options.min), max = that._index(options.max), span = to - from, mid = from + span / 2, offset = math.round(mid - categoryIx), range = {}, rightClick = e.event.which === 3;\n                if (that._state || rightClick) {\n                    return;\n                }\n                e.preventDefault();\n                that.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = math.min(math.max(min, from - offset), max - span);\n                range.to = math.min(range.from + span, max);\n                that._start(e);\n                if (that._state) {\n                    that._state.range = range;\n                    that.trigger(SELECT, that._rangeEventArgs(range));\n                    that._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var that = this, options = that.options, delta = mwDelta(e);\n                that._start({ event: { target: that.selection } });\n                if (that._state) {\n                    var range = that._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (that.expand(delta)) {\n                        that.trigger(SELECT, {\n                            axis: that.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: that._value(range.from),\n                            to: that._value(range.to)\n                        });\n                    }\n                    if (that._mwTimeout) {\n                        clearTimeout(that._mwTimeout);\n                    }\n                    that._mwTimeout = setTimeout(function () {\n                        that._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _index: function (value) {\n                var that = this, categoryAxis = that.categoryAxis, categories = categoryAxis.options.categories, index = value;\n                if (value instanceof Date) {\n                    index = lteDateIndex(value, categories);\n                    if (!categoryAxis.options.justified && value > last(categories)) {\n                        index += 1;\n                    }\n                }\n                return index;\n            },\n            _value: function (index) {\n                var that = this, categoryAxis = this.categoryAxis, categories = categoryAxis.options.categories, value = index;\n                if (that._dateAxis) {\n                    if (index > categories.length - 1) {\n                        value = that.options.max;\n                    } else {\n                        value = categories[index];\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var that = this, categoryAxis = this.categoryAxis;\n                return categoryAxis.getSlot(that._index(value));\n            },\n            move: function (from, to) {\n                var that = this, options = that.options, offset = options.offset, padding = options.padding, border = options.selection.border, leftMaskWidth, rightMaskWidth, box, distance;\n                box = that._slot(from);\n                leftMaskWidth = round(box.x1 - offset.left + padding.left);\n                that.leftMask.width(leftMaskWidth);\n                that.selection.css('left', leftMaskWidth);\n                box = that._slot(to);\n                rightMaskWidth = round(options.width - (box.x1 - offset.left + padding.left));\n                that.rightMask.width(rightMaskWidth);\n                distance = options.width - rightMaskWidth;\n                if (distance != options.width) {\n                    distance += border.right;\n                }\n                that.rightMask.css('left', distance);\n                that.selection.width(math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0));\n            },\n            set: function (from, to) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max);\n                from = limitValue(that._index(from), min, max);\n                to = limitValue(that._index(to), from + 1, max);\n                if (options.visible) {\n                    that.move(from, to);\n                }\n                options.from = that._value(from);\n                options.to = that._value(to);\n            },\n            expand: function (delta) {\n                var that = this, options = that.options, min = that._index(options.min), max = that._index(options.max), zDir = options.mousewheel.zoom, from = that._index(options.from), to = that._index(options.to), range = {\n                        from: from,\n                        to: to\n                    }, oldRange = deepExtend({}, range);\n                if (that._state) {\n                    range = that._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    that.set(range.from, range.to);\n                    return true;\n                }\n            },\n            getValueAxis: function (categoryAxis) {\n                var axes = categoryAxis.pane.axes, axesCount = axes.length, i, axis;\n                for (i = 0; i < axesCount; i++) {\n                    axis = axes[i];\n                    if (axis.options.vertical !== categoryAxis.options.vertical) {\n                        return axis;\n                    }\n                }\n            }\n        });\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                key: 'none',\n                lock: 'none'\n            },\n            start: function (e) {\n                this._active = acceptKey(e.event, this.options.key);\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                this._active = false;\n            },\n            pan: function () {\n                var plotArea = this.plotArea;\n                var axisRanges = this.axisRanges;\n                var range;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() != position) {\n                    var axes = plotArea.axes;\n                    var axis;\n                    var range;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        axis = axes[idx];\n                        if (position == X && !axis.options.vertical || position == Y && axis.options.vertical) {\n                            range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this._marquee = $('<div class=\\'k-marquee\\'><div class=\\'k-marquee-color\\'></div></div>');\n            },\n            options: {\n                key: 'shift',\n                lock: 'none'\n            },\n            start: function (e) {\n                if (acceptKey(e.event, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._toModelCoordinates(e.x.client, e.y.client);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    if (zoomPane) {\n                        var clipBox = zoomPane.clipBox().clone();\n                        var elementOffset = this._elementOffset();\n                        clipBox.translate(elementOffset.left, elementOffset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        this._marquee.appendTo(document.body).css({\n                            left: e.x.client + 1,\n                            top: e.y.client + 1,\n                            width: 0,\n                            height: 0\n                        });\n                    }\n                }\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var chartOffset = chartElement.offset();\n                return {\n                    left: parseInt(chartElement.css('paddingTop'), 10) + chartOffset.left,\n                    top: parseInt(chartElement.css('paddingLeft'), 10) + chartOffset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var selectionPosition = this._selectionPosition(e);\n                    this._marquee.css(selectionPosition);\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset.left;\n                    selectionPosition.top -= elementOffset.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this._marquee.remove();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this._marquee.remove();\n                delete this._marquee;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.pointsRange(start, end);\n                        axisRanges.push({\n                            axis: axis,\n                            range: range\n                        });\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = math.min(e.x.startLocation, e.x.location);\n                var top = math.min(e.y.startLocation, e.y.location);\n                var width = math.abs(e.x.initialDelta);\n                var height = math.abs(e.y.initialDelta);\n                var clipBox = this._zoomPaneClipBox;\n                if (lock == X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock == Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (e.x.location > clipBox.x2) {\n                    width = clipBox.x2 - e.x.startLocation;\n                }\n                if (e.x.location < clipBox.x1) {\n                    width = e.x.startLocation - clipBox.x1;\n                }\n                if (e.y.location > clipBox.y2) {\n                    height = clipBox.y2 - e.y.startLocation;\n                }\n                if (e.y.location < clipBox.y1) {\n                    height = e.y.startLocation - clipBox.y1;\n                }\n                return {\n                    left: math.max(left, clipBox.x1),\n                    top: math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                var axis, vertical;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n                    vertical = axis.options.vertical;\n                    if (!(lock == X && !vertical) && !(lock === Y && vertical)) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    var axisRange;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            }\n        });\n        var SeriesAggregator = function (series, binder, defaultAggregates) {\n            var sa = this, canonicalFields = binder.canonicalFields(series), valueFields = binder.valueFields(series), sourceFields = binder.sourceFields(series, canonicalFields), seriesFields = sa._seriesFields = [], defaults = defaultAggregates.query(series.type), rootAggregate = series.aggregate || defaults, i;\n            sa._series = series;\n            sa._binder = binder;\n            for (i = 0; i < canonicalFields.length; i++) {\n                var field = canonicalFields[i], fieldAggregate;\n                if (typeof rootAggregate === OBJECT) {\n                    fieldAggregate = rootAggregate[field];\n                } else if (i === 0 || inArray(field, valueFields)) {\n                    fieldAggregate = rootAggregate;\n                } else {\n                    break;\n                }\n                if (fieldAggregate) {\n                    seriesFields.push({\n                        canonicalName: field,\n                        name: sourceFields[i],\n                        transform: isFn(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                    });\n                }\n            }\n        };\n        SeriesAggregator.prototype = {\n            aggregatePoints: function (srcPoints, group) {\n                var sa = this, data = sa._bindPoints(srcPoints || []), series = sa._series, seriesFields = sa._seriesFields, i, field, srcValues, value, firstDataItem = data.dataItems[0], result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (i = 0; i < seriesFields.length; i++) {\n                    field = seriesFields[i];\n                    srcValues = sa._bindField(data.values, field.canonicalName);\n                    value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && typeof value === OBJECT && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            ensureTree(field.name, result);\n                            kendo.setter(field.name)(result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var sa = this, binder = sa._binder, series = sa._series, values = [], dataItems = [], i, pointIx;\n                for (i = 0; i < points.length; i++) {\n                    pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [], count = data.length, i, item, value, valueFields;\n                for (i = 0; i < count; i++) {\n                    item = data[i];\n                    valueFields = item.valueFields;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        };\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n            },\n            slot: function (from, to) {\n                return this._axis.slot(from, to);\n            },\n            range: function () {\n                return this._axis.range();\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var result, ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x), u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y), ua;\n            if (u_b !== 0) {\n                ua = ua_t / u_b;\n                result = new Point2D(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series, i, seriesLength = series.length, seriesType, seriesDefaults = options.seriesDefaults, commonDefaults = deepExtend({}, options.seriesDefaults), themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {}, commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (i = 0; i < seriesLength; i++) {\n                seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function applySeriesColors(options) {\n            var series = options.series, colors = options.seriesColors || [], i, currentSeries, seriesColor, defaults;\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                seriesColor = colors[i % colors.length];\n                currentSeries.color = currentSeries.color || seriesColor;\n                defaults = currentSeries._defaults;\n                if (defaults) {\n                    defaults.color = defaults.color || seriesColor;\n                }\n            }\n        }\n        function resolveAxisAliases(options) {\n            var alias;\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                alias = this + 'Axes';\n                if (options[alias]) {\n                    options[this + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            });\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            each([\n                CATEGORY,\n                VALUE,\n                X,\n                Y\n            ], function () {\n                var axisName = this + 'Axis', axes = [].concat(options[axisName]), axisDefaults = options.axisDefaults || {};\n                axes = $.map(axes, function (axisOptions) {\n                    var axisColor = (axisOptions || {}).color;\n                    var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                        line: { color: axisColor },\n                        labels: { color: axisColor },\n                        title: { color: axisColor }\n                    }, axisOptions);\n                    delete result[axisName];\n                    return result;\n                });\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            });\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length, categories = 0, i;\n            for (i = 0; i < seriesCount; i++) {\n                categories = math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        extend($.easing, {\n            easeOutElastic: function (n, d, first, diff) {\n                var s = 1.70158, p = 0, a = diff;\n                if (n === 0) {\n                    return first;\n                }\n                if (n === 1) {\n                    return first + diff;\n                }\n                if (!p) {\n                    p = 0.5;\n                }\n                if (a < math.abs(diff)) {\n                    a = diff;\n                    s = p / 4;\n                } else {\n                    s = p / (2 * math.PI) * math.asin(diff / a);\n                }\n                return a * math.pow(2, -10 * n) * math.sin((n * 1 - s) * (1.1 * math.PI) / p) + diff + first;\n            }\n        });\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        function getDateField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field, value = row[key];\n            if (!value) {\n                value = toDate(getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function toDate(value) {\n            var result, i;\n            if (value instanceof Date) {\n                result = value;\n            } else if (typeof value === STRING) {\n                result = kendo.parseDate(value) || new Date(value);\n            } else if (value) {\n                if (isArray(value)) {\n                    result = [];\n                    for (i = 0; i < value.length; i++) {\n                        result.push(toDate(value[i]));\n                    }\n                } else {\n                    result = new Date(value);\n                }\n            }\n            return result;\n        }\n        function toTime(value) {\n            if (isArray(value)) {\n                return map(value, toTime);\n            } else if (value) {\n                return toDate(value).getTime();\n            }\n        }\n        function addDuration(date, value, unit, weekStartDay) {\n            var result = date, hours;\n            if (date) {\n                date = toDate(date);\n                hours = date.getHours();\n                if (unit === YEARS) {\n                    result = new Date(date.getFullYear() + value, 0, 1);\n                    kendo.date.adjustDST(result, 0);\n                } else if (unit === MONTHS) {\n                    result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === WEEKS) {\n                    result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === DAYS) {\n                    result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n                    kendo.date.adjustDST(result, hours);\n                } else if (unit === HOURS) {\n                    result = addTicks(new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours()), value * TIME_PER_HOUR);\n                } else if (unit === MINUTES) {\n                    result = addTicks(date, value * TIME_PER_MINUTE);\n                    if (result.getSeconds() > 0) {\n                        result.setSeconds(0);\n                    }\n                } else if (unit === SECONDS) {\n                    result = addTicks(date, value * TIME_PER_SECOND);\n                }\n                if (result.getMilliseconds() > 0) {\n                    result.setMilliseconds(0);\n                }\n            }\n            return result;\n        }\n        function startOfWeek(date, weekStartDay) {\n            var day = date.getDay(), daysToSubtract = 0;\n            if (!isNaN(day)) {\n                weekStartDay = weekStartDay || 0;\n                while (day !== weekStartDay) {\n                    if (day === 0) {\n                        day = 6;\n                    } else {\n                        day--;\n                    }\n                    daysToSubtract++;\n                }\n            }\n            return addTicks(date, -daysToSubtract * TIME_PER_DAY);\n        }\n        function floorDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            return addDuration(date, 0, unit, weekStartDay);\n        }\n        function ceilDate(date, unit, weekStartDay) {\n            date = toDate(date);\n            if (date && floorDate(date, unit, weekStartDay).getTime() === date.getTime()) {\n                return date;\n            }\n            return addDuration(date, 1, unit, weekStartDay);\n        }\n        function dateDiff(a, b) {\n            var diff = a.getTime() - b, offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - (offsetDiff * diff > 0 ? offsetDiff * TIME_PER_MINUTE : 0);\n        }\n        function absoluteDateDiff(a, b) {\n            var diff = a.getTime() - b, offsetDiff = a.getTimezoneOffset() - b.getTimezoneOffset();\n            return diff - offsetDiff * TIME_PER_MINUTE;\n        }\n        function addTicks(date, ticks) {\n            var tzOffsetBefore = date.getTimezoneOffset(), result = new Date(date.getTime() + ticks), tzOffsetDiff = result.getTimezoneOffset() - tzOffsetBefore;\n            return new Date(result.getTime() + (ticks * tzOffsetDiff > 0 ? tzOffsetDiff * TIME_PER_MINUTE : 0));\n        }\n        function duration(a, b, unit) {\n            var diff;\n            if (unit === YEARS) {\n                diff = b.getFullYear() - a.getFullYear();\n            } else if (unit === MONTHS) {\n                diff = duration(a, b, YEARS) * 12 + b.getMonth() - a.getMonth();\n            } else if (unit === DAYS) {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_DAY);\n            } else {\n                diff = math.floor(dateDiff(b, a) / TIME_PER_UNIT[unit]);\n            }\n            return diff;\n        }\n        function dateIndex(value, start, baseUnit, baseUnitStep) {\n            var index;\n            var date = toDate(value);\n            var startDate = toDate(start);\n            if (baseUnit == MONTHS) {\n                index = date.getMonth() - startDate.getMonth() + (date.getFullYear() - startDate.getFullYear()) * 12 + timeIndex(date, new Date(date.getFullYear(), date.getMonth()), DAYS) / new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n            } else if (baseUnit === YEARS) {\n                index = date.getFullYear() - startDate.getFullYear() + dateIndex(date, new Date(date.getFullYear(), 0), MONTHS, 1) / 12;\n            } else {\n                index = timeIndex(date, startDate, baseUnit);\n            }\n            return index / baseUnitStep;\n        }\n        function timeIndex(date, start, baseUnit) {\n            return dateDiff(date, start) / TIME_PER_UNIT[baseUnit];\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length, box, i, axisBox;\n            if (length > 0) {\n                for (i = 0; i < length; i++) {\n                    axisBox = axes[i].contentBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || Box2D();\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function dateEquals(a, b) {\n            if (a && b) {\n                return toTime(a) === toTime(b);\n            }\n            return a === b;\n        }\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function lteDateIndex(date, sortedDates) {\n            var low = 0, high = sortedDates.length - 1, i, currentDate;\n            while (low <= high) {\n                i = math.floor((low + high) / 2);\n                currentDate = sortedDates[i];\n                if (currentDate < date) {\n                    low = i + 1;\n                    continue;\n                }\n                if (currentDate > date) {\n                    high = i - 1;\n                    continue;\n                }\n                while (dateEquals(sortedDates[i - 1], date)) {\n                    i--;\n                }\n                return i;\n            }\n            if (sortedDates[i] <= date) {\n                return i;\n            } else {\n                return i - 1;\n            }\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function countNumbers(values) {\n            var length = values.length, count = 0, i, num;\n            for (i = 0; i < length; i++) {\n                num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        function axisRanges(axes) {\n            var i, axis, axisName, ranges = {};\n            for (i = 0; i < axes.length; i++) {\n                axis = axes[i];\n                axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function evalOptions(options, context, state, dryRun) {\n            var property, propValue, excluded, defaults, depth, needsEval = false;\n            state = state || {};\n            excluded = state.excluded = state.excluded || [];\n            defaults = state.defaults = state.defaults || {};\n            depth = state.depth = state.depth || 0;\n            if (depth > MAX_EXPAND_DEPTH) {\n                return;\n            }\n            for (property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    propValue = options[property];\n                    if (isFn(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (typeof propValue === OBJECT) {\n                        state.defaults = defaults[property];\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!isFn(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        function filterSeriesByType(series, types) {\n            var i, currentSeries, result = [];\n            types = [].concat(types);\n            for (i = 0; i < series.length; i++) {\n                currentSeries = series[i];\n                if (inArray(currentSeries.type, types)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function indexOf(item, arr) {\n            if (item instanceof Date) {\n                for (var i = 0, length = arr.length; i < length; i++) {\n                    if (dateEquals(arr[i], item)) {\n                        return i;\n                    }\n                }\n                return -1;\n            } else {\n                return $.inArray(item, arr);\n            }\n        }\n        function sortDates(dates, comparer) {\n            comparer = comparer || dateComparer;\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            var i, dates = sortDates(srcDates, comparer), length = dates.length, result = length > 0 ? [dates[0]] : [];\n            comparer = comparer || dateComparer;\n            for (i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type, dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function transpose(rows) {\n            var result = [], rowCount = rows.length, rowIx, row, colIx, colCount;\n            for (rowIx = 0; rowIx < rowCount; rowIx++) {\n                row = rows[rowIx];\n                colCount = row.length;\n                for (colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        function ensureTree(fieldName, target) {\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.'), path = '', val;\n                while (parts.length > 1) {\n                    path += parts.shift();\n                    val = kendo.getter(path)(target) || {};\n                    kendo.setter(path)(target, val);\n                    path += '.';\n                }\n            }\n        }\n        function seriesTotal(series) {\n            var data = series.data;\n            var sum = 0;\n            for (var i = 0; i < data.length; i++) {\n                var pointData = SeriesBinder.current.bindPoint(series, i);\n                var value = pointData.valueFields.value;\n                if (typeof value === STRING) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value) && pointData.fields.visible !== false) {\n                    sum += math.abs(value);\n                }\n            }\n            return sum;\n        }\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient != 'none';\n        }\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            var axisRange;\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var accept = key == 'none' && !(e.ctrlKey || e.shiftKey || e.altKey) || e[key + 'Key'];\n            return accept;\n        }\n        dataviz.ui.plugin(Chart);\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([BOX_PLOT], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([BOX_PLOT], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        deepExtend(dataviz, {\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            CategoryAxis: CategoryAxis,\n            ChartAxis: ChartAxis,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DateCategoryAxis: DateCategoryAxis,\n            DateValueAxis: DateValueAxis,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            ShapeElement: ShapeElement,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            addDuration: addDuration,\n            areNumbers: areNumbers,\n            axisGroupBox: axisGroupBox,\n            categoriesCount: categoriesCount,\n            ceilDate: ceilDate,\n            countNumbers: countNumbers,\n            duration: duration,\n            ensureTree: ensureTree,\n            indexOf: indexOf,\n            isNumber: isNumber,\n            floorDate: floorDate,\n            filterSeriesByType: filterSeriesByType,\n            hasValue: hasValue,\n            lteDateIndex: lteDateIndex,\n            evalOptions: evalOptions,\n            seriesTotal: seriesTotal,\n            singleItemOrArray: singleItemOrArray,\n            sortDates: sortDates,\n            startOfWeek: startOfWeek,\n            transpose: transpose,\n            toDate: toDate,\n            toTime: toTime,\n            uniqueDates: uniqueDates\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}