{"version":3,"sources":["kendo.scheduler.dayview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","idx","events","_continuousEvents","lastEvent","length","startDate","getDate","start","getTime","splice","uid","attr","kendo","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","window","ui","SchedulerView","extend","proxy","MS_PER_MINUTE","MS_PER_DAY","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","MultiDayView","init","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","timezone","timezoneOffset","groupsCount","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","currentTime","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","times","find","remove","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","appendTo","css","top","Math","round","innerRect","height","right","left","updateInterval","markerOptions","_currentTimeUpdateTimer","setInterval","_updateResizeHint","event","startTime","endTime","rangeIndex","width","rect","hint","format","container","multiday","isMultiDay","_removeResizeHint","startSlot","offsetWidth","clientHeight","offsetTop","innerWidth","outerRect","snap","bottom","_createResizeHint","offsetLeft","_resizeHint","add","content","text","first","addClass","toString","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","pop","_createEventElement","clone","_isRtl","clientWidth","_moveHint","_slotByPosition","x","y","slot","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","_groupOrientation","_rowCountForLevel","_columnCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","rowCount","rowMultiplier","rowIndex","time","cellMultiplier","cells","cellIndex","cell","collectionIndex","currentDate","interval","_timeSlotInterval","tableRows","floor","children","getTimeSlotCollection","_dates","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","_daySlotGroups","cellCount","getDaySlotCollection","addDaySlot","view","columnIndex","_addResourceView","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","resourceInfo","parent","hasClass","pageX","pageY","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","target","location","_allDayUserEvents","_editUserEvents","eventElement","_layout","dates","column","columns","rows","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createRowsLayout","_createColumnsLayout","_footer","html","isWorkDay","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","allDayVerticalGroupRow","appendRow","rowIdx","isVerticalGroupped","rowLevels","result","columnLevels","tmplDate","classes","groupIdx","_isWorkDay","append","i","day","getDay","_render","allDayHeader","_startDate","_endDate","createLayout","refreshLayout","_allDayHeaderHeight","datesHeader","th","currentTarget","outerHeight","_end","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slotStart","slotEnd","slots","_positionAllDayEvent","slotRange","rowEvents","j","eventLength","slotWidth","startIndex","index","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","columnWidth","createColumns","style","_positionEvent","_startTime","_endTime","isOneDayEvent","head","tail","middle","eventStartDate","eventEndDate","data","isMobile","showDelete","resizable","resize","_time","eventEndTime","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","allDaySlots","_height","refresh","_renderEvents","isMultiDayEvent","rangeCount","occurrence","allDayEventContainer","slotRanges","render","eventsByResource","eventsPerDate","Query","sort","field","dir","toArray","_eventsByResource","map","grep","itemIdx","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","backward","_changeViewPeriod","endMilliseconds","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.dayview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.dayview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.dayview',\n        name: 'Scheduler Day View',\n        category: 'web',\n        description: 'The Scheduler Day View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, MS_PER_DAY = kendo.date.MS_PER_DAY, getMilliseconds = kendo.date.getMilliseconds, NS = '.kendoMultiDayView';\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.toString(date, \\'ddd M/dd\\')#</span>'), ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !singleDay && !data.tail && !data.middle){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !singleDay && !data.head && !data.middle){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\" ' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '</span>' + '<span class=\"k-event-top-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-n\"></span>' + '# } #' + '</span>' + '<span class=\"k-event-bottom-actions\">' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-s\"></span>' + '# } #' + '</span>' + '# if(resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-n\"></span>' + '# } #' + '# if(resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-s\"></span>' + '# } #' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n            if (isAllDay && lastEvent && getDate(lastEvent.start.startDate()).getTime() == startDate) {\n                var idx = events.length - 1;\n                for (; idx > -1; idx--) {\n                    if (events[idx].isAllDay || getDate(events[idx].start.startDate()).getTime() < startDate) {\n                        break;\n                    }\n                }\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        var MultiDayView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime();\n            },\n            _currentTimeMarkerUpdater: function () {\n                var currentTime = new Date();\n                var options = this.options;\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                this.times.find('.k-current-time').remove();\n                var groupsCount = !options.group || options.group.orientation == 'horizontal' ? 1 : this.groups.length;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var element = $('<div class=\\'k-current-time\\'></div>');\n                        element.appendTo(this.times).css({\n                            top: Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top),\n                            height: '1px',\n                            right: '1px',\n                            left: 0\n                        });\n                    }\n                }\n            },\n            _currentTime: function () {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    var updateInterval = markerOptions.updateInterval;\n                    that._currentTimeMarkerUpdater();\n                    that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), updateInterval);\n                }\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    var width = start.offsetWidth;\n                    var height = start.clientHeight;\n                    var top = start.offsetTop;\n                    if (multiday) {\n                        width = range.innerWidth();\n                    } else {\n                        var rect = range.outerRect(startTime, endTime, this.options.snap);\n                        top = rect.top;\n                        height = rect.bottom - rect.top;\n                    }\n                    var hint = SchedulerView.fn._createResizeHint.call(this, start.offsetLeft, top, width, height);\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n                var format = 't';\n                var container = this.content;\n                if (multiday) {\n                    format = 'M/dd';\n                    container = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n                start = kendo.timezone.toLocalDate(start);\n                end = kendo.timezone.toLocalDate(end);\n                this._removeMoveHint();\n                if (!multiday && (getMilliseconds(end) === 0 || getMilliseconds(end) < getMilliseconds(this.startTime()))) {\n                    if (ranges.length > 1) {\n                        ranges.pop();\n                    }\n                }\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint = this._createEventElement(event.clone({\n                        start: start,\n                        end: end\n                    }), !multiday);\n                    hint.addClass('k-event-drag-hint');\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n                    if (this._isRtl) {\n                        css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                    }\n                    if (multiday) {\n                        css.width = range.innerWidth() - 4;\n                    } else {\n                        var rect = range.outerRect(start, end, this.options.snap);\n                        css.top = rect.top;\n                        css.height = rect.bottom - rect.top;\n                        css.width = startSlot.clientWidth * 0.9 - 4;\n                    }\n                    hint.css(css);\n                    this._moveHint = this._moveHint.add(hint);\n                }\n                var content = this.content;\n                if (multiday) {\n                    content = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n                this._moveHint.appendTo(content);\n            },\n            _slotByPosition: function (x, y) {\n                var slot;\n                var offset;\n                if (this._isVerticallyGrouped()) {\n                    offset = this.content.offset();\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                } else {\n                    offset = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day)').find('>div').offset();\n                }\n                if (offset) {\n                    x -= offset.left;\n                    y -= offset.top;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                var group;\n                var groupIndex;\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.daySlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                if (offset) {\n                    x += offset.left;\n                    y += offset.top;\n                }\n                offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                if (!this._isVerticallyGrouped()) {\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        return this._rowCountForLevel(resources.length - 1);\n                    } else {\n                        return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                    }\n                }\n                return 1;\n            },\n            _columnCountInResourceView: function () {\n                var resources = this.groupedResources;\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    return this._columnCountForLevel(0);\n                }\n                return this._columnOffsetForResource(resources.length);\n            },\n            _timeSlotGroups: function (groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var tableRows = this.content.find('tr:not(.k-scheduler-header-all-day)');\n                tableRows.attr('role', 'row');\n                var rowCount = tableRows.length;\n                if (this._isVerticallyGrouped()) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var time;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n                        var group = this.groups[groupIndex];\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n                        for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            var cell = cells[cellIndex];\n                            var collectionIndex = cellIndex % columnCount;\n                            var collection = group.getTimeSlotCollection(collectionIndex);\n                            var currentDate = this._dates[collectionIndex];\n                            var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                            var start = currentTime + time;\n                            var end = start + interval;\n                            cell.setAttribute('role', 'gridcell');\n                            cell.setAttribute('aria-selected', false);\n                            collection.addTimeSlot(cell, start, end);\n                        }\n                        time += interval;\n                        rowIndex++;\n                    }\n                }\n            },\n            _daySlotGroups: function (groupCount, columnCount) {\n                var tableRows;\n                if (this._isVerticallyGrouped()) {\n                    tableRows = this.element.find('.k-scheduler-header-all-day');\n                } else {\n                    tableRows = this.element.find('.k-scheduler-header-all-day tr');\n                }\n                tableRows.attr('role', 'row');\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var group = this.groups[groupIndex];\n                    var collection = group.getDaySlotCollection(0);\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cellCount = 0;\n                    for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                        var cell = cells[cellIndex];\n                        if (cellIndex % columnCount === 0) {\n                            cellCount = 0;\n                        }\n                        var start = this._dates[cellCount];\n                        var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n                        cellCount++;\n                        cell.setAttribute('role', 'gridcell');\n                        cell.setAttribute('aria-selected', false);\n                        collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n                    }\n                }\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n            options: {\n                name: 'MultiDayView',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                allDaySlot: true,\n                showWorkHours: false,\n                title: '',\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                minorTimeHeaderTemplate: '&nbsp;',\n                groupHeaderTemplate: '#=text#',\n                slotTemplate: '&nbsp;',\n                allDaySlotTemplate: '&nbsp;',\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: { command: 'workDay' },\n                messages: {\n                    allDay: 'all day',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        if (!$(this).parent().hasClass('k-scheduler-header-all-day')) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    }).on('dblclick' + NS, '.k-scheduler-header-all-day td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({}, {\n                                    isAllDay: true,\n                                    start: kendo.date.getDate(slot.startDate()),\n                                    end: kendo.date.getDate(slot.startDate())\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            if (!$(e.target).parent().hasClass('k-scheduler-header-all-day')) {\n                                var slot = that._slotByPosition(e.x.location, e.y.location);\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger('add', {\n                                        eventInfo: extend({\n                                            start: slot.startDate(),\n                                            end: slot.endDate()\n                                        }, resourceInfo)\n                                    });\n                                }\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-header-all-day td',\n                        tap: function (e) {\n                            var slot = that._slotByPosition(e.x.location, e.y.location);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({}, {\n                                        isAllDay: true,\n                                        start: kendo.date.getDate(slot.startDate()),\n                                        end: kendo.date.getDate(slot.startDate())\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _layout: function (dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n                    column.text = that.dateHeaderTemplate({ date: dates[idx] });\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = 'k-today';\n                    }\n                    columns.push(column);\n                }\n                var resources = this.groupedResources;\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay,\n                        allDay: true,\n                        cellContent: function (idx) {\n                            var groupIndex = idx;\n                            idx = resources.length && that._groupOrientation() !== 'vertical' ? idx % dates.length : idx;\n                            return that.allDaySlotTemplate({\n                                date: dates[idx],\n                                resources: function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n                this._forTimeRange(this.startTime(), this.endTime(), function (date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? 'k-slot-cell' : ''\n                    };\n                    rows.push(row);\n                });\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                    } else {\n                        columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval), isMajorTickRow = majorTickDivider === 0, isMiddleRow = majorTickDivider < minorTickCount - 1, isLastSlotRow = majorTickDivider === minorTickCount - 1;\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var allDaySlotTemplate = this.allDaySlotTemplate;\n                var isVerticalGroupped = false;\n                var allDayVerticalGroupRow;\n                if (resources.length) {\n                    isVerticalGroupped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGroupped) {\n                        rowCount = this._rowCountForLevel(this.rowLevels.length - 2);\n                        if (options.allDaySlot) {\n                            allDayVerticalGroupRow = function (groupIndex) {\n                                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                                var resources = function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                };\n                                for (var idx = 0, length = dates.length; idx < length; idx++) {\n                                    result += '<td>' + allDaySlotTemplate({\n                                        date: dates[idx],\n                                        resources: resources\n                                    }) + '</td>';\n                                }\n                                return result + '</tr>';\n                            };\n                        }\n                    } else {\n                        groupsCount = this._columnCountForLevel(this.columnLevels.length - 2);\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date, majorTick) {\n                    var content = '';\n                    var idx;\n                    var length;\n                    var classes = '';\n                    var tmplDate;\n                    var groupIdx = 0;\n                    content = '<tr' + (majorTick ? ' class=\"k-middle-row\"' : '') + '>';\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return that._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    for (; groupIdx < groupsCount; groupIdx++) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            classes = '';\n                            if (kendo.date.isToday(dates[idx])) {\n                                classes += 'k-today';\n                            }\n                            if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(that.options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(that.options.workDayEnd) || !that._isWorkDay(dates[idx])) {\n                                classes += ' k-nonwork-hour';\n                            }\n                            content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                            tmplDate = kendo.date.getDate(dates[idx]);\n                            kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                            content += slotTemplate({\n                                date: tmplDate,\n                                resources: resources(isVerticalGroupped ? rowIdx : groupIdx)\n                            });\n                            content += '</td>';\n                        }\n                    }\n                    content += '</tr>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += allDayVerticalGroupRow ? allDayVerticalGroupRow(rowIdx) : '';\n                    html += this._forTimeRange(start, end, appendRow);\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                this._dates = dates;\n                this._startDate = dates[0];\n                this._endDate = dates[dates.length - 1 || 0];\n                this.createLayout(this._layout(dates));\n                this._content(dates);\n                this._footer();\n                this.refreshLayout();\n                var allDayHeader = this.element.find('.k-scheduler-header-all-day td');\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n                that.datesHeader.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var offset = th.offset();\n                    var slot = that._slotByPosition(offset.left, offset.top + th.outerHeight());\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _end: function (isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n                if (isAllDay) {\n                    time = 0;\n                }\n                return new Date(this._endDate.getTime() + time);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            destroy: function () {\n                var that = this;\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n            inRange: function (options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n                return inRange && startTime <= start && end <= endTime;\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            _timeSlotIndex: function (date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n                return (eventStartTime - startTime) / timeSlotInterval;\n            },\n            _slotIndex: function (date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n                return this._timeSlotIndex(date);\n            },\n            _dateSlotIndex: function (date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n            _positionAllDayEvent: function (element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var currentColumnCount = this._headerColumnCount || 0;\n                var leftOffset = 2;\n                var rightOffset = startIndex !== endIndex ? 5 : 4;\n                var eventHeight = this._allDayHeaderHeight;\n                var start = slotRange.startSlot();\n                element.css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                allDayEvents.push({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                var rows = SchedulerView.createRows(allDayEvents);\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n                var top = slotRange.start.offsetTop;\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({ top: top + idx * eventHeight });\n                    }\n                }\n            },\n            _arrangeColumns: function (element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n                element = {\n                    element: element,\n                    slotIndex: startSlot.index,\n                    start: top,\n                    end: top + height\n                };\n                var columns, slotWidth = startSlot.clientWidth, eventRightOffset = slotWidth * 0.1, columnEvents, eventElements = slotRange.events(), slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end);\n                slotRange.addEvent(element);\n                slotEvents.push(element);\n                columns = SchedulerView.createColumns(slotEvents);\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        columnEvents[j].element[0].style.width = columnWidth - 4 + 'px';\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + 'px';\n                    }\n                }\n            },\n            _positionEvent: function (event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var rect = slotRange.innerRect(start, end, false);\n                var height = rect.bottom - rect.top - 2;\n                if (height < 0) {\n                    height = 0;\n                }\n                element.css({\n                    top: rect.top,\n                    height: height\n                });\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n            },\n            _createEventElement: function (event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var middle;\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if (!isInDateRange(getDate(eventStartDate), startDate, endDate) && !isInDateRange(eventEndDate, startDate, endDate) || isOneDayEvent && eventStartTime < startTime && eventEndTime > endTime) {\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate || isOneDayEvent && eventStartTime < startTime) {\n                    tail = true;\n                } else if (eventEndDate > endDate && !isOneDayEvent || isOneDayEvent && eventEndTime > endTime) {\n                    head = true;\n                }\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _isInTimeSlot: function (event) {\n                var slotStartTime = this.startTime(), slotEndTime = this.endTime(), startTime = event._startTime || event.start, endTime = event._endTime || event.end;\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                if (event._date('end') > event._date('start')) {\n                    endTime = +event._date('end') + (MS_PER_DAY - 1);\n                }\n                endTime = endTime - event._date('end');\n                startTime = startTime - event._date('start');\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n                var overlaps = startTime !== slotEndTime;\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(slotStartTime, startTime, endTime) || isInTimeRange(slotEndTime, startTime, endTime);\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _updateAllDayHeaderHeight: function (height) {\n                if (this._height !== height) {\n                    this._height = height;\n                    var allDaySlots = this.element.find('.k-scheduler-header-all-day td');\n                    if (allDaySlots.length) {\n                        allDaySlots.parent().add(this.element.find('.k-scheduler-times-all-day').parent()).height(height);\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n            _renderEvents: function (events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find('.k-scheduler-header-wrap > div');\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n                        var element;\n                        var ranges;\n                        var group;\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n                                ranges = group.slotRanges(event);\n                                var rangeCount = ranges.length;\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    var range = ranges[rangeIndex];\n                                    var start = event.start;\n                                    var end = event.end;\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n                                    var occurrence = event.clone({\n                                        start: start,\n                                        end: end,\n                                        _startTime: event._startTime,\n                                        _endTime: event.endTime\n                                    });\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n                                        element.appendTo(container);\n                                        this._positionEvent(occurrence, element, range);\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            ranges = group.slotRanges(event);\n                            if (ranges.length) {\n                                element = this._createEventElement(event, !isMultiDayEvent);\n                                this._positionAllDayEvent(element, ranges[0]);\n                                addContinuousEvent(group, ranges[0], element, true);\n                                element.appendTo(container);\n                            }\n                        }\n                    }\n                }\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventsPerDate = $.map(this._dates, function (date) {\n                    return Math.max.apply(null, $.map(eventsByResource, function (events) {\n                        return $.grep(events, function (event) {\n                            return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                        }).length;\n                    }));\n                });\n                var height = Math.max.apply(null, eventsPerDate);\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n                this.refreshLayout();\n                this.trigger('activate');\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            clearSelection: function () {\n                this.content.add(this.datesHeader).find('.k-state-selected').removeAttr('id').attr('aria-selected', false).removeClass('k-state-selected');\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot && startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    } else {\n                        if (isDaySlot && startSlot.index === endSlot.index || !isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    selection.start = new Date(date);\n                    selection.end = new Date(date);\n                    var endMilliseconds = selection.isAllDay ? MS_PER_DAY : getMilliseconds(end);\n                    setTime(selection.start, getMilliseconds(start));\n                    setTime(selection.end, endMilliseconds);\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n                    selection.events = [];\n                    return true;\n                }\n            }\n        });\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: 'DayView',\n                    title: 'Day'\n                },\n                name: 'day'\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: 'WeekView',\n                    title: 'Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'week',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: 'WorkWeekView',\n                    title: 'Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'workWeek',\n                nextDate: function () {\n                    return kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    return kendo.date.previousDay(weekStart);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, dayOfWeek = kendo.date.dayOfWeek, weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), start = dayOfWeek(weekStart, this.options.workWeekStart, 1), end = dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}