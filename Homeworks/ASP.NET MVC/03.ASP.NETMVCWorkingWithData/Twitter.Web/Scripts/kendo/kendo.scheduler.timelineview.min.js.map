{"version":3,"sources":["kendo.scheduler.timelineview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","getWorkDays","options","workDays","dayIndex","workWeekStart","push","workWeekEnd","setColspan","columnLevel","i","count","columns","length","colspan","collidingEvents","elements","left","right","idx","startPosition","overlaps","endPosition","rectLeft","rectRight","eventsForSlot","event","events","kendo","window","ui","SchedulerView","extend","proxy","getDate","MS_PER_DAY","MS_PER_MINUTE","NS","EVENT_TEMPLATE","template","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_STRING","TimelineView","init","element","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","timezone","timezoneOffset","groupsCount","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","datesHeader","currentTime","find","remove","_isInDateSlot","start","end","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","group","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","Math","round","innerRect","getTime","appendTo","css","_adjustLeftPosition","width","bottom","top","_isRtl","content","scrollWidth","offsetWidth","updateInterval","markerOptions","_currentTimeUpdateTimer","setInterval","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","uid","closest","attr","preventDefault","create","resourceInfo","slot","_slotByPosition","pageX","pageY","_resourceBySlot","eventInfo","startDate","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","x","location","y","_editUserEvents","eventElement","target","hasClass","browser","mozilla","scrollLeft","msie","webkit","scrollTop","ceil","timeSlotByPosition","selectedDateFormat","selectedShortDateFormat","today","startTime","endTime","showWorkHours","minorTickCount","workDayStart","workDayEnd","majorTick","eventHeight","eventMinWidth","columnWidth","groupHeaderTemplate","majorTimeHeaderTemplate","slotTemplate","eventTemplate","dateHeaderTemplate","footer","command","messages","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_render","dates","_dates","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","view","timesHeader","hide","contentWidth","contentTable","columnCount","children","minWidth","calculatedWidth","add","slotRanges","rangeStart","rangeEnd","slotStartTime","slotEndTime","_slotRanges","_forTimeRange","min","max","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","html","majorTickDivider","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","isLastMajorSlot","minorTickIndex","resources","timeColumns","rows","text","minorTickSlots","className","middleColumn","lastSlotColumn","minorSlotsCount","timeColumn","slice","groupedResources","_groupOrientation","_createRowsLayout","_createColumnsLayout","isWorkDay","_columnCountForLevel","level","columnLevels","_rowCountForLevel","rowLevel","rowLevels","_isWorkDay","day","getDay","appendRow","rowIdx","groupIdx","rowCount","isVerticalGrouped","_groupCount","tmplDate","classes","isToday","append","groupCount","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_isVerticallyGrouped","_isHorizontallyGrouped","datesCount","rowMultiplier","time","rowIndex","cellMultiplier","cells","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","cellIndex","cell","currentDate","interval","_timeSlotInterval","isVerticallyGrouped","tableRows","floor","getTimeSlotCollection","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","nextDate","nextDay","previousDate","previousDay","render","eventsByResource","eventGroups","maxRowCount","eventGroup","_headerColumnCount","data","Query","sort","field","dir","toArray","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","eventObject","_positionEvent","rowsCount","rowHeight","timesRow","row","eventBottomOffset","_getBottomRowOffset","times","height","_refreshSlots","minOffset","maxOffset","isMobile","slotsCollection","lastSlot","offsetRight","rect","slotRange","_slots","offsetLeft","offsetTop","refresh","result","itemIdx","value","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","_isInTimeSlot","slotIndex","_startTime","_endTime","_adjustEvent","occurrence","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","head","tail","isAllDay","clone","isMultiDayEvent","container","adjustedEvent","range","_continuousEvents","_createEventElement","addContinuousEvent","_arrangeRows","showDelete","destroy","resizable","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","dataItem","rowEvents","j","eventLength","startIndex","index","endIndex","addEvent","createRows","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","rangeIndex","startSlot","hint","clonedEvent","eventDuraton","duration","_removeMoveHint","addClass","snap","offsetHeight","_moveHint","_updateResizeHint","startRect","format","_removeResizeHint","_createResizeHint","_resizeHint","first","toString","toLocalDate","last","selectionByElement","_updateDirection","selection","multiple","reverse","vertical","endSlot","collectionIndex","backward","_changeGroup","previous","method","prevGroupSlot","isDay","_collection","nextGroupSlot","_verticalSlots","_horizontalSlots","_changeViewPeriod","move","key","shift","slots","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,gCAAiC,wBAAyBD,IACnE,WA+vCE,MAtvCC,UAAUE,EAAGC,GAGV,QAASC,GAAgBC,GACrB,GAAIC,GAAa,GAAIC,MAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAE5C,OADAC,GAAQF,EAAYG,EAAgBJ,IAC7BC,EAEX,QAASI,GAAYC,GAArB,GACQC,MACAC,EAAWF,EAAQG,aAEvB,KADAF,EAASG,KAAKF,GACPF,EAAQK,aAAeH,GACtBA,EAAW,EACXA,GAAY,EAEZA,IAEJD,EAASG,KAAKF,EAElB,OAAOD,GAEX,QAASK,GAAWC,GAApB,GAGiBC,GAFTC,EAAQ,CACZ,IAAIF,EAAYG,QAAS,CACrB,IAASF,EAAI,EAAOD,EAAYG,QAAQC,OAAxBH,EAAgCA,IAC5CC,GAASH,EAAWC,EAAYG,QAAQF,GAG5C,OADAD,GAAYK,QAAUH,EACfA,EAGP,MADAF,GAAYK,QAAU,EACf,EAGf,QAASC,GAAgBC,EAAUC,EAAMC,GACrC,GAAIC,GAAKC,EAAeC,EAAUC,CAClC,KAAKH,EAAMH,EAASH,OAAS,EAAGM,GAAO,EAAGA,IACtCC,EAAgBJ,EAASG,GAAKI,SAC9BD,EAAcN,EAASG,GAAKK,UAC5BH,EAA4BJ,GAAjBG,GAAyBE,GAAeL,GAC/CI,GAAYD,GAAiBH,GAAuBC,GAAfI,GAAgCF,GAARH,GAAyBC,GAASE,KAC3EH,EAAhBG,IACAH,EAAOG,GAEPE,EAAcJ,IACdA,EAAQI,GAIpB,OAAOG,GAAcT,EAAUC,EAAMC,GAEzC,QAASO,GAAcT,EAAUC,EAAMC,GAAvC,GAEaC,GACDO,EAFJC,IACJ,KAASR,EAAM,EAASH,EAASH,OAAfM,EAAuBA,IACjCO,GACAH,SAAUP,EAASG,GAAKI,SACxBC,UAAWR,EAASG,GAAKK,YAERP,EAAjBS,EAAMH,UAAmBG,EAAMF,UAAYP,GAAQS,EAAMH,UAAYN,GAA2BC,GAAnBQ,EAAMF,YACnFG,EAAOrB,KAAKU,EAASG,GAG7B,OAAOQ,GA/Dd,GACOC,GAAQC,OAAOD,MAAOE,EAAKF,EAAME,GAAI/B,EAAU6B,EAAMhC,KAAKG,QAASgC,EAAgBD,EAAGC,cAAeC,EAASvC,EAAEuC,OAAQC,EAAQxC,EAAEwC,MAAOC,EAAUN,EAAMhC,KAAKsC,QAASlC,EAAkB4B,EAAMhC,KAAKI,gBAAiBmC,EAAaP,EAAMhC,KAAKuC,WAAYC,EAAgBR,EAAMhC,KAAKwC,cAAeC,EAAK,qBACxSC,EAAiBV,EAAMW,SAAS,wJAAmKC,EAAuBZ,EAAMW,SAAS,wEAA6EE,EAAuB,m3BA+D7UC,EAAeX,EAAcC,QAC7BW,KAAM,SAAUC,EAAS1C,GACrB,GAAI2C,GAAOC,IACXf,GAAcgB,GAAGJ,KAAKK,KAAKH,EAAMD,EAAS1C,GAC1C2C,EAAKI,MAAQJ,EAAK3C,QAAQ+C,OAASJ,EAAK3C,QAAQgD,KAChDL,EAAKM,UAAYlD,EAAY4C,EAAK3C,SAClC2C,EAAKO,aACLP,EAAKQ,YACLR,EAAKS,qBACLT,EAAKU,UACLV,EAAKW,gBAETN,KAAM,WACNO,0BAA2B,WAAA,GAWfC,GAEIC,EAIRC,EACKC,EACDC,EACAC,EACAC,EAIAC,EACAC,EAEItB,EACAuB,EACAlD,EA7BRmD,EAAc,GAAItE,MAClBI,EAAU4C,KAAK5C,OAEnB,IADA4C,KAAKqB,YAAYE,KAAK,mBAAmBC,SACpCxB,KAAKyB,eACFC,MAAOJ,EACPK,IAAKL,IAYb,IARIlE,EAAQwE,kBAAkBC,oBAAqB,IAC3CjB,EAAWxD,EAAQ0E,WAAW1E,QAAQ2E,OAAOnB,SAC7CxD,EAAQ0E,YAAclB,IAClBC,EAAiB/B,EAAM8B,SAASoB,OAAOV,EAAaV,GACxDU,EAAcxC,EAAM8B,SAASqB,QAAQX,EAAaA,EAAYY,oBAAqBrB,KAGvFC,EAAe1D,EAAQ+E,OAAsC,YAA7B/E,EAAQ+E,MAAMC,YAAgCpC,KAAKqC,OAAOtE,OAAhB,EACrEgD,EAAa,EAAgBD,EAAbC,EAA0BA,IAAc,CAI7D,GAHIC,EAAehB,KAAKqC,OAAOtB,GAC3BE,EAAiBnC,EAAMhC,KAAKwF,UAAUhB,GACtCJ,EAASF,EAAauB,eAAetB,EAAgBA,EAAiB,GACpD,IAAlBC,EAAOnD,OACP,MAEAoD,GAAaD,EAAO,GAAGC,WACvBC,EAAcD,EAAWqB,gBAAgBlB,GACzCF,IACItB,EAAUnD,EAAE,sCACZ0E,EAAcrB,KAAKqB,YACnBlD,EAAOsE,KAAKC,MAAMxB,EAAO,GAAGyB,UAAUrB,EAAa,GAAItE,MAAKsE,EAAYsB,UAAY,IAAI,GAAOzE,MACnG2B,EAAQ+C,SAASxB,EAAYE,KAAK,6BAA6BuB,KAC3D3E,KAAM6B,KAAK+C,oBAAoB5E,GAC/B6E,MAAO,MACPC,OAAQ,MACRC,IAAK,OAKrBH,oBAAqB,SAAU5E,GAI3B,MAHI6B,MAAKmD,SACLhF,GAAQ6B,KAAKoD,QAAQ,GAAGC,YAAcrD,KAAKoD,QAAQ,GAAGE,aAEnDnF,GAEXuC,aAAc,WAAA,GAIF6C,GAHJxD,EAAOC,KACPwD,EAAgBzD,EAAK3C,QAAQwE,iBAC7B4B,MAAkB,GAASA,EAAcD,iBAAmB3G,IACxD2G,EAAiBC,EAAcD,eACnCxD,EAAKY,4BACLZ,EAAK0D,wBAA0BC,YAAYvE,EAAMa,KAAKW,0BAA2BZ,GAAOwD,KAGhGhD,UAAW,WACHP,KAAK5C,QAAQuG,WACT3D,KAAK4D,YACL5D,KAAK6D,iBAEL7D,KAAK8D,mBAIjBA,eAAgB,WACZ,GAAI/D,GAAOC,IACXD,GAAKD,QAAQiE,GAAG,QAAUxE,EAAI,8BAA+B,SAAUyE,GACnEjE,EAAKkE,QAAQ,UAAYC,IAAKvH,EAAEqD,MAAMmE,QAAQ,YAAYC,KAAKtF,EAAMsF,KAAK,UAC1EJ,EAAEK,mBAEFtE,EAAK3C,QAAQuG,SAASW,UAAW,GACjCvE,EAAKD,QAAQiE,GAAG,WAAaxE,EAAI,0BAA2B,SAAUyE,GAAV,GAGhDO,GAFJC,EAAOzE,EAAK0E,gBAAgBT,EAAEU,MAAOV,EAAEW,MACvCH,KACID,EAAexE,EAAK6E,gBAAgBJ,GACxCzE,EAAKkE,QAAQ,OACTY,UAAW3F,GACPwC,MAAO8C,EAAKM,YACZnD,IAAK6C,EAAKO,WACXR,MAGXP,EAAEK,mBAGNtE,EAAK3C,QAAQuG,SAASqB,UAAW,GACjCjF,EAAKD,QAAQiE,GAAG,WAAaxE,EAAI,WAAY,SAAUyE,GACnDjE,EAAKkE,QAAQ,QAAUC,IAAKvH,EAAEqD,MAAMmE,QAAQ,YAAYC,KAAKtF,EAAMsF,KAAK,UACxEJ,EAAEK,oBAIdR,eAAgB,WAAA,GACR9D,GAAOC,KACPiF,EAAY,CACZnG,GAAMoG,QAAQC,SAASC,UACvBH,EAAY,GAEZlF,EAAK3C,QAAQuG,SAASW,UAAW,IACjCvE,EAAKsF,eAAiB,GAAIvG,GAAMwG,WAAWvF,EAAKD,SAC5CmF,UAAWA,EACXM,OAAQ,0BACRC,IAAK,SAAUxB,GAAV,GAGOO,GAFJC,EAAOzE,EAAK0E,gBAAgBT,EAAEyB,EAAEC,SAAU1B,EAAE2B,EAAED,SAC9ClB,KACID,EAAexE,EAAK6E,gBAAgBJ,GACxCzE,EAAKkE,QAAQ,OACTY,UAAW3F,GACPwC,MAAO8C,EAAKM,YACZnD,IAAK6C,EAAKO,WACXR,MAGXP,EAAEK,qBAIVtE,EAAK3C,QAAQuG,SAASqB,UAAW,IACjCjF,EAAK6F,gBAAkB,GAAI9G,GAAMwG,WAAWvF,EAAKD,SAC7CmF,UAAWA,EACXM,OAAQ,WACRC,IAAK,SAAUxB,GACX,GAAI6B,GAAelJ,EAAEqH,EAAE8B,QAAQ3B,QAAQ,WAClC0B,GAAaE,SAAS,mBACvBhG,EAAKkE,QAAQ,QAAUC,IAAK2B,EAAazB,KAAKtF,EAAMsF,KAAK,UAE7DJ,EAAEK,sBAKlBI,gBAAiB,SAAUgB,EAAGE,GAAb,GACTnB,GAGArC,EACApB,EAIIiF,EAPJ5C,EAAUpD,KAAKoD,QACfpB,EAASoB,EAAQpB,QAsBrB,KAnBAyD,GAAKzD,EAAO7D,KACZwH,GAAK3D,EAAOkB,IACRlD,KAAKmD,QACD6C,EAAUlH,EAAMoG,QAAQc,QACxBA,EAAQC,SACRR,GAAKrC,EAAQ,GAAGC,YAAcD,EAAQ,GAAGE,YACzCmC,GAAKrC,EAAQ,GAAG8C,YACTF,EAAQG,MACfV,GAAKrC,EAAQ8C,aACbT,GAAKrC,EAAQ,GAAGC,YAAcD,EAAQ,GAAGE,aAClC0C,EAAQI,SACfX,GAAKrC,EAAQ,GAAG8C,aAGpBT,GAAKrC,EAAQ,GAAG8C,WAEpBP,GAAKvC,EAAQ,GAAGiD,UAChBZ,EAAIhD,KAAK6D,KAAKb,GACdE,EAAIlD,KAAK6D,KAAKX,GACT5E,EAAa,EAAgBf,KAAKqC,OAAOtE,OAAzBgD,EAAiCA,IAGlD,GAFAoB,EAAQnC,KAAKqC,OAAOtB,GACpByD,EAAOrC,EAAMoE,mBAAmBd,EAAGE,GAE/B,MAAOnB,EAGf,OAAO,OAEXpH,SACIgD,KAAM,eACND,MAAO,WACPqG,mBAAoB,QACpBC,wBAAyB,QACzB3J,KAAMgC,EAAMhC,KAAK4J,QACjBC,UAAW7H,EAAMhC,KAAK4J,QACtBE,QAAS9H,EAAMhC,KAAK4J,QACpBG,eAAe,EACfC,eAAgB,EAChBnD,UAAU,EACVoD,aAAc,GAAI/J,MAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GACzCgK,WAAY,GAAIhK,MAAK,KAAM,EAAG,EAAG,GAAI,EAAG,GACxCO,cAAe,EACfE,YAAa,EACbwJ,UAAW,GACXC,YAAa,GACbC,cAAe,EACfC,YAAa,IACbC,oBAAqB,UACrBC,wBAAyB,+BACzBC,aAAc,SACdC,cAAehI,EACfiI,mBAAoB/H,EACpBgI,QAAUC,QAAS,WACnB/F,mBACI2B,eAAgB,IAChB1B,kBAAkB,GAEtB+F,UACIC,eAAgB,aAChBC,YAAa,gBACbC,YAAa,wBAGrBlJ,QACI,SACA,MACA,QAEJyB,WAAY,WACR,GAAIlD,GAAU4C,KAAK5C,QAAS4K,EAAW9I,KAAWJ,EAAMmJ,SAAU7K,EAAQ8K,iBAC1ElI,MAAKwH,cAAgBxH,KAAKmI,WAAW/K,EAAQoK,cAAe7H,GAC5DK,KAAKsH,wBAA0BxI,EAAMW,SAASrC,EAAQkK,wBAAyBU,GAC/EhI,KAAKyH,mBAAqB3I,EAAMW,SAASrC,EAAQqK,mBAAoBO,GACrEhI,KAAKuH,aAAezI,EAAMW,SAASrC,EAAQmK,aAAcS,GACzDhI,KAAKqH,oBAAsBvI,EAAMW,SAASrC,EAAQiK,oBAAqBW,IAE3EI,QAAS,SAAUC,GACf,GAAItI,GAAOC,IACXqI,GAAQA,MACRtI,EAAKuI,OAASD,EACdtI,EAAKwI,WAAaF,EAAM,GACxBtI,EAAKyI,SAAWH,EAAMA,EAAMtK,OAAS,GAAK,GAC1CgC,EAAK0I,uBACL1I,EAAK2I,aAAa3I,EAAK4I,QAAQN,IAC/BtI,EAAK6I,SAASP,GACdtI,EAAK8I,UACL9I,EAAK+I,mBACL/I,EAAKgJ,gBACLhJ,EAAKsB,YAAY0C,GAAG,QAAUxE,EAAI,aAAc,SAAUyE,GAAV,GACxCgF,GAAKrM,EAAEqH,EAAEiF,eAAe9E,QAAQ,MAChCK,EAAOzE,EAAK0E,gBAAgBuE,EAAGhH,SAAS7D,KAAM4B,EAAKqD,QAAQpB,SAASkB,IACxEnD,GAAKkE,QAAQ,YACTiF,KAAM,WACNpM,KAAM0H,EAAKM,gBAGnB/E,EAAKoJ,YAAY5H,KAAK,iBAAiB6H,OACvCrJ,EAAKsB,YAAYE,KAAK,iBAAiB6H,QAE3CN,iBAAkB,WAAA,GACV1F,GAAUpD,KAAKoD,QACfiG,EAAejG,EAAQJ,QACvBsG,EAAetJ,KAAKoD,QAAQ7B,KAAK,SACjCgI,EAAcD,EAAa/H,KAAK,YAAYiI,WAAWzL,OACvD0L,EAAW,IACXC,EAAkBH,EAAcvJ,KAAK5C,QAAQgK,WAC9BsC,GAAfL,IACAI,EAAWhH,KAAK6D,KAAKoD,EAAkBL,EAAe,MAE1DC,EAAaK,IAAI3J,KAAKqB,YAAYE,KAAK,UAAUuB,IAAI,QAAS2G,EAAW,MAE7EhB,qBAAsB,WAAA,GAUdmB,GACKhM,EACDiM,EAEAC,EAbJzB,EAAQrI,KAAKsI,OACbyB,EAAgB/J,KAAK2G,YACrBqD,EAAchK,KAAK4G,SAQvB,KAPI1J,EAAgB8M,KAAiB9M,EAAgB4B,EAAMhC,KAAKsC,QAAQ4K,MACpEA,EAAclL,EAAMhC,KAAKsC,QAAQ4K,GACjC/M,EAAQ+M,EAAa3K,EAAa,IAEtC2K,EAAc9M,EAAgB8M,GAC9BD,EAAgB7M,EAAgB6M,GAC5BH,KACKhM,EAAI,EAAOyK,EAAMtK,OAAVH,EAAkBA,IAC1BiM,EAAazK,EAAQiJ,EAAMzK,IAC/BX,EAAQ4M,EAAYE,GAChBD,EAAW1K,EAAQiJ,EAAMzK,IAC7BX,EAAQ6M,EAAUE,GAClBJ,EAAWpM,MACPkE,MAAO5C,EAAMhC,KAAKwF,UAAUuH,GAC5BlI,IAAK7C,EAAMhC,KAAKwF,UAAUwH,IAGlC9J,MAAKiK,YAAcL,GAEvBM,cAAe,SAAUC,EAAKC,EAAKC,EAAQC,GAA5B,GAGPvK,GAAawK,EAA8BC,EAA8B1D,EAA8C2D,EAA0DC,EAAoDhJ,EAAwBiJ,EAA4BC,EAASvM,EAASN,EAAQ8M,EAU/SC,EACAC,EACAC,EACAC,EACAC,EAEIC,CAPZ,KAXAhB,EAAMtN,EAAgBsN,GACtBC,EAAMvN,EAAgBuN,GAClBrK,EAAOC,KAAMuK,EAAQrN,EAAgBiN,GAAMK,EAAQtN,EAAgBkN,GAAMtD,EAAiB/G,EAAK3C,QAAQ0J,eAAgB2D,EAAkB1K,EAAK3C,QAAQ6J,UAAY3H,EAAeoL,EAAaD,EAAkB3D,GAAkB,EAAGpF,EAAQ,GAAI1E,OAAMmN,GAAMQ,EAAWjJ,EAAMtC,UAAoBf,EAAM,EAAWwM,EAAO,GAC9T9M,EAASsB,EAAaqL,EAClBH,GAASC,IACLD,EAAQC,IACRA,GAASnL,GAEbtB,GAAUyM,EAAQD,GAASG,GAE/B3M,EAAS0E,KAAKC,MAAM3E,GACPA,EAANM,EAAcA,IACbyM,EAAmBzM,GAAOoM,EAAkBC,GAC5CK,EAAyC,IAArBD,EACpBE,EAAoClE,EAAiB,EAApCgE,EACjBG,EAAmBH,IAAqBhE,EAAiB,EACzDoE,EAAmBpE,EACnB/I,EAAS+I,IAAmB,IACxBqE,EAAuCrE,EAArB/I,GAAUM,EAAM,GAClC0M,GAAqBI,IACrBD,EAAmBnN,EAAS+I,IAGpC+D,GAAQR,EAAO3I,EAAOqJ,EAAmBC,EAAgBC,EAAkBC,GAC3EjO,EAAQyE,EAAOgJ,GAAY,EAc/B,OAZIF,KACAI,EAAU1N,EAAgBwE,GACtBiJ,EAAWjJ,EAAMtC,YACjBwL,GAAWvL,GAEXuL,EAAUJ,IACV9I,EAAQ,GAAI1E,OAAMoN,KAGtBE,IACAO,GAAQP,EAAM5I,IAEXmJ,GAEXlC,QAAS,SAAUN,GAAV,GAMI+C,GAkBA/M,EAOLgN,EA9BAC,KACAxN,KACAiC,EAAOC,KACPuL,IAAUC,KAAMzL,EAAK3C,QAAQwK,SAASC,iBACtC4D,IACJ,KAASL,EAAiB,EAAoBrL,EAAK3C,QAAQ0J,eAA9BsE,EAA8CA,IACvEK,EAAejO,MACXgO,KAAM,GACNE,UAAW,IAenB,KAZA1L,KAAKkK,cAAcnK,EAAK4G,YAAa5G,EAAK6G,UAAW,SAAU9J,EAAMmK,EAAW0E,EAAcC,EAAgBC,GAAzD,GAGzCC,GAFJrM,EAAWM,EAAKuH,uBAChBL,KACI6E,GACAN,KAAM/L,GAAW3C,KAAMA,IACvB4O,UAAWE,EAAiB,cAAgB,GAC5C9N,QAAS2N,EAAeM,MAAM,EAAGF,IAErCnO,EAAWoO,GACXR,EAAY9N,KAAKsO,MAGhBzN,EAAM,EAASgK,EAAMtK,OAAZM,EAAoBA,IAClCP,EAAQN,MACJgO,KAAMzL,EAAK0H,oBAAqB3K,KAAMuL,EAAMhK,KAC5CqN,UAAW,cACX5N,QAASwN,EAAYS,MAAM,IAWnC,OARIV,GAAYrL,KAAKgM,iBACjBX,EAAUtN,SACuB,aAA7BiC,KAAKiM,oBACLV,EAAOxL,EAAKmM,kBAAkBb,EAAW,KAAMrL,KAAKqH,qBAEpDvJ,EAAUiC,EAAKoM,qBAAqBd,EAAWvN,EAASkC,KAAKqH,uBAIjEvJ,QAASA,EACTyN,KAAMA,IAGd1C,QAAS,WAAA,GAGGgC,GACAlD,EAWA5H,EAdJ3C,EAAU4C,KAAK5C,OACfA,GAAQsK,UAAW,IACfmD,EAAO,4CACPlD,EAAUvK,EAAQsK,OAAOC,QACzBA,GAAuB,YAAZA,GACXkD,GAAQ,gCACRA,GAAQ,oHACRA,IAASzN,EAAQyJ,cAAgBzJ,EAAQwK,SAASE,YAAc1K,EAAQwK,SAASG,aAAe,YAChG8C,GAAQ,SAERA,GAAQ,SAEZA,GAAQ,SACR7K,KAAK0H,OAAS/K,EAAEkO,GAAMhI,SAAS7C,KAAKF,SAChCC,EAAOC,KACXA,KAAK0H,OAAO3D,GAAG,QAAUxE,EAAI,uBAAwB,SAAUyE,GAC3DA,EAAEK,iBACFtE,EAAKkE,QAAQ,YACTiF,KAAMnJ,EAAKK,MAAQhD,EAAQgD,KAC3BtD,KAAMiD,EAAK+E,YACXsH,WAAYhP,EAAQyJ,oBAKpCwF,qBAAsB,SAAUC,GAC5B,GAAI3O,GAAcqC,KAAKuM,aAAaD,EACpC,OAAO3O,GAAcA,EAAYI,OAAS,GAE9CyO,kBAAmB,SAAUF,GACzB,GAAIG,GAAWzM,KAAK0M,UAAUJ,EAC9B,OAAOG,GAAWA,EAAS1O,OAAS,GAExC4O,WAAY,SAAU7P,GAAV,GAGCc,GAFLgP,EAAM9P,EAAK+P,SACXxP,EAAW2C,KAAKK,SACpB,KAASzC,EAAI,EAAOP,EAASU,OAAbH,EAAqBA,IACjC,GAAIP,EAASO,KAAOgP,EAChB,OAAO,CAGf,QAAO,GAEXhE,SAAU,SAAUP,GAAV,GAqBFyE,GAyBKC,EAEIC,EACI3O,EAASN,EAhDtBgC,EAAOC,KACP5C,EAAU2C,EAAK3C,QACfsE,EAAQ3B,EAAK4G,YACbhF,EAAM3B,KAAK4G,UACX9F,EAAc,EACdmM,EAAW,EACX1D,EAAclB,EAAMtK,OACpB8M,EAAO,GACPQ,EAAYrL,KAAKgM,iBACjBzE,EAAevH,KAAKuH,aACpB2F,GAAoB,CAmCxB,KAlCI7B,EAAUtN,SACVmP,EAAiD,aAA7BnN,EAAKkM,oBACrBiB,EACAD,EAAWlN,EAAKoN,cAEhBrM,EAAcf,EAAKoN,eAG3BtC,GAAQ,UACJiC,EAAY,SAAUhQ,GAAV,GAGRsQ,GAFAhK,EAAU,GACViK,EAAU,GAEVhC,EAAY,SAAUtK,GACtB,MAAO,YACH,MAAOhB,GAAK6E,iBAAkB7D,WAAYA,KAiBlD,OAdIjC,GAAMhC,KAAKwQ,QAAQjF,EAAMhK,MACzBgP,GAAW,YAEXvO,EAAMhC,KAAKI,gBAAgBJ,GAAQgC,EAAMhC,KAAKI,gBAAgBE,EAAQ2J,eAAiBjI,EAAMhC,KAAKI,gBAAgBJ,IAASgC,EAAMhC,KAAKI,gBAAgBE,EAAQ4J,cAAgBjH,EAAK4M,WAAWtE,EAAMhK,OACpMgP,GAAW,mBAEfjK,GAAW,OAAqB,KAAZiK,EAAiB,WAAaA,EAAU,IAAM,IAAM,IACxED,EAAWtO,EAAMhC,KAAKsC,QAAQiJ,EAAMhK,IACpCS,EAAMhC,KAAKG,QAAQmQ,EAAUtO,EAAMhC,KAAKI,gBAAgBJ,IACxDsG,GAAWmE,GACPzK,KAAMsQ,EACN/B,UAAWA,EAAU6B,EAAoBH,EAASC,KAEtD5J,GAAW,SAGN2J,EAAS,EAAYE,EAATF,EAAmBA,IAAU,CAE9C,IADAlC,GAAQ,OACCmC,EAAW,EAAclM,EAAXkM,EAAwBA,IAC3C,IAAS3O,EAAM,EAAGN,EAASwL,EAAmBxL,EAANM,EAAcA,IAClDwM,GAAQ7K,KAAKkK,cAAcxI,EAAOC,EAAKmL,EAG/CjC,IAAQ,QAEZA,GAAQ,WACR7K,KAAKoD,QAAQ7B,KAAK,SAASgM,OAAO1C,IAEtCpK,QAAS,WAAA,GAKIpC,GACD6K,EACAxH,EACAC,EAPJ6L,EAAaxN,KAAKmN,cAClB9E,EAAQrI,KAAKsI,OACbiB,EAAclB,EAAMtK,MAExB,KADAiC,KAAKqC,UACIhE,EAAM,EAASmP,EAANnP,EAAkBA,IAC5B6K,EAAOlJ,KAAKyN,iBAAiBpP,GAC7BqD,EAAQ2G,EAAM,GACd1G,EAAM0G,EAAMA,EAAMtK,OAAS,GAAK,GACpCmL,EAAKwE,sBAAsBhM,EAAO5C,EAAMhC,KAAK6Q,QAAQhM,EAAK,GAE9D3B,MAAK4N,gBAAgBJ,EAAYjE,IAErCsE,qBAAsB,WAClB,MAAO7N,MAAKgM,iBAAiBjO,QAAuC,aAA7BiC,KAAKiM,qBAEhD6B,uBAAwB,WACpB,MAAO9N,MAAKgM,iBAAiBjO,QAAuC,eAA7BiC,KAAKiM,qBAEhD2B,gBAAiB,SAAUJ,EAAYO,GAAtB,GASJhN,GACDiN,EACA7L,EACA8L,EAIAC,EACAC,EAIAC,EACAC,EACAC,EACKC,EACDC,EAEKC,EACDC,EACAvN,EACAwN,EACArN,EACAI,EACAC,EAhCZiN,EAAW5O,KAAK6O,oBAChBC,EAAsB9O,KAAK6N,uBAC3BkB,EAAY/O,KAAKoD,QAAQ7B,KAAK,MAC9B0L,EAAW8B,EAAUhR,MAKzB,KAJAgR,EAAU3K,KAAK,OAAQ,OACnB0K,IACA7B,EAAWxK,KAAKuM,MAAM/B,EAAWO,IAE5BzM,EAAa,EAAgByM,EAAbzM,EAAyBA,IAe9C,IAdIiN,EAAgB,EAChB7L,EAAQnC,KAAKqC,OAAOtB,GAEpB+N,IACAd,EAAgBjN,GAEhBmN,EAAWF,EAAgBf,EAC3BkB,EAAiB,EAChBW,IACDX,EAAiBpN,GAEjBqN,EAAQW,EAAUb,GAAU1E,SAC5B6E,EAAgBD,EAAMrQ,QAAW+Q,EAAmC,EAAbtB,GACvDc,EAAcD,EAAgBN,EACzBQ,EAAY,EAAeR,EAAZQ,EAAwBA,IAG5C,IAFIC,EAAaD,EAAYD,EAAcD,EAAgBF,EAC3DF,EAAO/Q,EAAgB,GAAIF,OAAMgD,KAAK2G,cAC7B8H,EAAY,EAAeH,EAAZG,EAAyBA,IACzCC,EAAON,EAAMK,EAAYD,GACzBrN,EAAagB,EAAM8M,sBAAsB,GACzCN,EAAc3O,KAAKsI,OAAOiG,GAC1BjN,EAActE,KAAKkS,IAAIP,EAAYQ,cAAeR,EAAYS,WAAYT,EAAYvP,WACtFsC,EAAQJ,EAAc2M,EACtBtM,EAAMD,EAAQkN,EAClBF,EAAKW,aAAa,OAAQ,YAC1BX,EAAKW,aAAa,iBAAiB,GACnClO,EAAWmO,YAAYZ,EAAMhN,EAAOC,GAAK,GACzCsM,GAAQW,GAKxB9J,UAAW,WACP,MAAO9E,MAAKuI,YAEhBxD,QAAS,WACL,MAAO/E,MAAKwI,UAEhB7B,UAAW,WACP,GAAIvJ,GAAU4C,KAAK5C,OACnB,OAAOA,GAAQyJ,cAAgBzJ,EAAQ2J,aAAe3J,EAAQuJ,WAElEC,QAAS,WACL,GAAIxJ,GAAU4C,KAAK5C,OACnB,OAAOA,GAAQyJ,cAAgBzJ,EAAQ4J,WAAa5J,EAAQwJ,SAEhEiI,kBAAmB,WACf,GAAIzR,GAAU4C,KAAK5C,OACnB,OAAOA,GAAQ6J,UAAY7J,EAAQ0J,eAAiBxH,GAExDiQ,SAAU,WACN,MAAOzQ,GAAMhC,KAAK0S,QAAQxP,KAAK+E,YAEnC0K,aAAc,WACV,MAAO3Q,GAAMhC,KAAK4S,YAAY1P,KAAK8E,cAEvCtE,mBAAoB,WAChBR,KAAKoI,SAASpI,KAAK5C,QAAQN,QAE/B6S,OAAQ,SAAU9Q,GAAV,GAcA+Q,GAEAC,EACAC,EACK/O,EACDgP,CADR,KAjBA/P,KAAKgQ,mBAAqB,EAC1BhQ,KAAKS,UACLT,KAAKF,QAAQyB,KAAK,YAAYC,SAC9B3C,EAAS,GAAIC,GAAMmR,KAAKC,MAAMrR,GAAQsR,OAE9BC,MAAO,QACPC,IAAK,QAGLD,MAAO,MACPC,IAAK,UAEVC,UACCV,KACJ5P,KAAKuQ,kBAAkB1R,EAAQmB,KAAKgM,iBAAkB4D,GAClDC,KACAC,EAAc,EACT/O,EAAa,EAAgB6O,EAAiB7R,OAA9BgD,EAAsCA,IACvDgP,GACAhP,WAAYA,EACZ+O,YAAa,EACbjR,WAEJgR,EAAYrS,KAAKuS,GACjB/P,KAAKwQ,cAAcZ,EAAiB7O,GAAaA,EAAYgP,GAC3CA,EAAWD,YAAzBA,IACAA,EAAcC,EAAWD,YAGjC9P,MAAKyQ,eAAeZ,EAAaD,EAAiB7R,OAAQ+R,GAC1D9P,KAAK0Q,gBAAgBb,EAAaD,EAAiB7R,QACnDiC,KAAKiE,QAAQ,aAEjByM,gBAAiB,SAAUb,EAAa/O,GAAvB,GACJC,GACD4P,EACKC,EACDC,CAHZ,KAAS9P,EAAa,EAAgBD,EAAbC,EAA0BA,IAAc,CACzD4P,EAAiBd,EAAY9O,GAAYlC,MAC7C,KAAS+R,IAAYD,GACbE,EAAcF,EAAeC,GACjC5Q,KAAK8Q,eAAeD,KAIhCJ,eAAgB,SAAUZ,EAAa/O,EAAagP,GAApC,GAIH/O,GACDgQ,EAEAC,EACAC,EACAC,EARJhK,EAAclH,KAAK5C,QAAQ8J,YAAc,EACzCiK,EAAoBnR,KAAKoR,qBAE7B,KADAtQ,EAAcd,KAAK6N,uBAAyB/M,EAAc,EACjDC,EAAa,EAAgBD,EAAbC,EAA0BA,IAC3CgQ,EAAY/Q,KAAK6N,uBAAyBgC,EAAY9O,GAAY+O,YAAcA,EACpFiB,EAAYA,EAAYA,EAAY,EAChCC,GAAa9J,EAAc,GAAK6J,EAAYI,EAC5CF,EAAWtU,EAAEqD,KAAKqR,MAAM9P,KAAK,MAAMR,IACnCmQ,EAAMvU,EAAEqD,KAAKoD,QAAQ7B,KAAK,MAAMR,IACpCkQ,EAASK,OAAON,GAChBE,EAAII,OAAON,EAEfhR,MAAK8I,mBACL9I,KAAK+I,gBACL/I,KAAKuR,iBAETH,oBAAqB,WAAA,GAGbI,GACAC,EAHAN,EAA+C,GAA3BnR,KAAK5C,QAAQ8J,YACjCwK,EAAW1R,KAAK4D,WAepB,OAZI8N,IACAF,EAAY,GACZC,EAAY,KAEZD,EAAY,GACZC,EAAY,IAEZN,EAAoBM,EACpBN,EAAoBM,EACOD,EAApBL,IACPA,EAAoBK,GAEjBL,GAEXL,eAAgB,SAAUD,GAAV,GASJc,GACAC,EACAC,EAVJ3K,EAAclH,KAAK5C,QAAQ8J,YAAc,EACzC4K,EAAOjB,EAAYkB,UAAUpP,UAAUkO,EAAYnP,MAAOmP,EAAYlP,KAAK,GAC3ExD,EAAO6B,KAAK+C,oBAAoB+O,EAAK3T,MACrC6E,EAAQ8O,EAAK1T,MAAQ0T,EAAK3T,KAAO,CACzB,GAAR6E,IACAA,EAAQ,GAEAhD,KAAK5C,QAAQ+J,cAArBnE,IACI2O,EAAkBd,EAAYkB,UAAU5Q,WACxCyQ,EAAWD,EAAgBK,OAAOL,EAAgBK,OAAOjU,OAAS,GAClE8T,EAAcD,EAASK,WAAaL,EAAStO,YACjDN,EAAQhD,KAAK5C,QAAQ+J,cACHhJ,EAAO6E,EAArB6O,IACA7O,EAAQ6O,EAAcC,EAAK3T,KAAO,IAG1C0S,EAAY/Q,QAAQgD,KAChBI,IAAK2N,EAAYkB,UAAUrQ,MAAMwQ,UAAYrB,EAAY3C,UAAYhH,EAAc,GAAK,KACxF/I,KAAMA,EACN6E,MAAOA,KAGfuO,cAAe,WACX,IAAK,GAAIxQ,GAAa,EAAgBf,KAAKqC,OAAOtE,OAAzBgD,EAAiCA,IACtDf,KAAKqC,OAAOtB,GAAYoR,WAGhC5B,kBAAmB,SAAU1R,EAAQwM,EAAW+G,GAA7B,GAGPlJ,GACKmJ,EACDC,EACAC,EALRC,EAAWnH,EAAU,EACzB,IAAImH,EAEA,IADItJ,EAAOsJ,EAAS1Q,WAAWoH,OACtBmJ,EAAU,EAAanJ,EAAKnL,OAAfsU,EAAuBA,IACrCC,EAAQtS,KAAKyS,eAAeD,EAAUtJ,EAAKmJ,IAC3CE,EAA2B,GAAIzT,GAAMmR,KAAKC,MAAMrR,GAAQ0G,QACxD6K,MAAOoC,EAASpC,MAChBsC,SAAUzT,EAAc0T,cAAcL,KACvChC,UACCjF,EAAUtN,OAAS,EACnBiC,KAAKuQ,kBAAkBgC,EAA0BlH,EAAUU,MAAM,GAAIqG,GAErEA,EAAO5U,KAAK+U,OAIpBH,GAAO5U,KAAKqB,IAGpB4C,cAAe,SAAU7C,GAAV,GACP+H,GAAY/H,EAAM8C,MAClBkF,EAAUhI,EAAM+C,IAChBkI,EAAazK,EAAQY,KAAKuI,YAC1BuB,EAAWhL,EAAMhC,KAAK6Q,QAAQvO,EAAQY,KAAKwI,UAAW,EAC1D,OAAgBsB,GAAZnD,GAAsCC,GAAdiD,GACjB,GAEJ,GAEX+I,cAAe,SAAUhU,GAAV,GAOFiU,GANLlM,EAAY/H,EAAMkU,YAAchU,EAAMhC,KAAKwF,UAAU1D,EAAM8C,OAC3DkF,EAAUhI,EAAMmU,UAAYjU,EAAMhC,KAAKwF,UAAU1D,EAAM+C,KACvDiI,EAAa5J,KAAKiK,WAItB,KAHItD,IAAcC,IACdA,GAAoB,GAEfiM,EAAY,EAAejJ,EAAW7L,OAAvB8U,EAA+BA,IACnD,GAAgBjJ,EAAWiJ,GAAWlR,IAAlCgF,GAAuEC,EAA9BgD,EAAWiJ,GAAWnR,MAC/D,OAAO,CAGf,QAAO,GAEXsR,aAAc,SAAUpU,GAAV,GASNqU,GARAvR,EAAQ9C,EAAM8C,MACdC,EAAM/C,EAAM+C,IACZuR,EAAiBtU,EAAMuU,MAAM,SAC7BC,EAAexU,EAAMuU,MAAM,OAC3BxM,EAAYzJ,EAAgB8C,KAAK2G,aACjCC,EAAU1J,EAAgB8C,KAAK4G,WAC/ByM,EAAoB,KACpBC,EAAkB,KAElBC,GAAO,EACPC,GAAO,CA4CX,OA3CI5U,GAAM6U,UACNJ,EAAoBjU,EAAQsC,GACxBiF,EAAYuM,IACZjW,EAAQoW,EAAmB1M,GAC3B6M,GAAO,GAEXF,EAAkBlU,EAAQuC,GACtBiF,IAAY1J,EAAgBkC,EAAQY,KAAK4G,YACzC0M,EAAkBxU,EAAMhC,KAAK6Q,QAAQ2F,EAAiB,IAEtDrW,EAAQqW,EAAiB1M,GACzB2M,GAAO,KAGX3M,EAAsB,IAAZA,EAAgBvH,EAAauH,EACnCD,EAAYuM,GACZG,EAAoBjU,EAAQsC,GAC5BzE,EAAQoW,EAAmB1M,GAC3B6M,GAAO,GACUN,EAAVtM,IACPyM,EAAoBjU,EAAQsC,GAC5B2R,EAAoBvU,EAAMhC,KAAK6Q,QAAQ0F,EAAmB,GAC1DpW,EAAQoW,EAAmB1M,GAC3B6M,GAAO,GAEGJ,EAAVxM,GACA0M,EAAkBlU,EAAQuC,GAC1B1E,EAAQqW,EAAiB1M,GACzB2M,GAAO,GACA5M,EAAYyM,IACnBE,EAAkBlU,EAAQuC,GAC1B2R,EAAkBxU,EAAMhC,KAAK6Q,QAAQ2F,EAAiB,IACtDrW,EAAQqW,EAAiB1M,GACzB2M,GAAO,IAGfN,EAAarU,EAAM8U,OACfhS,MAAO2R,EAAoBA,EAAoB3R,EAC/CC,IAAK2R,EAAkBA,EAAkB3R,EACzCmR,WAAYO,EAAoBvU,EAAMhC,KAAKwF,UAAU+Q,GAAqBzU,EAAMkU,WAChFC,SAAUO,EAAkBxU,EAAMhC,KAAKwF,UAAUgR,GAAmB1U,EAAMmU,SAC1EU,UAAU,KAGVR,WAAYA,EACZM,KAAMA,EACNC,KAAMA,IAGdhD,cAAe,SAAU3R,EAAQkC,EAAYgP,GAA9B,GACPnR,GACAP,EACAN,EAIQ4V,EACAC,EAEIC,EACA1R,EAIAjB,EACA4S,EACAhU,EAOI+Q,CApBpB,KAAKxS,EAAM,EAAGN,EAASc,EAAOd,OAAcA,EAANM,EAAcA,IAChDO,EAAQC,EAAOR,GACX2B,KAAKyB,cAAc7C,KACf+U,EAAkB/U,EAAM6U,UAAY7U,EAAM+C,IAAIiB,UAAYhE,EAAM8C,MAAMkB,WAAavD,EACnFuU,EAAY5T,KAAKoD,SACjBuQ,GAAmB3T,KAAK4S,cAAchU,MAClCiV,EAAgB7T,KAAKgT,aAAapU,GAClCuD,EAAQnC,KAAKqC,OAAOtB,GACnBoB,EAAM4R,oBACP5R,EAAM4R,sBAEN7S,EAASiB,EAAMyH,WAAWiK,EAAcZ,YAAY,GACpDa,EAAQ5S,EAAO,GAEflB,KAAK4S,cAAciB,EAAcZ,cACjCnT,EAAUE,KAAKgU,oBAAoBH,EAAcZ,WAAYrU,EAAOkV,EAAMP,MAAQM,EAAcN,KAAMO,EAAMN,MAAQK,EAAcL,MAClI1T,EAAQ+C,SAAS+Q,GAAW9Q,KACxBI,IAAK,EACLoO,OAAQtR,KAAK5C,QAAQ8J,cAErB2J,GACAnP,MAAOmS,EAAcZ,WAAWH,YAAce,EAAcZ,WAAWvR,MACvEC,IAAKkS,EAAcZ,WAAWF,UAAYc,EAAcZ,WAAWtR,IACnE7B,QAASA,EACToE,IAAKtF,EAAMsF,IACX6N,UAAW+B,EACX5F,SAAU,EACVgE,UAAW,GAEfnC,EAAWlR,OAAOD,EAAMsF,KAAO2M,EAC/B7Q,KAAKiU,mBAAmB9R,EAAO2R,EAAOhU,EAASlB,EAAM6U,UACrDzT,KAAKkU,aAAarD,EAAaiD,EAAO/D,OAM1DkE,mBAAoB,SAAU9R,EAAO2R,EAAOhU,EAAS2T,GACjD,GAAI5U,GAASsD,EAAM4R,iBACnBlV,GAAOrB,MACHsC,QAASA,EACT2T,SAAUA,EACVvP,IAAKpE,EAAQsE,KAAKtF,EAAMsF,KAAK,QAC7B1C,MAAOoS,EAAMpS,MACbC,IAAKmS,EAAMnS,OAGnBqS,oBAAqB,SAAUf,EAAYrU,EAAO2U,EAAMC,GAAnC,GAmBbvD,GAaAnQ,EA/BAL,EAAWO,KAAKwH,cAChB7D,EAAW3D,KAAK5C,QAAQuG,SACxB+N,EAAW1R,KAAK4D,YAChBuQ,EAAaxQ,GAAYA,EAASyQ,WAAY,IAAU1C,EACxD2C,EAAY1Q,GAAYA,EAAS2Q,UAAW,EAC5CpB,EAAiBtU,EAAMuU,MAAM,SAC7BC,EAAexU,EAAMuU,MAAM,OAC3BoB,EAAiB3V,EAAM8C,MACvB8S,EAAe5V,EAAM+C,IACrB0J,EAAYrL,KAAKyU,eAAe7V,EA6BpC,OA5BIA,GAAMkU,YAAcI,IAAmBpU,EAAMhC,KAAKI,gBAAgB0B,EAAM8C,SACxE6S,EAAiB,GAAIvX,MAAKkW,GAC1BqB,EAAiBzV,EAAM8B,SAAS8T,MAAMH,EAAgB,YAEtD3V,EAAMmU,UAAYK,IAAiBtU,EAAMhC,KAAKI,gBAAgB0B,EAAM+C,OACpE6S,EAAe,GAAIxX,MAAKoW,GACxBoB,EAAe1V,EAAM8B,SAAS8T,MAAMF,EAAc,YAElDvE,EAAO/Q,MACPyV,GAAI7V,EAAM6V,GACVN,UAAWA,EACXF,WAAYA,EACZZ,KAAMA,EACNC,KAAMA,EACNoB,UAAiC,GAAtB5U,KAAKsI,OAAOvK,OACvBsN,UAAWA,EACXwJ,aAAcxJ,GAAaA,EAAU,GAAKrL,KAAK8U,4BAA4BzJ,EAAU,KAAM,GAC5FzM,GACC8C,MAAO6S,EACP5S,IAAK6S,IAEL1U,EAAUnD,EAAE8C,EAASwQ,IACzBjQ,KAAK+U,QAAQ,UAAW,WACpB,OACI7W,SAAU4B,EACVmQ,OAAS+E,SAAU/E,OAGpBnQ,GAEXoU,aAAc,SAAUrD,EAAakB,EAAWhC,GAAlC,GAoBNxE,GAIKlN,EAASN,EACVkX,EACKC,EAAOC,EAzBhBC,EAAarD,EAAUrQ,MAAM2T,MAC7BC,EAAWvD,EAAUpQ,IAAI0T,MACzBvD,EAAOjB,EAAYkB,UAAUpP,UAAUkO,EAAYnP,MAAOmP,EAAYlP,KAAK,GAC3EjD,EAAYoT,EAAK1T,MAAQ4B,KAAK5C,QAAQ+J,cACtCtI,EAASZ,EAAgB8T,EAAUlT,SAAUiT,EAAK3T,KAAMO,EAmB5D,KAlBAqT,EAAUwD,UACN1C,UAAWuC,EACX1T,MAAO0T,EACPzT,IAAK2T,EACL7W,SAAUqT,EAAK3T,KACfO,UAAWA,EACXoB,QAAS+Q,EAAY/Q,QACrBoE,IAAK2M,EAAY3M,MAErBrF,EAAOrB,MACHkE,MAAO0T,EACPzT,IAAK2T,EACLpR,IAAK2M,EAAY3M,MAEjBqH,EAAOtM,EAAcuW,WAAW3W,GACP0M,EAAKxN,OAA9BgS,EAAWD,cACXC,EAAWD,YAAcvE,EAAKxN,QAEzBM,EAAM,EAAGN,EAASwN,EAAKxN,OAAcA,EAANM,EAAcA,IAElD,IADI4W,EAAY1J,EAAKlN,GAAKQ,OACjBqW,EAAI,EAAGC,EAAcF,EAAUlX,OAAYoX,EAAJD,EAAiBA,IAC7DnF,EAAWlR,OAAOoW,EAAUC,GAAGhR,KAAKgK,SAAW7P,GAI3D8O,YAAa,WACT,GAAI9B,GAAYrL,KAAKgM,gBACrB,OAAIX,GAAUtN,OACuB,aAA7BiC,KAAKiM,oBACEjM,KAAKwM,kBAAkBnB,EAAUtN,OAAS,GAE1CiC,KAAKqM,qBAAqBhB,EAAUtN,OAAS,GAGrD,GAEX0X,yBAA0B,SAAU7W,GAChC,GAAIiV,GAAgB7T,KAAKgT,aAAapU,EAAM8U,QAC5C,OAAOG,GAAcZ,YAEzByC,qBAAsB,SAAU9W,GAC5B,MAAIA,GAAM6U,UACGA,UAAU,OAI3BkC,sBAAuB,SAAU/W,GACzBA,EAAM6U,UACN7U,EAAMgX,IAAI,YAAY,IAG9BC,gBAAiB,SAAUjX,EAAOmC,EAAY+U,GAA7B,GASTjC,GACA3S,EAEK6U,EACDjC,EACAkC,EACAC,EAEAnE,EACA9O,EAIA7E,EACA2E,EASJM,EA/BAjB,EAAQnC,KAAKqC,OAAOtB,GACpBmV,EAActX,EAAM8U,OACpBhS,MAAO9C,EAAM8C,MACbC,IAAK/C,EAAM+C,MAEXwU,EAAeD,EAAYE,UAM/B,KALAF,EAAYxU,MAAQ,GAAI1E,MAAKkZ,EAAYxU,MAAMkB,UAAYkT,GAC3DI,EAAYvU,IAAM,GAAI3E,OAAMkZ,EAAYxU,MAAQyU,GAC5CtC,EAAgB7T,KAAKgT,aAAakD,GAClChV,EAASiB,EAAMyH,WAAWiK,EAAcZ,YAAY,GACxDjT,KAAKqW,kBACIN,EAAa,EAAgB7U,EAAOnD,OAApBgY,EAA4BA,IAC7CjC,EAAQ5S,EAAO6U,GACfC,EAAYlC,EAAMpS,MAClBuU,EAAOjW,KAAKgU,oBAAoBH,EAAcZ,WAAYY,EAAcZ,YAAY,GAAO,GAC/FgD,EAAKK,SAAS,qBACVxE,EAAOgC,EAAMnR,UAAUkR,EAAcZ,WAAWvR,MAAOmS,EAAcZ,WAAWtR,IAAK3B,KAAK5C,QAAQmZ,MAClGvT,EAAQ8O,EAAK1T,MAAQ0T,EAAK3T,KAAO,EACzB,EAAR6E,IACAA,EAAQ,GAER7E,EAAO6B,KAAK+C,oBAAoB+O,EAAK3T,MACrC2E,GACA3E,KAAMA,EACN+E,IAAK8S,EAAU9D,UACfZ,OAAQ0E,EAAUQ,aAAe,EACjCxT,MAAOA,GAEXiT,EAAKnT,IAAIA,GACT9C,KAAKyW,UAAYzW,KAAKyW,UAAU9M,IAAIsM,EAEpC7S,GAAUpD,KAAKoD,QACnBpD,KAAKyW,UAAU5T,SAASO,IAE5BsT,kBAAmB,SAAU9X,EAAOmC,EAAY4F,EAAWC,GAAxC,GAINmP,GACDjC,EACApS,EACAiV,EAEA3T,EACAsO,EACAnT,EACA8X,EAGJW,EACAhD,EAfAzR,EAAQnC,KAAKqC,OAAOtB,GACpBG,EAASiB,EAAMjB,OAAOyF,EAAWC,GAAS,GAAO,EAErD,KADA5G,KAAK6W,oBACId,EAAa,EAAgB7U,EAAOnD,OAApBgY,EAA4BA,IAC7CjC,EAAQ5S,EAAO6U,GACfrU,EAAQoS,EAAMkC,YACdW,EAAY7C,EAAMnR,UAAUgE,EAAWC,GAAS,GACpD+P,EAAUzT,IAAMxB,EAAMwQ,UAClBlP,EAAQ2T,EAAUvY,MAAQuY,EAAUxY,KACpCmT,EAAS5P,EAAM8U,aACfrY,EAAO6B,KAAK+C,oBAAoB4T,EAAUxY,MAC1C8X,EAAOhX,EAAcgB,GAAG6W,kBAAkB5W,KAAKF,KAAM7B,EAAMwY,EAAUzT,IAAKF,EAAOsO,GACrFtR,KAAK+W,YAAc/W,KAAK+W,YAAYpN,IAAIsM,EAExCW,GAAS,IACThD,EAAY5T,KAAKoD,QACrBpD,KAAK+W,YAAYlU,SAAS+Q,GAC1B5T,KAAK+W,YAAYxV,KAAK,gCAAgCiK,KAAK,IAC3DxL,KAAK+W,YAAYC,QAAQV,SAAS,WAAW/U,KAAK,gBAAgBiK,KAAK1M,EAAMmY,SAASnY,EAAM8B,SAASsW,YAAYvQ,GAAYiQ,IAC7H5W,KAAK+W,YAAYI,OAAOb,SAAS,UAAU/U,KAAK,mBAAmBiK,KAAK1M,EAAMmY,SAASnY,EAAM8B,SAASsW,YAAYtQ,GAAUgQ,KAEhIQ,mBAAoB,SAAU1I,GAC1B,GAAI1M,GAAS0M,EAAK1M,QAClB,OAAOhC,MAAKyE,gBAAgBzC,EAAO7D,KAAM6D,EAAOkB,MAEpDmU,iBAAkB,SAAUC,EAAWpW,EAAQqW,EAAUC,EAASC,GAAhD,GACVzB,GAAY9U,EAAO,GAAGQ,MACtBgW,EAAUxW,EAAOA,EAAOnD,OAAS,GAAG4D,GACpC4V,KAAaE,GACTzB,EAAUX,QAAUqC,EAAQrC,OAASW,EAAU2B,kBAAoBD,EAAQC,kBAC3EL,EAAUM,SAAWJ,IAIjCK,aAAc,SAAUP,EAAWQ,GAArB,GACNC,GAASD,EAAW,gBAAkB,gBACtCtT,EAAOxE,KAAK+X,GAAQT,EAAU5V,MAAO4V,EAAUvW,YAAY,EAI/D,OAHIyD,KACA8S,EAAUvW,YAAc+W,EAAW,GAAK,GAErCtT,GAEXwT,cAAe,SAAUlb,EAAMiE,EAAYkX,GAA5B,GASH9W,GARJgB,EAAQnC,KAAKqC,OAAOtB,GACpByD,EAAOrC,EAAMjB,OAAOpE,EAAMA,EAAMmb,GAAO,GAAO,GAAGvW,KACrD,MAAkB,GAAdX,GAGJ,MAAIf,MAAK6N,uBACErJ,GAEHrD,EAAagB,EAAM+V,YAAY,EAAGD,GAC/B9W,EAAWgW,SAG1BgB,cAAe,SAAUrb,EAAMiE,EAAYkX,GAA5B,GASH9W,GARJgB,EAAQnC,KAAKqC,OAAOtB,GACpByD,EAAOrC,EAAMjB,OAAOpE,EAAMA,EAAMmb,GAAO,GAAO,GAAGvW,KACrD,MAAIX,GAAcf,KAAKqC,OAAOtE,OAAS,GAGvC,MAAIiC,MAAK6N,uBACErJ,GAEHrD,EAAagB,EAAM+V,YAAY,EAAGD,GAC/B9W,EAAW6V,UAG1BoB,eAAgB,SAAUd,EAAWpW,EAAQqW,EAAUC,GAAvC,GACRO,GAASP,EAAU,WAAa,YAChCxB,EAAY9U,EAAO,GAAGQ,MACtBgW,EAAUxW,EAAOA,EAAOnD,OAAS,GAAG4D,IACpCQ,EAAQnC,KAAKqC,OAAOiV,EAAUvW,WAMlC,OALAiV,GAAY7T,EAAM4V,GAAQ/B,GAC1B0B,EAAUvV,EAAM4V,GAAQL,GACnBH,IAAYvX,KAAK6N,wBAA4BmI,GAAc0B,IAC5D1B,EAAY0B,EAAU1X,KAAK6X,aAAaP,EAAWE,KAGnDxB,UAAWA,EACX0B,QAASA,IAGjBW,iBAAkB,SAAUf,EAAWpW,EAAQqW,EAAUC,GAAvC,GACVO,GAASP,EAAU,SAAW,WAC9BxB,EAAY9U,EAAO,GAAGQ,MACtBgW,EAAUxW,EAAOA,EAAOnD,OAAS,GAAG4D,IACpCQ,EAAQnC,KAAKqC,OAAOiV,EAAUvW,WAMlC,OALAiV,GAAY7T,EAAM4V,GAAQ/B,GAC1B0B,EAAUvV,EAAM4V,GAAQL,GACnBH,IAAYvX,KAAK8N,0BAA8BkI,GAAc0B,IAC9D1B,EAAY0B,EAAU1X,KAAK6X,aAAaP,EAAWE,KAGnDxB,UAAWA,EACX0B,QAASA,IAGjBY,kBAAmB,SAAUhB,EAAWE,GAArB,GASXpB,GARAtZ,EAAO0a,EAAUxX,KAAKyP,eAAiBzP,KAAKuP,WAC5C7N,EAAQ4V,EAAU5V,MAClBC,EAAM2V,EAAU3V,GAkBpB,OAjBA2V,GAAU5V,MAAQ,GAAI1E,MAAKF,GAC3Bwa,EAAU3V,IAAM,GAAI3E,MAAKF,GACrBkD,KAAK8N,2BACLwJ,EAAUvW,WAAayW,EAAUxX,KAAKqC,OAAOtE,OAAS,EAAI,GAE1DqY,EAAWzU,EAAMD,EACjB8V,GACA7V,EAAMzE,EAAgB8C,KAAK4G,WAC3BjF,EAAc,IAARA,EAAYtC,EAAasC,EAC/B1E,EAAQqa,EAAU5V,MAAOC,EAAMyU,GAC/BnZ,EAAQqa,EAAU3V,IAAKA,KAEvBD,EAAQxE,EAAgB8C,KAAK2G,aAC7B1J,EAAQqa,EAAU5V,MAAOA,GACzBzE,EAAQqa,EAAU3V,IAAKD,EAAQ0U,IAEnCkB,EAAUzY,WACH,GAEX0Z,KAAM,SAAUjB,EAAWkB,EAAKC,GAA1B,GAKEzC,GAAW0B,EAASF,EAASkB,EAmBrBd,EAvBRe,GAAU,EACVxW,EAAQnC,KAAKqC,OAAOiV,EAAUvW,YAC9B6X,EAAO9Z,EAAM8Z,KACb1X,EAASiB,EAAMjB,OAAOoW,EAAU5V,MAAO4V,EAAU3V,KAAK,GAAO,EAEjE,IAAI6W,IAAQI,EAAKC,MAAQL,IAAQI,EAAKE,GAClCH,GAAU,EACVnB,EAAUgB,IAAQI,EAAKE,GACvB9Y,KAAKqX,iBAAiBC,EAAWpW,EAAQuX,EAAOjB,GAAS,GACzDkB,EAAQ1Y,KAAKoY,eAAed,EAAWpW,EAAQuX,EAAOjB,OACnD,KAAIgB,IAAQI,EAAKG,MAAQP,IAAQI,EAAKI,SACzCL,GAAU,EACVnB,EAAUgB,IAAQI,EAAKG,KACvB/Y,KAAKqX,iBAAiBC,EAAWpW,EAAQuX,EAAOjB,GAAS,GACzDkB,EAAQ1Y,KAAKqY,iBAAiBf,EAAWpW,EAAQuX,EAAOjB,KAClDkB,EAAM1C,YAAc0C,EAAMhB,WAAae,GAASzY,KAAKsY,kBAAkBhB,EAAWE,GAAS,IAC7F,MAAOmB,EAmBf,OAhBIA,KACA3C,EAAY0C,EAAM1C,UAClB0B,EAAUgB,EAAMhB,QACZe,GACIb,EAAWN,EAAUM,SACrBA,GAAY5B,EACZsB,EAAU5V,MAAQsU,EAAUlR,aACpB8S,GAAYF,IACpBJ,EAAU3V,IAAM+V,EAAQ3S,YAErBiR,GAAa0B,IACpBJ,EAAU5V,MAAQsU,EAAUlR,YAC5BwS,EAAU3V,IAAM+V,EAAQ3S,WAE5BuS,EAAUzY,WAEP8Z,GAEXvE,QAAS,WACL,GAAIrU,GAAOC,IACPD,GAAKD,SACLC,EAAKD,QAAQmZ,IAAI1Z,GAEjBQ,EAAK2H,QACL3H,EAAK2H,OAAOlG,SAEZzB,EAAK0D,yBACLyV,cAAcnZ,EAAK0D,yBAEvBxE,EAAcgB,GAAGmU,QAAQlU,KAAKF,MAC1BA,KAAK4D,aAAe7D,EAAK3C,QAAQuG,WAC7B5D,EAAK3C,QAAQuG,SAASW,UAAW,GACjCvE,EAAKsF,eAAe+O,UAEpBrU,EAAK3C,QAAQuG,SAASqB,UAAW,GACjCjF,EAAK6F,gBAAgBwO,aAKrClV,IAAO,EAAMF,GACTY,aAAcA,EACduZ,iBAAkBvZ,EAAaV,QAC3B9B,SACIgD,KAAM,mBACND,MAAO,gBACPqG,mBAAoB,gBACpBC,wBAAyB,gBACzBQ,UAAW,KAEf7G,KAAM,eACNI,mBAAoB,WAChB,GAAoHnC,GAAKN,EAArHqb,EAAepZ,KAAK5C,QAAQN,KAAM4E,EAAQ5C,EAAMhC,KAAKuc,UAAUD,EAAcpZ,KAAKsZ,eAAeC,SAAU,IAAkBlR,IACjI,KAAKhK,EAAM,EAAGN,EAAS,EAASA,EAANM,EAAcA,IACpCgK,EAAM7K,KAAKkE,GACXA,EAAQ5C,EAAMhC,KAAK0S,QAAQ9N,EAE/B1B,MAAKoI,QAAQC,MAGrBmR,qBAAsB5Z,EAAaV,QAC/B9B,SACIgD,KAAM,uBACND,MAAO,qBACPqG,mBAAoB,gBACpBC,wBAAyB,gBACzBQ,UAAW,KAEf7G,KAAM,mBACNmP,SAAU,WACN,MAAOzQ,GAAMhC,KAAKuc,UAAUva,EAAMhC,KAAK0S,QAAQxP,KAAK+E,WAAY/E,KAAK5C,QAAQG,cAAe,IAEhGkS,aAAc,WACV,MAAO3Q,GAAMhC,KAAK4S,YAAY1P,KAAK8E,cAEvCtE,mBAAoB,WAEhB,IADA,GAAI4Y,GAAepZ,KAAK5C,QAAQN,KAAM4E,EAAQ5C,EAAMhC,KAAKuc,UAAUD,EAAcpZ,KAAK5C,QAAQG,cAAe,IAAKoE,EAAM7C,EAAMhC,KAAKuc,UAAU3X,EAAO1B,KAAK5C,QAAQK,YAAa,GAAI4K,KAClK1G,GAATD,GACH2G,EAAM7K,KAAKkE,GACXA,EAAQ5C,EAAMhC,KAAK0S,QAAQ9N,EAE/B1B,MAAKoI,QAAQC,MAGrBoR,kBAAmB7Z,EAAaV,QAC5B9B,SACIgD,KAAM,oBACND,MAAO,iBACPqG,mBAAoB,gBACpBC,wBAAyB,gBACzBM,aAAc,GAAI/J,MAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GACzCgK,WAAY,GAAIhK,MAAK,KAAM,EAAG,EAAG,GAAI,GAAI,IACzC0K,QAAQ,EACRT,UAAW,KACXH,eAAgB,GAEpB1G,KAAM,gBACNI,mBAAoB,WAChB,GAAuInC,GAAKN,EAAxIqb,EAAepZ,KAAK5C,QAAQN,KAAM4E,EAAQ5C,EAAMhC,KAAK4c,gBAAgBN,GAAezX,EAAM7C,EAAMhC,KAAK6c,eAAeP,GAA4B/Q,IACpJ,KAAKhK,EAAM,EAAGN,EAAS4D,EAAIvC,UAAiBrB,EAANM,EAAcA,IAChDgK,EAAM7K,KAAKkE,GACXA,EAAQ5C,EAAMhC,KAAK0S,QAAQ9N,EAE/B1B,MAAKoI,QAAQC,SAI3BtJ,OAAOD,MAAM8a,QACR7a,OAAOD,OACE,kBAAVpC,SAAwBA,OAAOmd,IAAMnd,OAAS,SAAUod,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.scheduler.timelineview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.timelineview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.timelineview',\n        name: 'Scheduler Timeline View',\n        category: 'web',\n        description: 'The Scheduler Timeline View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, getMilliseconds = kendo.date.getMilliseconds, MS_PER_DAY = kendo.date.MS_PER_DAY, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, NS = '.kendoTimelineView';\n        var EVENT_TEMPLATE = kendo.template('<div>' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div></div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.format(\\'{0:m}\\', date)#</span>'), EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !data.tail){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !data.head){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        function setColspan(columnLevel) {\n            var count = 0;\n            if (columnLevel.columns) {\n                for (var i = 0; i < columnLevel.columns.length; i++) {\n                    count += setColspan(columnLevel.columns[i]);\n                }\n                columnLevel.colspan = count;\n                return count;\n            } else {\n                columnLevel.colspan = 1;\n                return 1;\n            }\n        }\n        function collidingEvents(elements, left, right) {\n            var idx, startPosition, overlaps, endPosition;\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                startPosition = elements[idx].rectLeft;\n                endPosition = elements[idx].rectRight;\n                overlaps = startPosition <= left && endPosition >= left;\n                if (overlaps || startPosition >= left && endPosition <= right || left <= startPosition && right >= startPosition) {\n                    if (startPosition < left) {\n                        left = startPosition;\n                    }\n                    if (endPosition > right) {\n                        right = endPosition;\n                    }\n                }\n            }\n            return eventsForSlot(elements, left, right);\n        }\n        function eventsForSlot(elements, left, right) {\n            var events = [];\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = {\n                    rectLeft: elements[idx].rectLeft,\n                    rectRight: elements[idx].rectRight\n                };\n                if (event.rectLeft < left && event.rectRight > left || event.rectLeft >= left && event.rectRight <= right) {\n                    events.push(elements[idx]);\n                }\n            }\n            return events;\n        }\n        var TimelineView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime();\n            },\n            name: 'timeline',\n            _currentTimeMarkerUpdater: function () {\n                var currentTime = new Date();\n                var options = this.options;\n                this.datesHeader.find('.k-current-time').remove();\n                if (!this._isInDateSlot({\n                        start: currentTime,\n                        end: currentTime\n                    })) {\n                    return;\n                }\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                var groupsCount = !options.group || options.group.orientation == 'vertical' ? 1 : this.groups.length;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var element = $('<div class=\\'k-current-time\\'></div>');\n                        var datesHeader = this.datesHeader;\n                        var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                        element.appendTo(datesHeader.find('.k-scheduler-header-wrap')).css({\n                            left: this._adjustLeftPosition(left),\n                            width: '1px',\n                            bottom: '1px',\n                            top: 0\n                        });\n                    }\n                }\n            },\n            _adjustLeftPosition: function (left) {\n                if (this._isRtl) {\n                    left -= this.content[0].scrollWidth - this.content[0].offsetWidth;\n                }\n                return left;\n            },\n            _currentTime: function () {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    var updateInterval = markerOptions.updateInterval;\n                    that._currentTimeMarkerUpdater();\n                    that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), updateInterval);\n                }\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({\n                                    start: slot.startDate(),\n                                    end: slot.endDate()\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            var slot = that._slotByPosition(e.x.location, e.y.location);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _slotByPosition: function (x, y) {\n                var slot;\n                var content = this.content;\n                var offset = content.offset();\n                var group;\n                var groupIndex;\n                x -= offset.left;\n                y -= offset.top;\n                if (this._isRtl) {\n                    var browser = kendo.support.browser;\n                    if (browser.mozilla) {\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                        x += content[0].scrollLeft;\n                    } else if (browser.msie) {\n                        x -= content.scrollLeft();\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                    } else if (browser.webkit) {\n                        x += content[0].scrollLeft;\n                    }\n                } else {\n                    x += content[0].scrollLeft;\n                }\n                y += content[0].scrollTop;\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            options: {\n                name: 'TimelineView',\n                title: 'Timeline',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                date: kendo.date.today(),\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                showWorkHours: false,\n                minorTickCount: 2,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                majorTick: 60,\n                eventHeight: 25,\n                eventMinWidth: 0,\n                columnWidth: 100,\n                groupHeaderTemplate: '#=text#',\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                slotTemplate: '&nbsp;',\n                eventTemplate: EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                footer: { command: 'workDay' },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                },\n                messages: {\n                    defaultRowText: 'All events',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                that._dates = dates;\n                that._startDate = dates[0];\n                that._endDate = dates[dates.length - 1 || 0];\n                that._calculateSlotRanges();\n                that.createLayout(that._layout(dates));\n                that._content(dates);\n                that._footer();\n                that._setContentWidth();\n                that.refreshLayout();\n                that.datesHeader.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n                    that.trigger('navigate', {\n                        view: 'timeline',\n                        date: slot.startDate()\n                    });\n                });\n                that.timesHeader.find('table tr:last').hide();\n                that.datesHeader.find('table tr:last').hide();\n            },\n            _setContentWidth: function () {\n                var content = this.content;\n                var contentWidth = content.width();\n                var contentTable = this.content.find('table');\n                var columnCount = contentTable.find('tr:first').children().length;\n                var minWidth = 100;\n                var calculatedWidth = columnCount * this.options.columnWidth;\n                if (contentWidth < calculatedWidth) {\n                    minWidth = Math.ceil(calculatedWidth / contentWidth * 100);\n                }\n                contentTable.add(this.datesHeader.find('table')).css('width', minWidth + '%');\n            },\n            _calculateSlotRanges: function () {\n                var dates = this._dates;\n                var slotStartTime = this.startTime();\n                var slotEndTime = this.endTime();\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                var slotRanges = [];\n                for (var i = 0; i < dates.length; i++) {\n                    var rangeStart = getDate(dates[i]);\n                    setTime(rangeStart, slotStartTime);\n                    var rangeEnd = getDate(dates[i]);\n                    setTime(rangeEnd, slotEndTime);\n                    slotRanges.push({\n                        start: kendo.date.toUtcTime(rangeStart),\n                        end: kendo.date.toUtcTime(rangeEnd)\n                    });\n                }\n                this._slotRanges = slotRanges;\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval);\n                    var isMajorTickColumn = majorTickDivider === 0;\n                    var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                    var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                    var minorTickColumns = minorTickCount;\n                    if (length % minorTickCount !== 0) {\n                        var isLastMajorSlot = length - (idx + 1) < minorTickCount;\n                        if (isMajorTickColumn && isLastMajorSlot) {\n                            minorTickColumns = length % minorTickCount;\n                        }\n                    }\n                    html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _layout: function (dates) {\n                var timeColumns = [];\n                var columns = [];\n                var that = this;\n                var rows = [{ text: that.options.messages.defaultRowText }];\n                var minorTickSlots = [];\n                for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                    minorTickSlots.push({\n                        text: '',\n                        className: ''\n                    });\n                }\n                this._forTimeRange(that.startTime(), that.endTime(), function (date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                    var template = that.majorTimeHeaderTemplate;\n                    if (majorTick) {\n                        var timeColumn = {\n                            text: template({ date: date }),\n                            className: lastSlotColumn ? 'k-slot-cell' : '',\n                            columns: minorTickSlots.slice(0, minorSlotsCount)\n                        };\n                        setColspan(timeColumn);\n                        timeColumns.push(timeColumn);\n                    }\n                });\n                for (var idx = 0; idx < dates.length; idx++) {\n                    columns.push({\n                        text: that.dateHeaderTemplate({ date: dates[idx] }),\n                        className: 'k-slot-cell',\n                        columns: timeColumns.slice(0)\n                    });\n                }\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        rows = that._createRowsLayout(resources, null, this.groupHeaderTemplate);\n                    } else {\n                        columns = that._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGrouped = false;\n                if (resources.length) {\n                    isVerticalGrouped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGrouped) {\n                        rowCount = that._groupCount();\n                    } else {\n                        groupsCount = that._groupCount();\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date) {\n                    var content = '';\n                    var classes = '';\n                    var tmplDate;\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return that._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += 'k-today';\n                    }\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) || !that._isWorkDay(dates[idx])) {\n                        classes += ' k-nonwork-hour';\n                    }\n                    content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                    content += slotTemplate({\n                        date: tmplDate,\n                        resources: resources(isVerticalGrouped ? rowIdx : groupIdx)\n                    });\n                    content += '</td>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        for (var idx = 0, length = columnCount; idx < length; idx++) {\n                            html += this._forTimeRange(start, end, appendRow);\n                        }\n                    }\n                    html += '</tr>';\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var dates = this._dates;\n                var columnCount = dates.length;\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    var start = dates[0];\n                    var end = dates[dates.length - 1 || 0];\n                    view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n            },\n            _isVerticallyGrouped: function () {\n                return this.groupedResources.length && this._groupOrientation() === 'vertical';\n            },\n            _isHorizontallyGrouped: function () {\n                return this.groupedResources.length && this._groupOrientation() === 'horizontal';\n            },\n            _timeSlotGroups: function (groupCount, datesCount) {\n                var interval = this._timeSlotInterval();\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var tableRows = this.content.find('tr');\n                var rowCount = tableRows.length;\n                tableRows.attr('role', 'row');\n                if (isVerticallyGrouped) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group = this.groups[groupIndex];\n                    var time;\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    if (!isVerticallyGrouped) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                    var cellsPerDay = cellsPerGroup / datesCount;\n                    for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                        var cellOffset = dateIndex * cellsPerDay + cellsPerGroup * cellMultiplier;\n                        time = getMilliseconds(new Date(+this.startTime()));\n                        for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n                            var cell = cells[cellIndex + cellOffset];\n                            var collection = group.getTimeSlotCollection(0);\n                            var currentDate = this._dates[dateIndex];\n                            var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                            var start = currentTime + time;\n                            var end = start + interval;\n                            cell.setAttribute('role', 'gridcell');\n                            cell.setAttribute('aria-selected', false);\n                            collection.addTimeSlot(cell, start, end, true);\n                            time += interval;\n                        }\n                    }\n                }\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventGroups = [];\n                var maxRowCount = 0;\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    var eventGroup = {\n                        groupIndex: groupIndex,\n                        maxRowCount: 0,\n                        events: {}\n                    };\n                    eventGroups.push(eventGroup);\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n                    if (maxRowCount < eventGroup.maxRowCount) {\n                        maxRowCount = eventGroup.maxRowCount;\n                    }\n                }\n                this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n                this._positionEvents(eventGroups, eventsByResource.length);\n                this.trigger('activate');\n            },\n            _positionEvents: function (eventGroups, groupsCount) {\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var eventsForGroup = eventGroups[groupIndex].events;\n                    for (var eventUid in eventsForGroup) {\n                        var eventObject = eventsForGroup[eventUid];\n                        this._positionEvent(eventObject);\n                    }\n                }\n            },\n            _setRowsHeight: function (eventGroups, groupsCount, maxRowCount) {\n                var eventHeight = this.options.eventHeight + 2;\n                var eventBottomOffset = this._getBottomRowOffset();\n                groupsCount = this._isVerticallyGrouped() ? groupsCount : 1;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var rowsCount = this._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n                    rowsCount = rowsCount ? rowsCount : 1;\n                    var rowHeight = (eventHeight + 2) * rowsCount + eventBottomOffset;\n                    var timesRow = $(this.times.find('tr')[groupIndex]);\n                    var row = $(this.content.find('tr')[groupIndex]);\n                    timesRow.height(rowHeight);\n                    row.height(rowHeight);\n                }\n                this._setContentWidth();\n                this.refreshLayout();\n                this._refreshSlots();\n            },\n            _getBottomRowOffset: function () {\n                var eventBottomOffset = this.options.eventHeight * 0.5;\n                var isMobile = this._isMobile();\n                var minOffset;\n                var maxOffset;\n                if (isMobile) {\n                    minOffset = 30;\n                    maxOffset = 60;\n                } else {\n                    minOffset = 15;\n                    maxOffset = 30;\n                }\n                if (eventBottomOffset > maxOffset) {\n                    eventBottomOffset = maxOffset;\n                } else if (eventBottomOffset < minOffset) {\n                    eventBottomOffset = minOffset;\n                }\n                return eventBottomOffset;\n            },\n            _positionEvent: function (eventObject) {\n                var eventHeight = this.options.eventHeight + 2;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var left = this._adjustLeftPosition(rect.left);\n                var width = rect.right - rect.left - 2;\n                if (width < 0) {\n                    width = 0;\n                }\n                if (width < this.options.eventMinWidth) {\n                    var slotsCollection = eventObject.slotRange.collection;\n                    var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                    var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n                    width = this.options.eventMinWidth;\n                    if (offsetRight < left + width) {\n                        width = offsetRight - rect.left - 2;\n                    }\n                }\n                eventObject.element.css({\n                    top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + 2) + 'px',\n                    left: left,\n                    width: width\n                });\n            },\n            _refreshSlots: function () {\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    this.groups[groupIndex].refresh();\n                }\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _isInDateSlot: function (event) {\n                var startTime = event.start;\n                var endTime = event.end;\n                var rangeStart = getDate(this._startDate);\n                var rangeEnd = kendo.date.addDays(getDate(this._endDate), 1);\n                if (startTime < rangeEnd && rangeStart <= endTime) {\n                    return true;\n                }\n                return false;\n            },\n            _isInTimeSlot: function (event) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n                var slotRanges = this._slotRanges;\n                if (startTime === endTime) {\n                    endTime = endTime + 1;\n                }\n                for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                    if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _adjustEvent: function (event) {\n                var start = event.start;\n                var end = event.end;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var adjustedStartDate = null;\n                var adjustedEndDate = null;\n                var occurrence;\n                var head = false;\n                var tail = false;\n                if (event.isAllDay) {\n                    adjustedStartDate = getDate(start);\n                    if (startTime > eventStartTime) {\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    adjustedEndDate = getDate(end);\n                    if (endTime === getMilliseconds(getDate(this.endTime()))) {\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, 1);\n                    } else {\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                } else {\n                    endTime = endTime === 0 ? MS_PER_DAY : endTime;\n                    if (startTime > eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    } else if (endTime < eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    if (endTime < eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    } else if (startTime > eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, -1);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                }\n                occurrence = event.clone({\n                    start: adjustedStartDate ? adjustedStartDate : start,\n                    end: adjustedEndDate ? adjustedEndDate : end,\n                    _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                    _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                    isAllDay: false\n                });\n                return {\n                    occurrence: occurrence,\n                    head: head,\n                    tail: tail\n                };\n            },\n            _renderEvents: function (events, groupIndex, eventGroup) {\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = this.content;\n                        if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                            var adjustedEvent = this._adjustEvent(event);\n                            var group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var element;\n                            if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                                element = this._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n                                element.appendTo(container).css({\n                                    top: 0,\n                                    height: this.options.eventHeight\n                                });\n                                var eventObject = {\n                                    start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                                    end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                                    element: element,\n                                    uid: event.uid,\n                                    slotRange: range,\n                                    rowIndex: 0,\n                                    offsetTop: 0\n                                };\n                                eventGroup.events[event.uid] = eventObject;\n                                this.addContinuousEvent(group, range, element, event.isAllDay);\n                                this._arrangeRows(eventObject, range, eventGroup);\n                            }\n                        }\n                    }\n                }\n            },\n            addContinuousEvent: function (group, range, element, isAllDay) {\n                var events = group._continuousEvents;\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            },\n            _createEventElement: function (occurrence, event, head, tail) {\n                var template = this.eventTemplate;\n                var editable = this.options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _arrangeRows: function (eventObject, slotRange, eventGroup) {\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var rectRight = rect.right + this.options.eventMinWidth;\n                var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    rectLeft: rect.left,\n                    rectRight: rectRight,\n                    element: eventObject.element,\n                    uid: eventObject.uid\n                });\n                events.push({\n                    start: startIndex,\n                    end: endIndex,\n                    uid: eventObject.uid\n                });\n                var rows = SchedulerView.createRows(events);\n                if (eventGroup.maxRowCount < rows.length) {\n                    eventGroup.maxRowCount = rows.length;\n                }\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                    }\n                }\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        return this._rowCountForLevel(resources.length - 1);\n                    } else {\n                        return this._columnCountForLevel(resources.length - 1);\n                    }\n                }\n                return 1;\n            },\n            _updateEventForSelection: function (event) {\n                var adjustedEvent = this._adjustEvent(event.clone());\n                return adjustedEvent.occurrence;\n            },\n            _eventOptionsForMove: function (event) {\n                if (event.isAllDay) {\n                    return { isAllDay: false };\n                }\n                return {};\n            },\n            _updateEventForResize: function (event) {\n                if (event.isAllDay) {\n                    event.set('isAllDay', false);\n                }\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var group = this.groups[groupIndex];\n                var clonedEvent = event.clone({\n                    start: event.start,\n                    end: event.end\n                });\n                var eventDuraton = clonedEvent.duration();\n                clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n                clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n                var adjustedEvent = this._adjustEvent(clonedEvent);\n                var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                this._removeMoveHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint = this._createEventElement(adjustedEvent.occurrence, adjustedEvent.occurrence, false, false);\n                    hint.addClass('k-event-drag-hint');\n                    var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, this.options.snap);\n                    var width = rect.right - rect.left - 2;\n                    if (width < 0) {\n                        width = 0;\n                    }\n                    var left = this._adjustLeftPosition(rect.left);\n                    var css = {\n                        left: left,\n                        top: startSlot.offsetTop,\n                        height: startSlot.offsetHeight - 2,\n                        width: width\n                    };\n                    hint.css(css);\n                    this._moveHint = this._moveHint.add(hint);\n                }\n                var content = this.content;\n                this._moveHint.appendTo(content);\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, false, false);\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    var startRect = range.innerRect(startTime, endTime, false);\n                    startRect.top = start.offsetTop;\n                    var width = startRect.right - startRect.left;\n                    var height = start.offsetHeight;\n                    var left = this._adjustLeftPosition(startRect.left);\n                    var hint = SchedulerView.fn._createResizeHint.call(this, left, startRect.top, width, height);\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n                var format = 't';\n                var container = this.content;\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple && !vertical) {\n                    if (startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n            _changeGroup: function (selection, previous) {\n                var method = previous ? 'prevGroupSlot' : 'nextGroupSlot';\n                var slot = this[method](selection.start, selection.groupIndex, false);\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n                return slot;\n            },\n            prevGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex <= 0) {\n                    return;\n                }\n                if (this._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.last();\n                }\n            },\n            nextGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n                if (this._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.first();\n                }\n            },\n            _verticalSlots: function (selection, ranges, multiple, reverse) {\n                var method = reverse ? 'leftSlot' : 'rightSlot';\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n                if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = this._changeGroup(selection, reverse);\n                }\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n            _horizontalSlots: function (selection, ranges, multiple, reverse) {\n                var method = reverse ? 'upSlot' : 'downSlot';\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n                if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = this._changeGroup(selection, reverse);\n                }\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n            _changeViewPeriod: function (selection, reverse) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                selection.start = new Date(date);\n                selection.end = new Date(date);\n                if (this._isHorizontallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n                var duration = end - start;\n                if (reverse) {\n                    end = getMilliseconds(this.endTime());\n                    end = end === 0 ? MS_PER_DAY : end;\n                    setTime(selection.start, end - duration);\n                    setTime(selection.end, end);\n                } else {\n                    start = getMilliseconds(this.startTime());\n                    setTime(selection.start, start);\n                    setTime(selection.end, start + duration);\n                }\n                selection.events = [];\n                return true;\n            },\n            move: function (selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var keys = kendo.keys;\n                var ranges = group.ranges(selection.start, selection.end, false, false);\n                var startSlot, endSlot, reverse, slots;\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n                    this._updateDirection(selection, ranges, shift, reverse, true);\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n                    if ((!slots.startSlot || !slots.endSlot) && !shift && this._changeViewPeriod(selection, reverse, false)) {\n                        return handled;\n                    }\n                }\n                if (handled) {\n                    startSlot = slots.startSlot;\n                    endSlot = slots.endSlot;\n                    if (shift) {\n                        var backward = selection.backward;\n                        if (backward && startSlot) {\n                            selection.start = startSlot.startDate();\n                        } else if (!backward && endSlot) {\n                            selection.end = endSlot.endDate();\n                        }\n                    } else if (startSlot && endSlot) {\n                        selection.start = startSlot.startDate();\n                        selection.end = endSlot.endDate();\n                    }\n                    selection.events = [];\n                }\n                return handled;\n            },\n            destroy: function () {\n                var that = this;\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            }\n        });\n        extend(true, ui, {\n            TimelineView: TimelineView,\n            TimelineWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWeekView',\n                    title: 'Timeline Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWeek',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineWorkWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWorkWeekView',\n                    title: 'Timeline Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWorkWeek',\n                nextDate: function () {\n                    return kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.options.workWeekStart, 1);\n                },\n                previousDate: function () {\n                    return kendo.date.previousDay(this.startDate());\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.options.workWeekStart, -1), end = kendo.date.dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineMonthView: TimelineView.extend({\n                options: {\n                    name: 'TimelineMonthView',\n                    title: 'Timeline Month',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                    workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                    footer: false,\n                    majorTick: 1440,\n                    minorTickCount: 1\n                },\n                name: 'timelineMonth',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.firstDayOfMonth(selectedDate), end = kendo.date.lastDayOfMonth(selectedDate), idx, length, dates = [];\n                    for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}