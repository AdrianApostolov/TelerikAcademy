{"version":3,"sources":["kendo.dataviz.diagram.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals",1,10,100,2,20,200,3,30,300,4,40,400,5,50,500,6,60,600,7,70,700,8,80,800,9,90,900,1000,"values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","Math","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","measureText","style","measureBox","TextMetrics","current","measure","doc","document","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","baselineMarker","styleKey","cacheKey","cachedResult","width","height","baseline","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","e","geometryChange","suspend","resume","_observerField","field","mixins","Range","start","stop","step","rangeIntegerScale","k","range","j","Utils","sign","Infinity","abs","findRadian","end","sngXComp","sngYComp","y","atan","Easing","Ticker","diagram","isArray","EPSILON","isNearZero","num","isDefined","obj","isUndefined","isObject","has","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","parseFloat","isEmpty","simpleExtend","destination","source","initArray","serializePoints","points","res","deserializePoints","s","Point","parseInt","randomInteger","lower","upper","floor","random","DFT","el","func","item","childNodes","getMatrixAngle","atan2","b","getMatrixScaling","sX","sqrt","a","sY","number","findAngle","center","forEach","iterator","thisRef","any","predicate","remove","what","ax","indexOf","contains","fold","list","acc","context","initial","find","constraint","insert","position","all","clear","bisort","sortfunc","addRange","easeInOut","cos","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","caller","onStep","seekTo","to","seekFromTo","from","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","movement","timePassed","ui","intersectLine","start1","end1","start2","end2","isSegment","num1","num2","tangensdiff","normalVariable","mean","deviation","log","randomId","chars","PathDefiner","Rect","Size","Intersect","RectAlign","Polar","Matrix","MatrixVector","Geometry","HashTable","Dictionary","Queue","Set","Node","Link","Graph","Point2D","isFunction","HITTESTAREA","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","halfpi","len","factor","isOnLine","temp","r1","r2","o1","u1","inflate","union","parse","tempStr","slice","xy","left","right","point","dx","dy","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","delta","scaled","thisCenter","zoom","overlaps","rectBottomRight","Empty","toRect","empty","fromPoints","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","container","align","content","alignment","alignValues","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","nums","trim","substr","fromMatrix","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","p1","p2","minimum","_buckets","add","_createGetBucket","_bucketExists","set","containsKey","hashId","_hash","bucket","hashes","_hashes","ht","_hashString","_objectHashId","ch","_hashId","Observable","dictionary","that","_hashTable","Error","forEachValue","forEachKey","keys","enqueue","next","dequeue","resource","kv","toArray","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","child","level","root","found","getConnectedComponents","componentId","components","graph","componentIndex","setItemIndices","_collectConnectedNodes","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","remaining","levelCount","ni","cn","newLink","treeLevels","tree","_addNode","pop","addLink","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","foundSource","foundTarget","addExistingLink","getNode","addNode","removeAllLinks","t","hasLink","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","sourceStack","targetStack","intensity","targets","li","targetLink","sources","si","sourceLink","maxdiff","ri","ril","u","vertexOrder","kk","reversedEdges","unshift","concat","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","previous","g","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","connect","createDiagramFromGraph","doLayout","randomSize","opt","gli","sourceShape","targetShape","shi","clientWidth","clientHeight","SpringLayout","layoutGraph","limitToView","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","diffNumericOptions","fields","elementOptions","hasChanges","sizeOptionsOrDefault","normalizeDrawingOptions","drawingOptions","getColor","TRANSPARENT","Color","toHex","lineAngle","xDiff","yDiff","createSegment","Segment","toDrawingRect","Scale","Translation","Rotation","CompositeTransform","AutoSizeableMixin","Element","VisualBase","TextBlock","Rectangle","MarkerBase","CircleMarker","ArrowMarker","MarkerPathMixin","Path","Line","Polyline","Image","Group","Layout","Circle","Canvas","geometry","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","toMatrix","format","invert","toMatrixVector","Length","ZERO","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","startPoint","_measured","_boundingBox","rawBBox","stroke","opacity","_fill","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","_textColor","_font","_initText","fontSize","fontFamily","Text","font","sizeChanged","textOptions","_initPath","_setPosition","_drawPath","closed","sizeOptions","elements","anchor","createElement","_transformToPath","path","transformCopy","positionMarker","targetSegment","_linePoints","endPoint","nextSegment","prevSegment","controlOut","controlIn","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","marker","_markers","_createMarkers","_createMarker","markerType","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","_createElements","_setData","multipath","_updatePath","_pointsDiffer","currentPoints","differ","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","selectSingle","meta","isSelected","ctrlKey","select","addToSelection","noMeta","altKey","shiftKey","tryActivateSelection","enabled","testKey","toUpperCase","hitToOppositeSide","hit","canDrag","editable","drag","hitTestShapeConnectors","connector","connectors","HIT_TEST_DISTANCE","PositionAdapter","LayoutUndoUnit","CompositeUnit","ConnectionEditUnit","ConnectionEditUndoUnit","DeleteConnectionUnit","DeleteShapeUnit","TransformUnit","AddConnectionUnit","AddShapeUnit","PanUndoUnit","RotateUnit","ToFrontUnit","ToBackUnit","UndoRedoService","EmptyTool","ScrollerTool","PointerTool","SelectionTool","ConnectionTool","ConnectionEditTool","ToolService","ConnectionRouterBase","LinearConnectionRouter","PolylineRouter","CascadingRouter","AdornerBase","ConnectionEditAdorner","ConnectorsAdorner","ResizingAdorner","Selector","ConnectorVisual","Movable","browser","support","proxy","Cursors","arrow","grip","cross","south","east","west","north","rowresize","colresize","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","layoutState","pusher","getShapeById","subjects","froms","tos","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","ticker","conn","units","undoUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","undoSource","undoTarget","targetConnector","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","deselect","initialPosition","finalPosition","finalPos","pan","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","items","initialIndices","_toIndex","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","toolService","tryActivate","getCursor","canvas","scroller","virtualScroll","tool","friction","mobileOS","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","dimension","makeVirtual","virtualSize","dimensions","disable","pannable","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","selectable","handle","_hitTest","_resizingAdorner","isDragHandle","connections","service","undoRedoService","triggerClick","_getCursor","selector","selectArea","_createConnection","_c","_connectionManipulation","_removeHover","activeConnection","sourceConnector","Shape","getConnector","_syncConnectionChanges","isActive","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","updateHovered","keyDown","toRemove","metaKey","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","newConnection","cursor","css","msie","version","cssText","disabledShape","isNew","selectedConnections","_connectorsAdorner","_visible","_selectedItems","Connection","_hitTestItems","_hitTestElements","mainLayer","shapeIdx","connectionIdx","shapeHit","connectionHit","hitTest","rec","getBounds","allPoints","route","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","horizontal","_adorners","sp","tp","_ts","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","rx","ry","sb","tb","modelToLayer","_refreshHandler","ctr","unbind","each","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","thr","newCenter","oldBounds","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","_truncateDistance","_displaceBounds","minWidth","minHeight","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","_diffStates","_syncShapeChanges","thumb","rotationThumb","_rotationThumbBounds","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","HyperTree","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","boundingRect","currentHeight","currentWidth","moveToOffset","nodeBounds","newpoints","pt","deltax","deltay","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","newEdge","areConnectedAlready","adapter","finalNodeSet","LayoutState","initialTemperature","guessBounds","temperature","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","_SquareForce","distance","av","squareSize","ratio","multiplier","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","startAngle","endAngle","previousRoot","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","pl","nl","col","basevalue","normalizeAngle","childNode","cp","childAngleFraction","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","sortedNodes","minLayer","layerMap","layerCount","o2","o1layer","o2layer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","classNodes","rightSibling","D","neighbor","leftPos","placeLeft","POSITIVE_INFINITY","nodeLeftClass","upNodes","downNodes","intDiv","placeRightToLeft","rightClasses","leftSibling","rightPos","placeRight","NEGATIVE_INFINITY","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","ndsinl","vnode","wings","currentWing","wing","_nodesInLink","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","maximumHeight","ctx","MIN_VALUE","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","fromLayerIndex","reachedFinalLayerIndex","layerIncrement","_gridPositionComparer","dest","virtualStartIndex","virtualStart","sequence","virtualEnd","virtualEndIndex","_firstVirtualNode","_sequencer","nextVirtualNode","adjustDirections","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","clayer","j1","j2","getNeighborOnLayer","dir","_sequenceSingle","combineSequences","pair","rightHeap","leftRes","rightRes","leftHeap","_positionDescendingComparer","_positionAscendingComparer","leftClass","_getComposite","rightClass","maxLayoutIterations","it","gridPos","layoutLayer","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","o","oLayer","dLayer","oPos","dPos","upLayer","downLayer","depthOfDumminess","prevLink","dedum","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","inode","compareValue","n1BaryCenter","n2BaryCenter","compareByIndex","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","countLinksCrossingBetweenTwoLayers","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","n11gp","n12gp","n21gp","n22gp","crossings","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","Array","GraphAdapter","mwDelta","origEvent","originalEvent","wheelDelta","detail","isAutoConnector","closestConnector","resCtr","minimumDistance","MAXINT","ctrs","distanceTo","indicesOfItems","filterShapeDataItem","dataItem","filterConnectionDataItem","fromConnector","fromX","fromY","toConnector","toX","toY","connectionSelector","textField","model","dataSource","reader","idField","appendTo","kendoDropDownList","dataValueField","dataTextField","toJSON","optionLabel","valuePrimitive","InactiveItem","callbacks","InactiveItemsCollection","cloneDataItem","Model","_defaultId","splitDiagramElements","createModel","ObservableObject","clearField","copyDefaultOptions","mainOptions","translateToOrigin","bbox","defaultButtons","DiagramElement","Connector","Diagram","DiagramToolBar","Editor","PopupEditor","QuadRoot","QuadNode","ShapesQuadTree","geom","Widget","HierarchicalDataSource","isPlainObject","NS","CASCADING","CHANGE","CLICK","ERROR","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","DefaultConnectors","getPosition","imageClass","className","iconClass","defaults","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_updateContentVisual","_createContentVisual","elementTemplate","_canSelect","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","modelOptions","redrawVisual","_isEditable","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","toConenctor","dataMap","_dataMap","connectionsDataSource","getByUid","uid","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","autoSourceShape","autoTargetShape","_resolveAutoConnectors","targetConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","sourceConnectors","_testRoutePoints","router","passRoute","_shapesQuadTree","hitTestRect","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_initCanvas","adornerLayer","_createHandlers","_fetchFreshData","_createGlobalToolBar","_clipboard","pauseMouseHandlers","_createOptionElements","theme","draggable","autoBind","tooltip","connectionDefaults","toolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","view","editor","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","connectionSelectorHandler","cancelEdit","shapeEditors","shapeTemplate","connectionEditors","connectionTemplate","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","userShapeDefaults","canvasContainer","viewPort","viewport","on","_wheel","touch","_userEvents","UserEvents","multiTouch","tap","_tap","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","_mouseMove","_mouseUp","_mouseDown","_mouseover","_mouseout","_keydown","_syncHandler","_resizeHandler","onResize","_caculateMobilePosition","_createToolBar","documentToModel","location","initialCenter","eventArgs","_gesture","_initialCenter","zoomedPoint","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","_panTransform","_updateAdorners","preventDefault","_kendoNode","srcElement","themes","themeName","themeOptions","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","scrollHeight","load","setOptions","added","removed","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","viewportVector","raw","_getPan","animatedScrollTo","scrollTo","outerHeight","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_calculatePosition","which","_meta","_addItem","padding","popupWidth","popupHeight","connectionBounds","singleToolBar","_popup","outerWidth","showAt","keyCode","pointEvent","pageX","pageY","_normalizePointZoom","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","then","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","open","newGroup","editTool","spriteCssClass","showText","attributes","_setAttributes","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","rotateClockwise","rotateAnticlockwise","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","callback","deffered","Deferred","deferred","resolve","_add","_quadNode","_testRect","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,aAAc,cAAeD,IACtC,WA8UE,MA7UC,YAGG,QAASE,GAAQC,GACb,aAAcA,KAAUC,EAE5B,QAASC,GAAMF,EAAOG,GAClB,GAAIC,GAAQC,EAAIF,EAChB,OAAOG,GAAKJ,MAAMF,EAAQI,GAASA,EAEvC,QAASC,GAAIE,GACT,MAAIA,GACOD,EAAKD,IAAI,GAAIE,GAEb,EAGf,QAASC,GAAWR,EAAOS,EAAKC,GAC5B,MAAOJ,GAAKI,IAAIJ,EAAKG,IAAIT,EAAOU,GAAMD,GAE1C,QAASE,GAAIC,GACT,MAAOA,GAAUC,EAErB,QAASC,GAAIC,GACT,MAAOA,GAAUF,EAErB,QAASG,GAASC,GACd,MAAsB,gBAARA,KAAqBC,MAAMD,GAE7C,QAASE,GAAenB,EAAOoB,GAC3B,MAAOrB,GAAQC,GAASA,EAAQoB,EAEpC,QAASC,GAAIrB,GACT,MAAOA,GAAQA,EAEnB,QAASsB,GAAUC,GAAnB,GAEaC,GADLC,IACJ,KAASD,IAAOD,GACZE,EAAMC,KAAKF,EAAMD,EAAOC,GAE5B,OAAOC,GAAME,OAAOC,KAAK,IAE7B,QAASC,GAAQC,GAAjB,GAEaC,GADLC,EAAO,UACX,KAASD,EAAI,EAAOD,EAAIG,OAARF,IAAkBA,EAC9BC,IAASA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IACzEA,GAAQF,EAAII,WAAWH,EAE3B,OAAOC,KAAS,EAEpB,QAASG,GAAWZ,GAChB,MAAOM,GAAQP,EAAUC,IAQ7B,QAASa,GAAYC,GACjB,GAAyBN,GAArBE,EAASI,EAAIJ,OAAWxB,EAAM6B,EAAS5B,EAAM6B,CACjD,KAAKR,EAAI,EAAOE,EAAJF,EAAYA,IACpBrB,EAAMJ,EAAKI,IAAIA,EAAK2B,EAAIN,IACxBtB,EAAMH,EAAKG,IAAIA,EAAK4B,EAAIN,GAE5B,QACItB,IAAKA,EACLC,IAAKA,GAGb,QAAS8B,GAASH,GACd,MAAOD,GAAYC,GAAK5B,IAE5B,QAASgC,GAASJ,GACd,MAAOD,GAAYC,GAAK3B,IAE5B,QAASgC,GAAeL,GACpB,MAAOM,GAAkBN,GAAK5B,IAElC,QAASmC,GAAeP,GACpB,MAAOM,GAAkBN,GAAK3B,IAElC,QAASiC,GAAkBN,GAA3B,GAEaN,GAAOE,EACRY,EAFJpC,EAAM6B,EAAS5B,EAAM6B,CACzB,KAASR,EAAI,EAAGE,EAASI,EAAIJ,OAAYA,EAAJF,EAAYA,IACzCc,EAAIR,EAAIN,GACF,OAANc,GAAcC,SAASD,KACvBpC,EAAMH,EAAKG,IAAIA,EAAKoC,GACpBnC,EAAMJ,EAAKI,IAAIA,EAAKmC,GAG5B,QACIpC,IAAKA,IAAQ6B,EAAUS,OAAYtC,EACnCC,IAAKA,IAAQ6B,EAAUQ,OAAYrC,GAG3C,QAASsC,GAAKC,GACV,MAAIA,GACOA,EAAMA,EAAMhB,OAAS,GADhC,OAIJ,QAASiB,GAAOC,EAAOC,GAEnB,MADAD,GAAMzB,KAAK2B,MAAMF,EAAOC,GACjBD,EAEX,QAASG,GAAeC,GACpB,MAAOC,GAAMC,SAASF,GAClBG,cAAc,EACdC,UAAW,MAGnB,QAASC,GAAWC,EAAM7D,GACtB,MAAOD,GAAQC,IAAoB,OAAVA,EAAiB,IAAM6D,EAAO,KAAQ7D,EAAQ,KAAQ,GAEnF,QAAS8D,GAAcC,GAAvB,GAEahC,GADLiC,EAAS,EACb,KAASjC,EAAI,EAAOgC,EAAM9B,OAAVF,EAAkBA,IAC9BiC,GAAUJ,EAAWG,EAAMhC,GAAG,GAAIgC,EAAMhC,GAAG,GAE/C,OAAOiC,GAEX,QAASC,GAAYF,GAArB,GAEahC,GACD/B,EAFJgE,EAAS,EACb,KAASjC,EAAI,EAAOgC,EAAM9B,OAAVF,EAAkBA,IAC1B/B,EAAQ+D,EAAMhC,GAAG,GACjBhC,EAAQC,KACRgE,GAAUD,EAAMhC,GAAG,GAAK,IAAM/B,EAAQ,IAG9C,OAAe,KAAXgE,EACOA,EADX,OAIJ,QAASE,GAAWC,GAIhB,MAHoB,gBAATA,KACPA,GAAQ,MAELA,EAEX,QAASC,GAAUC,GAAnB,GAGY5C,GACKM,EAHTuC,IACJ,IAAID,EAEA,IADI5C,EAAQ+B,EAAMe,UAAUF,GAAKG,MAAM,KAC9BzC,EAAI,EAAON,EAAMQ,OAAVF,EAAkBA,IAC9BuC,EAAO5C,KAAK,SAAWD,EAAMM,GAGrC,OAAOuC,GAAO1C,KAAK,KAEvB,QAAS6C,GAAcC,GACnB,MAAiB,KAAVA,GAA0B,OAAVA,GAA4B,SAAVA,GAA8B,gBAAVA,IAA4B3E,EAAQ2E,GAErG,QAASC,GAAc9B,GA8DnB,IA9DJ,GACQ+B,IACAC,EAAG,IACHC,GAAI,IACJC,IAAK,IACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,EAAG,MACHC,GAAI,MACJC,IAAK,MACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,EAAG,IACHC,GAAI,IACJC,IAAK,IACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,EAAG,MACHC,GAAI,MACJC,IAAK,MACLC,EAAG,OACHC,GAAI,OACJC,IAAK,OACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,IAAM,KAENC,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEAC,EAAQ,GACL7D,EAAI,GACC4D,EAAO,GAAX5D,EACA4D,EAAOE,SAEPD,GAAS9B,EAAS6B,EAAO,IACzB5D,GAAK4D,EAAO,GAGpB,OAAOC,GAEX,QAASE,GAAcC,GAAvB,GAEQC,GASA9G,EAAW+G,EACNhF,EACDiF,CADR,KAXAH,EAAIA,EAAEI,cACFH,GACA/E,EAAG,EACHiF,EAAG,EACHE,EAAG,GACHC,EAAG,GACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAEHtH,EAAQ,EAAG+G,EAAO,EACbhF,EAAI,EAAO8E,EAAE5E,OAANF,IAAgBA,EAAG,CAE/B,GADIiF,EAAIF,EAAOD,EAAEU,OAAOxF,KACnBiF,EACD,MAAO,KAEXhH,IAASgH,EACLA,EAAID,IACJ/G,GAAS,EAAI+G,GAEjBA,EAAOC,EAEX,MAAOhH,GAEX,QAASwH,GAAQ3H,GACb,GAAI4H,GAAQC,OAAOC,OAAO,KAC1B,OAAO,YAAA,GAEM5F,GADL6F,EAAK,EACT,KAAS7F,EAAI8F,UAAU5F,SAAUF,GAAK,GAClC6F,GAAM,IAAMC,UAAU9F,EAE1B,OAAI6F,KAAMH,GACCA,EAAMG,GAEV/H,EAAEwD,MAAMyE,KAAMD,YAG7B,QAASE,GAAWC,GAEhB,IADA,GAAsDhI,GAAOiI,EAAzDjE,KAAakE,EAAU,EAAGjG,EAAS+F,EAAO/F,OAC7BA,EAAViG,GACHlI,EAAQgI,EAAO9F,WAAWgG,KACtBlI,GAAS,OAAkB,OAATA,GAA4BiC,EAAViG,GACpCD,EAAQD,EAAO9F,WAAWgG,KACH,QAAV,MAARD,GACDjE,EAAOtC,OAAe,KAAR1B,IAAiB,KAAe,KAARiI,GAAgB,QAEtDjE,EAAOtC,KAAK1B,GACZkI,MAGJlE,EAAOtC,KAAK1B,EAGpB,OAAOgE,GAEX,QAASmE,GAAWlF,GAChB,MAAOA,GAAMmF,IAAI,SAAUpI,GACvB,GAAIgE,GAAS,EAOb,OANIhE,GAAQ,QACRA,GAAS,MACTgE,GAAUqE,OAAOC,aAAatI,IAAU,GAAK,KAAO,OACpDA,EAAQ,MAAgB,KAARA,GAEpBgE,GAAUqE,OAAOC,aAAatI,KAE/B4B,KAAK,IAlSf,GACOtB,GAAOiI,KAAM/E,EAAQgF,OAAOhF,MAAOiF,EAAajF,EAAMiF,WACtD5H,EAAaP,EAAKoI,GAAK,IAAKpG,EAAUqG,OAAOC,UAAWrG,GAAWoG,OAAOC,UAAW3I,EAAY,YAmDjG4I,EAAMC,KAAKD,GACVA,KACDA,EAAM,WACF,OAAO,GAAIC,OAAOC,YA4O1BN,EAAWjF,GACPwF,MACI1G,QAASA,EACTC,QAASA,EACTW,OAAQA,EACRd,YAAaA,EACbI,SAAUA,EACVC,SAAUA,EACV1C,QAASA,EACTe,IAAKA,EACLe,QAASA,EACTM,WAAYA,EACZnB,SAAUA,EACVyD,cAAeA,EACfzB,KAAMA,EACNxC,WAAYA,EACZqI,IAAKA,EACLvH,UAAWA,EACXpB,MAAOA,EACPS,IAAKA,EACLiD,WAAYA,EACZE,cAAeA,EACfM,UAAWA,EACXF,WAAYA,EACZD,YAAaA,EACbX,eAAgBA,EAChBX,kBAAmBA,EACnBD,eAAgBA,EAChBE,eAAgBA,EAChBvB,IAAKA,EACLF,eAAgBA,EAChByF,cAAeA,EACfjC,cAAeA,EACf6C,QAASA,EACTW,WAAYA,EACZJ,WAAYA,KAGpBvE,EAAMyF,QAAQD,KAAOxF,EAAMwF,KAC3BxF,EAAM0F,QAAQF,KAAOxF,EAAMwF,QAExBR,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,qBACH,aACA,aACDD,IACL,YACG,SAAU0J,GA8FP,QAASC,GAAYjG,EAAMkG,EAAOC,GAC9B,MAAOC,GAAYC,QAAQC,QAAQtG,EAAMkG,EAAOC,GA/FvD,GACOI,GAAMC,SAAUvG,EAAQgF,OAAOhF,MAAOwG,EAAQxG,EAAMwG,MAAOhB,EAAOxF,EAAMwF,KAAMjJ,EAAUiJ,EAAKjJ,QAC7FkK,EAAWD,EAAME,QACjBC,KAAM,SAAUhG,GACZ2D,KAAKsC,MAAQjG,EACb2D,KAAKuC,QAAU,EACfvC,KAAKwC,SAETC,IAAK,SAAU/I,EAAKxB,GAChB,GAAIwK,GAAM1C,KAAMM,EAAMoC,EAAIF,KAAMG,GACxBjJ,IAAKA,EACLxB,MAAOA,EAEfoI,GAAI5G,GAAOiJ,EACND,EAAIE,OAGLF,EAAIG,MAAMC,MAAQH,EAClBA,EAAMI,MAAQL,EAAIG,MAClBH,EAAIG,MAAQF,GAJZD,EAAIE,MAAQF,EAAIG,MAAQF,EAMxBD,EAAIH,SAAWG,EAAIJ,OACnBhC,EAAIoC,EAAIE,MAAMlJ,KAAO,KACrBgJ,EAAIE,MAAQF,EAAIE,MAAME,MACtBJ,EAAIE,MAAMG,MAAQ,MAElBL,EAAIH,WAGZS,IAAK,SAAUtJ,GACX,GAAIgJ,GAAM1C,KAAM2C,EAAQD,EAAIF,KAAK9I,EACjC,OAAIiJ,IACIA,IAAUD,EAAIE,OAASD,IAAUD,EAAIG,QACrCH,EAAIE,MAAQD,EAAMG,MAClBJ,EAAIE,MAAMG,MAAQ,MAElBJ,IAAUD,EAAIG,QACVF,EAAMI,QACNJ,EAAMI,MAAMD,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMC,MAAQJ,EAAMI,OAE9BJ,EAAMI,MAAQL,EAAIG,MAClBF,EAAMG,MAAQ,KACdJ,EAAIG,MAAMC,MAAQH,EAClBD,EAAIG,MAAQF,GAETA,EAAMzK,OAfjB,UAmBJ+K,EAAoBxB,EAAE,2RAAuS,GAC7TI,EAAcK,EAAME,QACpBC,KAAM,SAAUa,GACZlD,KAAKmD,OAAS,GAAIhB,GAAS,KAC3BnC,KAAKoD,aAAaF,IAEtBA,SAAWG,mBAAoB,GAC/BtB,QAAS,SAAUtG,EAAMkG,EAAO2B,GAAvB,GAKDjH,GAKAuF,EACA2B,EACK7J,EACDxB,EAZJsL,EAAWtC,EAAK1H,UAAUmI,GAAQ8B,EAAWvC,EAAKnH,QAAQ0B,EAAO+H,GAAWE,EAAe1D,KAAKmD,OAAOH,IAAIS,EAC/G,IAAIC,EACA,MAAOA,EAEPrH,IACAsH,MAAO,EACPC,OAAQ,EACRC,SAAU,GAEVjC,EAAa0B,EAAMA,EAAML,EACzBM,EAAiBvD,KAAK8D,kBAAkBC,WAAU,EACtD,KAASrK,IAAOiI,GACRzJ,EAAQyJ,EAAMjI,GACdzB,EAAQC,KACR0J,EAAWD,MAAMjI,GAAOxB,EAehC,OAZAuJ,GAAEG,GAAYnG,KAAKA,GACnBmG,EAAWoC,YAAYT,GACvBvB,EAAIiC,KAAKD,YAAYpC,IAChBnG,EAAO,IAAItB,SACZkC,EAAKsH,MAAQ/B,EAAWsC,YAAclE,KAAKkD,QAAQG,mBACnDhH,EAAKuH,OAAShC,EAAWuC,aACzB9H,EAAKwH,SAAWN,EAAea,UAAYpE,KAAKkD,QAAQG,oBAExDhH,EAAKsH,MAAQ,GAAKtH,EAAKuH,OAAS,GAChC5D,KAAKmD,OAAOV,IAAIgB,EAAUpH,GAE9BuF,EAAWyC,WAAWC,YAAY1C,GAC3BvF,GAEXyH,gBAAiB,WACb,MAAOrC,GAAE,gGAA+GzB,KAAKkD,QAAQG,mBAAqB,eAAiBrD,KAAKkD,QAAQG,mBAAqB,4BAAkC,KAGvPxB,GAAYC,QAAU,GAAID,GAI1BnG,EAAMwF,KAAKW,YAAcA,EACzBnG,EAAMwF,KAAKiB,SAAWA,EACtBzG,EAAMwF,KAAKQ,YAAcA,GAC3BhB,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,eAAgB,aAAcD,IACvC,WAgDE,MA/CC,YAGG,QAASyM,GAAaC,GAAtB,GAEQC,GAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EADpC9I,EAAS,GAETjC,EAAI,CAER,KADAwK,EAAQQ,EAAWR,GACRA,EAAMtK,OAAVF,GACHyK,EAAOD,EAAMrK,WAAWH,KACxB0K,EAAOF,EAAMrK,WAAWH,KACxB2K,EAAOH,EAAMrK,WAAWH,KACxB4K,EAAOH,GAAQ,EACfI,GAAe,EAAPJ,IAAa,EAAIC,GAAQ,EACjCI,GAAe,GAAPJ,IAAc,EAAIC,GAAQ,EAClCI,EAAc,GAAPJ,EACHxL,MAAMuL,GACNI,EAAOC,EAAO,GACP5L,MAAMwL,KACbI,EAAO,IAEX9I,EAASA,EAASgJ,EAAQzF,OAAOoF,GAAQK,EAAQzF,OAAOqF,GAAQI,EAAQzF,OAAOsF,GAAQG,EAAQzF,OAAOuF,EAE1G,OAAO9I,GAEX,QAAS+I,GAAWR,GAApB,GAEaxK,GACDqF,EAFJpD,EAAS,EACb,KAASjC,EAAI,EAAOwK,EAAMtK,OAAVF,EAAkBA,IAC1BqF,EAAImF,EAAMrK,WAAWH,GACjB,IAAJqF,EACApD,GAAUsE,EAAalB,GACZ,KAAJA,GACPpD,GAAUsE,EAAa,IAAMlB,IAAM,GACnCpD,GAAUsE,EAAa,IAAU,GAAJlB,IAClB,MAAJA,IACPpD,GAAUsE,EAAa,IAAMlB,IAAM,IACnCpD,GAAUsE,EAAa,IAAMlB,IAAM,EAAI,IACvCpD,GAAUsE,EAAa,IAAU,GAAJlB,GAGrC,OAAOpD,GAxCd,GACOR,GAAQgF,OAAOhF,MAAOiF,EAAajF,EAAMiF,WAAYH,EAAeD,OAAOC,aAC3E0E,EAAU,mEAwCdvE,GAAWjF,EAAMwF,MACbsD,aAAcA,EACdS,WAAYA,OAGbvE,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,oBAAqB,cAAeD,IAC7C,WA8DE,MA7DC,UAAU0J,GAAV,GACOjJ,GAAOiI,KAAM/E,EAAQgF,OAAOhF,MAAOiF,EAAajF,EAAMiF,WAAYwE,EAAU1D,EAAE0D,QAC9EC,GACAC,UAAW,WAEP,MADArF,MAAKsF,WAAatF,KAAKsF,gBAG3BC,YAAa,SAAUC,GAMnB,MALKxF,MAAKsF,WAGNtF,KAAKsF,WAAW1L,KAAK4L,GAFrBxF,KAAKsF,YAAcE,GAIhBxF,MAEXyF,eAAgB,SAAUD,GAAV,GACRH,GAAYrF,KAAKqF,YACjBK,EAAQP,EAAQK,EAASH,EAI7B,OAHa,IAATK,GACAL,EAAUM,OAAOD,EAAO,GAErB1F,MAEX4F,QAAS,SAAUC,EAAYC,GAAtB,GAEDC,GACAC,EAFAX,EAAYrF,KAAKsF,UAGrB,IAAID,IAAcrF,KAAKiG,WACnB,IAAKD,EAAM,EAASX,EAAUlL,OAAhB6L,EAAwBA,IAClCD,EAAWV,EAAUW,GACjBD,EAASF,IACTE,EAASF,GAAYC,EAIjC,OAAO9F,OAEXkG,cAAe,SAAUC,GACrBnG,KAAK4F,QAAQ,gBAAiBO,IAElCC,eAAgB,SAAUD,GACtBnG,KAAK4F,QAAQ,iBAAkBO,IAEnCE,QAAS,WAEL,MADArG,MAAKiG,YAAcjG,KAAKiG,YAAc,GAAK,EACpCjG,MAEXsG,OAAQ,WAEJ,MADAtG,MAAKiG,WAAazN,EAAKI,KAAKoH,KAAKiG,YAAc,GAAK,EAAG,GAChDjG,MAEXuG,eAAgB,SAAUC,EAAOtO,GACzB8H,KAAKwG,IACLxG,KAAKwG,GAAOf,eAAezF,MAE/BA,KAAKwG,GAAStO,EACdA,EAAMqN,YAAYvF,OAG1BW,GAAWjF,GAAS+K,QAAUrB,eAAgBA,MAChD1E,OAAOhF,MAAM6I,QACR7D,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,yBAA0B,cAAeD,IAClD,YACG,SAAU0J,EAAGxG,GAyGV,QAASyL,GAAMC,EAAOC,EAAMC,GAcxB,QAASC,GAAkB1H,GAEvB,IADA,GAAI2H,GAAI,EACD3H,EAAI2H,EAAI,GACXA,GAAK,EAET,OAAOA,GAnBf,GAaQC,GAAY/M,EAAQgN,EAQpBF,CApBJ,IAAoB,IAATJ,GAAuC,IAARC,EACtC,QAEJ,IAAIC,GAAQK,EAAMC,KAAKP,EAAOD,IAAUO,EAAMC,KAAKN,GAC/C,KAAM,iEAKV,IAHAA,EAAOA,GAAQ,EACfF,EAAQA,GAAS,EACjBC,EAAOA,GAAQD,GACVC,EAAOD,GAASE,IAASO,EAAAA,EAC1B,KAAM,yBAiBV,IAfIJ,KAAY/M,EAAI,GAQhB8M,EAAID,EAAkBrG,KAAK4G,IAAIR,IACnCF,GAASI,EACTH,GAAQG,EACRF,GAAQE,EACJJ,EAAQC,GAAQC,EAAO,IACvBA,GAAQA,GAED,EAAPA,EACA,MAAQI,EAAIN,EAAQE,IAAS5M,IAAM2M,GAC/BI,EAAMpN,KAAKqN,EAAIF,OAGnB,OAAQE,EAAIN,EAAQE,IAAS5M,IAAM2M,GAC/BI,EAAMpN,KAAKqN,EAAIF,EAGvB,OAAOC,GAEX,QAASM,GAAWX,EAAOY,GACvB,GAAIZ,GAASY,EACT,MAAO,EAEX,IAAIC,GAAWD,EAAInI,EAAIuH,EAAMvH,EAAGqI,EAAWd,EAAMe,EAAIH,EAAIG,EAAGC,EAAOlH,KAAKkH,KAAKH,EAAWC,EACxF,OAAIA,IAAY,EACM,EAAXD,EAAeG,EAAO,EAAIlH,KAAKG,GAAK+G,EAExCA,EAAOlH,KAAKG,GAxJ1B,GAqROgH,GAKAC,EAzRAnM,EAAQgF,OAAOhF,MAAOoM,EAAUpM,EAAM0F,QAAQ0G,WAAcnH,EAAajF,EAAMiF,WAAYoH,EAAUtG,EAAEsG,QAASC,EAAU,KAC1Hd,IACJvG,GAAWuG,GACPe,WAAY,SAAUC,GAClB,MAAOzH,MAAK4G,IAAIa,GAAOF,GAE3BG,UAAW,SAAUC,GACjB,MAAsB,KAARA,GAElBC,YAAa,SAAUD,GACnB,MAAsB,KAARA,GAA+B,OAARA,GAEzCE,SAAU,SAAUF,GAChB,MAAOA,KAAQxI,OAAOwI,IAE1BG,IAAK,SAAUH,EAAK1O,GAChB,MAAOkG,QAAO4I,eAAeC,KAAKL,EAAK1O,IAE3CgP,SAAU,SAAUN,GAChB,MAA8C,mBAAvCxI,OAAO+I,UAAUC,SAASH,KAAKL,IAE1CS,UAAW,SAAUT,GACjB,MAA8C,oBAAvCxI,OAAO+I,UAAUC,SAASH,KAAKL,IAE1CU,OAAQ,SAAUV,EAAKW,GACnB,MAAOnJ,QAAO+I,UAAUC,SAASH,KAAKL,IAAQ,WAAaW,EAAO,KAEtE7P,SAAU,SAAUkP,GAChB,OAAQhP,MAAM4P,WAAWZ,KAASpN,SAASoN,IAE/Ca,QAAS,SAAUb,GACf,GAAY,OAARA,EACA,OAAO,CAEX,IAAIL,EAAQK,IAAQlB,EAAMwB,SAASN,GAC/B,MAAsB,KAAfA,EAAIjO,MAEf,KAAK,GAAIT,KAAO0O,GACZ,GAAIlB,EAAMqB,IAAIH,EAAK1O,GACf,OAAO,CAGf,QAAO,GAEXwP,aAAc,SAAUC,EAAaC,GACjC,GAAKlC,EAAMoB,SAASc,GAGpB,IAAK,GAAIrN,KAAQqN,GACbD,EAAYpN,GAAQqN,EAAOrN,IAGnCsN,UAAW,SAAuBhN,EAAMnE,GAA7B,GAEE+B,GADLkB,IACJ,KAASlB,EAAI,EAAOoC,EAAJpC,IAAYA,EACxBkB,EAAMlB,GAAK/B,CAEf,OAAOiD,IAEXmO,gBAAiB,SAAUC,GAAV,GAEJtP,GACDxB,EAFJ+Q,IACJ,KAASvP,EAAI,EAAOsP,EAAOpP,OAAXF,EAAmBA,IAC3BxB,EAAI8Q,EAAOtP,GACfuP,EAAI5P,KAAKnB,EAAE2G,EAAI,IAAM3G,EAAEiP,EAE3B,OAAO8B,GAAI1P,KAAK,MAEpB2P,kBAAmB,SAAUC,GAAV,GAKNzP,GAJLiF,EAAIwK,EAAEhN,MAAM,KAAM6M,IACtB,IAAIrK,EAAE/E,OAAS,IAAM,EACjB,KAAM,yBAEV,KAASF,EAAI,EAAOiF,EAAE/E,OAANF,EAAcA,GAAK,EAC/BsP,EAAO3P,KAAK,GAAIkO,GAAQ6B,MAAMC,SAAS1K,EAAEjF,GAAI,IAAK2P,SAAS1K,EAAEjF,EAAI,GAAI,KAEzE,OAAOsP,IAEXM,cAAe,SAAUC,EAAOC,GAC5B,MAAOH,UAASnJ,KAAKuJ,MAAMvJ,KAAKwJ,SAAWF,GAASD,EAAO,KAE/DI,IAAK,SAAUC,EAAIC,GAAd,GAGYnQ,GACDoQ,CAFZ,IADAD,EAAKD,GACDA,EAAGG,WACH,IAASrQ,EAAI,EAAOkQ,EAAGG,WAAWnQ,OAAlBF,EAA0BA,IAClCoQ,EAAOF,EAAGG,WAAWrQ,GACzB+F,KAAKkK,IAAIG,EAAMD,IAI3BG,eAAgB,SAAU/K,GACtB,MAAU,QAANA,GAAsB,IAARA,EAAED,EACT,EAEmB,IAAvBkB,KAAK+J,MAAMhL,EAAEiL,EAAGjL,EAAED,GAAWkB,KAAKG,IAE7C8J,iBAAkB,SAAUlL,GAAV,GACVmL,GAAKlK,KAAKmK,KAAKpL,EAAEqL,EAAIrL,EAAEqL,EAAIrL,EAAEF,EAAIE,EAAEF,GACnCwL,EAAKrK,KAAKmK,KAAKpL,EAAEiL,EAAIjL,EAAEiL,EAAIjL,EAAED,EAAIC,EAAED,EACvC,QACIoL,EACAG,MAqDZ5D,EAAMC,KAAO,SAAU4D,GACnB,MAAOA,GAAkB,EAATA,EAAa,GAAK,EAAI,GAE1C7D,EAAM8D,UAAY,SAAUC,EAAQ1D,GAChC,MAAiC,KAA1BD,EAAW2D,EAAQ1D,GAAa9G,KAAKG,IAEhDsG,EAAMgE,QAAU,SAAU3Q,EAAK4Q,EAAUC,GACrC,IAAK,GAAInR,GAAI,EAAOM,EAAIJ,OAARF,EAAgBA,IAC5BkR,EAAS1C,KAAK2C,EAAS7Q,EAAIN,GAAIA,EAAGM,IAG1C2M,EAAMmE,IAAM,SAAU9Q,EAAK+Q,GACvB,IAAK,GAAIrR,GAAI,EAAOM,EAAIJ,OAARF,IAAkBA,EAC9B,GAAIqR,EAAU/Q,EAAIN,IACd,MAAOM,GAAIN,EAGnB,OAAO,OAEXiN,EAAMqE,OAAS,SAAUhR,EAAKiR,GAE1B,IADA,GAAIC,GACuC,MAAnCA,EAAKvE,EAAMwE,QAAQnR,EAAKiR,KAC5BjR,EAAIoL,OAAO8F,EAAI,EAEnB,OAAOlR,IAEX2M,EAAMyE,SAAW,SAAUpR,EAAK6N,GAC5B,MAAmC,KAA5BlB,EAAMwE,QAAQnR,EAAK6N,IAE9BlB,EAAMwE,QAAU,SAAUnR,EAAKiR,GAC3B,MAAO/J,GAAE0D,QAAQqG,EAAMjR,IAE3B2M,EAAM0E,KAAO,SAAUC,EAAMV,EAAUW,EAAKC,GAA/B,GAEA9R,GACD/B,EAFJ8T,EAAUjM,UAAU5F,OAAS,CACjC,KAASF,EAAI,EAAO4R,EAAK1R,OAATF,EAAiBA,IACzB/B,EAAQ2T,EAAK5R,GACZ+R,EAIDF,EAAMX,EAAS1C,KAAKsD,EAASD,EAAK5T,EAAO+B,EAAG4R,IAH5CC,EAAM5T,EACN8T,GAAU,EAKlB,KAAKA,EACD,KAAM,6CAEV,OAAOF,IAEX5E,EAAM+E,KAAO,SAAU1R,EAAK4Q,EAAUY,GAClC,GAAIvP,EAQJ,OAPA0K,GAAMmE,IAAI9Q,EAAK,SAAUrC,EAAOwN,EAAOmG,GACnC,MAAIV,GAAS1C,KAAKsD,EAAS7T,EAAOwN,EAAOmG,IACrCrP,EAAStE,GACF,IAEJ,IAEJsE,GAEX0K,EAAM7L,MAAQ,SAAUd,EAAK2R,EAAYH,GACrC,MAAmB,KAAfxR,EAAIJ,OACG,KAEP+M,EAAMmB,YAAY6D,GACX3R,EAAI,GAER2M,EAAM+E,KAAK1R,EAAK2R,EAAYH,IAEvC7E,EAAMiF,OAAS,SAAU5R,EAAKiL,EAAS4G,GAEnC,MADA7R,GAAIoL,OAAOyG,EAAU,EAAG5G,GACjBjL,GAEX2M,EAAMmF,IAAM,SAAU9R,EAAK4Q,EAAUY,GAAzB,GAEJ7T,GACK+B,EAFLuC,GAAS,CAEb,KAASvC,EAAI,EAAOM,EAAIJ,OAARF,IACZ/B,EAAQqC,EAAIN,GACZuC,EAASA,GAAU2O,EAAS1C,KAAKsD,EAAS7T,EAAO+B,EAAGM,GAC/CiC,GAHuBvC,KAOhC,MAAOuC,IAEX0K,EAAMoF,MAAQ,SAAU/R,GACpBA,EAAIoL,OAAO,EAAGpL,EAAIJ,SAEtB+M,EAAMqF,OAAS,SAAU1B,EAAGJ,EAAG+B,GAC3B,GAAItF,EAAMmB,YAAYwC,GAClB,KAAM,+BAEV,IAAI3D,EAAMmB,YAAYoC,GAClB,KAAM,gCAEV,IAAII,EAAE1Q,QAAUsQ,EAAEtQ,OACd,KAAM,yCAEV,IAAcF,GAAVoS,IACJ,KAAKpS,EAAI,EAAO4Q,EAAE1Q,OAANF,EAAcA,IACtBoS,EAAIzS,MACAwF,EAAKyL,EAAE5Q,GACPyN,EAAK+C,EAAExQ,IAcf,KAVIoS,EAAIxS,KADJqN,EAAMmB,YAAYmE,GACT,SAAUhN,EAAGzE,GAClB,MAAOyE,GAAEJ,EAAIrE,EAAEqE,GAGV,SAAUI,EAAGzE,GAClB,MAAOyR,GAAShN,EAAEJ,EAAGrE,EAAEqE,KAG/B8H,EAAMoF,MAAMzB,GACZ3D,EAAMoF,MAAM7B,GACPxQ,EAAI,EAAOoS,EAAIlS,OAARF,EAAgBA,IACxB4Q,EAAEjR,KAAKyS,EAAIpS,GAAGmF,GACdqL,EAAE7Q,KAAKyS,EAAIpS,GAAGyN,IAGtBR,EAAMuF,SAAW,SAAUlS,EAAKyM,GAC5BzM,EAAIX,KAAK2B,MAAMhB,EAAKyM,IAEpBY,GACA8E,UAAW,SAAUnQ,GACjB,OAAQkE,KAAKkM,IAAIpQ,EAAMkE,KAAKG,IAAM,EAAI,KAG1CiH,EAASnM,EAAMwG,MAAME,QACrBC,KAAM,WACFrC,KAAK4M,YACL5M,KAAK6M,OAAS,EACd7M,KAAK8M,KAAO,EACZ9M,KAAK+M,SAAW,GAChB/M,KAAKgN,SAAW,IAChBhN,KAAKiN,SAAW,KAChBjN,KAAKkN,WACL,IAAIC,GAAQnN,IACZA,MAAKoN,WAAaxF,EAAO8E,UACzB1M,KAAKqN,cAAgB,WACjBF,EAAMG,iBAGdC,WAAY,SAAU1C,GAClB7K,KAAK4M,SAAShT,KAAKiR,IAEvB2C,WAAY,SAAUC,GAClBzN,KAAKkN,SAAStT,KAAK6T,IAEvBC,cAAe,SAAUD,GACrBzN,KAAKkN,SAAWzL,EAAEkM,KAAK3N,KAAKkN,SAAU,SAAUU,GAC5C,MAAOA,KAAMH,KAGrB7H,QAAS,WACL,GAAIuH,GAAQnN,IACRA,MAAKkN,UACLhG,EAAMgE,QAAQlL,KAAKkN,SAAU,SAAUU,GACnC,MAAOA,GAAEnF,KAAsB,OAAjB0E,EAAMU,OAAkBV,EAAMU,OAASV,MAIjEW,OAAQ,aAERC,OAAQ,SAAUC,GACdhO,KAAKiO,WAAWjO,KAAK8M,KAAMkB,IAE/BC,WAAY,SAAUC,EAAMF,GACxBhO,KAAK6M,OAASpM,KAAK7H,IAAI,EAAG6H,KAAK9H,IAAI,EAAGqV,IACtChO,KAAK8M,KAAOrM,KAAK7H,IAAI,EAAG6H,KAAK9H,IAAI,EAAGuV,IACpClO,KAAKiN,UAAW,GAAIjM,OAAOC,UACtBjB,KAAKmO,aACNnO,KAAKmO,WAAazN,OAAO0N,YAAYpO,KAAKqN,cAAerN,KAAK+M,YAGtEnG,KAAM,WACE5G,KAAKmO,aACLzN,OAAO2N,cAAcrO,KAAKmO,YAC1BnO,KAAKmO,WAAa,KAClBnO,KAAK4F,YAGb0I,KAAM,SAAUC,GACiB,IAAzBvO,KAAK4M,SAASzS,SAGH,OAAXoU,IACAvO,KAAK6N,OAASU,GAElBvO,KAAKwO,YACLxO,KAAKiO,WAAW,EAAG,KAEvBQ,QAAS,WACLzO,KAAKiO,WAAW,EAAG,IAEvBO,UAAW,WACP,GAA6B,IAAzBxO,KAAK4M,SAASzS,OAGlB,IAAK,GAAIF,GAAI,EAAO+F,KAAK4M,SAASzS,OAAlBF,EAA0BA,IACtC+F,KAAK4M,SAAS3S,GAAGuU,aAGzBE,UAAW,WAAA,GAEEzU,GADL/B,EAAQ8H,KAAKoN,WAAWpN,KAAK8M,KACjC,KAAS7S,EAAI,EAAO+F,KAAK4M,SAASzS,OAAlBF,EAA0BA,IACtC+F,KAAK4M,SAAS3S,GAAG0U,OAAOzW,IAGhCoV,aAAc,WAAA,GAINsB,GAHA7N,GAAM,GAAIC,OAAOC,UACjB4N,EAAa9N,EAAMf,KAAKiN,QAC5BjN,MAAKiN,SAAWlM,EACZ6N,EAAWC,EAAa7O,KAAKgN,UAAwBhN,KAAK6M,OAAjB7M,KAAK8M,KAAqB,EAAI,IACvErM,KAAK4G,IAAIuH,IAAanO,KAAK4G,IAAIrH,KAAK8M,KAAO9M,KAAK6M,QAChD7M,KAAK8M,KAAO9M,KAAK6M,OAEjB7M,KAAK8M,MAAQ8B,CAEjB,KACI5O,KAAK0O,YACP,QACE1O,KAAK8N,OAAOrF,KAAKzI,MACbA,KAAK6M,QAAU7M,KAAK8M,MACpB9M,KAAK4G,WAKrBlL,EAAMiF,WAAWmH,GACbzF,KAAM,SAAUmD,GACZ9J,EAAM2G,KAAKmD,EAASsC,EAAQgH,KAEhC5H,MAAOA,EACPR,MAAOA,EACPmB,OAAQA,KAEdnH,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,wBACH,wBACA,sBACDD,IACL,YACG,SAAU0J,EAAGxG,GA+PV,QAASgN,GAAWC,GAChB,MAAOzH,MAAK4G,IAAIa,GAAOF,EAE3B,QAAS+G,GAAcC,EAAQC,EAAMC,EAAQC,EAAMC,GAAnD,GAKQC,GACAC,EACAvQ,EACA2K,EAPA6F,GAAeN,EAAK7P,EAAI4P,EAAO5P,IAAM+P,EAAKzH,EAAIwH,EAAOxH,IAAMuH,EAAKvH,EAAIsH,EAAOtH,IAAMyH,EAAK/P,EAAI8P,EAAO9P,EACrG,KAAI6I,EAAWsH,KAGXF,GAAQL,EAAOtH,EAAIwH,EAAOxH,IAAMyH,EAAK/P,EAAI8P,EAAO9P,IAAM4P,EAAO5P,EAAI8P,EAAO9P,IAAM+P,EAAKzH,EAAIwH,EAAOxH,GAC9F4H,GAAQN,EAAOtH,EAAIwH,EAAOxH,IAAMuH,EAAK7P,EAAI4P,EAAO5P,IAAM4P,EAAO5P,EAAI8P,EAAO9P,IAAM6P,EAAKvH,EAAIsH,EAAOtH,GAC9F3I,EAAIsQ,EAAOE,EACX7F,EAAI4F,EAAOC,GACXH,KAAkB,EAAJrQ,GAASA,EAAI,GAAS,EAAJ2K,GAASA,EAAI,IAGjD,MAAO,IAAIC,GAAMqF,EAAO5P,EAAIL,GAAKkQ,EAAK7P,EAAI4P,EAAO5P,GAAI4P,EAAOtH,EAAI3I,GAAKkQ,EAAKvH,EAAIsH,EAAOtH,IAyRzF,QAAS8H,GAAeC,EAAMC,GAC1B,GAAItQ,GAAGsI,EAAG3I,CACV,GACIK,GAAoB,EAAhBqB,KAAKwJ,SAAe,EACxBvC,EAAoB,EAAhBjH,KAAKwJ,SAAe,EACxBlL,EAAIK,EAAIA,EAAIsI,EAAIA,SACV3I,GAAKA,EAAI,EACnB,OAAO0Q,GAAOC,EAAYtQ,EAAIqB,KAAKmK,KAAK,GAAKnK,KAAKkP,IAAI5Q,GAAKA,GAE/D,QAAS6Q,GAASzV,GAAlB,GAIQqC,GACAqT,EACK5V,CAAT,KALIiN,EAAMmB,YAAYlO,KAClBA,EAAS,IAETqC,EAAS,GACTqT,EAAQ,iEACH5V,EAAIE,EAAQF,EAAI,IAAKA,EAC1BuC,GAAUqT,EAAMpQ,OAAOgB,KAAKrI,MAAMqI,KAAKwJ,UAAY4F,EAAM1V,OAAS,IAEtE,OAAOqC,GAzjBd,GAwGOsT,GAOAC,EA0HAC,EAuCAC,EAqCAC,EAqEAC,EAMAC,EAmJAC,EAwCAC,EAsCAC,EA+GAC,EAsEAC,EAwCAC,EA8DAC,EA8HAC,EAuHAC,EAhnCAnV,EAAQgF,OAAOhF,MAAOoM,EAAUpM,EAAM0F,QAAQ0G,QAAS5F,EAAQxG,EAAMwG,MAAOvB,EAAajF,EAAMiF,WAAYS,EAAU1F,EAAM0F,QAAS8F,EAAQY,EAAQZ,MAAOyC,EAAQvI,EAAQ0P,QAASC,EAAarV,EAAMqV,WAAYpF,EAAWzE,EAAMyE,SAAUrL,EAAMmB,EAAEnB,IACtP0Q,EAAc,EAAGhJ,EAAU,IAC/BrH,GAAWgJ,EAAMsH,IACbC,KAAM,SAAUzY,GACZ,MAAO,IAAIkR,GAAM3J,KAAKZ,EAAI3G,EAAE2G,EAAGY,KAAK0H,EAAIjP,EAAEiP,IAE9CyJ,MAAO,SAAU1Y,GACb,MAAO,IAAIkR,GAAM3J,KAAKZ,EAAI3G,EAAE2G,EAAGY,KAAK0H,EAAIjP,EAAEiP,IAE9C0J,OAAQ,SAAUlZ,GACd,MAAO,IAAIyR,GAAM3J,KAAKZ,EAAIlH,EAAO8H,KAAK0H,EAAIxP,IAE9CmZ,MAAO,SAAU3H,GACb,MAAO,IAAIC,GAAM3J,KAAKZ,EAAIsK,EAAG1J,KAAK0H,EAAIgC,IAE1C4H,UAAW,WACP,MAAsB,KAAlBtR,KAAK7F,SACE,GAAIwP,GAER3J,KAAKqR,MAAM,EAAIrR,KAAK7F,WAE/BA,OAAQ,WACJ,MAAOsG,MAAKmK,KAAK5K,KAAKZ,EAAIY,KAAKZ,EAAIY,KAAK0H,EAAI1H,KAAK0H,IAErDkB,SAAU,WACN,MAAO,IAAM5I,KAAKZ,EAAI,IAAMY,KAAK0H,EAAI,KAEzC6J,cAAe,WACX,MAAOvR,MAAKZ,EAAIY,KAAKZ,EAAIY,KAAK0H,EAAI1H,KAAK0H,GAE3C8J,SAAU,SAAkB/Y,EAAGgZ,GAC3B,MAAO,IAAI9H,GAAM8H,EAAErS,EAAI3G,EAAE2G,EAAGqS,EAAE/J,EAAIjP,EAAEiP,GAAG2J,MAAM,IAAKH,KAAKzY,IAE3DiZ,QAAS,SAAUC,GAAV,GAKD9G,GACA+G,EACAC,EANAC,EAAS,CAOb,IANIH,IACAG,EAAS,IAAMrR,KAAKG,IAEpBiK,EAAIpK,KAAK+J,MAAM/J,KAAK4G,IAAIrH,KAAK0H,GAAIjH,KAAK4G,IAAIrH,KAAKZ,IAC/CwS,EAASnR,KAAKG,GAAK,EACnBiR,EAAM7R,KAAK7F,SACA,IAAX6F,KAAKZ,EAAS,CACd,GAAe,IAAXY,KAAK0H,EACL,MAAO,IAAIyI,GAAM,EAAG,EAExB,IAAInQ,KAAK0H,EAAI,EACT,MAAO,IAAIyI,GAAM0B,EAAKC,EAASF,EAEnC,IAAa,EAAT5R,KAAK0H,EACL,MAAO,IAAIyI,GAAM0B,EAAc,EAATC,EAAaF,OAEpC,IAAI5R,KAAKZ,EAAI,EAAG,CACnB,GAAe,IAAXY,KAAK0H,EACL,MAAO,IAAIyI,GAAM0B,EAAK,EAE1B,IAAI7R,KAAK0H,EAAI,EACT,MAAO,IAAIyI,GAAM0B,EAAKC,EAASjH,EAEnC,IAAa,EAAT7K,KAAK0H,EACL,MAAO,IAAIyI,GAAM0B,EAAKC,GAAU,EAAIF,EAAS/G,QAE9C,CACH,GAAe,IAAX7K,KAAK0H,EACL,MAAO,IAAIyI,GAAM0B,EAAK,EAAID,EAE9B,IAAI5R,KAAK0H,EAAI,EACT,MAAO,IAAIyI,GAAM0B,EAAKC,GAAU,EAAIF,EAAS/G,GAEjD,IAAa,EAAT7K,KAAK0H,EACL,MAAO,IAAIyI,GAAM0B,EAAKC,GAAU,EAAIF,EAAS/G,MAIzDkH,SAAU,SAAU7D,EAAMF,GAAhB,GAEEgE,GAIJC,EAAiEC,EAA6DC,EAAIC,CACtI,OANIlE,GAAK9O,EAAI4O,EAAG5O,IACR4S,EAAOhE,EACXA,EAAKE,EACLA,EAAO8D,GAEPC,EAAK,GAAIlC,GAAK7B,EAAK9O,EAAG8O,EAAKxG,GAAG2K,QAAQrB,EAAaA,GAAckB,EAAK,GAAInC,GAAK/B,EAAG5O,EAAG4O,EAAGtG,GAAG2K,QAAQrB,EAAaA,GAChHiB,EAAGK,MAAMJ,GAAIvG,SAAS3L,MAClBkO,EAAK9O,IAAM4O,EAAG5O,GAAK8O,EAAKxG,IAAMsG,EAAGtG,GAC1B,GACSsG,EAAGtG,EAAZwG,EAAKxG,GACZyK,EAAKF,EAAG7S,GAAK8S,EAAG9S,EAAI6S,EAAG7S,IAAMY,KAAK0H,GAAKuK,EAAGvK,EAAIuK,EAAGrO,UAAYsO,EAAGxK,EAAIwK,EAAGtO,QAAUqO,EAAGvK,EAAIuK,EAAGrO,SAC3FwO,EAAKH,EAAG7S,EAAI6S,EAAGtO,OAASuO,EAAG9S,EAAI8S,EAAGvO,OAASsO,EAAG7S,EAAI6S,EAAGtO,SAAW3D,KAAK0H,EAAIuK,EAAGvK,IAAMwK,EAAGxK,EAAIuK,EAAGvK,KAE5FyK,EAAKF,EAAG7S,GAAK8S,EAAG9S,EAAI6S,EAAG7S,IAAMY,KAAK0H,EAAIuK,EAAGvK,IAAMwK,EAAGxK,EAAIuK,EAAGvK,GACzD0K,EAAKH,EAAG7S,EAAI6S,EAAGtO,OAASuO,EAAG9S,EAAI8S,EAAGvO,OAASsO,EAAG7S,EAAI6S,EAAGtO,SAAW3D,KAAK0H,GAAKuK,EAAGvK,EAAIuK,EAAGrO,UAAYsO,EAAGxK,EAAIwK,EAAGtO,QAAUqO,EAAGvK,EAAIuK,EAAGrO,UAE3H5D,KAAKZ,EAAI+S,GAAeC,EAATpS,KAAKZ,IAExB,KAGfuB,EAAWgJ,GACP4I,MAAO,SAAUvY,GACb,GAAIwY,GAAUxY,EAAIyY,MAAM,EAAGzY,EAAIG,OAAS,GAAIuY,EAAKF,EAAQ9V,MAAM,KAAM0C,EAAIwK,SAAS8I,EAAG,GAAI,IAAKhL,EAAIkC,SAAS8I,EAAG,GAAI,GAClH,OAAKtZ,OAAMgG,IAAOhG,MAAMsO,GAAxB,EACW,GAAIiC,GAAMvK,EAAGsI,MAI5BoI,EAAc5N,EAAME,QACpBC,KAAM,SAAU5J,EAAGka,EAAMC,GACrB5S,KAAK6S,MAAQpa,EACbuH,KAAK2S,KAAOA,EACZ3S,KAAK4S,MAAQA,KAGjB7C,EAAO7N,EAAME,QACbC,KAAM,SAAUjD,EAAGsI,EAAG/D,EAAOC,GACzB5D,KAAKZ,EAAIA,GAAK,EACdY,KAAK0H,EAAIA,GAAK,EACd1H,KAAK2D,MAAQA,GAAS,EACtB3D,KAAK4D,OAASA,GAAU,GAE5B+H,SAAU,SAAUkH,GAChB,MAAOA,GAAMzT,GAAKY,KAAKZ,GAAgBY,KAAKZ,EAAIY,KAAK2D,OAAzBkP,EAAMzT,GAA4ByT,EAAMnL,GAAK1H,KAAK0H,GAAgB1H,KAAK0H,EAAI1H,KAAK4D,QAAzBiP,EAAMnL,GAE7F2K,QAAS,SAAUS,EAAIC,GAQnB,MAPIA,KAAO9X,IACP8X,EAAKD,GAET9S,KAAKZ,GAAK0T,EACV9S,KAAK0H,GAAKqL,EACV/S,KAAK2D,OAAS,EAAImP,EAAK,EACvB9S,KAAK4D,QAAU,EAAImP,EAAK,EACjB/S,MAEXoR,OAAQ,SAAU0B,EAAIC,GAClB,GAAI3T,GAAI0T,EAAIpL,EAAIqL,CAOhB,OANID,aAAcnJ,KACdvK,EAAI0T,EAAG1T,EACPsI,EAAIoL,EAAGpL,GAEX1H,KAAKZ,GAAKA,EACVY,KAAK0H,GAAKA,EACH1H,MAEXsS,MAAO,SAAUvT,GAAV,GACCiU,GAAKvS,KAAK9H,IAAIqH,KAAKZ,EAAGL,EAAEK,GACxB6T,EAAKxS,KAAK9H,IAAIqH,KAAK0H,EAAG3I,EAAE2I,GACxBwL,EAAKzS,KAAK7H,IAAIoH,KAAKZ,EAAIY,KAAK2D,MAAO5E,EAAEK,EAAIL,EAAE4E,OAC3CwP,EAAK1S,KAAK7H,IAAIoH,KAAK0H,EAAI1H,KAAK4D,OAAQ7E,EAAE2I,EAAI3I,EAAE6E,OAChD,OAAO,IAAImM,GAAKiD,EAAIC,EAAIC,EAAKF,EAAIG,EAAKF,IAE1ChI,OAAQ,WACJ,MAAO,IAAItB,GAAM3J,KAAKZ,EAAIY,KAAK2D,MAAQ,EAAG3D,KAAK0H,EAAI1H,KAAK4D,OAAS,IAErEwP,IAAK,WACD,MAAO,IAAIzJ,GAAM3J,KAAKZ,EAAIY,KAAK2D,MAAQ,EAAG3D,KAAK0H,IAEnDkL,MAAO,WACH,MAAO,IAAIjJ,GAAM3J,KAAKZ,EAAIY,KAAK2D,MAAO3D,KAAK0H,EAAI1H,KAAK4D,OAAS,IAEjEyP,OAAQ,WACJ,MAAO,IAAI1J,GAAM3J,KAAKZ,EAAIY,KAAK2D,MAAQ,EAAG3D,KAAK0H,EAAI1H,KAAK4D,SAE5D+O,KAAM,WACF,MAAO,IAAIhJ,GAAM3J,KAAKZ,EAAGY,KAAK0H,EAAI1H,KAAK4D,OAAS,IAEpD0P,QAAS,WACL,MAAO,IAAI3J,GAAM3J,KAAKZ,EAAGY,KAAK0H,IAElC6L,SAAU,WACN,MAAO,IAAI5J,GAAM3J,KAAKZ,EAAIY,KAAK2D,MAAO3D,KAAK0H,IAE/C8L,WAAY,WACR,MAAO,IAAI7J,GAAM3J,KAAKZ,EAAGY,KAAK0H,EAAI1H,KAAK4D,SAE3C6P,YAAa,WACT,MAAO,IAAI9J,GAAM3J,KAAKZ,EAAIY,KAAK2D,MAAO3D,KAAK0H,EAAI1H,KAAK4D,SAExD8P,MAAO,WACH,MAAO,IAAI3D,GAAK/P,KAAKZ,EAAGY,KAAK0H,EAAG1H,KAAK2D,MAAO3D,KAAK4D,SAErDqF,QAAS,WACL,OAAQjJ,KAAK2D,QAAU3D,KAAK4D,QAEhC+P,OAAQ,SAAUC,GACd,MAAO5T,MAAKZ,IAAMwU,EAAKxU,GAAKY,KAAK0H,IAAMkM,EAAKlM,GAAK1H,KAAK2D,QAAUiQ,EAAKjQ,OAAS3D,KAAK4D,SAAWgQ,EAAKhQ,QAEvGiQ,cAAe,SAAUC,GACrB,GAAIF,GAAO5T,KAAK0T,QAASnK,EAASvJ,KAAK+T,cAAcD,GAAQE,EAAKzK,EAAO,GAAI0K,EAAK1K,EAAO,GAAI2K,EAAK3K,EAAO,GAAI4K,EAAK5K,EAAO,EAKzH,OAJAqK,GAAKxU,EAAIqB,KAAK9H,IAAIub,EAAG9U,EAAG4U,EAAG5U,EAAG6U,EAAG7U,EAAG+U,EAAG/U,GACvCwU,EAAKlM,EAAIjH,KAAK9H,IAAIub,EAAGxM,EAAGsM,EAAGtM,EAAGuM,EAAGvM,EAAGyM,EAAGzM,GACvCkM,EAAKjQ,MAAQlD,KAAK7H,IAAIsb,EAAG9U,EAAG4U,EAAG5U,EAAG6U,EAAG7U,EAAG+U,EAAG/U,GAAKwU,EAAKxU,EACrDwU,EAAKhQ,OAASnD,KAAK7H,IAAIsb,EAAGxM,EAAGsM,EAAGtM,EAAGuM,EAAGvM,EAAGyM,EAAGzM,GAAKkM,EAAKlM,EAC/CkM,GAEXG,cAAe,SAAUD,GACrB,GAAIF,GAAO5T,KAAMV,EAAIsU,EAAK3I,SAAUiJ,EAAKN,EAAKH,cAAcW,OAAO9U,EAAG,IAAMwU,GAAQE,EAAKJ,EAAKN,UAAUc,OAAO9U,EAAG,IAAMwU,GAAQG,EAAKL,EAAKL,WAAWa,OAAO9U,EAAG,IAAMwU,GAAQK,EAAKP,EAAKJ,aAAaY,OAAO9U,EAAG,IAAMwU,EACpN,QACIE,EACAC,EACAC,EACAC,IAGRvL,SAAU,SAAUyL,GAEhB,MADAA,GAAYA,GAAa,IAClBrU,KAAKZ,EAAIiV,EAAYrU,KAAK0H,EAAI2M,EAAYrU,KAAK2D,MAAQ0Q,EAAYrU,KAAK4D,QAEnF0Q,MAAO,SAAUC,EAAQC,EAAQC,EAAYC,EAAeZ,GAArD,GAICa,GACAC,EACAxI,EALA4H,EAAKhU,KAAKsT,UACVuB,EAAa7U,KAAKiL,QACtB+I,GAAGI,OAAOS,EAAY,IAAMf,GAAOM,OAAOM,EAAeZ,GACrDa,EAAQF,EAAWtD,MAAM6C,GACzBY,EAAS,GAAIjL,GAAMgL,EAAMvV,EAAImV,EAAQI,EAAMjN,EAAI8M,GAC/CpI,EAAWuI,EAAMxD,MAAMyD,GAC3BZ,EAAKA,EAAG9C,KAAK9E,GACb4H,EAAGI,OAAOM,EAAe,IAAMZ,GAAOM,OAAOS,EAAYf,GACzD9T,KAAKZ,EAAI4U,EAAG5U,EACZY,KAAK0H,EAAIsM,EAAGtM,EACZ1H,KAAK2D,OAAS4Q,EACdvU,KAAK4D,QAAU4Q,GAEnBM,KAAM,SAAUA,GAKZ,MAJA9U,MAAKZ,GAAK0V,EACV9U,KAAK0H,GAAKoN,EACV9U,KAAK2D,OAASmR,EACd9U,KAAK4D,QAAUkR,EACR9U,MAEX+U,SAAU,SAAUnB,GAAV,GACFH,GAAczT,KAAKyT,cACnBuB,EAAkBpB,EAAKH,cACvBsB,IAA6BnB,EAAKxU,EAArBqU,EAAYrU,GAA8BwU,EAAKlM,EAArB+L,EAAY/L,GAAkC1H,KAAKZ,EAAzB4V,EAAgB5V,GAAkCY,KAAK0H,EAAzBsN,EAAgBtN,EACnH,OAAOqN,MAGX/E,EAAO9N,EAAME,QACbC,KAAM,SAAUsB,EAAOC,GACnB5D,KAAK2D,MAAQA,EACb3D,KAAK4D,OAASA,KAGtBoM,EAAKrH,UAAUsM,MAAQ,GAAIjF,GAAK,EAAG,GACnCD,EAAKmF,OAAS,SAAUtB,GAIpB,MAHMA,aAAgB7D,KAClB6D,EAAO,GAAI7D,GAAK6D,EAAKxU,EAAGwU,EAAKlM,EAAGkM,EAAKjQ,MAAOiQ,EAAKhQ,SAE9CgQ,GAEX7D,EAAKoF,MAAQ,WACT,MAAO,IAAIpF,GAAK,EAAG,EAAG,EAAG,IAE7BA,EAAKqF,WAAa,SAAU3c,EAAGgZ,GAC3B,GAAIrY,MAAMX,EAAE2G,IAAMhG,MAAMX,EAAEiP,IAAMtO,MAAMqY,EAAErS,IAAMhG,MAAMqY,EAAE/J,GAClD,KAAM,sBAEV,OAAO,IAAIqI,GAAKtP,KAAK9H,IAAIF,EAAE2G,EAAGqS,EAAErS,GAAIqB,KAAK9H,IAAIF,EAAEiP,EAAG+J,EAAE/J,GAAIjH,KAAK4G,IAAI5O,EAAE2G,EAAIqS,EAAErS,GAAIqB,KAAK4G,IAAI5O,EAAEiP,EAAI+J,EAAE/J,KAmB9FuI,GACAoF,MAAO,SAAUrG,EAAQC,EAAMC,EAAQC,GACnC,MAAOJ,GAAcC,EAAQC,EAAMC,EAAQC,IAE/CmG,SAAU,SAAUtG,EAAQC,EAAMC,EAAQC,GACtC,MAAOJ,GAAcC,EAAQC,EAAMC,EAAQC,GAAM,IAErDoG,aAAc,SAAU3B,EAAMjN,EAAOY,GACjC,MAAO0I,GAAUqF,SAAS3O,EAAOY,EAAKqM,EAAKN,UAAWM,EAAKL,aAAetD,EAAUqF,SAAS3O,EAAOY,EAAKqM,EAAKL,WAAYK,EAAKH,gBAAkBxD,EAAUqF,SAAS3O,EAAOY,EAAKqM,EAAKJ,aAAcI,EAAKH,gBAAkBxD,EAAUqF,SAAS3O,EAAOY,EAAKqM,EAAKN,UAAWM,EAAKJ,eAElRgC,MAAO,SAAUC,EAAOC,EAAO5B,GAAxB,GASC6B,GAOQC,EAfR5B,EAAK0B,EAAMpC,UAAWW,EAAKyB,EAAMnC,WAAYY,EAAKuB,EAAMlC,aAAcU,EAAKwB,EAAMjC,cACjFxI,EAASyK,EAAMzK,QAsBnB,OArBI6I,KACAE,EAAKA,EAAGI,OAAOnJ,EAAQ6I,GACvBG,EAAKA,EAAGG,OAAOnJ,EAAQ6I,GACvBK,EAAKA,EAAGC,OAAOnJ,EAAQ6I,GACvBI,EAAKA,EAAGE,OAAOnJ,EAAQ6I,IAEvB6B,EAAYF,EAAM9J,SAASqI,IAAOyB,EAAM9J,SAASsI,IAAOwB,EAAM9J,SAASwI,IAAOsB,EAAM9J,SAASuI,IAAOjE,EAAUsF,aAAaE,EAAOzB,EAAIC,IAAOhE,EAAUsF,aAAaE,EAAOzB,EAAIG,IAAOlE,EAAUsF,aAAaE,EAAOxB,EAAIC,IAAOjE,EAAUsF,aAAaE,EAAOtB,EAAID,GAChQyB,IACD3B,EAAKyB,EAAMnC,UACXW,EAAKwB,EAAMlC,WACXY,EAAKsB,EAAMjC,aACXU,EAAKuB,EAAMhC,cACPK,IACI8B,EAAe,IAAM9B,EACzBE,EAAKA,EAAGI,OAAOnJ,EAAQ2K,GACvB3B,EAAKA,EAAGG,OAAOnJ,EAAQ2K,GACvBzB,EAAKA,EAAGC,OAAOnJ,EAAQ2K,GACvB1B,EAAKA,EAAGE,OAAOnJ,EAAQ2K,IAE3BD,EAAYD,EAAM/J,SAASqI,IAAO0B,EAAM/J,SAASsI,IAAOyB,EAAM/J,SAASwI,IAAOuB,EAAM/J,SAASuI,IAE1FyB,IAGXzF,EAAYhO,EAAME,QAClBC,KAAM,SAAUwT,GACZ7V,KAAK6V,UAAY9F,EAAKmF,OAAOW,IAEjCC,MAAO,SAAUC,EAASC,GAAnB,GAEM/b,GADLgc,EAAcD,EAAU7W,cAAczC,MAAM,IAChD,KAASzC,EAAI,EAAOgc,EAAY9b,OAAhBF,EAAwBA,IACpC8b,EAAU/V,KAAKkW,aAAaH,EAASE,EAAYhc,GAErD,OAAO8b,IAEXG,aAAc,SAAUH,EAASC,GAC7B,MAAIjF,GAAW/Q,KAAKgW,IACThW,KAAKgW,GAAWD,GAEhBA,GAGfpD,KAAM,SAAUoD,GACZ,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAKoW,QAErCnL,OAAQ,SAAU8K,GACd,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAKqW,UAErCzD,MAAO,SAAUmD,GACb,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAKsW,SAErCC,QAAS,SAAUR,GACf,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAKwW,WAErCpD,IAAK,SAAU2C,GACX,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAKyW,OAErCC,OAAQ,SAAUX,GACd,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAK2W,UAErCtD,OAAQ,SAAU0C,GACd,MAAO/V,MAAKmW,OAAOJ,EAAS/V,KAAK4W,UAErCR,MAAO,SAAUP,EAAWE,GACxBA,EAAQ3W,EAAIyW,EAAUzW,GAE1BiX,QAAS,SAAUR,EAAWE,GAC1BA,EAAQ3W,GAAKyW,EAAUlS,MAAQoS,EAAQpS,OAAS,GAAK,GAEzD2S,OAAQ,SAAUT,EAAWE,GACzBA,EAAQ3W,EAAIyW,EAAUlS,MAAQoS,EAAQpS,OAE1C8S,KAAM,SAAUZ,EAAWE,GACvBA,EAAQrO,EAAImO,EAAUnO,GAE1BiP,QAAS,SAAUd,EAAWE,GAC1BA,EAAQrO,GAAKmO,EAAUjS,OAASmS,EAAQnS,QAAU,GAAK,GAE3DgT,QAAS,SAAUf,EAAWE,GAC1BA,EAAQrO,EAAImO,EAAUjS,OAASmS,EAAQnS,QAE3C4S,SAAU,SAAUX,EAAWE,GAC3BA,EAAQ3W,EAAI,EACZ2W,EAAQrO,EAAI,EACZqO,EAAQnS,OAASiS,EAAUjS,OAC3BmS,EAAQpS,MAAQkS,EAAUlS,OAE9BwS,OAAQ,SAAUJ,EAASc,GAGvB,MAFAd,GAAUhG,EAAKmF,OAAOa,GACtBc,EAAU7W,KAAK6V,UAAWE,GACnBA,KAGX5F,EAAQjO,EAAME,QACdC,KAAM,SAAUtD,EAAG8L,GACf7K,KAAKjB,EAAIA,EACTiB,KAAK8T,MAAQjJ,KAGjBuF,EAASlO,EAAME,QACfC,KAAM,SAAUwI,EAAGJ,EAAGnL,EAAGC,EAAG4G,EAAGpO,GAC3BiI,KAAK6K,EAAIA,GAAK,EACd7K,KAAKyK,EAAIA,GAAK,EACdzK,KAAKV,EAAIA,GAAK,EACdU,KAAKT,EAAIA,GAAK,EACdS,KAAKmG,EAAIA,GAAK,EACdnG,KAAKjI,EAAIA,GAAK,GAElBmZ,KAAM,SAAU1R,GACZQ,KAAK6K,GAAKrL,EAAEqL,EACZ7K,KAAKyK,GAAKjL,EAAEiL,EACZzK,KAAKV,GAAKE,EAAEF,EACZU,KAAKT,GAAKC,EAAED,EACZS,KAAKmG,GAAK3G,EAAE2G,EACZnG,KAAKjI,GAAKyH,EAAEzH,GAEhBoZ,MAAO,SAAU3R,GACbQ,KAAK6K,GAAKrL,EAAEqL,EACZ7K,KAAKyK,GAAKjL,EAAEiL,EACZzK,KAAKV,GAAKE,EAAEF,EACZU,KAAKT,GAAKC,EAAED,EACZS,KAAKmG,GAAK3G,EAAE2G,EACZnG,KAAKjI,GAAKyH,EAAEzH,GAEhBsZ,MAAO,SAAU7R,GACb,MAAO,IAAI4Q,GAAOpQ,KAAK6K,EAAIrL,EAAEqL,EAAI7K,KAAKV,EAAIE,EAAEiL,EAAGzK,KAAKyK,EAAIjL,EAAEqL,EAAI7K,KAAKT,EAAIC,EAAEiL,EAAGzK,KAAK6K,EAAIrL,EAAEF,EAAIU,KAAKV,EAAIE,EAAED,EAAGS,KAAKyK,EAAIjL,EAAEF,EAAIU,KAAKT,EAAIC,EAAED,EAAGS,KAAK6K,EAAIrL,EAAE2G,EAAInG,KAAKV,EAAIE,EAAEzH,EAAIiI,KAAKmG,EAAGnG,KAAKyK,EAAIjL,EAAE2G,EAAInG,KAAKT,EAAIC,EAAEzH,EAAIiI,KAAKjI,IAEnNwD,MAAO,SAAU9C,GACb,MAAO,IAAIkR,GAAM3J,KAAK6K,EAAIpS,EAAE2G,EAAIY,KAAKV,EAAI7G,EAAEiP,EAAI1H,KAAKmG,EAAGnG,KAAKyK,EAAIhS,EAAE2G,EAAIY,KAAKT,EAAI9G,EAAEiP,EAAI1H,KAAKjI,IAE9F+e,UAAW,SAAU/X,GACjB,MAAOgR,GAAKqF,WAAWpV,KAAKzE,MAAMwD,EAAEuU,WAAYtT,KAAKzE,MAAMwD,EAAE0U,iBAEjE7K,SAAU,WACN,MAAO,UAAY5I,KAAK6K,EAAI,IAAM7K,KAAKyK,EAAI,IAAMzK,KAAKV,EAAI,IAAMU,KAAKT,EAAI,IAAMS,KAAKmG,EAAI,IAAMnG,KAAKjI,EAAI,OAG/G4I,EAAWyP,GACP2G,cAAe,SAAUC,GACrB,GAAIxX,GAAI,GAAI4Q,EAOZ,OANA5Q,GAAEqL,EAAImM,EAAGnM,EACTrL,EAAEiL,EAAIuM,EAAGvM,EACTjL,EAAEF,EAAI0X,EAAG1X,EACTE,EAAED,EAAIyX,EAAGzX,EACTC,EAAE2G,EAAI6Q,EAAG7Q,EACT3G,EAAEzH,EAAIif,EAAGjf,EACFyH,GAEXyX,iBAAkB,SAAU/X,GACxB,GAAIM,GAAI,GAAI4Q,EAOZ,OANA5Q,GAAEqL,EAAI3L,EAAE2L,EACRrL,EAAEiL,EAAIvL,EAAEuL,EACRjL,EAAEF,EAAIJ,EAAEI,EACRE,EAAED,EAAIL,EAAEK,EACRC,EAAE2G,EAAIjH,EAAEiH,EACR3G,EAAEzH,EAAImH,EAAEnH,EACDyH,GAEX0X,SAAU,SAAUhY,GAChB,GAAiB,IAAbA,EAAE/E,OACF,KAAM,gDAEV,IAAIqF,GAAI,GAAI4Q,EAOZ,OANA5Q,GAAEqL,EAAI3L,EAAE,GACRM,EAAEiL,EAAIvL,EAAE,GACRM,EAAEF,EAAIJ,EAAE,GACRM,EAAED,EAAIL,EAAE,GACRM,EAAE2G,EAAIjH,EAAE,GACRM,EAAEzH,EAAImH,EAAE,GACDM,GAEX2X,YAAa,SAAU/X,EAAGsI,GACtB,GAAIlI,GAAI,GAAI4Q,EAOZ,OANA5Q,GAAEqL,EAAI,EACNrL,EAAEiL,EAAI,EACNjL,EAAEF,EAAI,EACNE,EAAED,EAAI,EACNC,EAAE2G,EAAI/G,EACNI,EAAEzH,EAAI2P,EACClI,GAEX4X,KAAM,WACF,MAAO,IAAIhH,GAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAErCiH,SAAU,SAAUvD,EAAO1U,EAAGsI,GAC1B,GAAIlI,GAAI,GAAI4Q,EAOZ,OANA5Q,GAAEqL,EAAIpK,KAAKkM,IAAImH,EAAQrT,KAAKG,GAAK,KACjCpB,EAAEiL,EAAIhK,KAAK6W,IAAIxD,EAAQrT,KAAKG,GAAK,KACjCpB,EAAEF,GAAKE,EAAEiL,EACTjL,EAAED,EAAIC,EAAEqL,EACRrL,EAAE2G,EAAI/G,EAAIA,EAAII,EAAEqL,EAAInD,EAAIlI,EAAEiL,GAAK,EAC/BjL,EAAEzH,EAAI2P,EAAIA,EAAIlI,EAAEqL,EAAIzL,EAAII,EAAEiL,GAAK,EACxBjL,GAEX+X,QAAS,SAAUhD,EAAQC,GACvB,GAAIhV,GAAI,GAAI4Q,EAOZ,OANA5Q,GAAEqL,EAAI0J,EACN/U,EAAEiL,EAAI,EACNjL,EAAEF,EAAI,EACNE,EAAED,EAAIiV,EACNhV,EAAE2G,EAAI,EACN3G,EAAEzH,EAAI,EACCyH,GAEX+S,MAAO,SAAUrT,GACb,GAAIvF,GAAO6d,CACX,IAAItY,EAAG,CAEH,GADAA,EAAIA,EAAEuY,OAC8B,WAAhCvY,EAAEuT,MAAM,EAAG,GAAGtT,cAA4B,CAG1C,GAFAqY,EAAOtY,EAAEuT,MAAM,EAAGvT,EAAE/E,OAAS,GAAGsd,OAChC9d,EAAQ6d,EAAK9a,MAAM,KACE,IAAjB/C,EAAMQ,OACN,MAAOiW,GAAO8G,SAAS5W,EAAI3G,EAAO,SAAUlB,GACxC,MAAOuQ,YAAWvQ,KAI1B,IADAkB,EAAQ6d,EAAK9a,MAAM,KACE,IAAjB/C,EAAMQ,OACN,MAAOiW,GAAO8G,SAAS5W,EAAI3G,EAAO,SAAUlB,GACxC,MAAOuQ,YAAWvQ,MAO9B,GAHsB,MAAlByG,EAAEuT,MAAM,EAAG,IAAwC,MAA1BvT,EAAEuT,MAAMvT,EAAE/E,OAAS,KAC5C+E,EAAIA,EAAEwY,OAAO,EAAGxY,EAAE/E,OAAS,IAE3B+E,EAAEwM,QAAQ,KAAO,IACjB/R,EAAQuF,EAAExC,MAAM,KACK,IAAjB/C,EAAMQ,QACN,MAAOiW,GAAO8G,SAAS5W,EAAI3G,EAAO,SAAUlB,GACxC,MAAOuQ,YAAWvQ,KAI9B,IAAIyG,EAAEwM,QAAQ,KAAO,IACjB/R,EAAQuF,EAAExC,MAAM,KACK,IAAjB/C,EAAMQ,QACN,MAAOiW,GAAO8G,SAAS5W,EAAI3G,EAAO,SAAUlB,GACxC,MAAOuQ,YAAWvQ,MAKlC,MAAOkB,MAGX0W,EAAenO,EAAME,QACrBC,KAAM,SAAUwI,EAAGJ,EAAGnL,EAAGC,EAAG4G,EAAGpO,GAC3BiI,KAAK6K,EAAIA,GAAK,EACd7K,KAAKyK,EAAIA,GAAK,EACdzK,KAAKV,EAAIA,GAAK,EACdU,KAAKT,EAAIA,GAAK,EACdS,KAAKmG,EAAIA,GAAK,EACdnG,KAAKjI,EAAIA,GAAK,GAElB4f,WAAY,SAAoBnY,GAC5B,GAAIN,GAAI,GAAImR,EAOZ,OANAnR,GAAE2L,EAAIrL,EAAEqL,EACR3L,EAAEuL,EAAIjL,EAAEiL,EACRvL,EAAEI,EAAIE,EAAEF,EACRJ,EAAEK,EAAIC,EAAED,EACRL,EAAEiH,EAAI3G,EAAE2G,EACRjH,EAAEnH,EAAIyH,EAAEzH,EACDmH,KAuBXoR,GACAsH,uBAAwB,SAAUnf,EAAGoS,EAAGJ,GACpC,QAASoN,GAAGC,EAAKC,GACb,OAAQD,EAAI1Y,EAAI2Y,EAAI3Y,IAAM0Y,EAAI1Y,EAAI2Y,EAAI3Y,IAAM0Y,EAAIpQ,EAAIqQ,EAAIrQ,IAAMoQ,EAAIpQ,EAAIqQ,EAAIrQ,GAE9E,GAAImD,IAAMJ,EACN,MAAOoN,GAAGpf,EAAGoS,EAEjB,IAAImN,GAAKvN,EAAErL,EAAIyL,EAAEzL,EAAG6Y,EAAKxN,EAAE/C,EAAImD,EAAEnD,EAAGwQ,GAAOzf,EAAE2G,EAAIyL,EAAEzL,GAAK4Y,GAAMvf,EAAEiP,EAAImD,EAAEnD,GAAKuQ,CAC3E,OAAU,GAANC,EACOL,EAAGhN,EAAGpS,IAEjByf,GAAOzN,EAAErL,EAAI3G,EAAE2G,GAAK4Y,GAAMvN,EAAE/C,EAAIjP,EAAEiP,GAAKuQ,EAC7B,EAANC,EACOL,EAAGpN,EAAGhS,IAEjByf,GAAOzN,EAAErL,EAAI3G,EAAE2G,GAAK6Y,GAAMxN,EAAE/C,EAAIjP,EAAEiP,GAAKsQ,EAChCE,EAAMA,GAAOF,EAAKA,EAAKC,EAAKA,MAEvCE,eAAgB,SAAU1f,EAAGoS,EAAGJ,GAC5B,MAAOhK,MAAKmK,KAAK5K,KAAK4X,uBAAuBnf,EAAGoS,EAAGJ,KAEvD2N,mBAAoB,SAAU3f,EAAG8Q,GAAb,GAKPG,GACD2O,EACAC,EACA/Y,EAPJgZ,EAAU1X,OAAOC,SACrB,IAAIoG,EAAMmB,YAAYkB,IAA6B,IAAlBA,EAAOpP,OACpC,MAAO0G,QAAOC,SAElB,KAAS4I,EAAI,EAAOH,EAAOpP,OAAS,EAApBuP,EAAuBA,IAC/B2O,EAAK9O,EAAOG,GACZ4O,EAAK/O,EAAOG,EAAI,GAChBnK,EAAIS,KAAK4X,uBAAuBnf,EAAG4f,EAAIC,GACnCC,EAAJhZ,IACAgZ,EAAUhZ,EAGlB,OAAOkB,MAAKmK,KAAK2N,KAGrBhI,EAAY7U,EAAMwG,MAAME,QACxBC,KAAM,WACFrC,KAAKwY,YACLxY,KAAK7F,OAAS,GAElBse,IAAK,SAAU/e,EAAKxB,GAChB,GAAIkQ,GAAMpI,KAAK0Y,iBAAiBhf,EAIhC,OAHIwN,GAAMiB,UAAUjQ,KAChBkQ,EAAIlQ,MAAQA,GAETkQ,GAEXpF,IAAK,SAAUtJ,GACX,MAAIsG,MAAK2Y,cAAcjf,GACZsG,KAAK0Y,iBAAiBhf,GAE1B,MAEXkf,IAAK,SAAUlf,EAAKxB,GAChB8H,KAAKyY,IAAI/e,EAAKxB,IAElB2gB,YAAa,SAAUnf,GACnB,MAAOsG,MAAK2Y,cAAcjf,IAE9B6R,OAAQ,SAAU7R,GACd,GAAIsG,KAAK2Y,cAAcjf,GAAM,CACzB,GAAIof,GAAS9Y,KAAK+Y,MAAMrf,EAGxB,cAFOsG,MAAKwY,SAASM,GACrB9Y,KAAK7F,SACET,IAGfwR,QAAS,SAAUd,GAAV,GAEInQ,GAAO4X,EACR3X,EACA8e,EAHJC,EAASjZ,KAAKkZ,SAClB,KAASjf,EAAI,EAAG4X,EAAMoH,EAAO9e,OAAY0X,EAAJ5X,EAASA,IACtCC,EAAO+e,EAAOhf,GACd+e,EAAShZ,KAAKwY,SAASte,GACvBgN,EAAMmB,YAAY2Q,IAGtB5O,EAAK4O,IAGbtF,MAAO,WAAA,GAGMzZ,GAAO4X,EACR3X,EACA8e,EAJJG,EAAK,GAAI5I,GACT0I,EAASjZ,KAAKkZ,SAClB,KAASjf,EAAI,EAAG4X,EAAMoH,EAAO9e,OAAY0X,EAAJ5X,EAASA,IACtCC,EAAO+e,EAAOhf,GACd+e,EAAShZ,KAAKwY,SAASte,GACvBgN,EAAMmB,YAAY2Q,IAGtBG,EAAGV,IAAIO,EAAOtf,IAAKsf,EAAO9gB,MAE9B,OAAOihB,IAEXD,QAAS,WAAA,GAEIhf,GADL+e,IACJ,KAAS/e,IAAQ8F,MAAKwY,SACdxY,KAAKwY,SAAShQ,eAAetO,IAC7B+e,EAAOrf,KAAKM,EAGpB,OAAO+e,IAEXN,cAAe,SAAUjf,GACrB,GAAIof,GAAS9Y,KAAK+Y,MAAMrf,EACxB,OAAOwN,GAAMiB,UAAUnI,KAAKwY,SAASM,KAEzCJ,iBAAkB,SAAUhf,GAAV,GACVof,GAAS9Y,KAAK+Y,MAAMrf,GACpBsf,EAAShZ,KAAKwY,SAASM,EAM3B,OALI5R,GAAMmB,YAAY2Q,KAClBA,GAAWtf,IAAKA,GAChBsG,KAAKwY,SAASM,GAAUE,EACxBhZ,KAAK7F,UAEF6e,GAEXD,MAAO,SAAUrf,GACb,GAAIwN,EAAMhO,SAASQ,GACf,MAAOA,EAEX,IAAIwN,EAAMwB,SAAShP,GACf,MAAOsG,MAAKoZ,YAAY1f,EAE5B,IAAIwN,EAAMoB,SAAS5O,GACf,MAAOsG,MAAKqZ,cAAc3f,EAE9B,MAAM,yBAEV0f,YAAa,SAAU1P,GAAV,GAKAzP,GACDqf,EALJ9c,EAAS,CACb,IAAiB,IAAbkN,EAAEvP,OACF,MAAOqC,EAEX,KAASvC,EAAI,EAAOyP,EAAEvP,OAANF,EAAcA,IACtBqf,EAAK5P,EAAEtP,WAAWH,GACtBuC,EAAkB,GAATA,EAAcA,EAAS8c,CAEpC,OAAO9c,IAEX6c,cAAe,SAAU3f,GACrB,GAAIoG,GAAKpG,EAAI6f,OAKb,OAJIrS,GAAMmB,YAAYvI,KAClBA,EAAK8P,IACLlW,EAAI6f,QAAUzZ,GAEXA,KAGX0Q,EAAa9U,EAAM8d,WAAWpX,QAC9BC,KAAM,SAAUoX,GAAV,GAOexf,GANbyf,EAAO1Z,IAIX,IAHAtE,EAAM8d,WAAWvI,GAAG5O,KAAKoG,KAAKiR,GAC9B1Z,KAAK2Z,WAAa,GAAIpJ,GACtBvQ,KAAK7F,OAAS,EACV+M,EAAMiB,UAAUsR,GAChB,GAAIhY,EAAEsG,QAAQ0R,GACV,IAASxf,EAAI,EAAOwf,EAAWtf,OAAfF,EAAuBA,IACnC+F,KAAKyY,IAAIgB,EAAWxf,QAGxBwf,GAAWvO,QAAQ,SAAUnE,EAAG7H,GAC5Bc,KAAKyY,IAAI1R,EAAG7H,IACbc,OAIfyY,IAAK,SAAU/e,EAAKxB,GAChB,GAAIyK,GAAQ3C,KAAK2Z,WAAW3W,IAAItJ,EAC3BiJ,KACDA,EAAQ3C,KAAK2Z,WAAWlB,IAAI/e,GAC5BsG,KAAK7F,SACL6F,KAAK4F,QAAQ,YAEjBjD,EAAMzK,MAAQA,GAElB0gB,IAAK,SAAUlf,EAAKxB,GAChB8H,KAAKyY,IAAI/e,EAAKxB,IAElB8K,IAAK,SAAUtJ,GACX,GAAIiJ,GAAQ3C,KAAK2Z,WAAW3W,IAAItJ,EAChC,IAAIiJ,EACA,MAAOA,GAAMzK,KAEjB,MAAU0hB,OAAM,mBAAqBlgB,IAEzCmf,YAAa,SAAUnf,GACnB,MAAOsG,MAAK2Z,WAAWd,YAAYnf,IAEvC6R,OAAQ,SAAU7R,GACd,MAAIsG,MAAK6Y,YAAYnf,IACjBsG,KAAK4F,QAAQ,WACb5F,KAAK7F,SACE6F,KAAK2Z,WAAWpO,OAAO7R,IAHlC,GAMJwR,QAAS,SAAUd,EAAMgB,GACrBpL,KAAK2Z,WAAWzO,QAAQ,SAAUvI,GAC9ByH,EAAK3B,KAAK2C,EAASzI,EAAMjJ,IAAKiJ,EAAMzK,UAG5C2hB,aAAc,SAAUzP,EAAMgB,GAC1BpL,KAAK2Z,WAAWzO,QAAQ,SAAUvI,GAC9ByH,EAAK3B,KAAK2C,EAASzI,EAAMzK,UAGjC4hB,WAAY,SAAU1P,EAAMgB,GACxBpL,KAAK2Z,WAAWzO,QAAQ,SAAUvI,GAC9ByH,EAAK3B,KAAK2C,EAASzI,EAAMjJ,QAGjCqgB,KAAM,WACF,GAAIA,KAIJ,OAHA/Z,MAAK8Z,WAAW,SAAUpgB,GACtBqgB,EAAKngB,KAAKF,KAEPqgB,KAGXtJ,EAAQ/U,EAAMwG,MAAME,QACpBC,KAAM,WACFrC,KAAK6C,MAAQ,KACb7C,KAAK4C,MAAQ,KACb5C,KAAK7F,OAAS,GAElB6f,QAAS,SAAU9hB,GACf,GAAIyK,IACAzK,MAAOA,EACP+hB,KAAM,KAELja,MAAK4C,OAIN5C,KAAK6C,MAAMoX,KAAOtX,EAClB3C,KAAK6C,MAAQ7C,KAAK6C,MAAMoX,OAJxBja,KAAK4C,MAAQD,EACb3C,KAAK6C,MAAQ7C,KAAK4C,OAKtB5C,KAAK7F,UAET+f,QAAS,WACL,GAAkB,EAAdla,KAAK7F,OACL,KAAUyf,OAAM,sBAEpB,IAAI1hB,GAAQ8H,KAAK4C,MAAM1K,KAGvB,OAFA8H,MAAK4C,MAAQ5C,KAAK4C,MAAMqX,KACxBja,KAAK7F,SACEjC,GAEXyT,SAAU,SAAUtB,GAEhB,IADA,GAAIvI,GAAU9B,KAAK4C,MACZd,GAAS,CACZ,GAAIA,EAAQ5J,QAAUmS,EAClB,OAAO,CAEXvI,GAAUA,EAAQmY,KAEtB,OAAO,KAGXvJ,EAAMhV,EAAM8d,WAAWpX,QACvBC,KAAM,SAAU8X,GACZ,GAAIT,GAAO1Z,IACXtE,GAAM8d,WAAWvI,GAAG5O,KAAKoG,KAAKiR,GAC9B1Z,KAAK2Z,WAAa,GAAIpJ,GACtBvQ,KAAK7F,OAAS,EACV+M,EAAMiB,UAAUgS,KACZA,YAAoB5J,GACpB4J,EAASjP,QAAQ,SAAU3L,GACvBS,KAAKyY,IAAIlZ,KAEN4a,YAAoB3J,IAC3B2J,EAASjP,QAAQ,SAAUnE,EAAG7H,GAC1Bc,KAAKyY,KACD/e,IAAKqN,EACL7O,MAAOgH,KAEZc,QAIf2L,SAAU,SAAUtB,GAChB,MAAOrK,MAAK2Z,WAAWd,YAAYxO,IAEvCoO,IAAK,SAAUpO,GACX,GAAI1H,GAAQ3C,KAAK2Z,WAAW3W,IAAIqH,EAC3B1H,KACD3C,KAAK2Z,WAAWlB,IAAIpO,EAAMA,GAC1BrK,KAAK7F,SACL6F,KAAK4F,QAAQ,aAGrB5C,IAAK,SAAUqH,GACX,MAAIrK,MAAK2L,SAAStB,GACPrK,KAAK2Z,WAAW3W,IAAIqH,GAAMnS,MAE1B,MAGfgC,KAAM,SAAUmQ,GACZ,MAAOrK,MAAK2Z,WAAWZ,MAAM1O,IAEjCkB,OAAQ,SAAUlB,GACVrK,KAAK2L,SAAStB,KACdrK,KAAK2Z,WAAWpO,OAAOlB,GACvBrK,KAAK7F,SACL6F,KAAK4F,QAAQ,aAGrBsF,QAAS,SAAUd,EAAM2B,GACrB/L,KAAK2Z,WAAWzO,QAAQ,SAAUkP,GAC9BhQ,EAAKgQ,EAAGliB,QACT6T,IAEPsO,QAAS,WACL,GAAItb,KAIJ,OAHAiB,MAAKkL,QAAQ,SAAU3L,GACnBR,EAAEnF,KAAK2F,KAEJR,KAGX4R,EAAOjV,EAAMwG,MAAME,QACnBC,KAAM,SAAUvC,EAAIwa,GAUhB,GATAta,KAAKua,SACLva,KAAKwa,YACLxa,KAAKya,YACLza,KAAK0a,OAAS,EAEV1a,KAAKF,GADLoH,EAAMiB,UAAUrI,GACNA,EAEA8P,IAEV1I,EAAMiB,UAAUmS,GAAQ,CACxBta,KAAK2a,gBAAkBL,CACvB,IAAI7P,GAAI6P,EAAMM,QACd5a,MAAK2D,MAAQ8G,EAAE9G,MACf3D,KAAK4D,OAAS6G,EAAE7G,OAChB5D,KAAKZ,EAAIqL,EAAErL,EACXY,KAAK0H,EAAI+C,EAAE/C,MAEX1H,MAAK2a,gBAAkB,IAE3B3a,MAAK6a,KAAO,KACZ7a,KAAK+I,KAAO,OACZ/I,KAAK8a,UAAY,SAAY9a,KAAKF,GAAK,IACvCE,KAAK+a,WAAY,GAErBC,WAAY,WACR,MAAO9T,GAAM+B,QAAQjJ,KAAKua,QAE9BK,OAAQ,SAAU7b,GACd,MAAKmI,GAAMiB,UAAUpJ,IAGrBiB,KAAKZ,EAAIL,EAAEK,EACXY,KAAK0H,EAAI3I,EAAE2I,EACX1H,KAAK2D,MAAQ5E,EAAE4E,MACf3D,KAAK4D,OAAS7E,EAAE6E,OAHhB5D,GAFW,GAAI8H,GAAQiI,KAAK/P,KAAKZ,EAAGY,KAAK0H,EAAG1H,KAAK2D,MAAO3D,KAAK4D,SAOjEqX,WAAY,SAAUC,GAClB,GAAIxB,GAAO1Z,IACX,OAAOkH,GAAMmE,IAAIqO,EAAKa,MAAO,SAAUY,GACnC,MAAOA,GAAKC,cAAc1B,KAAUwB,KAG5CG,YAAa,WAAA,GAILC,GACKrhB,EAAO4X,EACRsJ,CALR,IAA6B,IAAzBnb,KAAKwa,SAASrgB,OACd,QAGJ,KADImhB,KACKrhB,EAAI,EAAG4X,EAAM7R,KAAKwa,SAASrgB,OAAY0X,EAAJ5X,EAASA,IAC7CkhB,EAAOnb,KAAKwa,SAASvgB,GACzBqhB,EAAS1hB,KAAKuhB,EAAKC,cAAcpb,MAErC,OAAOsb,IAEXC,WAAY,WAAA,GAIJC,GACKvhB,EAAO4X,EACRsJ,CALR,IAA6B,IAAzBnb,KAAKya,SAAStgB,OACd,QAGJ,KADIqhB,KACKvhB,EAAI,EAAG4X,EAAM7R,KAAKya,SAAStgB,OAAY0X,EAAJ5X,EAASA,IAC7CkhB,EAAOnb,KAAKya,SAASxgB,GACzBuhB,EAAQ5hB,KAAKuhB,EAAKC,cAAcpb,MAEpC,OAAOwb,IAEX9H,MAAO,WACH,GAAI+H,GAAO,GAAI9K,EAef,OAdIzJ,GAAMiB,UAAUnI,KAAK0a,UACrBe,EAAKf,OAAS1a,KAAK0a,QAEnBxT,EAAMiB,UAAUnI,KAAK0b,WACrBD,EAAKC,QAAU1b,KAAK0b,SAEpBxU,EAAMiB,UAAUnI,KAAK2b,SACrBF,EAAKE,MAAQ3b,KAAK2b,OAEtBF,EAAKd,gBAAkB3a,KAAK2a,gBAC5Bc,EAAKrc,EAAIY,KAAKZ,EACdqc,EAAK/T,EAAI1H,KAAK0H,EACd+T,EAAK9X,MAAQ3D,KAAK2D,MAClB8X,EAAK7X,OAAS5D,KAAK4D,OACZ6X,GAEXG,WAAY,SAAUV,GAClB,MAAiC,QAA1Blb,KAAKib,WAAWC,IAE3BW,WAAY,SAAUV,GACdA,EAAK/R,SAAWpJ,OAChBkH,EAAMqE,OAAOvL,KAAKua,MAAOY,GACzBjU,EAAMqE,OAAOvL,KAAKwa,SAAUW,GAC5BA,EAAK/R,OAAS,MAEd+R,EAAKtO,SAAW7M,OAChBkH,EAAMqE,OAAOvL,KAAKua,MAAOY,GACzBjU,EAAMqE,OAAOvL,KAAKya,SAAUU,GAC5BA,EAAKtO,OAAS,OAGtBiP,UAAW,SAAUZ,GACjB,MAAOhU,GAAMmE,IAAIrL,KAAKwa,SAAU,SAAUW,GACtC,MAAOA,GAAKtO,SAAWqO,KAG/Ba,OAAQ,WACJ,MAAO/b,MAAKua,MAAMpgB,QAEtB6hB,aAAc,SAAUb,GACpB,MAAOxP,GAAS3L,KAAKua,MAAOY,IAEhCc,aAAc,SAAUf,GACpB,MAAOhU,GAAMmF,IAAIrM,KAAKua,MAAO,SAAUY,GACnC,MAAOA,GAAKC,cAAcpb,QAAUkb,GACrClb,OAEPkc,aAAc,WACV,GAAIC,KAOJ,OANAjV,GAAMgE,QAAQlL,KAAKya,SAAU,SAAUtU,GACnCgW,EAAUviB,KAAKuM,EAAEiV,cAAcpb,QAChCA,MACHkH,EAAMgE,QAAQlL,KAAKwa,SAAU,SAAUrU,GACnCgW,EAAUviB,KAAKuM,EAAEiV,cAAcpb,QAChCA,MACImc,KAGXvL,EAAOlV,EAAMwG,MAAME,QACnBC,KAAM,SAAU+G,EAAQyD,EAAQ/M,EAAIsc,GAChC,GAAIlV,EAAMmB,YAAYe,GAClB,KAAM,wCAEV,IAAIlC,EAAMmB,YAAYwE,GAClB,KAAM,wCAEV,IAAIwP,GAAaC,CAEbD,GADAnV,EAAMwB,SAASU,GACD,GAAIuH,GAAKvH,GAETA,EAGdkT,EADApV,EAAMwB,SAASmE,GACD,GAAI8D,GAAK9D,GAETA,EAElB7M,KAAKoJ,OAASiT,EACdrc,KAAK6M,OAASyP,EACdtc,KAAKoJ,OAAOmR,MAAM3gB,KAAKoG,MACvBA,KAAK6M,OAAO0N,MAAM3gB,KAAKoG,MACvBA,KAAKoJ,OAAOoR,SAAS5gB,KAAKoG,MAC1BA,KAAK6M,OAAO4N,SAAS7gB,KAAKoG,MAEtBA,KAAKF,GADLoH,EAAMiB,UAAUrI,GACNA,EAEA8P,IAGV5P,KAAKuc,qBADLrV,EAAMiB,UAAUiU,GACYA,EAEA,KAEhCpc,KAAK+I,KAAO,OACZ/I,KAAK8a,UAAY,SAAY9a,KAAKoJ,OAAOtJ,GAAK,KAAOE,KAAK6M,OAAO/M,GAAK,KAE1Esb,cAAe,SAAUF,GACrB,GAAIlb,KAAKoJ,SAAW8R,GAAQlb,KAAK6M,SAAWqO,EACxC,KAAM,gDAEV,OAAOlb,MAAKoJ,SAAW8R,EAAOlb,KAAK6M,OAAS7M,KAAKoJ,QAErDoT,cAAe,SAAUrB,GACrB,MAAInb,MAAKoJ,SAAW+R,EAAK/R,QAAUpJ,KAAKoJ,SAAW+R,EAAKtO,OAC7C7M,KAAKoJ,OAEZpJ,KAAK6M,SAAWsO,EAAK/R,QAAUpJ,KAAK6M,SAAWsO,EAAKtO,OAC7C7M,KAAK6M,OAET,MAEX4P,WAAY,SAAUC,EAAIC,GACtB,MAAO3c,MAAKoJ,SAAWsT,GAAM1c,KAAK6M,SAAW8P,GAAM3c,KAAKoJ,SAAWuT,GAAM3c,KAAK6M,SAAW6P,GAE7FE,SAAU,WACN,OACI5c,KAAKoJ,OACLpJ,KAAK6M,SAGbmP,aAAc,SAAUd,GACpB,MAAOlb,MAAKoJ,SAAW8R,GAAQlb,KAAK6M,SAAWqO,GAEnDU,WAAY,SAAUT,GAClB,MAAOxP,GAAS3L,KAAKoJ,OAAOmR,MAAOY,IAASxP,EAAS3L,KAAK6M,OAAO0N,MAAOY,IAE5E0B,aAAc,SAAU3B,GACpBhU,EAAMqE,OAAOvL,KAAKoJ,OAAOmR,MAAOva,MAChCkH,EAAMqE,OAAOvL,KAAKoJ,OAAOoR,SAAUxa,MACnCkb,EAAKX,MAAM3gB,KAAKoG,MAChBkb,EAAKV,SAAS5gB,KAAKoG,MACnBA,KAAKoJ,OAAS8R,GAElB4B,aAAc,SAAU5B,GACpBhU,EAAMqE,OAAOvL,KAAK6M,OAAO0N,MAAOva,MAChCkH,EAAMqE,OAAOvL,KAAK6M,OAAO4N,SAAUza,MACnCkb,EAAKX,MAAM3gB,KAAKoG,MAChBkb,EAAKT,SAAS7gB,KAAKoG,MACnBA,KAAK6M,OAASqO,GAElB6B,aAAc,SAAU7d,EAAG8d,GACnBhd,KAAKoJ,SAAWlK,EAChBc,KAAK6c,aAAaG,GACXhd,KAAK6M,SAAW3N,GACvBc,KAAK8c,aAAaE,IAG1BvO,QAAS,WAAA,GACDwO,GAAYjd,KAAKoJ,OACjB8T,EAAYld,KAAK6M,MAOrB,OANA7M,MAAKoJ,OAAS8T,EACdhW,EAAMqE,OAAO0R,EAAUzC,SAAUxa,MACjCA,KAAKoJ,OAAOoR,SAAS5gB,KAAKoG,MAC1BA,KAAK6M,OAASoQ,EACd/V,EAAMqE,OAAO2R,EAAUzC,SAAUza,MACjCA,KAAK6M,OAAO4N,SAAS7gB,KAAKoG,MACnBA,MAEXmd,SAAU,SAAUtQ,GAChB,GAAI7M,KAAKoJ,SAAWyD,GAAU7M,KAAK6M,SAAWA,EAC1C,KAAM,gDAEN7M,MAAK6M,SAAWA,GAChB7M,KAAKyO,WAGb2O,kBAAmB,WACf,GAAIre,GAAIiB,KAAK0T,OAGb,OAFA3U,GAAE0P,UACF1P,EAAEse,UAAW,EACNte,GAEX2U,MAAO,WACH,GAAIA,GAAQ,GAAI9C,GAAK5Q,KAAKoJ,OAAQpJ,KAAK6M,OACvC,OAAO6G,MAGX7C,EAAQnV,EAAMwG,MAAME,QACpBC,KAAM,SAAUib,GACZtd,KAAKua,SACLva,KAAKud,SACLvd,KAAKwd,SAAW,GAAIhN,GACpBxQ,KAAK8H,QAAU,KACf9H,KAAKyd,MAAQ,KACTvW,EAAMiB,UAAUmV,GACZpW,EAAMwB,SAAS4U,GACftd,KAAKF,GAAKwd,GAEVtd,KAAK8H,QAAUwV,EACftd,KAAKF,GAAKwd,EAAYxd,IAG1BE,KAAKF,GAAK8P,IAEd5P,KAAK4a,OAAS,GAAI7K,GAClB/P,KAAK0d,yBAA0B,EAC/B1d,KAAK+I,KAAO,SAEhB4U,mBAAoB,SAAUC,GAAV,GAOP3jB,GAAO4X,EACRqJ,CAJR,IAHIhU,EAAMmB,YAAYuV,KAClBA,GAAe,IAEf5d,KAAK0d,yBAA4BE,EAArC,CAGA,IAAS3jB,EAAI,EAAG4X,EAAM7R,KAAKud,MAAMpjB,OAAY0X,EAAJ5X,EAASA,IAC1CihB,EAAOlb,KAAKud,MAAMtjB,GACtBihB,EAAKI,SAAWtb,KAAKqb,YAAYH,GACjCA,EAAKM,QAAUxb,KAAKub,WAAWL,EAEnClb,MAAK0d,yBAA0B,IAEnCG,aAAc,SAAUC,EAAW1M,EAAQ2M,GAA7B,GAgBNzC,GACKrhB,EAAO4X,EACRmM,CAjBR,KAAKF,EACD,KAAM,2BAeV,KAbI5W,EAAMmB,YAAY+I,KAClBA,EAAS,GAEbpR,KAAK2d,qBACDzW,EAAMmB,YAAY0V,KAClBA,EAAU,GAAIvN,GACdtJ,EAAMgE,QAAQlL,KAAKud,MAAO,SAAUxiB,GAChCgjB,EAAQtF,IAAI1d,GAAG,MAGvBgjB,EAAQnF,IAAIkF,GAAW,GACvBA,EAAUG,MAAQ7M,EACdkK,EAAWwC,EAAUxC,SAChBrhB,EAAI,EAAG4X,EAAMyJ,EAASnhB,OAAY0X,EAAJ5X,EAASA,IACxC+jB,EAAQ1C,EAASrhB,GAChB+jB,IAASD,EAAQ/a,IAAIgb,IAG1Bhe,KAAK6d,aAAaG,EAAO5M,EAAS,EAAG2M,IAG7CG,KAAM,SAAUhmB,GACZ,GAAIgP,EAAMmB,YAAYnQ,GAAQ,CAC1B,GAAK8H,KAAKyd,MASN,MAAOzd,MAAKyd,KARZ,IAAIU,GAAQjX,EAAM7L,MAAM2E,KAAKud,MAAO,SAAUxiB,GAC1C,MAA6B,KAAtBA,EAAE0f,SAAStgB;EAEtB,OAAIgkB,GACOA,EAEJjX,EAAM7L,MAAM2E,KAAKud,OAK5Bvd,KAAKyd,MAAQvlB,GAGrBkmB,uBAAwB,WAAA,GAGhBC,GACKnf,EAMLof,EAAiBrkB,EAKbskB,CAXR,KAHAve,KAAKwe,eAAiB,EACtBxe,KAAKye,iBACDJ,EAAcnX,EAAMmC,UAAUrJ,KAAKud,MAAMpjB,OAAQ,IAC5C+E,EAAI,EAAOc,KAAKud,MAAMpjB,OAAf+E,EAAuBA,IACZ,KAAnBmf,EAAYnf,KACZc,KAAK0e,uBAAuBL,EAAanf,GACzCc,KAAKwe,iBAIb,KADIF,KACCrkB,EAAI,EAAO+F,KAAKwe,eAATvkB,IAA2BA,EACnCqkB,EAAWrkB,GAAK,GAAI4W,EAExB,KAAK5W,EAAI,EAAOokB,EAAYlkB,OAAhBF,IAA0BA,EAC9BskB,EAAQD,EAAWD,EAAYpkB,IACnCskB,EAAMI,oBAAoB3e,KAAKud,MAAMtjB,GAKzC,OAHAqkB,GAAWzkB,KAAK,SAAUgR,EAAGJ,GACzB,MAAOA,GAAE8S,MAAMpjB,OAAS0Q,EAAE0S,MAAMpjB,SAE7BmkB,GAEXI,uBAAwB,SAAUE,EAAQC,GACtCD,EAAOC,GAAa7e,KAAKwe,cACzB,IAAItD,GAAOlb,KAAKud,MAAMsB,EACtB3X,GAAMgE,QAAQgQ,EAAKX,MAAO,SAAUY,GAAV,GAClBlB,GAAOkB,EAAKC,cAAcF,GAC1B4D,EAAS7E,EAAKvU,KACK,MAAnBkZ,EAAOE,IACP9e,KAAK0e,uBAAuBE,EAAQE,IAEzC9e,OAEP+e,WAAY,WAAA,GAKJtU,GACKxQ,EAAO4X,EACRqJ,CANR,IAAIlb,KAAKiJ,UAEL,MADAjJ,MAAK4a,OAAS,GAAI7K,EAItB,KADItF,EAAI,KACCxQ,EAAI,EAAG4X,EAAM7R,KAAKud,MAAMpjB,OAAY0X,EAAJ5X,EAASA,IAC1CihB,EAAOlb,KAAKud,MAAMtjB,GAIlBwQ,EAHCA,EAGGA,EAAE6H,MAAM4I,EAAKN,UAFbM,EAAKN,QAMjB,OADA5a,MAAK4a,OAASnQ,GAGlBuU,gBAAiB,SAAUd,GAAV,GAEe9U,GAAQyD,EAMhCkR,EACAkB,EAIAC,EAEIjF,EACKkF,EACDhE,EACAiE,EA8BAC,EAIRC,EACKrlB,EApDLslB,EAAO,GAAI1O,GACXvQ,EAAM,GAAIkQ,EAYd,KAXA+O,EAAKrB,KAAOA,EAAKxK,QACjB6L,EAAKrB,KAAKD,MAAQ,EAClBsB,EAAKrB,KAAKpe,GAAKoe,EAAKpe,GACpBQ,EAAImY,IAAIyF,EAAMqB,EAAKrB,MACnBA,EAAKD,MAAQ,EACTF,KACAkB,KACJM,EAAKC,SAASD,EAAKrB,MACnBH,EAAQnkB,KAAKskB,GACbe,EAAUrlB,KAAKskB,GACXgB,EAAa,EACVD,EAAU9kB,OAAS,GAEtB,IADI8f,EAAOgF,EAAUQ,MACZN,EAAK,EAAQlF,EAAKM,MAAMpgB,OAAhBglB,EAAwBA,IACjChE,EAAOlB,EAAKM,MAAM4E,GAClBC,EAAKjE,EAAKC,cAAcnB,GACxBtO,EAASoS,EAASqB,KAGtBA,EAAGnB,MAAQhE,EAAKgE,MAAQ,EACPmB,EAAGnB,MAAQ,EAAxBiB,IACAA,EAAaE,EAAGnB,MAAQ,GAEvBtS,EAASsT,EAAWG,IACrBH,EAAUrlB,KAAKwlB,GAEdzT,EAASoS,EAASqB,IACnBrB,EAAQnkB,KAAKwlB,GAEb9e,EAAIuY,YAAYoB,GAChB7Q,EAAS9I,EAAI0C,IAAIiX,IAEjB7Q,EAAS6Q,EAAKvG,QACdtK,EAAO6U,MAAQhE,EAAKgE,MACpB7U,EAAOtJ,GAAKma,EAAKna,GACjBQ,EAAImY,IAAIwB,EAAM7Q,IAEd9I,EAAIuY,YAAYuG,GAChBvS,EAASvM,EAAI0C,IAAIoc,IAEjBvS,EAASuS,EAAG1L,QACZ7G,EAAOoR,MAAQmB,EAAGnB,MAClBpR,EAAO/M,GAAKsf,EAAGtf,GACfQ,EAAImY,IAAI2G,EAAIvS,IAEZwS,EAAU,GAAIzO,GAAKxH,EAAQyD,GAC/B0S,EAAKG,QAAQL,GAIrB,KADIC,KACKrlB,EAAI,EAAOilB,EAAJjlB,EAAgBA,IAC5BqlB,EAAW1lB,QAOf,OALAsN,GAAMgE,QAAQqU,EAAKhC,MAAO,SAAUrC,GAChCoE,EAAWpE,EAAK+C,OAAOrkB,KAAKshB,KAEhCqE,EAAKD,WAAaA,EAClBC,EAAK5B,qBACE4B,GAEXI,eAAgB,SAAUC,EAAeC,GAOrC,GANI3Y,EAAMmB,YAAYuX,KAClBA,MAEA1Y,EAAMmB,YAAYwX,KAClBA,EAAoB,GAEE,IAAtB7f,KAAKud,MAAMpjB,OACX,MAAO,KAEX,IAA0B,IAAtB6F,KAAKud,MAAMpjB,OACX,MAAOwR,GAASiU,EAAe5f,KAAKud,MAAM,IAAM,KAAOvd,KAAKud,MAAM,EAEtE,IAAIuC,GAAOre,EAAEkM,KAAK3N,KAAKud,MAAO,SAAUrC,GACpC,OAAQvP,EAASiU,EAAe1E,IAASA,EAAKa,UAAY8D,GAE9D,OAAI3Y,GAAM+B,QAAQ6W,GACP,KAEJA,EAAK5Y,EAAM2C,cAAc,EAAGiW,EAAK3lB,UAE5C8O,QAAS,WACL,MAAO/B,GAAM+B,QAAQjJ,KAAKud,QAE9BwC,UAAW,WACP,MAAO7Y,GAAMmF,IAAIrM,KAAKua,MAAO,SAAUY,GACnC,MAAOxP,GAAS3L,KAAKud,MAAOpC,EAAK/R,SAAWuC,EAAS3L,KAAKud,MAAOpC,EAAKtO,SACvE7M,OAEPub,WAAY,SAAUxgB,GAClB,IAAKiF,KAAKggB,QAAQjlB,GACd,KAAM,2CAEV,OAAOA,GAAEwgB,cAEbF,YAAa,SAAUtgB,GACnB,IAAKiF,KAAKggB,QAAQjlB,GACd,KAAM,2CAEV,OAAOA,GAAEsgB,eAEbqE,QAAS,SAAUO,EAAcpT,EAAQ8O,GAAhC,GAYDuE,GAIAC,EAIAd,CAnBJ,IAAInY,EAAMmB,YAAY4X,GAClB,KAAM,wCAEV,IAAI/Y,EAAMmB,YAAYwE,GAAS,CAC3B,GAAI3F,EAAMiB,UAAU8X,EAAalX,OAA+B,SAAtBkX,EAAalX,KAEnD,MADA/I,MAAKogB,gBAAgBH,GACrB,CAEA,MAAM,yCAgBd,MAbIC,GAAclgB,KAAKqgB,QAAQJ,GAC3B/Y,EAAMmB,YAAY6X,KAClBA,EAAclgB,KAAKsgB,QAAQL,IAE3BE,EAAcngB,KAAKqgB,QAAQxT,GAC3B3F,EAAMmB,YAAY8X,KAClBA,EAAcngB,KAAKsgB,QAAQzT,IAE3BwS,EAAU,GAAIzO,GAAKsP,EAAaC,GAChCjZ,EAAMiB,UAAUwT,KAChB0D,EAAQ1D,MAAQA,GAEpB3b,KAAKua,MAAM3gB,KAAKylB,GACTA,GAEXkB,eAAgB,WACZ,KAAOvgB,KAAKua,MAAMpgB,OAAS,GAAG,CAC1B,GAAIghB,GAAOnb,KAAKua,MAAM,EACtBva,MAAK6b,WAAWV,KAGxBiF,gBAAiB,SAAUjF,GAAV,GAMLzR,GAMA8W,CAXJxgB,MAAKygB,QAAQtF,KAGjBnb,KAAKua,MAAM3gB,KAAKuhB,GACZnb,KAAKggB,QAAQ7E,EAAK/R,OAAOtJ,KACrB4J,EAAI1J,KAAKqgB,QAAQlF,EAAK/R,OAAOtJ,IACjCqb,EAAK0B,aAAanT,IAElB1J,KAAKsgB,QAAQnF,EAAK/R,QAElBpJ,KAAKggB,QAAQ7E,EAAKtO,OAAO/M,KACrB0gB,EAAIxgB,KAAKqgB,QAAQlF,EAAKtO,OAAO/M,IACjCqb,EAAK2B,aAAa0D,IAElBxgB,KAAKsgB,QAAQnF,EAAKtO,UAG1B4T,QAAS,SAAUC,GACf,GAAIxZ,EAAMwB,SAASgY,GACf,MAAOxZ,GAAMmE,IAAIrL,KAAKua,MAAO,SAAUY,GACnC,MAAOA,GAAKrb,KAAO4gB,GAG3B,IAAsB,SAAlBA,EAAS3X,KACT,MAAO4C,GAAS3L,KAAKua,MAAOmG,EAEhC,MAAM,yDAEVL,QAAS,SAAUM,GACf,GAAI7gB,GAAK6gB,EAAS7gB,IAAM6gB,CACxB,OAAI3gB,MAAKwd,SAAS3E,YAAY/Y,GACnBE,KAAKwd,SAASxa,IAAIlD,GAD7B,GAIJkgB,QAAS,SAAUW,GACf,GAAI7gB,GAAK6gB,EAAS7gB,IAAM6gB,CACxB,OAAO3gB,MAAKwd,SAAS3E,YAAY/Y,IAErC0f,SAAU,SAAUtE,GAChBlb,KAAKud,MAAM3jB,KAAKshB,GAChBlb,KAAKwd,SAAS/E,IAAIyC,EAAKpb,GAAIob,IAE/B0F,YAAa,SAAU1F,GACnBhU,EAAMqE,OAAOvL,KAAKud,MAAOrC,GACzBlb,KAAKwd,SAASjS,OAAO2P,EAAKpb,KAE9B+gB,WAAY,SAAUF,GAAV,GAMApG,GAEKtgB,EAAO4X,EACRsJ,EARRpgB,EAAI4lB,CAIR,IAHIzZ,EAAMwB,SAASiY,KACf5lB,EAAIiF,KAAKqgB,QAAQM,KAEjBzZ,EAAMiB,UAAUpN,GAShB,KAAM,+DANN,KAFIwf,EAAQxf,EAAEwf,MACdxf,EAAEwf,SACOtgB,EAAI,EAAG4X,EAAM0I,EAAMpgB,OAAY0X,EAAJ5X,EAASA,IACrCkhB,EAAOZ,EAAMtgB,GACjB+F,KAAK6b,WAAWV,EAEpBnb,MAAK4gB,YAAY7lB,IAKzB+lB,aAAc,SAAUC,EAAIC,GACxB,MAAO9Z,GAAMmE,IAAIrL,KAAKua,MAAO,SAAUY,GACnC,MAAOA,GAAK/R,QAAU2X,GAAM5F,EAAKtO,QAAUmU,GAAM7F,EAAK/R,QAAU4X,GAAM7F,EAAKtO,QAAUkU,KAG7FlF,WAAY,SAAUV,GAClBjU,EAAMqE,OAAOvL,KAAKua,MAAOY,GACzBjU,EAAMqE,OAAO4P,EAAK/R,OAAOoR,SAAUW,GACnCjU,EAAMqE,OAAO4P,EAAK/R,OAAOmR,MAAOY,GAChCjU,EAAMqE,OAAO4P,EAAKtO,OAAO4N,SAAUU,GACnCjU,EAAMqE,OAAO4P,EAAKtO,OAAO0N,MAAOY,IAEpCmF,QAAS,SAAUK,EAAUM,EAAYtF,GACrC,GAAIuF,GAAU,IACd,KAAKha,EAAMiB,UAAUwY,GACjB,KAAM,gDAEV,IAAIzZ,EAAMwB,SAASiY,GAAW,CAC1B,GAAI3gB,KAAKggB,QAAQW,GACb,MAAO3gB,MAAKqgB,QAAQM,EAExBO,GAAU,GAAIvQ,GAAKgQ,OAChB,CACH,GAAI3gB,KAAKggB,QAAQW,GACb,MAAO3gB,MAAKqgB,QAAQM,EAExBO,GAAUP,EASd,MAPIzZ,GAAMiB,UAAU8Y,IAChBC,EAAQtG,OAAOqG,GAEf/Z,EAAMiB,UAAUwT,KAChBuF,EAAQvF,MAAQA,GAEpB3b,KAAKwf,SAAS0B,GACPA,GAEXvC,oBAAqB,SAAUzD,GACtBlb,KAAKggB,QAAQ9E,IACdlb,KAAKwf,SAAStE,EAElB,IAAIiG,GAAWjG,EAAKV,QACpBU,GAAKV,YACLtT,EAAMgE,QAAQiW,EAAU,SAAUhG,GAC9Bnb,KAAKogB,gBAAgBjF,IACtBnb,OAEPye,eAAgB,WACZ,GAAIxkB,EACJ,KAAKA,EAAI,EAAO+F,KAAKud,MAAMpjB,OAAfF,IAAyBA,EACjC+F,KAAKud,MAAMtjB,GAAGyL,MAAQzL,CAE1B,KAAKA,EAAI,EAAO+F,KAAKua,MAAMpgB,OAAfF,IAAyBA,EACjC+F,KAAKua,MAAMtgB,GAAGyL,MAAQzL,GAG9ByZ,MAAO,SAAU0N,GAAV,GAOC9gB,GANAmb,EAAO,GAAI5K,GACXwQ,EAAOna,EAAMiB,UAAUiZ,IAAgBA,KAAgB,CAsB3D,OArBIC,KACA5F,EAAK6F,QAAU,GAAI9Q,GACnBiL,EAAK8F,QAAU,GAAI/Q,IAEnBlQ,EAAM,GAAIkQ,GACdtJ,EAAMgE,QAAQlL,KAAKud,MAAO,SAAUiE,GAChC,GAAIC,GAAQD,EAAU9N,OACtBpT,GAAIsY,IAAI4I,EAAWC,GACnBhG,EAAK+D,SAASiC,GACVJ,GACA5F,EAAK6F,QAAQ1I,IAAI6I,EAAOD,KAGhCta,EAAMgE,QAAQlL,KAAKua,MAAO,SAAUmH,GAChC,GAAIphB,EAAIuY,YAAY6I,EAAatY,SAAW9I,EAAIuY,YAAY6I,EAAa7U,QAAS,CAC9E,GAAI8U,GAAWlG,EAAKiE,QAAQpf,EAAI0C,IAAI0e,EAAatY,QAAS9I,EAAI0C,IAAI0e,EAAa7U,QAC3EwU,IACA5F,EAAK8F,QAAQ3I,IAAI+I,EAAUD,MAIhCjG,GAEXmG,UAAW,SAAUC,GACjB,MAAOhR,GAAM3J,MAAM0a,UAAU5hB,KAAM6hB,IAEvCC,oBAAqB,SAAUhE,EAAWiE,GAArB,GAUbC,GACAjE,CAVJ,IAAI7W,EAAMmB,YAAYyV,GAClB,KAAM,qCAEV,IAAI5W,EAAMmB,YAAY0Z,GAClB,KAAM,+BAEV,KAAK/hB,KAAKggB,QAAQlC,GACd,KAAM,gDAENkE,GAAYhiB,KAAKqgB,QAAQvC,GACzBC,KACJ/d,KAAKiiB,aAAaD,EAAWD,EAAQhE,IAEzCkE,aAAc,SAAU/G,EAAM6G,EAAQhE,GAAxB,GAGNzC,GACKrhB,EAAO4X,EACRmM,CADR,KAHA+D,EAAO7G,GACP6C,EAAQnkB,KAAKshB,GACTI,EAAWJ,EAAKG,cACXphB,EAAI,EAAG4X,EAAMyJ,EAASnhB,OAAY0X,EAAJ5X,EAASA,IACxC+jB,EAAQ1C,EAASrhB,GACjB0R,EAASoS,EAASC,IAGtBhe,KAAKiiB,aAAajE,EAAO+D,EAAQhE,IAGzCmE,sBAAuB,SAAUpE,EAAWiE,GAArB,GAUfC,GACAG,EACApE,EAGI7C,EAGAI,EACKrhB,EAAO4X,EACRmM,CAnBZ,IAAI9W,EAAMmB,YAAYyV,GAClB,KAAM,qCAEV,IAAI5W,EAAMmB,YAAY0Z,GAClB,KAAM,+BAEV,KAAK/hB,KAAKggB,QAAQlC,GACd,KAAM,gDAMV,KAJIkE,EAAYhiB,KAAKqgB,QAAQvC,GACzBqE,EAAQ,GAAI1R,GACZsN,KACJoE,EAAMnI,QAAQgI,GACPG,EAAMhoB,OAAS,GAKlB,IAJI+gB,EAAOiH,EAAMjI,UACjB6H,EAAO7G,GACP6C,EAAQnkB,KAAKshB,GACTI,EAAWJ,EAAKG,cACXphB,EAAI,EAAG4X,EAAMyJ,EAASnhB,OAAY0X,EAAJ5X,EAASA,IACxC+jB,EAAQ1C,EAASrhB,GACjB0R,EAASoS,EAASC,IAAUrS,EAASwW,EAAOnE,IAGhDmE,EAAMnI,QAAQgE,IAI1BoE,6BAA8B,SAAUC,EAAoBnH,EAAMoH,EAASC,EAAUC,EAAWC,EAAO/c,GAAzE,GAKtB4V,GAA+BrB,EAC1BhgB,EAAO4X,EAUR6Q,CAVR,KALAJ,EAAQ7J,IAAIyC,EAAMxV,GAClB6c,EAAS9J,IAAIyC,EAAMxV,GACnBA,IACA+c,EAAM7oB,KAAKshB,GACPI,EAAWJ,EAAKG,cACXphB,EAAI,EAAG4X,EAAMyJ,EAASnhB,OAAY0X,EAAJ5X,EAASA,IAC5CggB,EAAOqB,EAASrhB,GACXqoB,EAAQzJ,YAAYoB,GAGdtO,EAAS8W,EAAOxI,IACvBsI,EAAS9J,IAAIyC,EAAMza,KAAK9H,IAAI4pB,EAASvf,IAAIkY,GAAOoH,EAAQtf,IAAIiX,MAH5Dja,KAAKoiB,6BAA6BC,EAAoBpI,EAAMqI,EAASC,EAAUC,EAAWC,EAAO/c,GACjG6c,EAAS9J,IAAIyC,EAAMza,KAAK9H,IAAI4pB,EAASvf,IAAIkY,GAAOqH,EAASvf,IAAIiX,KAKrE,IAAIsI,EAASvf,IAAIkY,KAAUoH,EAAQtf,IAAIkY,GAAO,CACtCwH,IACJ,GACIzI,GAAOwI,EAAMhD,MACbiD,EAAU9oB,KAAKqgB,SACVA,IAASiB,KACbmH,GAAsBK,EAAUvoB,OAAS,IAC1CqoB,EAAU5oB,KAAK8oB,KAI3BC,WAAY,SAAUN,GAAV,GAIJC,GACAC,EACAC,EACAC,EACKxoB,EAAO4X,EACRqJ,CADR,KAPIhU,EAAMmB,YAAYga,KAClBA,GAAqB,GAErBC,EAAU,GAAI9R,GACd+R,EAAW,GAAI/R,GACfgS,KACAC,KACKxoB,EAAI,EAAG4X,EAAM7R,KAAKud,MAAMpjB,OAAY0X,EAAJ5X,EAASA,IAC1CihB,EAAOlb,KAAKud,MAAMtjB,GAClBqoB,EAAQzJ,YAAYqC,IAGxBlb,KAAKoiB,6BAA6BC,EAAoBnH,EAAMoH,EAASC,EAAUC,EAAWC,EAAO,EAErG,OAAOD,IAEXI,UAAW,WACP,MAAO1b,GAAM+B,QAAQjJ,KAAK2iB,eAE9BE,WAAY,SAAUC,GAAV,GACJC,GAAaD,EAAMlB,YACnBoB,EAAYhjB,KAAK4hB,WACrB,OAAO1a,GAAMmF,IAAI0W,EAAY,SAAUrZ,GACnC,MAAOiC,GAASqX,EAAWtZ,MAGnCuZ,YAAa,WAAA,GAKDzmB,GAEI0mB,EACAC,EACKlpB,EAAO4X,EACRsJ,EAIAiI,EAMZ3H,EACA4H,EACAC,EACAC,EASAC,EAUAC,EACAC,EAEIta,EAAQyD,EAAQ8W,EAEZC,EAGSC,EACDC,EAYRC,EAGSC,EACDC,EAYHld,EAEGmd,EACAhlB,EACKilB,EACDC,EACAC,EAcpBC,EACKC,EAGLC,CAtGJ,IAAIxkB,KAAKiJ,WAAkC,GAArBjJ,KAAKud,MAAMpjB,QAAoC,GAArB6F,KAAKua,MAAMpgB,OACvD,QAEJ,IAAyB,GAArB6F,KAAKud,MAAMpjB,OAAa,CAExB,GADIqC,KACAwD,KAAKua,MAAMpgB,OAAS,EAGpB,IAFI+oB,EAAUljB,KAAKua,MAAM,GACrB4I,EAAUD,EAAQ9Z,OACbnP,EAAI,EAAG4X,EAAM7R,KAAKua,MAAMpgB,OAAY0X,EAAJ5X,EAASA,IAC1CkhB,EAAOnb,KAAKua,MAAMtgB,GAClBkhB,EAAK/R,QAAU+Z,IAGfC,EAAMjI,EAAK1M,UACfjS,EAAO5C,KAAKwpB,GAGpB,OAAO5mB,GA0BX,IAxBIif,EAAOzb,KAAK0T,OAAM,GAClB2P,EAAIrjB,KAAKud,MAAMpjB,OACfmpB,EAAmB,GAAI9S,GACvB+S,EAAgB,SAAUrI,GAC1B,MAA6B,KAAzBA,EAAKV,SAASrgB,OACP,EAAIkpB,EACqB,IAAzBnI,EAAKT,SAAStgB,OACdkpB,EAAI,EAEJnI,EAAKV,SAASrgB,OAAS+gB,EAAKT,SAAStgB,QAGhDqpB,EAAwB,SAAUtI,EAAMoI,GACxC,GAAIK,GAAYJ,EAAcrI,EAAMmI,EAC/BC,GAAiBzK,YAAY8K,IAC9BL,EAAiB1K,IAAI+K,MAEzBL,EAAiBtgB,IAAI2gB,GAAW/pB,KAAKshB,IAEzChU,EAAMgE,QAAQuQ,EAAK8B,MAAO,SAAUre,GAChCskB,EAAsBtkB,EAAGokB,KAEzBG,KACAC,KACGjI,EAAK8B,MAAMpjB,OAAS,GAAG,CAE1B,GAAImpB,EAAiBzK,YAAY,EAAIwK,GAEjC,IADIO,EAAUN,EAAiBtgB,IAAI,EAAIqgB,GAChCO,EAAQzpB,OAAS,GAAG,CAEvB,IADA0S,EAAS+W,EAAQnE,MACRoE,EAAK,EAAQhX,EAAO0N,MAAMpgB,OAAlB0pB,EAA0BA,IACnCC,EAAajX,EAAO0N,MAAMsJ,GAC9Bza,EAAS0a,EAAW1I,cAAcvO,GAClC8W,EAAYJ,EAAcna,EAAQia,GAClCnc,EAAMqE,OAAO+X,EAAiBtgB,IAAI2gB,GAAYva,GAC9CA,EAAOyS,WAAWiI,GAClBN,EAAsBpa,EAAQka,EAElC7H,GAAKmF,YAAY/T,GACjB6W,EAAYe,QAAQ5X,GAG5B,GAAIyW,EAAiBzK,YAAYwK,EAAI,GAEjC,IADIU,EAAUT,EAAiBtgB,IAAIqgB,EAAI,GAChCU,EAAQ5pB,OAAS,GAAG,CAEvB,IADAiP,EAAS2a,EAAQtE,MACRuE,EAAK,EAAQ5a,EAAOmR,MAAMpgB,OAAlB6pB,EAA0BA,IACnCC,EAAa7a,EAAOmR,MAAMyJ,GAC9BnX,EAASoX,EAAW7I,cAAchS,GAClCua,EAAYJ,EAAc1W,EAAQwW,GAClCnc,EAAMqE,OAAO+X,EAAiBtgB,IAAI2gB,GAAY9W,GAC9CA,EAAOgP,WAAWoI,GAClBT,EAAsB3W,EAAQyW,EAElCG,GAAY7pB,KAAKwP,GACjBqS,EAAKmF,YAAYxX,GAGzB,GAAIqS,EAAK8B,MAAMpjB,OAAS,EACpB,IAAS4M,EAAIsc,EAAI,EAAGtc,EAAI,EAAIsc,EAAGtc,IAC3B,GAAIuc,EAAiBzK,YAAY9R,IAAMuc,EAAiBtgB,IAAI+D,GAAG5M,OAAS,EAAG,CAGvE,IAFI+pB,EAAUZ,EAAiBtgB,IAAI+D,GAC/B7H,EAAIglB,EAAQzE,MACP0E,EAAK,EAAQjlB,EAAEqb,MAAMpgB,OAAbgqB,EAAqBA,IAC9BC,EAAMllB,EAAEqb,MAAM4J,GACdE,EAAID,EAAIhJ,cAAclc,GAC1BykB,EAAYJ,EAAcc,EAAGhB,GAC7Bnc,EAAMqE,OAAO+X,EAAiBtgB,IAAI2gB,GAAYU,GAC9CA,EAAExI,WAAWuI,GACbZ,EAAsBa,EAAGf,EAE7BG,GAAY7pB,KAAKsF,GACjBuc,EAAKmF,YAAY1hB,EACjB,QAOhB,IAFAukB,EAAcA,EAAYiB,OAAOhB,GAC7BY,EAAc,GAAI9T,GACb+T,EAAK,EAAQvkB,KAAKud,MAAMpjB,OAAhBoqB,EAAwBA,IACrCD,EAAY1L,IAAI6C,EAAK6F,QAAQte,IAAIygB,EAAYc,IAAMA,EASvD,OAPIC,MACJtd,EAAMgE,QAAQlL,KAAKua,MAAO,SAAUY,GAC5BmJ,EAAYthB,IAAImY,EAAK/R,QAAUkb,EAAYthB,IAAImY,EAAKtO,UACpDsO,EAAK1M,UACL+V,EAAc5qB,KAAKuhB,MAGpBqJ,KAGf3T,EAAM8T,YACFC,WAAY,WACR,MAAO/T,GAAM3J,MAAMqL,OACf,OACA,OACA,OACA,OACA,OACA,OACA,OACA,UAGRsS,QAAS,WACL,MAAOhU,GAAM3J,MAAMqL,OACf,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,WAGRuS,WAAY,WACR,MAAOjU,GAAM3J,MAAMqL,OACf,OACA,OACA,UAGRwS,WAAY,SAAUC,GAIlB,MAHI9d,GAAMmB,YAAY2c,KAClBA,EAAS,GAENnU,EAAM3J,MAAM+d,mBAAmBD,EAAQ,IAElDE,OAAQ,SAAU/qB,GAId,MAHI+M,GAAMmB,YAAYlO,KAClBA,EAAS,IAEN0W,EAAM3J,MAAM+d,mBAAmB9qB,EAAQ,IAElDgrB,KAAM,SAAUH,EAAQI,GACpB,MAAOvU,GAAM3J,MAAM+d,mBAAmBD,EAAQI,IAElDC,OAAQ,SAAUL,EAAQI,EAAeE,GACrC,MAAOzU,GAAM3J,MAAMqe,qBAAqBP,EAAQI,EAAeE,IAEnEE,SAAU,WACN,MAAO3U,GAAM3J,MAAMqL,OACf,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,UAGRkT,KAAM,SAAU1qB,EAAGyE,GAAb,GAKOvF,GACDyrB,EACKze,EACDiU,EAMIvI,EAbZgT,EAAI,GAAI7d,GAAQ+I,KACpB,IAAS,GAAL9V,GAAe,GAALyE,EACV,MAAOmmB,EAEX,KAAS1rB,EAAI,EAAOc,EAAI,EAARd,EAAWA,IAEvB,IADIyrB,EAAW,KACNze,EAAI,EAAOzH,EAAI,EAARyH,EAAWA,IACnBiU,EAAO,GAAIvK,GAAK1W,GAAAA,EAAe,IAAMgN,GACzC0e,EAAErF,QAAQpF,GACNwK,GACAC,EAAEjG,QAAQgG,EAAUxK,GAEpBjhB,EAAI,IACA0Y,EAAOgT,EAAEtF,QAAQ,IAACpmB,EAAI,GAAgB,IAAMgN,GAChD0e,EAAEjG,QAAQ/M,EAAMuI,IAEpBwK,EAAWxK,CAGnB,OAAOyK,KAGf9U,EAAM3J,OACFqL,MAAO,SAAUqT,GAAV,GACCC,GACK5rB,EAAO4X,EACRiU,EAKIrtB,EAPM8lB,EAAQ,GAAIzW,GAAQ+I,MAASlX,EAAQisB,EAAYnT,OACnE,KAASxY,EAAI,EAAG4X,EAAMlY,EAAMQ,OAAY0X,EAAJ5X,EAASA,IAAK,CAE9C,GADI6rB,EAAOnsB,EAAMM,GACbiN,EAAMwB,SAASod,GAAO,CACtB,GAAIA,EAAKpa,QAAQ,MAAQ,EACrB,KAAM,yCAGV,IADIjT,EAAIqtB,EAAKppB,MAAM,MACH,GAAZjE,EAAE0B,OACF,KAAM,yCAEV0rB,GAAe,GAAIjV,GAAKnY,EAAE,GAAIA,EAAE,IAChC8lB,EAAMmB,QAAQmG,GAElB,GAAI3e,EAAMoB,SAASwd,GAAO,CACtB,IAAKD,EACD,KAAM,6CAEVnqB,GAAMiF,WAAWklB,EAAcC,IAGvC,MAAOvH,IAEXqD,UAAW,SAAUrD,EAAOsD,GAAjB,GAOHkE,GACK9rB,EAAO4X,EACRsJ,CARR,IAAIjU,EAAMmB,YAAYkW,GAClB,KAAM,qDAMV,KAJIrX,EAAMmB,YAAYwZ,KAClBA,GAAS,GAETkE,KACK9rB,EAAI,EAAG4X,EAAM0M,EAAMhE,MAAMpgB,OAAY0X,EAAJ5X,EAASA,IAC3CkhB,EAAOoD,EAAMhE,MAAMtgB,GACvB8rB,EAAInsB,KAAKuhB,EAAK/R,OAAOtJ,GAAK,KAAOqb,EAAKtO,OAAO/M,IACzC+hB,GACAkE,EAAInsB,MAAOkG,GAAIqb,EAAKrb,IAG5B,OAAOimB,IAEXC,UAAW,SAAUC,EAAcxtB,EAAGqH,EAAIomB,GAkBtC,MAjBIhf,GAAMmB,YAAY5P,KAClBA,EAAI,GAAIqP,GAAQ6B,MAAM,EAAG,IAEzBzC,EAAMmB,YAAYvI,KAClBA,EAAK8P,KAETsW,EAAgBxqB,EAAMiF,YAClBgD,MAAO,GACPC,OAAQ,GACR9D,GAAIA,EACJqmB,OAAQ,GACRC,KAAM,UACNvL,KAAM,SACNwL,UAAU,EACVjnB,EAAG3G,EAAE2G,EACLsI,EAAGjP,EAAEiP,GACNwe,GACID,EAAaK,SAASJ,IAEjCK,eAAgB,SAAUze,EAASoG,EAAMF,EAAI9K,GACzC,MAAO4E,GAAQ0e,QAAQtY,EAAMF,EAAI9K,IAErCujB,uBAAwB,SAAU3e,EAASyW,EAAOmI,EAAUC,GAApC,GAahBhjB,GACAC,EACAtD,EAAU4a,EAAMZ,EACXrgB,EAAO4X,EAERpZ,EAQAmuB,EAWAhM,EASCiM,EACD1L,EACA2L,EAIAC,EAOA1nB,EAEK2nB,CA5Db,IAAI9f,EAAMmB,YAAYP,GAClB,KAAM,mCAEV,IAAIZ,EAAMmB,YAAYkW,GAClB,KAAM,iCAWV,KATIrX,EAAMmB,YAAYqe,KAClBA,GAAW,GAEXxf,EAAMmB,YAAYse,KAClBA,GAAa,GAEbhjB,EAAQmE,EAAQtC,QAAQyhB,aAAe,IACvCrjB,EAASkE,EAAQtC,QAAQ0hB,cAAgB,IACzC5mB,KACKrG,EAAI,EAAG4X,EAAM0M,EAAMhB,MAAMpjB,OAAY0X,EAAJ5X,EAASA,IAC/CihB,EAAOqD,EAAMhB,MAAMtjB,GACfxB,EAAIyiB,EAAK9O,SACTlF,EAAMmB,YAAY5P,KAEdA,EADAyO,EAAMiB,UAAU+S,EAAK9b,IAAM8H,EAAMiB,UAAU+S,EAAKxT,GAC5C,GAAIiC,GAAMuR,EAAK9b,EAAG8b,EAAKxT,GAEvB,GAAIiC,GAAMzC,EAAM2C,cAAc,GAAIlG,EAAQ,IAAKuD,EAAM2C,cAAc,GAAIjG,EAAS,MAGxFgjB,KACY,MAAZ1L,EAAKpb,IACE6mB,GACPjrB,EAAMiF,WAAWimB,GACbjjB,MAAuB,IAAhBlD,KAAKwJ,SAAiB,GAC7BrG,OAAwB,GAAhBnD,KAAKwJ,SAAgB,GAC7B4Q,KAAM,YACNuL,MAAQxpB,MAAO,aAGvB0d,EAAQta,KAAKgmB,UAAUle,EAASrP,EAAGyiB,EAAKpb,GAAI8mB,GACxChM,EAASN,EAAMM,SACf1T,EAAMiB,UAAUyS,KAChBM,EAAK9b,EAAIwb,EAAOxb,EAChB8b,EAAKxT,EAAIkT,EAAOlT,EAChBwT,EAAKvX,MAAQiX,EAAOjX,MACpBuX,EAAKtX,OAASgX,EAAOhX,QAEzBtD,EAAI4a,EAAKpb,IAAMwa,CAEnB,KAASuM,EAAM,EAAStI,EAAMhE,MAAMpgB,OAAlB0sB,EAA0BA,IACpC1L,EAAOoD,EAAMhE,MAAMsM,GACnBC,EAAcxmB,EAAI6a,EAAK/R,OAAOtJ,IAC9BoH,EAAMmB,YAAYye,KAGlBC,EAAczmB,EAAI6a,EAAKtO,OAAO/M,IAC9BoH,EAAMmB,YAAY0e,IAGtB/mB,KAAKumB,eAAeze,EAASgf,EAAaC,GAAejnB,GAAIqb,EAAKrb,KAEtE,IAAI4mB,EAGA,IAFIrnB,EAAI,GAAIyI,GAAQqf,aAAarf,GACjCzI,EAAE+nB,YAAY7I,GAAS8I,aAAa,IAC3BL,EAAM,EAASzI,EAAMhB,MAAMpjB,OAAlB6sB,EAA0BA,IACxC9L,EAAOqD,EAAMhB,MAAMyJ,GACnB1M,EAAQha,EAAI4a,EAAKpb,IACjBwa,EAAMM,OAAO,GAAI7K,GAAKmL,EAAK9b,EAAG8b,EAAKxT,EAAGwT,EAAKvX,MAAOuX,EAAKtX,UAInEqhB,mBAAoB,SAAUD,EAAQI,GAAlB,GAOZO,GAAyBvlB,EAAcknB,EAAgBC,EAIvDrJ,EAIKjkB,EAEIgN,EACDugB,EACKzgB,EACDsD,CAZhB,IAPInD,EAAMmB,YAAY2c,KAClBA,EAAS,GAET9d,EAAMmB,YAAY+c,KAClBA,EAAgB,GAEhBO,EAAI,GAAI7d,GAAQ+I,MAASzQ,EAAU,GAAIknB,KAC7B,GAAVtC,GAAgC,GAAjBI,EACf,MAAOO,EAMX,KAJIzH,EAAO,GAAIvN,GAAK,MAAGvQ,GACvBulB,EAAErF,QAAQpC,GACVyH,EAAEzH,KAAOA,EACToJ,EAAU1tB,KAAKskB,GACNjkB,EAAI,EAAO+qB,EAAJ/qB,EAAYA,IAAK,CAE7B,IADAstB,KACStgB,EAAI,EAAOqgB,EAAUntB,OAAd8M,EAAsBA,IAElC,IADIugB,EAASF,EAAUrgB,GACdF,EAAI,EAAOqe,EAAJre,EAAmBA,IAC3BsD,EAAO,GAAIsG,GAAK,MAAGvQ,GACvBulB,EAAEjG,QAAQ8H,EAAQnd,GAClBkd,EAAK3tB,KAAKyQ,EAGlBid,GAAYC,EAEhB,MAAO5B,IAEXJ,qBAAsB,SAAUP,EAAQI,EAAeqC,GAAjC,GAUd9B,GAAyBvlB,EAAcknB,EAAgBC,EAIlD/G,EACDtC,EAGKjkB,EAEIgN,EACDugB,EACKzgB,EACDsD,CAZpB,IAVInD,EAAMmB,YAAY2c,KAClBA,EAAS,GAET9d,EAAMmB,YAAY+c,KAClBA,EAAgB,GAEhBle,EAAMmB,YAAYof,KAClBA,EAAY,GAEZ9B,EAAI,GAAI7d,GAAQ+I,MAASzQ,EAAU,GAAIknB,KAC7B,GAAVtC,GAAgC,GAAjBI,GAAmC,GAAbqC,EACrC,MAAO9B,EAEX,KAASnF,EAAI,EAAOiH,EAAJjH,EAAeA,IAI3B,IAHItC,EAAO,GAAIvN,GAAK,MAAGvQ,GACvBulB,EAAErF,QAAQpC,GACVoJ,GAAapJ,GACJjkB,EAAI,EAAO+qB,EAAJ/qB,EAAYA,IAAK,CAE7B,IADAstB,KACStgB,EAAI,EAAOqgB,EAAUntB,OAAd8M,EAAsBA,IAElC,IADIugB,EAASF,EAAUrgB,GACdF,EAAI,EAAOqe,EAAJre,EAAmBA,IAC3BsD,EAAO,GAAIsG,GAAK,MAAGvQ,GACvBulB,EAAEjG,QAAQ8H,EAAQnd,GAClBkd,EAAK3tB,KAAKyQ,EAGlBid,GAAYC,EAGpB,MAAO5B,IAEX+B,2BAA4B,SAAUC,EAAWC,EAAcC,GAAnC,GAUpBlC,GAAyBvlB,EAIzB8d,EAMSjkB,EACD6tB,EAIA5G,EAIA6G,EACK5D,EACDpD,EACAC,CArBhB,IAVI9Z,EAAMmB,YAAYsf,KAClBA,EAAY,IAEZzgB,EAAMmB,YAAYuf,KAClBA,EAAe,GAEf1gB,EAAMmB,YAAYwf,KAClBA,GAAS,GAETlC,EAAI,GAAI7d,GAAQ+I,MAASzQ,EAAU,GACtB,GAAbunB,EACA,MAAOhC,EAIX,IAFIzH,EAAO,GAAIvN,GAAK,MAAGvQ,GACvBulB,EAAErF,QAAQpC,GACQ,IAAdyJ,EACA,MAAOhC,EAEX,IAAIgC,EAAY,EAAG,CACf,IAAS1tB,EAAI,EAAO0tB,EAAJ1tB,IACR6tB,EAAWnC,EAAEhG,kBAAmBiI,GAC/BE,GAFsB7tB,IAKvBinB,EAAUyE,EAAErF,QAAQrmB,GAAAA,GACxB0rB,EAAEjG,QAAQoI,EAAU5G,EAExB,KAAK2G,GAAUF,EAAY,EAEvB,IADII,EAAkB7gB,EAAM2C,cAAc,EAAG8d,GACpCxD,EAAK,EAAQ4D,EAAL5D,EAAsBA,IAC/BpD,EAAK4E,EAAEhG,kBAAmBiI,GAC1B5G,EAAK2E,EAAEhG,kBAAmBiI,GAC1B7G,GAAMC,IAAO2E,EAAE7E,aAAaC,EAAIC,IAChC2E,EAAEjG,QAAQqB,EAAIC,EAI1B,OAAO2E,KAGfqC,cAAe,SAAUlgB,EAASmgB,EAAYL,EAAcC,EAAQlB,GAChE,GAAIhB,GAAIjqB,EAAM0F,QAAQ0G,QAAQ+I,MAAM3J,MAAMwgB,2BAA2BO,EAAYL,EAAcC,EAC/FhX,GAAM3J,MAAMuf,uBAAuB3e,EAAS6d,GAAG,EAAOgB,KAG9DjrB,EAAMiF,WAAWmH,GACbzF,KAAM,SAAUmD,GACZ9J,EAAM2G,KAAKmD,EAASsC,EAAQgH,KAEhCnF,MAAOA,EACPsG,UAAWA,EACXK,SAAUA,EACVP,KAAMA,EACNC,KAAMA,EACNE,UAAWA,EACXE,OAAQA,EACRC,aAAcA,EACdb,eAAgBA,EAChBI,SAAUA,EACVY,WAAYA,EACZD,UAAWA,EACXE,MAAOA,EACPC,IAAKA,EACLC,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPf,YAAaA,KAEnBpP,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,uBACH,gBACA,wBACDD,IACL,YACG,SAAU0J,EAAGxG,GASV,QAASitB,GAAmBhlB,EAASilB,GAArC,GAGQjwB,GAAOsO,EACFvM,EAHLmuB,EAAiBpoB,KAAKkD,QACtBmlB,GAAa,CAEjB,KAASpuB,EAAI,EAAOkuB,EAAOhuB,OAAXF,EAAmBA,IAC/BuM,EAAQ2hB,EAAOluB,GACf/B,EAAQgL,EAAQsD,GACZtN,EAAShB,IAAUkwB,EAAe5hB,KAAWtO,IAC7CkwB,EAAe5hB,GAAStO,EACxBmwB,GAAa,EAGrB,OAAOA,GAqmCX,QAASC,GAAqBplB,GAC1B,OACI9D,EAAG8D,EAAQ9D,GAAK,EAChBsI,EAAGxE,EAAQwE,GAAK,EAChB/D,MAAOT,EAAQS,OAAS,EACxBC,OAAQV,EAAQU,QAAU,GAGlC,QAAS2kB,GAAwBrlB,GAC7B,GAAIA,EAAS,CACT,GAAIslB,GAAiBtlB,CAOrB,OANIwF,GAAS8f,KACTA,GAAmB5rB,MAAO4rB,IAE1BA,EAAe5rB,QACf4rB,EAAe5rB,MAAQ6rB,EAASD,EAAe5rB,QAE5C4rB,GAGf,QAASC,GAASvwB,GACd,GAAI0E,EAMJ,OAJIA,GADA1E,GAASwwB,EACD,GAAInpB,GAAEopB,MAAMzwB,GAAO0wB,QAEnB1wB,EAIhB,QAAS2wB,GAAUxQ,EAAIC,GAAvB,GACQwQ,GAAQxQ,EAAGlZ,EAAIiZ,EAAGjZ,EAClB2pB,EAAQzQ,EAAG5Q,EAAI2Q,EAAG3Q,EAClBoM,EAAQpY,EAAMwF,KAAKlI,IAAIyH,KAAK+J,MAAMue,EAAOD,GAC7C,OAAOhV,GAEX,QAASkV,GAAc5pB,EAAGsI,GACtB,MAAO,IAAInI,GAAE0pB,QAAQ,GAAItD,GAAEhc,MAAMvK,EAAGsI,IAExC,QAASwhB,GAActV,GACnB,MAAIA,GACO,GAAI+R,GAAE5V,MACT6D,EAAKxU,EACLwU,EAAKlM,IAELkM,EAAKjQ,MACLiQ,EAAKhQ,SANb,EAjqCP,GAuBOulB,GAeAC,EAmCAC,EAgCAC,EA6CAC,EA4DAC,EAmEAC,EA6EAC,EA+DAC,EAqDAC,EA8BAC,EAgCAC,EA+DAC,EA0GAC,EA2DAC,EAiDAC,EAoEAC,EAiCAC,EAqGAC,EAyBAC,EA6CAC,EAxjCA7uB,EAAQgF,OAAOhF,MAAOoM,EAAUpM,EAAM0F,QAAQ0G,QAAS5F,EAAQxG,EAAMwG,MAAOvB,EAAajF,EAAMiF,WAAYgJ,EAAQ7B,EAAQ6B,MAAOoG,EAAOjI,EAAQiI,KAAMK,EAAStI,EAAQsI,OAAQlJ,EAAQY,EAAQZ,MAAOhO,EAAWgO,EAAMhO,SAAUwP,EAAWxB,EAAMwB,SAAU2H,EAAevI,EAAQuI,aAAcsV,EAAIjqB,EAAM8uB,SAAUjrB,EAAI7D,EAAMyF,QAASlJ,EAAUyD,EAAMwF,KAAKjJ,QAASkN,EAAU1D,EAAE0D,QACnXujB,EAAc,cAAe+B,GACzBC,KAAM,OACNC,WAAY,aACZC,aAAc,eACdC,SAAU,YACXC,EAAoB,IAAKC,EAAQ,QAASC,EAAM,MAAOC,EAAQ,QAASC,EAAS,SAAUC,EAAI,IAAKC,EAAI,GAC/GtjB,GAAQ2iB,QAAUA,EAedtB,EAAQjnB,EAAME,QACdC,KAAM,SAAUjD,EAAGsI,GACf1H,KAAKZ,EAAIA,EACTY,KAAK0H,EAAIA,GAEb2jB,SAAU,WACN,MAAOjb,GAAOmH,QAAQvX,KAAKZ,EAAGY,KAAK0H,IAEvCkB,SAAU,WACN,MAAOlN,GAAM4vB,OAAO,iBAAkBtrB,KAAKZ,EAAGY,KAAK0H,IAEvD6jB,OAAQ,WACJ,MAAO,IAAIpC,GAAM,EAAInpB,KAAKZ,EAAG,EAAIY,KAAK0H,MAG1C0hB,EAAclnB,EAAME,QACpBC,KAAM,SAAUjD,EAAGsI,GACf1H,KAAKZ,EAAIA,EACTY,KAAK0H,EAAIA,GAEb8jB,eAAgB,WACZ,MAAO,IAAInb,GAAa,EAAG,EAAG,EAAG,EAAGrQ,KAAKZ,EAAGY,KAAK0H,IAErD2jB,SAAU,WACN,MAAOjb,GAAO+G,YAAYnX,KAAKZ,EAAGY,KAAK0H,IAE3CkB,SAAU,WACN,MAAOlN,GAAM4vB,OAAO,qBAAsBtrB,KAAKZ,EAAGY,KAAK0H,IAE3DwJ,KAAM,SAAUyD,GACZ3U,KAAKZ,GAAKuV,EAAMvV,EAChBY,KAAK0H,GAAKiN,EAAMjN,GAEpB2J,MAAO,SAAUS,GACb9R,KAAKZ,GAAK0S,EACV9R,KAAK0H,GAAKoK,GAEd3X,OAAQ,WACJ,MAAOsG,MAAKmK,KAAK5K,KAAKZ,EAAIY,KAAKZ,EAAIY,KAAK0H,EAAI1H,KAAK0H,IAErD4J,UAAW,WACa,IAAhBtR,KAAKyrB,QAGTzrB,KAAKqR,MAAM,EAAIrR,KAAK7F,WAExBoxB,OAAQ,WACJ,MAAO,IAAInC,IAAappB,KAAKZ,GAAIY,KAAK0H,MAG1C2hB,EAAWnnB,EAAME,QACjBC,KAAM,SAAUyR,EAAO1U,EAAGsI,GACtB1H,KAAKZ,EAAIA,GAAK,EACdY,KAAK0H,EAAIA,GAAK,EACd1H,KAAK8T,MAAQA,GAEjBlL,SAAU,WACN,MAAI5I,MAAKZ,GAAKY,KAAK0H,EACRhM,EAAM4vB,OAAO,sBAAuBtrB,KAAK8T,MAAO9T,KAAKZ,EAAGY,KAAK0H,GAE7DhM,EAAM4vB,OAAO,cAAetrB,KAAK8T,QAGhDuX,SAAU,WACN,MAAOjb,GAAOiH,SAASrX,KAAK8T,MAAO9T,KAAKZ,EAAGY,KAAK0H,IAEpDuD,OAAQ,WACJ,MAAO,IAAItB,GAAM3J,KAAKZ,EAAGY,KAAK0H,IAElC6jB,OAAQ,WACJ,MAAO,IAAIlC,GAASyB,EAAoB9qB,KAAK8T,MAAO9T,KAAKZ,EAAGY,KAAK0H,MAGzE2hB,EAASqC,KAAO,GAAIrC,GAAS,GAC7BA,EAASxpB,OAAS,SAAUwX,GACxB,MAAO,IAAIgS,GAAShS,EAASvD,MAAOuD,EAASjY,EAAGiY,EAAS3P,IAE7D2hB,EAAS9W,MAAQ,SAAUvY,GAAV,GACT2E,GAAS3E,EAAIyY,MAAM,EAAGzY,EAAIG,OAAS,GAAGuC,MAAM,KAAMoX,EAAQnV,EAAO,GAAIS,EAAIT,EAAO,GAAI+I,EAAI/I,EAAO,GAC/F0Y,EAAW,GAAIgS,GAASvV,EAAO1U,EAAGsI,EACtC,OAAO2P,IAEPiS,EAAqBpnB,EAAME,QAC3BC,KAAM,SAAUjD,EAAGsI,EAAG6M,EAAQC,EAAQV,EAAO7I,GACzCjL,KAAK2rB,UAAY,GAAIvC,GAAYhqB,EAAGsI,GAChC6M,IAAWtZ,GAAauZ,IAAWvZ,IACnC+E,KAAKsU,MAAQ,GAAI6U,GAAM5U,EAAQC,IAE/BV,IAAU7Y,IACV+E,KAAKoU,OAASnJ,EAAS,GAAIoe,GAASvV,EAAO7I,EAAO7L,EAAG6L,EAAOvD,GAAK,GAAI2hB,GAASvV,KAGtFlL,SAAU,WACN,GAAIA,GAAW,SAAUgjB,GACrB,MAAOA,GAAYA,GAAAA,EAAuB,GAE9C,OAAOhjB,GAAS5I,KAAK2rB,WAAa/iB,EAAS5I,KAAKoU,QAAUxL,EAAS5I,KAAKsU,QAE5EuX,OAAQ,SAAUC,GACdA,EAAOC,WAAa/rB,KACpB8rB,EAAOE,oBAEXX,SAAU,WACN,GAAI7rB,GAAI4Q,EAAOgH,MAUf,OATIpX,MAAK2rB,YACLnsB,EAAIA,EAAE6R,MAAMrR,KAAK2rB,UAAUN,aAE3BrrB,KAAKoU,SACL5U,EAAIA,EAAE6R,MAAMrR,KAAKoU,OAAOiX,aAExBrrB,KAAKsU,QACL9U,EAAIA,EAAE6R,MAAMrR,KAAKsU,MAAM+W,aAEpB7rB,GAEX+rB,OAAQ,WAAA,GAIAI,GACAC,EAJAxX,EAASpU,KAAKoU,OAASpU,KAAKoU,OAAOmX,SAAWtwB,EAAWgxB,EAAe7X,EAASA,EAAOiX,WAAajb,EAAOgH,OAAQ9C,EAAQtU,KAAKsU,MAAQtU,KAAKsU,MAAMiX,SAAWtwB,EAAWixB,EAAc5X,EAAQA,EAAM+W,WAAajb,EAAOgH,OAC1N+U,EAAiB,GAAIxiB,IAAO3J,KAAK2rB,UAAUvsB,GAAIY,KAAK2rB,UAAUjkB,EAOlE,OANAykB,GAAiBF,EAAa5a,MAAM6a,GAAa3wB,MAAM4wB,GACnDR,EAAY,GAAIvC,GAAY+C,EAAe/sB,EAAG+sB,EAAezkB,GAC7DkkB,EAAY,GAAItC,GACpBsC,EAAUD,UAAYA,EACtBC,EAAUxX,OAASA,EACnBwX,EAAUtX,MAAQA,EACXsX,KAGXrC,GACA6C,UAAW,WAAA,GACHlpB,GAAUlD,KAAKkD,QACfmpB,EAAcrsB,KAAKssB,aACnBC,EAAevsB,KAAKwsB,cACpBjY,EAASrR,EAAQS,MAAQ0oB,EACzB7X,EAAStR,EAAQU,OAAS2oB,CACzBrzB,GAASqb,KACVA,EAAS,GAERrb,EAASsb,KACVA,EAAS,GAEbxU,KAAK+rB,WAAWzX,MAAQ,GAAI6U,GAAM5U,EAAQC,IAE9CiY,cAAe,WAAA,GACPvpB,GAAUlD,KAAKkD,QACf9D,EAAI8D,EAAQ9D,GAAK,EACjBsI,EAAIxE,EAAQwE,GAAK,CACrB1H,MAAK+rB,WAAWJ,UAAY,GAAIvC,GAAYhqB,EAAGsI,IAEnDglB,UAAW,WAAA,GACHxpB,GAAUlD,KAAKkD,QACf0oB,GAAY,CACZ1oB,GAAQypB,YAAa,IAAU10B,EAAQiL,EAAQS,QAAU1L,EAAQiL,EAAQU,WACzE5D,KAAK4sB,UAAS,GACd5sB,KAAKosB,YACLR,GAAY,IAEZ3zB,EAAQiL,EAAQ9D,IAAMnH,EAAQiL,EAAQwE,MACtC1H,KAAKysB,gBACLb,GAAY,GAEZA,GACA5rB,KAAKgsB,oBAGba,YAAa,SAAU3pB,GACnB,GAAIyL,IAAS,CAmBb,OAlBI3O,MAAKkD,QAAQypB,YAAa,GAAS3sB,KAAK8sB,oBAAoB5pB,GACxD+nB,EACAC,MAEJvc,GAAS,EACT3O,KAAK4sB,UAAS,GACd5sB,KAAKosB,aAELpsB,KAAK8sB,oBAAoB5pB,GACrBioB,EACAC,MAEJzc,GAAS,EACT3O,KAAKysB,iBAEL9d,GACA3O,KAAKgsB,mBAEFrd,IAGX6a,EAAUtnB,EAAME,QAChBC,KAAM,SAAUa,GACZ,GAAIsC,GAAUxF,IACdwF,GAAQtC,QAAUvC,KAAe6E,EAAQtC,QAASA,GAClDsC,EAAQ1F,GAAK0F,EAAQtC,QAAQpD,GAC7B0F,EAAQunB,YAAchd,EAAKoF,QAC3B3P,EAAQumB,WAAa,GAAIzC,IAE7B0D,QAAS,SAAU90B,GACf,MAAO8H,MAAKitB,mBAAmBD,QAAQ90B,IAE3Cg1B,OAAQ,SAAUhqB,GACVA,GAAWA,EAAQpD,KACnBE,KAAKF,GAAKoD,EAAQpD,KAG1BsM,SAAU,SAAUhN,EAAGsI,GACnB,GAAIxE,GAAUlD,KAAKkD,OACnB,OAAKjL,GAAQmH,IAGTnH,EAAQyP,IACRxE,EAAQ9D,EAAIA,EACZ8D,EAAQwE,EAAIA,GACLtI,YAAauK,KACpBzG,EAAQ9D,EAAIA,EAAEA,EACd8D,EAAQwE,EAAItI,EAAEsI,GAElB1H,KAAK+rB,WAAWJ,UAAY,GAAIvC,GAAYlmB,EAAQ9D,EAAG8D,EAAQwE,GAC/D1H,KAAKgsB,mBARL,GAFW,GAAIriB,GAAMzG,EAAQ9D,EAAG8D,EAAQwE,IAY5C0M,OAAQ,SAAUN,EAAO7I,GAKrB,MAJIhT,GAAQ6b,KACR9T,KAAK+rB,WAAW3X,OAAS,GAAIiV,GAASvV,EAAO7I,EAAO7L,EAAG6L,EAAOvD,GAC9D1H,KAAKgsB,oBAEFhsB,KAAK+rB,WAAW3X,QAAUiV,EAASqC,MAE9CuB,iBAAkB,WACd,MAAOjtB,MAAKmtB,gBAEhBnB,iBAAkB,WACd,GAAIoB,GAASptB,KAAK+rB,WAAWV,UAC7BrrB,MAAKitB,mBAAmBrB,UAAU,GAAIjG,GAAEvV,OAAOgd,EAAOviB,EAAGuiB,EAAO3iB,EAAG2iB,EAAO9tB,EAAG8tB,EAAO7tB,EAAG6tB,EAAOjnB,EAAGinB,EAAOr1B,KAE5Gs1B,OAAQ,aAERP,oBAAqB5E,EACrB0E,SAAU,SAAUU,GAAV,GACF1Z,GAEItQ,EACAiqB,CASR,QAXKvtB,KAAKwtB,WAAaF,GACfhqB,EAAMtD,KAAKytB,gBAAkB,GAAI9H,GAAE5V,KACnCwd,EAAajqB,EAAIgQ,UACrBM,EAAO,GAAI7D,GAAKwd,EAAWnuB,EAAGmuB,EAAW7lB,EAAGpE,EAAIK,QAASL,EAAIM,UAC7D5D,KAAK+sB,YAAcnZ,EACnB5T,KAAKssB,aAAe1Y,EAAKjQ,MACzB3D,KAAKwsB,cAAgB5Y,EAAKhQ,OAC1B5D,KAAKwtB,WAAY,GAEjB5Z,EAAO5T,KAAK+sB,YAETnZ,GAEX6Z,aAAc,WACV,MAAOztB,MAAKmtB,eAAeO,aAG/BjE,EAAaD,EAAQpnB,QACrBC,KAAM,SAAUa,GACZsmB,EAAQvY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC3BA,EAAUlD,KAAKkD,QACfA,EAAQkjB,KAAOmC,EAAwBrlB,EAAQkjB,MAC/CljB,EAAQyqB,OAASpF,EAAwBrlB,EAAQyqB,SAErDzqB,SACIyqB,QACI/wB,MAAO,OACP+G,MAAO,GAEXyiB,MAAQxpB,MAAO8rB,IAEnBtC,KAAM,SAAUxpB,EAAOgxB,GACnB5tB,KAAK6tB,OACDjxB,MAAO6rB,EAAS7rB,GAChBgxB,QAASA,KAGjBD,OAAQ,SAAU/wB,EAAO+G,EAAOiqB,GAC5B5tB,KAAK8tB,SACDlxB,MAAO6rB,EAAS7rB,GAChB+G,MAAOA,EACPiqB,QAASA,KAGjBV,OAAQ,SAAUhqB,GAAV,GAEIyqB,GACAvH,CAFJljB,KACIyqB,EAASzqB,EAAQyqB,OACjBvH,EAAOljB,EAAQkjB,KACfuH,GACA3tB,KAAK8tB,QAAQvF,EAAwBoF,IAErCvH,GACApmB,KAAK6tB,MAAMtF,EAAwBnC,IAEvCoD,EAAQvY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,KAGrCmqB,OAAQ,SAAUU,GAAV,GAKI3H,GAJJ+G,EAAiBntB,KAAKmtB,eACtBjqB,EAAUlD,KAAKkD,QACf8qB,EAAQ9qB,EAAQ8qB,KAChBA,IAASA,EAAM5H,OACXA,EAAO2H,EAAOxF,EAAwByF,EAAM5H,MAAQljB,EAAQkjB,KAChE+G,EAAe/G,KAAKA,EAAKxpB,MAAOwpB,EAAKwH,WAG7CE,QAAS,SAAUG,GAAV,GAIDN,GAHAzqB,EAAUlD,KAAKkD,OACnBvC,GAAWuC,GAAWyqB,OAAQM,IAC9BA,EAAgB/qB,EAAQyqB,OACpBA,EAAS,KACTM,EAActqB,MAAQ,IACtBgqB,GACI/wB,MAAOqxB,EAAcrxB,MACrB+G,MAAOsqB,EAActqB,MACrBiqB,QAASK,EAAcL,QACvBM,SAAUD,EAAcC,WAGhCluB,KAAKmtB,eAAejqB,QAAQ0V,IAAI,SAAU+U,IAE9CE,MAAO,SAAUM,GAAV,GAGC/H,GAEIgI,EACAC,EALJnrB,EAAUlD,KAAKkD,OACnBvC,GAAWuC,GAAWkjB,KAAM+H,QACxB/H,EAAOljB,EAAQkjB,KACfA,EAAKgI,UACDA,EAAWhI,EAAKgI,SAChBC,EAAkC,WAAlBD,EAASrlB,KAAoBxJ,EAAE+uB,eAAiB/uB,EAAEgvB,eACtEvuB,KAAKmtB,eAAe/G,KAAK,GAAIiI,GAAcD,KAE3CpuB,KAAKmtB,eAAe/G,KAAKA,EAAKxpB,MAAOwpB,EAAKwH,YAIlDlE,EAAYD,EAAWrnB,QACvBC,KAAM,SAAUa,GACZlD,KAAKwuB,WAAWtrB,GAChBumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC9BlD,KAAKyuB,QACLzuB,KAAK0uB,YACL1uB,KAAK0sB,aAETxpB,SACIyrB,SAAU,GACVC,WAAY,aACZjB,QAAUhqB,MAAO,GACjByiB,MAAQxpB,MAAO,SACf+vB,UAAU,GAEd+B,UAAW,WACP,GAAIxrB,GAAUlD,KAAKkD,OACnBlD,MAAKmtB,eAAiB,GAAI5tB,GAAEsvB,KAAK52B,EAAQiL,EAAQzH,MAAQyH,EAAQzH,KAAO,GAAI,GAAIkqB,GAAEhc,OAAWmlB,KAAM5rB,EAAQ4rB,OAC3G9uB,KAAK6tB,QACL7tB,KAAK8tB,WAETU,WAAY,SAAUtrB,GACdA,GAAWA,EAAQtG,OACnB+D,EAAWuC,GAAWkjB,MAAQxpB,MAAOsG,EAAQtG,UAGrD6xB,MAAO,WACH,GAAIvrB,GAAUlD,KAAKkD,OACfA,GAAQ0rB,YAAc32B,EAAQiL,EAAQyrB,UACtCzrB,EAAQ4rB,KAAO5rB,EAAQyrB,SAAW,MAAQzrB,EAAQ0rB,iBAE3C1rB,GAAQ4rB,MAGvB/Y,QAAS,SAAUta,GACf,MAAOuE,MAAKmtB,eAAepX,QAAQta,IAEvCyxB,OAAQ,SAAUhqB,GAAV,GAEI6rB,GACAC,CAFJ9rB,KACI6rB,GAAc,EACdC,EAAchvB,KAAKkD,QACvBlD,KAAKwuB,WAAWtrB,GAChBumB,EAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,IAC5BA,EAAQ0rB,YAAc32B,EAAQiL,EAAQyrB,aACtChuB,EAAWquB,GACPJ,WAAY1rB,EAAQ0rB,WACpBD,SAAUzrB,EAAQyrB,WAEtB3uB,KAAKyuB,QACLzuB,KAAKmtB,eAAejqB,QAAQ0V,IAAI,OAAQoW,EAAYF,MACpDC,GAAc,GAEd7rB,EAAQzH,OACRuE,KAAK+V,QAAQ7S,EAAQzH,MACrBszB,GAAc,IAEb/uB,KAAK6sB,YAAY3pB,IAAY6rB,GAC9B/uB,KAAK0sB,gBAKrB/rB,EAAW+oB,EAAUzY,GAAIsY,GACrBI,EAAYF,EAAWrnB,QACvBC,KAAM,SAAUa,GACZumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC9BlD,KAAKivB,YACLjvB,KAAKkvB,gBAETA,aAAc,WAAA,GACNhsB,GAAUlD,KAAKkD,QACf9D,EAAI8D,EAAQ9D,EACZsI,EAAIxE,EAAQwE,GACZzP,EAAQmH,IAAMnH,EAAQyP,KACtB1H,KAAKoM,SAAShN,GAAK,EAAGsI,GAAK,IAGnCwlB,OAAQ,SAAUhqB,GACVA,IACAumB,EAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,GAC5BlD,KAAK8sB,oBAAoB5pB,GACrB+nB,EACAC,KAEJlrB,KAAKmvB,YAELnvB,KAAK8sB,oBAAoB5pB,GACrBioB,EACAC,KAEJprB,KAAKkvB,iBAIjBD,UAAW,WACP,GAAI/rB,GAAUlD,KAAKkD,OACnBlD,MAAKmtB,eAAiB,GAAI5tB,GAAEyqB,MACxB2D,OAAQzqB,EAAQyqB,OAChByB,QAAQ,IAEZpvB,KAAK6tB,QACL7tB,KAAKmvB,aAETA,UAAW,WAAA,GACHhC,GAAiBntB,KAAKmtB,eACtBkC,EAAc/G,EAAqBtoB,KAAKkD,SACxCS,EAAQ0rB,EAAY1rB,MACpBC,EAASyrB,EAAYzrB,MACzBupB,GAAe7X,SAASga,UACpBtG,EAAc,EAAG,GACjBA,EAAcrlB,EAAO,GACrBqlB,EAAcrlB,EAAOC,GACrBolB,EAAc,EAAGplB,QAIzBgmB,EAAaH,EAAWrnB,QACxBC,KAAM,SAAUa,GACZumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,EAC9B,IAAIqsB,GAASvvB,KAAKkD,QAAQqsB,MAC1BvvB,MAAKuvB,OAAS,GAAI5J,GAAEhc,MAAM4lB,EAAOnwB,EAAGmwB,EAAO7nB,GAC3C1H,KAAKwvB,iBAETtsB,SACIyqB,QACI/wB,MAAO8rB,EACP/kB,MAAO,GAEXyiB,MAAQxpB,MAAO,UAEnB6yB,iBAAkB,SAAU5c,EAAO6c,GAC/B,GAAI9D,GAAY8D,EAAK9D,WAIrB,OAHI/Y,IAAS+Y,IACT/Y,EAAQA,EAAM8c,cAAc/D,IAEzB/Y,GAEXqa,OAAQ,SAAUhqB,GACVA,IACIA,EAAQkJ,WACRpM,KAAKkD,QAAQkJ,SAAWlJ,EAAQkJ,UAEpCqd,EAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,OAIxC2mB,EAAeD,EAAWxnB,QAC1Bc,SACIijB,OAAQ,EACRoJ,QACInwB,EAAG,EACHsI,EAAG,IAGX8nB,cAAe,WACX,GAAItsB,GAAUlD,KAAKkD,OACnBlD,MAAKmtB,eAAiB,GAAI5tB,GAAE+qB,OAAO,GAAI3E,GAAE2E,OAAOtqB,KAAKuvB,OAAQrsB,EAAQijB,SACjEC,KAAMljB,EAAQkjB,KACduH,OAAQzqB,EAAQyqB,UAGxBiC,eAAgB,SAAUF,GAAV,GAIRG,GACAhd,EAJA3P,EAAUlD,KAAKkD,QACfkJ,EAAWlJ,EAAQkJ,SACnBkJ,EAAWoa,EAAKpa,QAIhBua,GADAzjB,GAAY2e,EACIzV,EAAS,GAETA,EAASA,EAASnb,OAAS,GAE3C01B,IACAhd,EAAQ7S,KAAKyvB,iBAAiBI,EAAcN,SAAUG,GACtD1vB,KAAKmtB,eAAevB,UAAUjG,EAAEiG,YAAYD,UAAU9Y,EAAMzT,EAAGyT,EAAMnL,QAI7EoiB,EAAcF,EAAWxnB,QACzBc,SACIwsB,KAAM,8BACNH,QACInwB,EAAG,GACHsI,EAAG,IAGX8nB,cAAe,WACX,GAAItsB,GAAUlD,KAAKkD,OACnBlD,MAAKmtB,eAAiB5tB,EAAEyqB,KAAKzX,MAAMrP,EAAQwsB,MACvCtJ,KAAMljB,EAAQkjB,KACduH,OAAQzqB,EAAQyqB,UAGxBiC,eAAgB,SAAUF,GAAV,GASJH,GACA5D,EATJpiB,EAASvJ,KAAK8vB,YAAYJ,GAC1B/oB,EAAQ4C,EAAO5C,MACfY,EAAMgC,EAAOhC,IACbqkB,EAAYjG,EAAEiG,WACdjlB,IACAilB,EAAUxX,OAAOyU,EAAUliB,EAAOY,GAAMA,GAExCA,IACIgoB,EAASvvB,KAAKuvB,OACd5D,EAAYpkB,EAAImM,QAAQiY,WAAW4D,EAAOnwB,GAAImwB,EAAO7nB,GACzDkkB,EAAUD,UAAUA,EAAUvsB,EAAGusB,EAAUjkB,IAE/C1H,KAAKmtB,eAAevB,UAAUA,IAElCkE,YAAa,SAAUJ,GAAV,GAGLnC,GAAYwC,EAAUF,EAMdG,EAUAC,EAlBR/sB,EAAUlD,KAAKkD,QACfoS,EAAWoa,EAAKpa,QAuBpB,OArBIpS,GAAQkJ,UAAY2e,GACpB8E,EAAgBva,EAAS,GACrBua,IACAE,EAAWF,EAAcN,SACzBhC,EAAasC,EAAcK,aACvBF,EAAc1a,EAAS,IACtBiY,GAAcyC,IACfzC,EAAayC,EAAYT,aAIjCM,EAAgBva,EAASA,EAASnb,OAAS,GACvC01B,IACAE,EAAWF,EAAcN,SACzBhC,EAAasC,EAAcM,YACvBF,EAAc3a,EAASA,EAASnb,OAAS,IACxCozB,GAAc0C,IACf1C,EAAa0C,EAAYV,YAIjCQ,GAEIppB,MAAO3G,KAAKyvB,iBAAiBlC,EAAYmC,GACzCnoB,IAAKvH,KAAKyvB,iBAAiBM,EAAUL,IAH7C,KAQJ3F,GACAqG,SAAU,SAAUhkB,GAChB,GAAIsjB,GAAO1vB,KAAKmtB,cAQhB,OAPIuC,aAAgBnwB,GAAE8wB,YAEdX,EADAtjB,GAAY2e,EACL2E,EAAKY,MAAM,GAEXZ,EAAKY,MAAMZ,EAAKY,MAAMn2B,OAAS,IAG1Cu1B,GAAQA,EAAKpa,SAASnb,OACfu1B,EADX,GAIJa,wBAAyB,SAAUrtB,GAAV,GACjBstB,GAAWttB,EAAQstB,SACnBC,EAASvtB,EAAQutB,MACjB/nB,GAAS8nB,KACTttB,EAAQstB,UAAaznB,KAAMynB,IAE3B9nB,EAAS+nB,KACTvtB,EAAQutB,QAAW1nB,KAAM0nB,KAGjCC,cAAe,SAAUtkB,GACrB,GAAIukB,GAAS3wB,KAAK4wB,SAASxkB,EACvBukB,KACA3wB,KAAKitB,mBAAmB1hB,OAAOolB,EAAOxD,sBAC/BntB,MAAK4wB,SAASxkB,KAG7BykB,eAAgB,WACZ,GAAI3tB,GAAUlD,KAAKkD,OACnBlD,MAAKuwB,wBAAwBrtB,GAC7BlD,KAAK4wB,YACL5wB,KAAK4wB,SAAS7F,GAAS/qB,KAAK8wB,cAAc5tB,EAAQstB,SAAUzF,GAC5D/qB,KAAK4wB,SAAS5F,GAAOhrB,KAAK8wB,cAAc5tB,EAAQutB,OAAQzF,IAE5D8F,cAAe,SAAU5tB,EAASkJ,GAAnB,GAGP2kB,GAAYJ,EAFZ5nB,GAAQ7F,OAAe6F,KACvB2mB,EAAO1vB,KAAKowB,SAAShkB,EAEzB,OAAKsjB,IAID3mB,GAAQ0hB,EAAQG,aAChBmG,EAAalH,EACN9gB,GAAQ0hB,EAAQE,YAAc5hB,GAAQ0hB,EAAQI,SACrDkG,EAAajH,EAEb9pB,KAAK0wB,cAActkB,GAEnB2kB,GACAJ,EAAS,GAAII,GAAWpwB,KAAeuC,GAAWkJ,SAAUA,KAC5DukB,EAAOf,eAAeF,GACtB1vB,KAAKitB,mBAAmB7xB,OAAOu1B,EAAOxD,gBAC/BwD,GAJX,IAVI3wB,KAAK0wB,cAActkB,GACnB,IAgBR4kB,gBAAiB,SAAU5kB,GAAV,GAGLsjB,GAFJiB,EAAS3wB,KAAK4wB,SAASxkB,EACvBukB,KACIjB,EAAO1vB,KAAKowB,SAAShkB,GACrBsjB,EACAiB,EAAOf,eAAeF,GAEtB1vB,KAAK0wB,cAActkB,KAI/B6kB,SACItqB,MAAO,WACPY,IAAK,UAET2pB,cAAe,SAAUC,EAAY/kB,EAAUlJ,GAAhC,GAEPkuB,GACAC,EACAC,EACAC,EACAC,CAcJ,OAnBAxxB,MAAKuwB,wBAAwBrtB,GACzBkuB,EAAcpxB,KAAKkD,QACnBmuB,EAAMrxB,KAAKixB,QAAQ7kB,GACnBklB,GAAeF,EAAYC,QAAYtoB,KACvCwoB,EAAaruB,EAAQmuB,GACrBG,GAAU,EACVD,GACAH,EAAYC,GAAO1wB,KAAeywB,EAAYC,GAAME,GAChDA,EAAWxoB,MAAQuoB,GAAeC,EAAWxoB,MAC7C/I,KAAK0wB,cAActkB,GACnBpM,KAAK4wB,SAASxkB,GAAYpM,KAAK8wB,cAAcM,EAAYC,GAAMjlB,GAC/DolB,GAAU,GACHxxB,KAAK4wB,SAASxkB,IACrBpM,KAAK4wB,SAASxkB,GAAU8gB,OAAOqE,IAE5BJ,IAAenxB,KAAK4wB,SAASxkB,IAAaglB,EAAYC,KAC7DrxB,KAAK4wB,SAASxkB,GAAYpM,KAAK8wB,cAAcM,EAAYC,GAAMjlB,GAC/DolB,GAAU,GAEPA,GAEXC,eAAgB,SAAUN,EAAYjuB,IAC7BlD,KAAKkxB,cAAcC,EAAYpG,EAAO7nB,IAAYiuB,GACnDnxB,KAAKgxB,gBAAgBjG,IAEpB/qB,KAAKkxB,cAAcC,EAAYnG,EAAK9nB,IAAYiuB,GACjDnxB,KAAKgxB,gBAAgBhG,KAI7BhB,EAAOP,EAAWrnB,QAClBC,KAAM,SAAUa,GACZumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC9BlD,KAAK6V,UAAY,GAAItW,GAAE6qB,MACvBpqB,KAAK0xB,kBACL1xB,KAAK0sB,aAETxpB,SAAWypB,UAAU,GACrBM,iBAAkB,WACd,MAAOjtB,MAAK6V,WAEhBgF,KAAM,SAAU3iB,GACZ,GAAIgL,GAAUlD,KAAKkD,OACnB,OAAIhL,IACIgL,EAAQ2X,MAAQ3iB,IAChBgL,EAAQ2X,KAAO3iB,EACf8H,KAAK2xB,SAASz5B,GACd8H,KAAK0sB,YACL1sB,KAAKyxB,gBAAe,OAJxB,GAOOvuB,EAAQ2X,MAGvBqS,OAAQ,SAAUhqB,GAAV,GAGIkuB,GACAvW,CAHJ3X,KACAumB,EAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,GAC5BkuB,EAAcpxB,KAAKkD,QACnB2X,EAAO3X,EAAQ2X,KACf5iB,EAAQ4iB,IAASuW,EAAYvW,MAAQA,GACrCuW,EAAYvW,KAAOA,EACnB7a,KAAK2xB,SAAS9W,GACT7a,KAAK6sB,YAAY3pB,IAClBlD,KAAK0sB,YAET1sB,KAAKyxB,gBAAe,EAAMvuB,KAE1BlD,KAAK6sB,YAAY3pB,GACjBlD,KAAKyxB,gBAAe,EAAOvuB,MAIvCwuB,gBAAiB,WACb,GAAIxuB,GAAUlD,KAAKkD,OACnBlD,MAAKmtB,eAAiB5tB,EAAEyqB,KAAKzX,MAAMrP,EAAQ2X,MAAQ,IAAM8S,OAAQzqB,EAAQyqB,SACzE3tB,KAAK6tB,QACL7tB,KAAK6V,UAAUza,OAAO4E,KAAKmtB,gBAC3BntB,KAAK6wB,kBAETc,SAAU,SAAU9W,GAAV,GACFsS,GAAiBntB,KAAKmtB,eACtByE,EAAYryB,EAAEyqB,KAAKzX,MAAMsI,GAAQ,IACjCyV,EAAQsB,EAAUtB,MAAM7d,MAAM,EAClCmf,GAAUtB,MAAMhB,aAChBnC,EAAemD,MAAMhB,SAASgB,MAGtC3vB,EAAWqpB,EAAK/Y,GAAIsY,GACpB5oB,EAAWqpB,EAAK/Y,GAAI8Y,GAChBE,EAAOR,EAAWrnB,QAClBC,KAAM,SAAUa,GACZumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC9BlD,KAAK6V,UAAY,GAAItW,GAAE6qB,MACvBpqB,KAAKivB,YACLjvB,KAAK6wB,kBAET5D,iBAAkB,WACd,MAAOjtB,MAAK6V,WAEhBqX,OAAQ,SAAUhqB,GAAV,GAGIgL,GACAF,CAHJ9K,KACAA,EAAUA,MACNgL,EAAOhL,EAAQgL,KACfF,EAAK9K,EAAQ8K,GACbE,IACAlO,KAAKkD,QAAQgL,KAAOA,GAEpBF,IACAhO,KAAKkD,QAAQ8K,GAAKA,GAElBE,GAAQF,GACRhO,KAAKmvB,YACLnvB,KAAKyxB,gBAAe,EAAMvuB,IAE1BlD,KAAKyxB,gBAAe,EAAOvuB,GAE/BumB,EAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,KAGxC+rB,UAAW,WAAA,GACH/rB,GAAUlD,KAAKkD,QACfiqB,EAAiBntB,KAAKmtB,eAAiB,GAAI5tB,GAAEyqB,MAAO2D,OAAQzqB,EAAQyqB,QACxE3tB,MAAK6tB,QACL7tB,KAAKmvB,YACLnvB,KAAK6V,UAAUza,OAAO+xB,IAE1BgC,UAAW,WAAA,GACHjsB,GAAUlD,KAAKkD,QACfiqB,EAAiBntB,KAAKmtB,eACtBjf,EAAOhL,EAAQgL,MAAQ,GAAIvE,GAC3BqE,EAAK9K,EAAQ8K,IAAM,GAAIrE,EAC3BwjB,GAAe7X,SAASga,UACpBtG,EAAc9a,EAAK9O,EAAG8O,EAAKxG,GAC3BshB,EAAchb,EAAG5O,EAAG4O,EAAGtG,QAInC/G,EAAWspB,EAAKhZ,GAAI8Y,GAChBG,EAAWT,EAAWrnB,QACtBC,KAAM,SAAUa,GACZumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC9BlD,KAAK6V,UAAY,GAAItW,GAAE6qB,MACvBpqB,KAAKivB,YACLjvB,KAAK6wB,kBAET5D,iBAAkB,WACd,MAAOjtB,MAAK6V,WAEhBtM,OAAQ,SAAUA,GACd,GAAIrG,GAAUlD,KAAKkD,OACnB,OAAIqG,IACArG,EAAQqG,OAASA,EACjBvJ,KAAK6xB,cADL3uB,GAGOA,EAAQqG,QAGvB2jB,OAAQ,SAAUhqB,GACd,GAAIA,EAAS,CACT,GAAIqG,GAASrG,EAAQqG,MACrBkgB,GAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,GAC5BqG,GAAUvJ,KAAK8xB,cAAcvoB,IAC7BvJ,KAAKuJ,OAAOA,GACZvJ,KAAKyxB,gBAAe,EAAMvuB,IAE1BlD,KAAKyxB,gBAAe,EAAOvuB,KAIvC+rB,UAAW,WACP,GAAI/rB,GAAUlD,KAAKkD,OACnBlD,MAAKmtB,eAAiB,GAAI5tB,GAAEyqB,MAAO2D,OAAQzqB,EAAQyqB,SACnD3tB,KAAK6tB,QACL7tB,KAAK6V,UAAUza,OAAO4E,KAAKmtB,gBACvBjqB,EAAQqG,QACRvJ,KAAK6xB,eAGbC,cAAe,SAAUvoB,GAAV,GAIEtP,GAHT83B,EAAgB/xB,KAAKkD,QAAQqG,OAC7ByoB,EAASD,EAAc53B,SAAWoP,EAAOpP,MAC7C,KAAK63B,EACD,IAAS/3B,EAAI,EAAOsP,EAAOpP,OAAXF,EAAmBA,IAC/B,GAAI83B,EAAc93B,GAAGmF,IAAMmK,EAAOtP,GAAGmF,GAAK2yB,EAAc93B,GAAGyN,IAAM6B,EAAOtP,GAAGyN,EAAG,CAC1EsqB,GAAS,CACT,OAIZ,MAAOA,IAEXH,YAAa,WAAA,GAKLhf,GACK5Y,EALLkzB,EAAiBntB,KAAKmtB,eACtBjqB,EAAUlD,KAAKkD,QACfqG,EAASrG,EAAQqG,OACjB+L,IAEJ,KAASrb,EAAI,EAAOsP,EAAOpP,OAAXF,EAAmBA,IAC/B4Y,EAAQtJ,EAAOtP,GACfqb,EAAS1b,KAAKovB,EAAcnW,EAAMzT,EAAGyT,EAAMnL,GAE/CylB,GAAe7X,SAASga,SAASha,IAErCpS,SAAWqG,aAEf5I,EAAWupB,EAASjZ,GAAI8Y,GACpBI,EAAQX,EAAQpnB,QAChBC,KAAM,SAAUa,GACZsmB,EAAQvY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC3BlD,KAAKiyB,cAET/E,OAAQ,SAAUhqB,GACVA,IACIA,EAAQkG,QACRpJ,KAAKmtB,eAAe+E,IAAIhvB,EAAQkG,QAEhCpJ,KAAK8sB,oBAAoB5pB,GACrB+nB,EACAC,EACAC,EACAC,KAEJprB,KAAKmtB,eAAevZ,KAAK5T,KAAKmyB,SAElC3I,EAAQvY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,KAGrC+uB,WAAY,WAAA,GACJ/uB,GAAUlD,KAAKkD,QACf0Q,EAAO5T,KAAKmyB,OAChBnyB,MAAKmtB,eAAiB,GAAI5tB,GAAE4qB,MAAMjnB,EAAQkG,OAAQwK,OAEtDue,MAAO,WAAA,GACC9C,GAAc/G,EAAqBtoB,KAAKkD,SACxCqL,EAAS,GAAIoX,GAAEhc,MAAM0lB,EAAYjwB,EAAGiwB,EAAY3nB,GAChDrL,EAAO,GAAIspB,GAAE3V,KAAKqf,EAAY1rB,MAAO0rB,EAAYzrB,OACrD,OAAO,IAAI+hB,GAAE5V,KAAKxB,EAAQlS,MAG9B+tB,EAAQZ,EAAQpnB,QAChBC,KAAM,SAAUa,GACZlD,KAAKsb,YACLkO,EAAQvY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC3BlD,KAAKmtB,eAAiB,GAAI5tB,GAAE6qB,MAC5BpqB,KAAK0sB,aAETxpB,SAAWypB,UAAU,GACrBvxB,OAAQ,SAAU0wB,GACd9rB,KAAKmtB,eAAe/xB,OAAO0wB,EAAOmB,oBAClCjtB,KAAKsb,SAAS1hB,KAAKkyB,GACnB9rB,KAAKoyB,iBAAkB,GAE3B7mB,OAAQ,SAAUugB,GACV9rB,KAAKqyB,QAAQvG,KACb9rB,KAAKoyB,iBAAkB,IAG/BC,QAAS,SAAUvG,GACf,GAAIpmB,GAAQP,EAAQ2mB,EAAQ9rB,KAAKsb,SACjC,OAAI5V,IAAS,GACT1F,KAAKmtB,eAAemF,SAAS5sB,GAC7B1F,KAAKsb,SAAS3V,OAAOD,EAAO,IACrB,GAHX,GAMJ4G,MAAO,WACHtM,KAAKmtB,eAAe7gB,QACpBtM,KAAKsb,YACLtb,KAAKoyB,iBAAkB,GAE3BG,QAAS,SAAUC,GAAV,GACD1G,GACK7xB,CAAT,KAASA,EAAI,EAAOu4B,EAAQr4B,OAAZF,EAAoBA,IAChC6xB,EAAS0G,EAAQv4B,GACb+F,KAAKqyB,QAAQvG,IACb9rB,KAAK5E,OAAO0wB,IAIxB2G,OAAQ,SAAUD,GACdxyB,KAAK0yB,iBAAiBF,EAAS,IAEnCG,QAAS,SAAUH,EAASlQ,GACxBtiB,KAAK0yB,iBAAiBF,EAASlQ,IAEnCoQ,iBAAkB,SAAUF,EAASlQ,GAAnB,GAKVroB,GAAGyL,EAAOitB,EAASxF,EAAgBrB,EAJnC8G,EAAQ5yB,KAAKmtB,eACb0F,EAAkBD,EAAMtX,SAAS7I,MAAM,GACvC6I,EAAWtb,KAAKsb,SAChBwX,EAAgB55B,EAASopB,EAE7B,KAAKroB,EAAI,EAAOu4B,EAAQr4B,OAAZF,EAAoBA,IAC5B6xB,EAAS0G,EAAQv4B,GACjBkzB,EAAiBrB,EAAOmB,mBACxBvnB,EAAQP,EAAQ2mB,EAAQxQ,GACpB5V,GAAS,IACTmtB,EAAgBltB,OAAOD,EAAO,GAC9B4V,EAAS3V,OAAOD,EAAO,GACvBitB,EAAUG,EAAgBxQ,EAAUA,EAAQroB,GAC5C44B,EAAgBltB,OAAOgtB,EAAS,EAAGxF,GACnC7R,EAAS3V,OAAOgtB,EAAS,EAAG7G,GAGpC8G,GAAMtmB,QACNsmB,EAAMx3B,OAAOG,MAAMq3B,EAAOC,IAE9B3F,OAAQ,SAAUhqB,GACVA,IACIlD,KAAKoyB,iBACLpyB,KAAKoyB,iBAAkB,EAClBpyB,KAAK6sB,YAAY3pB,IAClBlD,KAAK0sB,aAGT1sB,KAAK6sB,YAAY3pB,GAErBsmB,EAAQvY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,KAGrCuqB,aAAc,WAAA,GAENsF,GACAjH,EAAQkH,EACH/4B,EAHLqhB,EAAWtb,KAAKsb,QAGpB,KAASrhB,EAAI,EAAOqhB,EAASnhB,OAAbF,EAAqBA,IACjC6xB,EAASxQ,EAASrhB,GACd6xB,EAAOkB,WAAalB,EAAOmH,kBAAmB,IAC9CD,EAAmBlH,EAAOmB,mBAAmBiG,YAAY,MACrDF,IAEID,EADAA,EACchjB,EAAKuC,MAAMygB,EAAaC,GAExBA,GAK9B,OAAOD,MAGfpyB,EAAWypB,EAAMnZ,GAAIsY,GACjBc,EAASD,EAAMhoB,QACfC,KAAM,SAAUuR,EAAM1Q,GAClBlD,KAAKsb,YACLkO,EAAQvY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC3BlD,KAAKmtB,eAAiB,GAAI5tB,GAAE8qB,OAAOnB,EAActV,GAAO1Q,GACxDlD,KAAK0sB,aAET9Y,KAAM,SAAUA,GACZ,GAAIA,EACA5T,KAAKmtB,eAAevZ,KAAKsV,EAActV,QACpC,CACH,GAAIuf,GAAcnzB,KAAKmtB,eAAevZ,MACtC,IAAIuf,EACA,MAAO,IAAIpjB,GAAKojB,EAAY5kB,OAAOnP,EAAG+zB,EAAY5kB,OAAO7G,EAAGyrB,EAAY92B,KAAKsH,MAAOwvB,EAAY92B,KAAKuH,UAIjHwvB,OAAQ,WACJpzB,KAAKmtB,eAAeiG,UAExBlG,OAAQ,SAAUhqB,GACdxH,EAAMiF,WAAWX,KAAKmtB,eAAejqB,QAASA,GAC9CknB,EAAMnZ,GAAGic,OAAOzkB,KAAKzI,KAAMkD,MAG/BonB,EAASb,EAAWrnB,QACpBC,KAAM,SAAUa,GACZumB,EAAWxY,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GAC9BlD,KAAKqzB,cACLrzB,KAAK0sB,aAETQ,OAAQ,SAAUhqB,GACd,GAAIA,EAAS,CACT,GAAIowB,GAAgBtzB,KAAKkD,OACrBA,GAAQ+H,SACRtK,EAAW2yB,GAAiBroB,OAAQ/H,EAAQ+H,SAC5CjL,KAAKqW,QAAQkd,KAAKD,EAAcroB,OAAO7L,EAAGk0B,EAAcroB,OAAOvD,IAE/D1H,KAAK8sB,oBAAoB5pB,GAAU,YACnClD,KAAKwzB,QAAQC,UAAUH,EAAcnN,QAEzCnmB,KAAK6sB,YAAY3pB,GACjBumB,EAAWxY,GAAGic,OAAOzkB,KAAKzI,KAAMkD,KAGxCmwB,YAAa,WAAA,GAcLpoB,GAbA/H,EAAUlD,KAAKkD,QACfS,EAAQT,EAAQS,MAChBC,EAASV,EAAQU,OACjBuiB,EAASjjB,EAAQijB,MAChBluB,GAAQkuB,KACJluB,EAAQ0L,KACTA,EAAQC,GAEP3L,EAAQ2L,KACTA,EAASD,GAEbT,EAAQijB,OAASA,EAAS1lB,KAAK9H,IAAIgL,EAAOC,GAAU,GAEpDqH,EAAS/H,EAAQ+H,SACjB7L,EAAG+mB,EACHze,EAAGye,GAEPnmB,KAAKqW,QAAU,GAAIsP,GAAEhc,MAAMsB,EAAO7L,EAAG6L,EAAOvD,GAC5C1H,KAAKwzB,QAAU,GAAI7N,GAAE2E,OAAOtqB,KAAKqW,QAAS8P,GAC1CnmB,KAAKmtB,eAAiB,GAAI5tB,GAAE+qB,OAAOtqB,KAAKwzB,SAAW7F,OAAQzqB,EAAQyqB,SACnE3tB,KAAK6tB,WAGbltB,EAAW2pB,EAAOrZ,GAAIsY,GAClBgB,EAASroB,EAAME,QACfC,KAAM,SAAUmD,EAAStC,GACrBA,EAAUA,MACVlD,KAAKwF,QAAUA,EACfxF,KAAK0zB,QAAUn0B,EAAEo0B,QAAQ9zB,OAAO2F,EAAStC,GACrCxH,EAAMqV,WAAW/Q,KAAK0zB,QAAQ/H,aAC9B3rB,KAAK2rB,UAAY3rB,KAAK4zB,YAE1B5zB,KAAKmtB,eAAiB,GAAI5tB,GAAE6qB,MAC5BpqB,KAAK6zB,SAAW,GAAI9jB,GAAK,EAAG,EAAG7M,EAAQS,MAAOT,EAAQU,QACtD5D,KAAK3D,KAAK2D,KAAK6zB,WAEnBjZ,OAAQ,WACJ,GAAItX,GAAMtD,KAAKmtB,eAAe+F,aAC9B,OAAO,IAAInjB,GAAK,EAAG,EAAGzM,EAAIK,QAASL,EAAIM,WAE3CvH,KAAM,SAAUA,GACZ,GAAIy3B,GAAU9zB,KAAK6zB,QAMnB,OALI57B,GAAQoE,KACRy3B,EAAQnwB,MAAQtH,EAAKsH,MACrBmwB,EAAQlwB,OAASvH,EAAKuH,OACtB5D,KAAK0zB,QAAQK,QAAQ13B,KAGrBsH,MAAOmwB,EAAQnwB,MACfC,OAAQkwB,EAAQlwB,SAGxBgwB,WAAY,SAAUx0B,EAAGsI,GACrB,GAAIosB,GAAU9zB,KAAK6zB,QASnB,OARI57B,GAAQmH,IAAMnH,EAAQyP,KACtBosB,EAAQ10B,EAAIA,EACZ00B,EAAQpsB,EAAIA,EACZ1H,KAAK0zB,QAAQ/H,WACTvsB,EAAGA,EACHsI,EAAGA,MAIPtI,EAAG00B,EAAQ10B,EACXsI,EAAGosB,EAAQpsB,IAGnBssB,KAAM,WACFh0B,KAAK0zB,QAAQM,KAAKh0B,KAAKmtB,iBAE3B/xB,OAAQ,SAAU0wB,GAEd,MADA9rB,MAAKmtB,eAAe/xB,OAAO0wB,EAAOmB,oBAC3BjtB,MAEXuL,OAAQ,SAAUugB,GACd9rB,KAAKmtB,eAAe5hB,OAAOugB,EAAOmB,qBAEtCgH,aAAc,aAEd3nB,MAAO,WACHtM,KAAKmtB,eAAe7gB,SAExB4nB,QAAS,SAAUC,GACfn0B,KAAK0zB,QAAQQ,UACTC,GACA1yB,EAAEzB,KAAKwF,SAAS+F,YAqD5B7P,EAAMiF,WAAWmH,GACbzF,KAAM,SAAUmD,GACZ9J,EAAM2G,KAAKmD,EAASsC,EAAQgH,KAEhCoZ,mBAAoBA,EACpBsB,QAASA,EACTL,MAAOA,EACPC,YAAaA,EACbC,SAAUA,EACViB,OAAQA,EACRF,MAAOA,EACPT,UAAWA,EACXY,OAAQA,EACRP,KAAMA,EACNK,OAAQA,EACRJ,KAAMA,EACNL,WAAYA,EACZE,YAAaA,EACbD,aAAcA,EACdK,SAAUA,EACVZ,mBAAoBA,EACpBI,UAAWA,EACXS,MAAOA,EACPV,WAAYA,KAElB/oB,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,4BACH,gBACA,uBACDD,IACL,YACG,SAAU0J,EAAGxG,GAiBV,QAASm5B,GAAa/pB,EAAMgqB,GACpBhqB,EAAKiqB,WACDD,EAAKE,SACLlqB,EAAKmqB,QAAO,GAGhBnqB,EAAKvC,QAAQ0sB,OAAOnqB,GAAQoqB,eAAgBJ,EAAKE,UAibzD,QAASG,GAAOL,GACZ,MAAOA,GAAKE,WAAY,GAASF,EAAKM,UAAW,GAASN,EAAKO,YAAa,EAEhF,QAASC,GAAqB3xB,EAASmxB,GACnC,GAAIS,GAAU5xB,KAAY,CAI1B,OAHIA,GAAQxJ,KAAsB,QAAfwJ,EAAQxJ,MACvBo7B,EAAUT,EAAKnxB,EAAQxJ,IAAM,QAE1Bo7B,EA4SX,QAASC,GAAQr7B,EAAKM,GAClB,MAAOA,GAAII,WAAW,IAAMV,GAAOM,EAAIg7B,cAAc56B,WAAW,IAAMV,EA0mB1E,QAASu7B,GAAkBC,EAAKta,GAC5B,GAAIpe,EAkBJ,OAjBa,IAAT04B,EAAI91B,GAAoB,IAAT81B,EAAIxtB,EACnBlL,EAASoe,EAAOnH,cACA,GAATyhB,EAAI91B,GAAmB,GAAT81B,EAAIxtB,EACzBlL,EAASoe,EAAOtH,UACA,IAAT4hB,EAAI91B,GAAoB,GAAT81B,EAAIxtB,EAC1BlL,EAASoe,EAAOrH,WACA,GAAT2hB,EAAI91B,GAAmB,IAAT81B,EAAIxtB,EACzBlL,EAASoe,EAAOpH,aACC,IAAV0hB,EAAI91B,GAAoB,IAAT81B,EAAIxtB,EAC1BlL,EAASoe,EAAOvH,SACC,IAAV6hB,EAAI91B,GAAoB,GAAT81B,EAAIxtB,EAC1BlL,EAASoe,EAAOxH,MACA,GAAT8hB,EAAI91B,GAAoB,IAAV81B,EAAIxtB,EACzBlL,EAASoe,EAAOjI,OACA,IAATuiB,EAAI91B,GAAqB,IAAV81B,EAAIxtB,IAC1BlL,EAASoe,EAAOhI,SAEbpW,EAwiBX,QAAS24B,GAAQ3vB,GACb,GAAI4vB,GAAW5vB,EAAQtC,QAAQkyB,QAC/B,OAAOA,IAAYA,EAASC,QAAS,EAEzC,QAASC,GAAuBhb,EAAOzH,GAAvC,GACQ0iB,GAAWnpB,EAAUwH,EAChB5N,CAAT,KAASA,EAAM,EAASsU,EAAMkb,WAAWr7B,OAAvB6L,EAA+BA,IAK7C,GAJAuvB,EAAYjb,EAAMkb,WAAWxvB,GAC7BoG,EAAWmpB,EAAUnpB,WACrBwH,EAAO,GAAI7D,GAAK3D,EAAShN,EAAGgN,EAAS1E,GACrCkM,EAAKvB,QAAQojB,GAAmBA,IAC5B7hB,EAAKjI,SAASkH,GACd,MAAO0iB,GA96DtB,GA0BOG,GA4BAC,EAoDAC,EAsBAC,EAgCAC,EAoBAC,EAcAC,EAeAC,EAyCAC,EAaAC,EAcAC,EAcAC,EA6CAC,EAcAC,EAcAC,EA2EAC,EA2BAC,EA4DAC,EA4EAC,EAiCAC,EA6DAC,EAuEAC,EAgPAC,EAIAC,EAwBAC,EASAC,EA4LAC,EAWAC,EAqFAC,EA4EAC,EAydAC,EA8CAC,EAl4DA/7B,EAAQgF,OAAOhF,MAAO0F,EAAU1F,EAAM0F,QAAS0G,EAAU1G,EAAQ0G,QAAS5F,EAAQxG,EAAMwG,MAAOkoB,EAAQtiB,EAAQsiB,MAAOra,EAAOjI,EAAQiI,KAAM4Z,EAAY7hB,EAAQ6hB,UAAWziB,EAAQY,EAAQZ,MAAOmB,EAAcnB,EAAMmB,YAAasB,EAAQ7B,EAAQ6B,MAAO2gB,EAASxiB,EAAQwiB,OAAQziB,EAASC,EAAQD,OAAQlH,EAAajF,EAAMiF,WAAY+2B,GAAUh8B,EAAMoT,GAAG4oB,QAASC,GAAUj8B,EAAMk8B,QAAQD,QAAS1/B,GAAUyD,EAAMwF,KAAKjJ,QAASkN,GAAU1D,EAAE0D,QAAS0yB,GAAQp2B,EAAEo2B,MACpcC,IACIC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPxf,IAAK,UACL8a,KAAM,OACNiB,OAAQ,UACR0D,MAAO,WACPC,KAAM,WACNC,KAAM,WACNC,MAAO,WACPC,UAAW,aACXC,UAAW,cACZ9C,GAAoB,GAAI+C,GAAO,OAAQC,GAAM,MAAOC,GAAQ,QAASC,GAAO,OAAQC,GAAS,SAAUC,GAAoB,GAAIC,GAAqB,GAAIC,GAAa,YAAaC,GAAO,OAAQC,GAAW,UAAWC,GAAa,aAAcC,GAAmB,mBAAoBC,GAAgB,EAAGC,GAAiB,EAAGC,GAAc,aAAcC,GAAc,aAAcC,GAAa,YAAaC,GAAW,UAAWC,GAAa,KAAQC,GAAa,IAAOC,GAAW,GAAKC,GAAkB,IAAMC,GAAsB,EAAGpR,GAAc,cAAeqR,GAAM,MAAOC,GAAU;AAC7kBlyB,EAAQgwB,QAAUA,GAUdpC,EAAkBh6B,EAAMwG,MAAME,QAC9BC,KAAM,SAAU43B,GACZj6B,KAAKi6B,YAAcA,EACnBj6B,KAAK8H,QAAUmyB,EAAYnyB,SAE/B0G,UAAW,WAIP,QAAS0rB,GAAOp6B,EAAI8a,GAChB,GAAIN,GAAQta,KAAK8H,QAAQqyB,aAAar6B,EAClCwa,KACAta,KAAKo6B,SAASxgC,KAAK0gB,GACnBta,KAAKq6B,MAAMzgC,KAAK0gB,EAAMM,SAAStH,WAC/BtT,KAAKs6B,IAAI1gC,KAAKghB,EAAOtH,YAR7BtT,KAAKq6B,SACLr6B,KAAKs6B,OACLt6B,KAAKo6B,YASLp6B,KAAKi6B,YAAY3Y,QAAQpW,QAAQgvB,EAAQl6B,OAE7C2O,OAAQ,SAAU7B,GACd,KAA4B,GAAxB9M,KAAKo6B,SAASjgC,QAGlB,IAAK,GAAIF,GAAI,EAAO+F,KAAKo6B,SAASjgC,OAAlBF,EAA0BA,IACtC+F,KAAKo6B,SAASngC,GAAGmS,SAAS,GAAIzC,GAAM3J,KAAKq6B,MAAMpgC,GAAGmF,GAAKY,KAAKs6B,IAAIrgC,GAAGmF,EAAIY,KAAKq6B,MAAMpgC,GAAGmF,GAAK0N,EAAM9M,KAAKq6B,MAAMpgC,GAAGyN,GAAK1H,KAAKs6B,IAAIrgC,GAAGyN,EAAI1H,KAAKq6B,MAAMpgC,GAAGyN,GAAKoF,OAI9J6oB,EAAiBzzB,EAAME,QACvBC,KAAM,SAAUk4B,EAAcC,EAAYC,GAElCz6B,KAAKy6B,QADLpyB,EAAYoyB,IACG,EAEAA,EAEnBz6B,KAAK06B,cAAgBH,EACrBv6B,KAAK26B,YAAcH,EACnBx6B,KAAK46B,MAAQ,kBAEjBC,KAAM,WACF76B,KAAK86B,SAAS96B,KAAK06B,gBAEvBK,KAAM,WACF/6B,KAAK86B,SAAS96B,KAAK26B,cAEvBG,SAAU,SAAUE,GAAV,GAUEC,GATJnzB,EAAUkzB,EAAMlzB,OAChB9H,MAAKy6B,SACLO,EAAMzZ,QAAQrW,QAAQ,SAAUpL,EAAIyJ,GAChC,GAAI2xB,GAAOpzB,EAAQqyB,aAAar6B,EAChCo7B,GAAKlO,SAAQ,GACTkO,GACAA,EAAK3xB,OAAOA,KAGhB0xB,EAAS,GAAIpzB,GACjBozB,EAAO1tB,WAAW,GAAImoB,GAAgBsF,IACtCC,EAAOztB,WAAW,WACdwtB,EAAMzZ,QAAQrW,QAAQ,SAAUpL,GAC5B,GAAIo7B,GAAOpzB,EAAQqyB,aAAar6B,EAChCo7B,GAAKlO,SAAQ,OAGrBiO,EAAO3sB,SAEP0sB,EAAM1Z,QAAQpW,QAAQ,SAAUpL,EAAI8a,GAChC,GAAIN,GAAQxS,EAAQqyB,aAAar6B,EAC7Bwa,IACAA,EAAMlO,SAASwO,EAAOtH,aAG9B0nB,EAAMzZ,QAAQrW,QAAQ,SAAUpL,EAAIyJ,GAChC,GAAI2xB,GAAOpzB,EAAQqyB,aAAar6B,EAC5Bo7B,IACAA,EAAK3xB,OAAOA,SAM5BqsB,EAAgB1zB,EAAME,QACtBC,KAAM,SAAU+U,GACZpX,KAAKm7B,SACLn7B,KAAK46B,MAAQ,iBACTxjB,IAASnc,GACT+E,KAAKm7B,MAAMvhC,KAAKwd,IAGxBqB,IAAK,SAAU2iB,GACXp7B,KAAKm7B,MAAMvhC,KAAKwhC,IAEpBP,KAAM,WACF,IAAK,GAAI5gC,GAAI,EAAO+F,KAAKm7B,MAAMhhC,OAAfF,EAAuBA,IACnC+F,KAAKm7B,MAAMlhC,GAAG4gC,QAGtBE,KAAM,WACF,IAAK,GAAI9gC,GAAI,EAAO+F,KAAKm7B,MAAMhhC,OAAfF,EAAuBA,IACnC+F,KAAKm7B,MAAMlhC,GAAG8gC,UAItBlF,EAAqB3zB,EAAME,QAC3BC,KAAM,SAAUgI,EAAMgxB,EAAYC,GAC9Bt7B,KAAKqK,KAAOA,EACZrK,KAAKu7B,YAAcF,EACnBr7B,KAAKw7B,YAAcF,EACfrjC,GAAQojC,KACRr7B,KAAKy7B,YAAcpxB,EAAKjB,UAExBnR,GAAQqjC,KACRt7B,KAAK07B,YAAcrxB,EAAKwC,UAE5B7M,KAAK46B,MAAQ,sBAEjBC,KAAM,WACE76B,KAAKy7B,cAAgBxgC,GACrB+E,KAAKqK,KAAKsxB,iBAAiB37B,KAAKy7B,YAAa,UAE7Cz7B,KAAK07B,cAAgBzgC,GACrB+E,KAAKqK,KAAKsxB,iBAAiB37B,KAAK07B,YAAa,UAEjD17B,KAAKqK,KAAKuxB,eAEdb,KAAM,WACE/6B,KAAKu7B,cAAgBtgC,GACrB+E,KAAKqK,KAAKsxB,iBAAiB37B,KAAKu7B,YAAa,UAE7Cv7B,KAAKw7B,cAAgBvgC,GACrB+E,KAAKqK,KAAKsxB,iBAAiB37B,KAAKw7B,YAAa,UAEjDx7B,KAAKqK,KAAKuxB,iBAGd9F,EAAyB5zB,EAAME,QAC/BC,KAAM,SAAUgI,EAAMwxB,EAAYC,GAC9B97B,KAAKqK,KAAOA,EACZrK,KAAKy7B,YAAcI,EACnB77B,KAAK07B,YAAcI,EACnB97B,KAAKu7B,YAAclxB,EAAKjB,SACxBpJ,KAAKw7B,YAAcnxB,EAAKwC,SACxB7M,KAAK46B,MAAQ,sBAEjBC,KAAM,WACF76B,KAAKqK,KAAKsxB,iBAAiB37B,KAAKy7B,YAAa,UAC7Cz7B,KAAKqK,KAAKsxB,iBAAiB37B,KAAK07B,YAAa,UAC7C17B,KAAKqK,KAAKuxB,eAEdb,KAAM,WACF/6B,KAAKqK,KAAKsxB,iBAAiB37B,KAAKu7B,YAAa,UAC7Cv7B,KAAKqK,KAAKsxB,iBAAiB37B,KAAKw7B,YAAa,UAC7Cx7B,KAAKqK,KAAKuxB,iBAGd7F,EAAuB7zB,EAAME,QAC7BC,KAAM,SAAU+Z,GACZpc,KAAKoc,WAAaA,EAClBpc,KAAK8H,QAAUsU,EAAWtU,QAC1B9H,KAAK+7B,gBAAkB3f,EAAW2f,gBAClC/7B,KAAK46B,MAAQ,qBAEjBC,KAAM,WACF76B,KAAK8H,QAAQye,eAAevmB,KAAKoc,YAAY,IAEjD2e,KAAM,WACF/6B,KAAK8H,QAAQyD,OAAOvL,KAAKoc,YAAY,MAGzC4Z,EAAkB9zB,EAAME,QACxBC,KAAM,SAAUiY,GACZta,KAAKsa,MAAQA,EACbta,KAAK8H,QAAUwS,EAAMxS,QACrB9H,KAAK46B,MAAQ,YAEjBC,KAAM,WACF76B,KAAK8H,QAAQke,UAAUhmB,KAAKsa,OAAO,GACnCta,KAAKsa,MAAMka,QAAO,IAEtBuG,KAAM,WACF/6B,KAAKsa,MAAMka,QAAO,GAClBx0B,KAAK8H,QAAQyD,OAAOvL,KAAKsa,OAAO,MAGpC2b,EAAgB/zB,EAAME,QACtBC,KAAM,SAAU25B,EAAQC,EAAYC,GAA9B,GAMOjiC,GACDqgB,CADR,KALAta,KAAKg8B,OAASA,EACdh8B,KAAKi8B,WAAaA,EAClBj8B,KAAK46B,MAAQ,iBACb56B,KAAKm8B,cACLn8B,KAAKk8B,QAAUA,EACNjiC,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACxB+F,KAAKm8B,WAAWviC,KAAK0gB,EAAMM,WAGnCigB,KAAM,WAAA,GACO5gC,GACDqgB,CADR,KAASrgB,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACxBqgB,EAAMM,OAAO5a,KAAKi8B,WAAWhiC,IACzBqgB,EAAM9R,eAAe,WACrB8R,EAAM8hB,OAAO9hB,EAAOta,KAAKm8B,WAAWliC,GAAI+F,KAAKi8B,WAAWhiC,IAE5DqgB,EAAMshB,aAEN57B,MAAKk8B,UACLl8B,KAAKk8B,QAAQG,gBACbr8B,KAAKk8B,QAAQI,YAGrBvB,KAAM,WAAA,GACO9gC,GACDqgB,CADR,KAASrgB,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACxBqgB,EAAMM,OAAO5a,KAAKm8B,WAAWliC,IACzBqgB,EAAM9R,eAAe,WACrB8R,EAAM8hB,OAAO9hB,EAAOta,KAAKi8B,WAAWhiC,GAAI+F,KAAKm8B,WAAWliC,IAE5DqgB,EAAMshB,aAEN57B,MAAKk8B,UACLl8B,KAAKk8B,QAAQG,gBACbr8B,KAAKk8B,QAAQI,cAIrBpG,EAAoBh0B,EAAME,QAC1BC,KAAM,SAAU+Z,EAAYtU,GACxB9H,KAAKoc,WAAaA,EAClBpc,KAAK8H,QAAUA,EACf9H,KAAK46B,MAAQ,kBAEjBC,KAAM,WACF76B,KAAK8H,QAAQyD,OAAOvL,KAAKoc,YAAY,IAEzC2e,KAAM,WACF/6B,KAAK8H,QAAQye,eAAevmB,KAAKoc,YAAY,MAGjD+Z,EAAej0B,EAAME,QACrBC,KAAM,SAAUiY,EAAOxS,GACnB9H,KAAKsa,MAAQA,EACbta,KAAK8H,QAAUA,EACf9H,KAAK46B,MAAQ,aAEjBC,KAAM,WACF76B,KAAK8H,QAAQy0B,WACbv8B,KAAK8H,QAAQyD,OAAOvL,KAAKsa,OAAO,IAEpCygB,KAAM,WACF/6B,KAAK8H,QAAQke,UAAUhmB,KAAKsa,OAAO,MAGvC8b,EAAcl0B,EAAME,QACpBC,KAAM,SAAUm6B,EAAiBC,EAAe30B,GAC5C9H,KAAKgM,QAAUwwB,EACfx8B,KAAK08B,SAAWD,EAChBz8B,KAAK8H,QAAUA,EACf9H,KAAK46B,MAAQ,YAEjBC,KAAM,WACF76B,KAAK8H,QAAQ60B,IAAI38B,KAAKgM,UAE1B+uB,KAAM,WACF/6B,KAAK8H,QAAQ60B,IAAI38B,KAAK08B,aAG1BrG,EAAan0B,EAAME,QACnBC,KAAM,SAAU65B,EAASF,EAAQY,GAA3B,GAQO3iC,GACDqgB,CADR,KAPAta,KAAKg8B,OAASA,EACdh8B,KAAK48B,YAAcA,EACnB58B,KAAK46B,MAAQ,WACb56B,KAAK68B,eACL78B,KAAK88B,UAAYZ,EAAQa,OACzB/8B,KAAKk8B,QAAUA,EACfl8B,KAAKiL,OAASixB,EAAQc,aAAa/xB,SAC1BhR,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACxB+F,KAAK68B,YAAYjjC,KAAK0gB,EAAMlG,SAASN,QAG7C+mB,KAAM,WACF,GAAI5gC,GAAGqgB,CACP,KAAKrgB,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACpBqgB,EAAMlG,OAAOpU,KAAK48B,YAAY3iC,GAAI+F,KAAKiL,QAAQ,GAC3CqP,EAAM9R,eAAe,WACrB8R,EAAM8hB,OAAO9hB,GAEjBA,EAAMshB,aAEN57B,MAAKk8B,UACLl8B,KAAKk8B,QAAQe,cACbj9B,KAAKk8B,QAAQI,YAGrBvB,KAAM,WACF,GAAI9gC,GAAGqgB,CACP,KAAKrgB,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACpBqgB,EAAMlG,OAAOpU,KAAK68B,YAAY5iC,GAAI+F,KAAKiL,QAAQ,GAC3CqP,EAAM9R,eAAe,WACrB8R,EAAM8hB,OAAO9hB,GAEjBA,EAAMshB,aAEN57B,MAAKk8B,UACLl8B,KAAKk8B,QAAQe,cACbj9B,KAAKk8B,QAAQI,cAIrBhG,EAAcp0B,EAAME,QACpBC,KAAM,SAAUyF,EAASo1B,EAAOC,GAC5Bn9B,KAAK8H,QAAUA,EACf9H,KAAKsiB,QAAU6a,EACfn9B,KAAKk9B,MAAQA,EACbl9B,KAAK46B,MAAQ,eAEjBC,KAAM,WACF76B,KAAK8H,QAAQs1B,SAASp9B,KAAKk9B,MAAOl9B,KAAKsiB,UAE3CyY,KAAM,WACF/6B,KAAK8H,QAAQyqB,QAAQvyB,KAAKk9B,OAAO,MAGrC3G,EAAar0B,EAAME,QACnBC,KAAM,SAAUyF,EAASo1B,EAAOC,GAC5Bn9B,KAAK8H,QAAUA,EACf9H,KAAKsiB,QAAU6a,EACfn9B,KAAKk9B,MAAQA,EACbl9B,KAAK46B,MAAQ,eAEjBC,KAAM,WACF76B,KAAK8H,QAAQs1B,SAASp9B,KAAKk9B,MAAOl9B,KAAKsiB,UAE3CyY,KAAM,WACF/6B,KAAK8H,QAAQ2qB,OAAOzyB,KAAKk9B,OAAO,MAGpC1G,EAAkB96B,EAAM8d,WAAWpX,QACnCC,KAAM,SAAUa,GACZxH,EAAM8d,WAAWvI,GAAG5O,KAAKoG,KAAKzI,KAAMkD,GACpClD,KAAKq9B,KAAKr9B,KAAKs9B,OAAQp6B,GACvBlD,KAAKyiB,SACLziB,KAAK0F,MAAQ,EACb1F,KAAKu9B,SAAW,KAEpBD,QACI,SACA,UAEJE,MAAO,WACHx9B,KAAKy9B,UAAY,GAAI7H,IAEzB8H,OAAQ,WACJ19B,KAAKy9B,UAAYxiC,GAErB0iC,OAAQ,SAAUC,GACV59B,KAAKy9B,UAAUtC,MAAMhhC,OAAS,GAC9B6F,KAAK69B,SAAS79B,KAAKy9B,UAAWG,GAElC59B,KAAKy9B,UAAYxiC,GAErB6iC,iBAAkB,SAAU1C,GACpBp7B,KAAKy9B,UACLz9B,KAAKy9B,UAAUhlB,IAAI2iB,GAEnBp7B,KAAKyY,IAAI2iB,IAGjB3iB,IAAK,SAAU2iB,EAAUwC,GACrB59B,KAAK69B,SAASzC,EAAUwC,IAE5Bne,IAAK,WACGzf,KAAK0F,MAAQ,IACb1F,KAAKyiB,MAAMhD,MACXzf,KAAK0F,UAGbq4B,MAAO,WACH,MAAO/9B,MAAKyiB,MAAMtoB,QAEtB0gC,KAAM,WACE76B,KAAK0F,MAAQ,IACb1F,KAAK0F,QACL1F,KAAKyiB,MAAMziB,KAAK0F,OAAOm1B,OACvB76B,KAAK4F,QAAQ,YAGrBm1B,KAAM,WACE/6B,KAAKyiB,MAAMtoB,OAAS,GAAkB6F,KAAKyiB,MAAMtoB,OAAxB6F,KAAK0F,QAC9B1F,KAAKyiB,MAAMziB,KAAK0F,OAAOq1B,OACvB/6B,KAAK0F,QACL1F,KAAK4F,QAAQ,YAGrBi4B,SAAU,SAAUJ,EAAWG,GAC3B59B,KAAKyiB,MAAM9c,OAAO3F,KAAK0F,MAAO1F,KAAKyiB,MAAMtoB,OAAS6F,KAAK0F,OACvD1F,KAAKyiB,MAAM7oB,KAAK6jC,GACZG,KAAY,EACZ59B,KAAK+6B,OAEL/6B,KAAK0F,QAEL1F,KAAKyiB,MAAMtoB,OAAS6F,KAAKu9B,WACzBv9B,KAAKyiB,MAAM9c,OAAO,EAAG3F,KAAKyiB,MAAMtoB,OAAS6F,KAAKu9B,UAC9Cv9B,KAAK0F,MAAQ1F,KAAKu9B,WAG1BjxB,MAAO,WACHtM,KAAKyiB,SACLziB,KAAK0F,MAAQ,KAGjB+wB,EAAYv0B,EAAME,QAClBC,KAAM,SAAU27B,GACZh+B,KAAKg+B,YAAcA,GAEvBr3B,MAAO,aAEP4sB,KAAM,aAENhsB,IAAK,aAEL02B,YAAa,WACT,OAAO,GAEXC,UAAW,WACP,MAAOpG,IAAQC,SAanBrB,EAAeD,EAAUr0B,QACzBC,KAAM,SAAU27B,GAAV,GAIEl2B,GAAoCq2B,EACpCC,EAUAC,EAdAC,EAAOt+B,KACPu+B,EAAW7iC,EAAMk8B,QAAQ4G,SAAW3E,GAAkBD,EAC1DnD,GAAUxlB,GAAG5O,KAAKoG,KAAK61B,EAAMN,GACzBl2B,EAAUw2B,EAAKN,YAAYl2B,QAASq2B,EAASr2B,EAAQq2B,OACrDC,EAAWt2B,EAAQs2B,SAAWE,EAAKF,SAAW38B,EAAEqG,EAAQ22B,YAAYC,qBACpEH,SAAUA,EACVI,mBAAoB7E,GACpB8E,qBAAqB,EACrB9pB,MAAM,EACN+pB,OAAQhH,GAAMyG,EAAKQ,MAAOR,KAC3BzjB,KAAK,uBACJsjB,EAAOxS,YACP2S,EAAKS,cAAgB,GAAIrH,IAAQyG,EAAO34B,UAExC64B,EAAgB,SAAUW,EAAWrmC,EAAKC,GAC1ComC,EAAUC,cACVD,EAAUE,YAAYvmC,GAAO+gC,GAAY9gC,GAAO+gC,KAEpD0E,EAAcD,EAASe,WAAW//B,GAClCi/B,EAAcD,EAASe,WAAWz3B,GAClC02B,EAASgB,WAEbnB,YAAa,SAAUxlC,EAAG47B,GAAb,GACL2J,GAAch+B,KAAKg+B,YACnB96B,EAAU86B,EAAYl2B,QAAQ5E,QAAQm8B,SACtCvK,EAAUT,EAAKE,OAQnB,OAPIt8B,IAAQiL,EAAQxJ,OAIZo7B,EAHC5xB,EAAQxJ,KAAsB,QAAfwJ,EAAQxJ,IAGd26B,EAAKnxB,EAAQxJ,IAAM,UAAY26B,EAAKE,SAAWt8B,GAAQ+lC,EAAYsB,cAFnE5K,EAAOL,IAKlBnxB,KAAY,GAAS4xB,IAAY78B,GAAQ+lC,EAAYuB,kBAAoBtnC,GAAQ+lC,EAAYwB,oBAExG74B,MAAO,WACH3G,KAAKo+B,SAASqB,UAElBlM,KAAM,aAENuL,MAAO,SAAUY,GACb,GAAIpB,GAAOt+B,KAAM8H,EAAUw2B,EAAKN,YAAYl2B,QAASq2B,EAASr2B,EAAQq2B,OAAQwB,EAAY,GAAIh2B,GAAM+1B,EAAKE,WAAYF,EAAKG,UACtH1B,GAAOxS,WACP7jB,EAAQg4B,UAAUH,EAAUtuB,MAAM,KAClCitB,EAAKS,cAAcgB,OAAOJ,GAC1BxB,EAAOxS,UAAUgU,EAAUvgC,EAAGugC,EAAUj4B,IAExCi4B,EAAYA,EAAUzuB,KAAKpJ,EAAQk4B,KAAK3uB,MAAM,KAElDvJ,EAAQlC,QAAQm0B,IAAO4C,IAAKgD,KAEhCp4B,IAAK,WACDvH,KAAKo+B,SAASgB,WAElBlB,UAAW,WACP,MAAOpG,IAAQvE,QAGnBoD,EAAcz0B,EAAME,QACpBC,KAAM,SAAU27B,GACZh+B,KAAKg+B,YAAcA,GAEvBC,YAAa,WACT,OAAO,GAEXt3B,MAAO,SAAUlO,EAAG47B,GAChB,GAAI2J,GAAch+B,KAAKg+B,YAAal2B,EAAUk2B,EAAYl2B,QAASw3B,EAActB,EAAYsB,YAAaW,EAAan4B,EAAQ5E,QAAQ+8B,UACnIX,KACIzK,EAAqBoL,EAAY5L,IACjCD,EAAakL,EAAajL,GAE1BiL,EAAYpD,UACZl8B,KAAKk8B,QAAUoD,EAAYpD,QAC3Bl8B,KAAKkgC,OAASlgC,KAAKk8B,QAAQiE,SAAS1nC,KAGvCuH,KAAKkgC,SACNlgC,KAAKkgC,OAASp4B,EAAQs4B,iBAAiBD,SAAS1nC,GAC5CuH,KAAKkgC,SACLlgC,KAAKk8B,QAAUp0B,EAAQs4B,mBAG3BpgC,KAAKk8B,UACAl8B,KAAKk8B,QAAQmE,aAAargC,KAAKkgC,SAAYp4B,EAAQlC,QAAQmzB,IACxDiD,OAAQh8B,KAAKk8B,QAAQF,OACrBsE,kBAIJtC,EAAYzQ,WAAa90B,EACzBulC,EAAYz2B,IAAI9O,IAHhBuH,KAAKk8B,QAAQv1B,MAAMlO,KAO/B86B,KAAM,SAAU96B,GACRuH,KAAKk8B,UACLl8B,KAAKk8B,QAAQ3I,KAAKvzB,KAAKkgC,OAAQznC,GAC3BuH,KAAKk8B,QAAQmE,aAAargC,KAAKkgC,SAC/BlgC,KAAKg+B,YAAYl2B,QAAQlC,QAAQozB,IAC7BgD,OAAQh8B,KAAKk8B,QAAQF,OACrBsE,mBAKhB/4B,IAAK,SAAU9O,EAAG47B,GACd,GAA4Fjd,GAAxFtP,EAAU9H,KAAKg+B,YAAYl2B,QAASy4B,EAAUvgC,KAAKg+B,YAAa9B,EAAUl8B,KAAKk8B,OAC/EA,KACKA,EAAQmE,aAAargC,KAAKkgC,SAAYp4B,EAAQlC,QAAQqzB,IACnD+C,OAAQE,EAAQF,OAChBsE,iBAOJpE,EAAQwB,UALRtmB,EAAO8kB,EAAQt1B,OACXwQ,GACAtP,EAAQ04B,gBAAgB/nB,IAAIrB,GAAM,KAM1CmpB,EAAQjB,aACRt/B,KAAKg+B,YAAYyC,cACbp2B,KAAMk2B,EAAQjB,YACdzsB,MAAOpa,EACP47B,KAAMA,IAGdr0B,KAAKk8B,QAAUjhC,EACf+E,KAAKkgC,OAASjlC,GAElBijC,UAAW,SAAUzlC,GACjB,MAAOuH,MAAKg+B,YAAYsB,YAAct/B,KAAKg+B,YAAYsB,YAAYoB,WAAWjoC,GAAKq/B,GAAQC,SAG/FnB,EAAgB10B,EAAME,QACtBC,KAAM,SAAU27B,GACZh+B,KAAKg+B,YAAcA,GAEvBC,YAAa,SAAUxlC,EAAG47B,GAAb,GACL2J,GAAch+B,KAAKg+B,YACnBlJ,EAAUD,EAAqBmJ,EAAYl2B,QAAQ5E,QAAQ+8B,WAAY5L,EAC3E,OAAOS,KAAY78B,GAAQ+lC,EAAYsB,eAAiBrnC,GAAQ+lC,EAAYuB,iBAEhF54B,MAAO,SAAUlO,GACb,GAAIqP,GAAU9H,KAAKg+B,YAAYl2B,OAC/BA,GAAQy0B,WACRz0B,EAAQ64B,SAASh6B,MAAMlO,IAE3B86B,KAAM,SAAU96B,GACZ,GAAIqP,GAAU9H,KAAKg+B,YAAYl2B,OAC/BA,GAAQ64B,SAASpN,KAAK96B,IAE1B8O,IAAK,SAAU9O,EAAG47B,GAAb,GACGvsB,GAAU9H,KAAKg+B,YAAYl2B,QAASw3B,EAAct/B,KAAKg+B,YAAYsB,YACnE1rB,EAAO9L,EAAQ64B,SAAS/lB,QACtB0kB,IAAgBA,EAAYhL,YAAgBD,EAAKE,SACnDzsB,EAAQy0B,WAEP3oB,EAAK3K,WACNnB,EAAQ84B,WAAWhtB,GAEvB9L,EAAQ64B,SAASp5B,OAErB22B,UAAW,WACP,MAAOpG,IAAQC,SAGnBlB,EAAiB30B,EAAME,QACvBC,KAAM,SAAU27B,GACZh+B,KAAKg+B,YAAcA,EACnBh+B,KAAK+I,KAAO,kBAEhBk1B,YAAa,WACT,MAAOj+B,MAAKg+B,YAAYwB,mBAE5B74B,MAAO,SAAUlO,EAAG47B,GAChB,GAAIvsB,GAAU9H,KAAKg+B,YAAYl2B,QAASytB,EAAYv1B,KAAKg+B,YAAYwB,kBAAmBpjB,EAAatU,EAAQ+4B,qBAAsBtL,EAAUuL,GAAIroC,EAC7I08B,GAAQ/Y,KAAgBtU,EAAQlC,QAAQmzB,IACpCiD,UACAsE,aAAclkB,MACZtU,EAAQye,eAAenK,IAC7Bpc,KAAKg+B,YAAY+C,wBAAwB3kB,EAAYmZ,EAAUuL,GAAGxmB,OAAO,GACzEta,KAAKg+B,YAAYgD,eACjB5M,EAAap0B,KAAKg+B,YAAYiD,iBAAkB5M,KAEhDjY,EAAWhT,OAAO,MAClBpJ,KAAKg+B,YAAYz2B,IAAI9O,KAG7B86B,KAAM,SAAU96B,GAAV,GACEulC,GAAch+B,KAAKg+B,YACnB5hB,EAAa4hB,EAAYiD,gBAM7B,OALA7kB,GAAWvP,OAAOpU,GAClBulC,EAAYl2B,QAAQlC,QAAQozB,IACxBgD,UACAsE,aAAclkB,MAEX,GAEX7U,IAAK,SAAU9O,GACX,GAA0LoU,GAAtLmxB,EAAch+B,KAAKg+B,YAAaz+B,EAAIy+B,EAAYl2B,QAASsU,EAAa4hB,EAAYiD,iBAAkB3B,EAActB,EAAYsB,YAAa/J,EAAYyI,EAAYwB,iBAClKpjB,KAIDvP,EADA0oB,GAAaA,EAAUuL,IAAM1kB,EAAW8kB,gBAC/B3L,EAAUuL,GACZxB,GAAeA,YAAuBx3B,GAAQq5B,MAC5C7B,EAAY8B,aAAa5I,KAAS8G,EAAY8B,aAAa3oC,GAE3DA,EAEb2jB,EAAWvP,OAAOA,GACbtN,EAAEqG,QAAQqzB,IACP+C,UACAsE,aAAclkB,MAKlB7c,EAAEgM,OAAO6Q,GAAY,GACrB7c,EAAEihC,gBAAgB/gB,QAJlBrD,EAAWwf,cACXr8B,EAAE8hC,0BAKNrD,EAAY+C,4BAEhB7C,UAAW,WACP,MAAOpG,IAAQC,SAGnBjB,EAAqB50B,EAAME,QAC3BC,KAAM,SAAU27B,GACZh+B,KAAKg+B,YAAcA,EACnBh+B,KAAK+I,KAAO,kBAEhBk1B,YAAa,SAAUxlC,EAAG47B,GACtB,GAAI2J,GAAch+B,KAAKg+B,YAAal2B,EAAUk2B,EAAYl2B,QAASm4B,EAAan4B,EAAQ5E,QAAQ+8B,WAAY51B,EAAO2zB,EAAYsB,YAAagC,EAAWzM,EAAqBoL,EAAY5L,IAAShqB,GAAQA,EAAKqlB,QAAUrlB,EAAKiqB,YAAcD,EAAKE,QAIhP,OAHI+M,KACAthC,KAAK8gC,GAAKz2B,GAEPi3B,GAEX36B,MAAO,SAAUlO,EAAG47B,GAAb,GAGC6H,GAFA9f,EAAapc,KAAK8gC,EACtB1M,GAAahY,EAAYiY,GACrB6H,EAAU9f,EAAW8f,QACrB/G,EAAQ/Y,IAAe8f,IAAYl8B,KAAKg+B,YAAYl2B,QAAQlC,QAAQmzB,IAChEiD,UACAsE,aAAclkB,MAElBpc,KAAKkgC,OAAShE,EAAQiE,SAAS1nC,GAC/ByjC,EAAQv1B,MAAMlO,KAEduH,KAAKg+B,YAAYzQ,WAAa90B,EAC9BuH,KAAKg+B,YAAYz2B,IAAI9O,KAG7B86B,KAAM,SAAU96B,GACZ,GAAIyjC,GAAUl8B,KAAK8gC,GAAG5E,OACtB,OAAI/G,GAAQn1B,KAAK8gC,KAAO5E,GACpBA,EAAQ3I,KAAKvzB,KAAKkgC,OAAQznC,GAC1BuH,KAAKg+B,YAAYl2B,QAAQlC,QAAQozB,IAC7BgD,UACAsE,aAActgC,KAAK8gC,OAEhB,GANX,GASJv5B,IAAK,SAAU9O,EAAG47B,GAAb,GAYWjd,GAXRgF,EAAapc,KAAK8gC,GAClB5E,EAAU9f,EAAW8f,QACrB8B,EAAch+B,KAAKg+B,YACnBl2B,EAAUk2B,EAAYl2B,OACtBo0B,KACA8B,EAAYyC,cACRp2B,KAAM+R,EACNvJ,MAAOpa,EACP47B,KAAMA,IAENc,EAAQ/Y,KACJhF,EAAO8kB,EAAQt1B,KAAKnO,GACnBqP,EAAQlC,QAAQqzB,IACb+C,UACAsE,aAAclkB,KAMlBhF,EAAKyjB,QAJL/yB,EAAQ04B,gBAAgB/nB,IAAIrB,GAAM,GAClCgF,EAAWwf,cACX9zB,EAAQu5B,6BAOxBnD,UAAW,WACP,MAAOpG,IAAQvE,QAMnBwD,EAAc70B,EAAME,QACpBC,KAAM,SAAUyF,GACZ9H,KAAK8H,QAAUA,EACf9H,KAAKuhC,OACD,GAAI7K,GAAa12B,MACjB,GAAI82B,GAAmB92B,MACvB,GAAI62B,GAAe72B,MACnB,GAAI42B,GAAc52B,MAClB,GAAI22B,GAAY32B,OAEpBA,KAAKwhC,WAAavmC,GAEtB0L,MAAO,SAAUlO,EAAG47B,GAWhB,MAVAA,GAAO1zB,KAAe0zB,GAClBr0B,KAAKwhC,YACLxhC,KAAKwhC,WAAWj6B,IAAI9O,EAAG47B,GAE3Br0B,KAAKyhC,mBAAmBhpC,GACxBuH,KAAK0hC,cAAcjpC,EAAG47B,GACtBr0B,KAAKwhC,WAAW76B,MAAMlO,EAAG47B,GACzBr0B,KAAK2hC,cAAclpC,GACnBuH,KAAK8H,QAAQ85B,QACb5hC,KAAKutB,WAAa90B,GACX,GAEX86B,KAAM,SAAU96B,EAAG47B,GACfA,EAAO1zB,KAAe0zB,EACtB,IAAIwN,IAAgB,CAQpB,OAPI7hC,MAAKwhC,aACLK,EAAgB7hC,KAAKwhC,WAAWjO,KAAK96B,EAAG47B,IAExCwN,GACA7hC,KAAKyhC,mBAAmBhpC,GAE5BuH,KAAK2hC,cAAclpC,IACZ,GAEX8O,IAAK,SAAU9O,EAAG47B,GAOd,MANAA,GAAO1zB,KAAe0zB,GAClBr0B,KAAKwhC,YACLxhC,KAAKwhC,WAAWj6B,IAAI9O,EAAG47B,GAE3Br0B,KAAKwhC,WAAavmC,EAClB+E,KAAK2hC,cAAclpC,IACZ,GAEXqpC,QAAS,SAAUpoC,EAAK26B,GAAf,GAsCG0N,GArCJj6B,EAAU9H,KAAK8H,OAMnB,IALAusB,EAAO1zB,GACH4zB,SAAS,EACTyN,SAAS,EACTrN,QAAQ,GACTN,IACEA,EAAKE,UAAWF,EAAK2N,SAAa3N,EAAKM,OA8BrC,CAAA,GAAY,KAARj7B,GAAsB,IAARA,EAOrB,MANIqoC,GAAW/hC,KAAK8H,QAAQm6B,eAAen6B,EAAQ0sB,UAC/CuN,EAAS5nC,SACT6F,KAAK8H,QAAQyD,OAAOw2B,GAAU,GAC9B/hC,KAAK8H,QAAQo6B,eACbliC,KAAK8H,QAAQq6B,oBAEV,CACJ,IAAY,KAARzoC,EAIP,MAHAsG,MAAKoiC,wBACLt6B,EAAQy0B,WACRz0B,EAAQq6B,mBACD,MA1CyC,CAChD,GAAIpN,EAAQr7B,EAAK,KAGb,MAFAoO,GAAQu6B,YACRv6B,EAAQq6B,mBACD,CACJ,IAAIpN,EAAQr7B,EAAK,KAGpB,MAFAoO,GAAQ+yB,OACR/yB,EAAQq6B,mBACD,CACJ,IAAIpN,EAAQr7B,EAAK,KAGpB,MAFAoO,GAAQizB,OACRjzB,EAAQq6B,mBACD,CACApN,GAAQr7B,EAAK,MACpBoO,EAAQ2T,OACR3T,EAAQq6B,mBACDpN,EAAQr7B,EAAK,MACpBoO,EAAQw6B,MACRx6B,EAAQq6B,mBACDpN,EAAQr7B,EAAK,MACpBoO,EAAQy6B,QACRz6B,EAAQq6B,mBACDpN,EAAQr7B,EAAK,MACpBoO,EAAQs0B,SACRt0B,EAAQq6B,mBACDpN,EAAQr7B,EAAK,OACpBoO,EAAQq6B,kBACRr6B,EAAQ2T,OACR3T,EAAQy6B,WAiBpBC,MAAO,SAAU/pC,EAAG47B,GAChB,GAAIvsB,GAAU9H,KAAK8H,QAAS6M,EAAQ0f,EAAK1f,MAAO8tB,EAAI36B,EAAQgN,OAAQ5R,EAAU4E,EAAQ5E,QAASw/B,EAAWx/B,EAAQw/B,SAAUC,GACpH9vB,MAAOpa,EACP47B,KAAMA,EACNvf,KAAM2tB,EAEd,KAAI36B,EAAQlC,QAAQ4zB,GAAYmJ,GAYhC,MATY,GAARhuB,EACA8tB,GAAKC,EAELD,GAAKC,EAETD,EAAI/mC,EAAM0F,QAAQhJ,MAAMqI,KAAK7H,IAAIsK,EAAQ0/B,QAASniC,KAAK9H,IAAIuK,EAAQ2/B,QAASJ,IAAK,GACjFE,EAAY7tB,KAAO2tB,EACnB36B,EAAQgN,KAAK2tB,EAAGE,GAChB76B,EAAQlC,QAAQ6zB,GAAUkJ,IACnB,GAEXG,QAAS,SAAUxE,EAAM54B,GACrB44B,EAAKN,YAAch+B,KACnBA,KAAKuhC,MAAM77B,GAAS44B,GAExBmC,aAAc,SAAU5lB,GAChB7a,KAAKutB,WAAW5Z,OAAOkH,EAAKhI,QAC5B7S,KAAK8H,QAAQlC,QAAQ,QAASiV,IAGtCunB,sBAAuB,WACfpiC,KAAK+iC,gBACL/iC,KAAK8H,QAAQyD,OAAOvL,KAAK+iC,eACzB/iC,KAAK+iC,cAAgB9nC,IAG7BymC,cAAe,SAAUjpC,EAAG47B,GAAb,GACFp6B,GACDqkC,CADR,KAASrkC,EAAI,EAAO+F,KAAKuhC,MAAMpnC,OAAfF,EAAuBA,IAEnC,GADIqkC,EAAOt+B,KAAKuhC,MAAMtnC,GAClBqkC,EAAKL,YAAYxlC,EAAG47B,GAAO,CAC3Br0B,KAAKwhC,WAAalD,CAClB,SAIZqD,cAAe,SAAUlpC,GAAV,GACP+M,GAAUxF,KAAK8H,QAAQtC,QACvBw9B,EAAShjC,KAAKwhC,WAAaxhC,KAAKwhC,WAAWtD,UAAUzlC,GAAKuH,KAAKu/B,eAAiBv/B,KAAKu/B,eAAemB,WAAWjoC,GAAKuH,KAAKs/B,YAAct/B,KAAKs/B,YAAYoB,WAAWjoC,GAAKq/B,GAAQC,KACpLvyB,GAAQy9B,KAAMD,OAAQA,IAClBrL,GAAQuL,MAA2B,GAAnBvL,GAAQwL,UACxB39B,EAAQ,GAAG7D,MAAMyhC,QAAU59B,EAAQ,GAAG7D,MAAMyhC,UAGpDrC,wBAAyB,SAAU3kB,EAAYinB,EAAeC,GAC1DtjC,KAAKihC,iBAAmB7kB,EACxBpc,KAAKqjC,cAAgBA,EAEjBrjC,KAAK+iC,cADLO,EACqBtjC,KAAKihC,iBAELhmC,GAG7BwmC,mBAAoB,SAAUhpC,GAAV,GACZy8B,GAAMl1B,KAAKmgC,SAAS1nC,GACpBqP,EAAU9H,KAAK8H,OACfotB,IAAOl1B,KAAKs/B,aAAiBt/B,KAAKqjC,eAAiBnO,GAAOl1B,KAAKqjC,gBAC3DrjC,KAAKs/B,cACLx3B,EAAQlC,QAAQ2zB,IAAelvB,KAAMrK,KAAKs/B,cAC1Ct/B,KAAKs/B,YAAYjS,QAAO,IAExB6H,GAAOA,EAAIhyB,QAAQu8B,QACnB33B,EAAQlC,QAAQ0zB,IAAejvB,KAAM6qB,IACrCl1B,KAAKs/B,YAAcpK,EACnBl1B,KAAKs/B,YAAYjS,QAAO,IAExBrtB,KAAKs/B,YAAcrkC,IAI/B+lC,aAAc,WACNhhC,KAAKs/B,cACLt/B,KAAKs/B,YAAYjS,QAAO,GACxBrtB,KAAKs/B,YAAcrkC,IAG3BklC,SAAU,SAAUttB,GAAV,GACFqiB,GAAuB7qB,EAAMpQ,EAsBzBspC,EAtBChkC,EAAIS,KAAK8H,OAKlB,IAJI9H,KAAKw/B,oBACLx/B,KAAKw/B,kBAAkBnS,QAAO,GAC9BrtB,KAAKw/B,kBAAoBvkC,GAEzBsE,EAAEikC,mBAAmBC,WACrBvO,EAAM31B,EAAEikC,mBAAmBrD,SAASttB,IAEhC,MAAOqiB,EAIf,IADAA,EAAMl1B,KAAK8H,QAAQs4B,iBAAiBD,SAASttB,GACpC,CAEL,GADA7S,KAAKu/B,eAAiBhgC,EAAE6gC,iBACV,IAAVlL,EAAI91B,GAAqB,IAAV81B,EAAIxtB,EACnB,MAEJwtB,GAAMj6B,MAEN+E,MAAKu/B,eAAiBtkC,CAE1B,KAAK+E,KAAKwhC,YAAuC,mBAAzBxhC,KAAKwhC,WAAWz4B,KAA2B,CAE/D,IADIw6B,KACCtpC,EAAI,EAAOsF,EAAEmkC,eAAevpC,OAArBF,EAA6BA,IACrCoQ,EAAO9K,EAAEmkC,eAAezpC,GACpBoQ,YAAgBvC,GAAQ67B,YACxBJ,EAAoB3pC,KAAKyQ,EAGjC6qB,GAAMl1B,KAAK4jC,cAAcL,EAAqB1wB,GAElD,MAAOqiB,IAAOl1B,KAAK6jC,iBAAiBhxB,IAExCgxB,iBAAkB,SAAUhxB,GAAV,GAIVqiB,GAEI4O,EACAC,EACAC,EAPJl8B,EAAU9H,KAAK8H,QACfm8B,EAAWjkC,KAAK4jC,cAAc97B,EAAQk0B,OAAQnpB,GAC9CqxB,EAAgBlkC,KAAK4jC,cAAc97B,EAAQw4B,YAAaztB,EAQ5D,OANM7S,MAAKwhC,YAAsC,kBAAxBxhC,KAAKwhC,WAAWz4B,OAA6Bk7B,IAAYC,GAAkB5O,EAAuB2O,EAAUpxB,KAC7HixB,EAAYh8B,EAAQg8B,UACpBC,EAAW5+B,GAAQ8+B,EAASnY,OAAQgY,EAAUxoB,UAC9C0oB,EAAgB7+B,GAAQ++B,EAAcpY,OAAQgY,EAAUxoB,UAC5D4Z,EAAM6O,EAAWC,EAAgBC,EAAWC,GAEzChP,GAAO+O,GAAYC,GAE9BN,cAAe,SAAUzoC,EAAO0X,GAC5B,GAAI5Y,GAAGoQ,EAAM6qB,CACb,KAAKj7B,EAAIkB,EAAMhB,OAAS,EAAGF,GAAK,EAAGA,IAG/B,GAFAoQ,EAAOlP,EAAMlB,GACbi7B,EAAM7qB,EAAK81B,SAASttB,GAEhB,MAAOqiB,MAKnB8B,EAAuBt7B,EAAMwG,MAAME,QACnCC,KAAM,eAGN40B,EAAyBD,EAAqB50B,QAC9CC,KAAM,SAAU+Z,GACZ,GAAI1C,GAAO1Z,IACXg3B,GAAqB/lB,GAAG5O,KAAKoG,KAAKiR,GAClC1Z,KAAKoc,WAAaA,GAEtB+nB,QAAS,SAAU1rC,GACf,GAAI2rC,GAAMpkC,KAAKqkC,YAAYhyB,QAAQojB,GACnC,OAAK2O,GAAIz4B,SAASlT,GAGXqP,EAAQwI,SAAS8H,mBAAmB3f,EAAGuH,KAAKoc,WAAWkoB,aAAe7O,IAFlE,GAIf4O,UAAW,WAAA,GAEEpqC,GADLsP,EAASvJ,KAAKoc,WAAWkoB,YAAa56B,EAAIH,EAAO,GAAIpD,EAAIoD,EAAOA,EAAOpP,OAAS,GAAIyY,EAAQnS,KAAK7H,IAAI8Q,EAAEtK,EAAG+G,EAAE/G,GAAIuT,EAAOlS,KAAK9H,IAAI+Q,EAAEtK,EAAG+G,EAAE/G,GAAIgU,EAAM3S,KAAK9H,IAAI+Q,EAAEhC,EAAGvB,EAAEuB,GAAI2L,EAAS5S,KAAK7H,IAAI8Q,EAAEhC,EAAGvB,EAAEuB,EAClM,KAASzN,EAAI,EAAOsP,EAAOpP,OAAS,EAApBF,IAAyBA,EACrC2Y,EAAQnS,KAAK7H,IAAIga,EAAOrJ,EAAOtP,GAAGmF,GAClCuT,EAAOlS,KAAK9H,IAAIga,EAAMpJ,EAAOtP,GAAGmF,GAChCgU,EAAM3S,KAAK9H,IAAIya,EAAK7J,EAAOtP,GAAGyN,GAC9B2L,EAAS5S,KAAK7H,IAAIya,EAAQ9J,EAAOtP,GAAGyN,EAExC,OAAO,IAAIqI,GAAK4C,EAAMS,EAAKR,EAAQD,EAAMU,EAASD,MAGtD8jB,EAAiBD,EAAuB70B,QACxCC,KAAM,SAAU+Z,GACZ,GAAI1C,GAAO1Z,IACXi3B,GAAuBhmB,GAAG5O,KAAKoG,KAAKiR,GACpC1Z,KAAKoc,WAAaA,GAEtBmoB,MAAO,eAGPpN,EAAkBF,EAAuB70B,QACzCoiC,yBAA0B,EAC1BniC,KAAM,SAAU+Z,GACZ,GAAI1C,GAAO1Z,IACXi3B,GAAuBhmB,GAAG5O,KAAKoG,KAAKiR,GACpC1Z,KAAKoc,WAAaA,GAEtBqoB,YAAa,SAAU99B,EAAOY,EAAK25B,EAAiBnF,GAChD,GAAIv/B,EAMJ,OAJIA,GADA0kC,GAAmBnF,EACV/7B,KAAK0kC,iBAAiB/9B,EAAOY,EAAK25B,EAAiBnF,GAEnD/7B,KAAK2kC,gBAAgBh+B,EAAOY,EAAK25B,IAIlDqD,MAAO,WAAA,GACCrD,GAAkBlhC,KAAKoc,WAAWwoB,yBAClC7I,EAAkB/7B,KAAKoc,WAAWyoB,yBAClCl+B,EAAQ3G,KAAKoc,WAAW0oB,cACxBv9B,EAAMvH,KAAKoc,WAAW2oB,cACtBx7B,EAASvJ,KAAKykC,YAAY99B,EAAOY,EAAK25B,EAAiBnF,EAC3D/7B,MAAKoc,WAAW7S,OAAOA,IAE3By7B,kBAEQjpC,KAAM,MACNkpC,KAAM,IACNC,YAAa,UACbC,cAAe,IAGfppC,KAAM,OACNkpC,KAAM,IACNC,YAAa,UACbC,cAAe,IAGfppC,KAAM,SACNkpC,KAAM,IACNC,YAAa,cACbC,cAAe,KAGfppC,KAAM,QACNkpC,KAAM,IACNC,YAAa,cACbC,cAAe,KAGvBC,eAAgB,SAAU7P,EAAWwP,GAArB,GASRM,GACAC,EACAL,EACAM,EACKv/B,EAZLoG,EAAWmpB,EAAUnpB,WACrBo5B,EAAcjQ,EAAUjb,MAAMM,OAAOof,IACrCpf,GACAtH,QAASkyB,EAAYlyB,UACrBG,YAAa+xB,EAAY/xB,eAEzBgyB,EAAQzlC,KAAKglC,gBACbrsC,EAAM+C,EAAMwF,KAAK1G,OAKrB,KAASwL,EAAM,EAASy/B,EAAMtrC,OAAZ6L,EAAoBA,IAClCu/B,EAAOE,EAAMz/B,GACbi/B,EAAOM,EAAKN,KACZI,EAAe5kC,KAAKrI,MAAMqI,KAAK4G,IAAI+E,EAAS64B,GAAQrqB,EAAO2qB,EAAKL,aAAaD,KAC1DtsC,EAAf0sC,GACA1sC,EAAM0sC,EACNC,EAAUC,GACHF,IAAiB1sC,IAAQyT,EAAS64B,GAAQF,EAAYE,IAASM,EAAKJ,eAAiB/4B,EAASk5B,EAAQL,MAAQF,EAAYO,EAAQL,OAASK,EAAQH,gBAC1JG,EAAUC,EAGlB,OAAOD,GAAQvpC,MAEnB2pC,kBAAmB,SAAUnQ,GACzB,GAAI3a,GAAS2a,EAAUjb,MAAMM,OAAOof,GACpC,OAAOv5B,MAAK9H,IAAIiiB,EAAOjX,MAAOiX,EAAOhX,QAAU5D,KAAKwkC,0BAExDE,iBAAkB,SAAU/9B,EAAOY,EAAK25B,EAAiBnF,GAAvC,GAOV4J,GAAQC,EANRC,EAAsB7lC,KAAKolC,eAAelE,EAAiB35B,GAC3Du+B,EAAsB9lC,KAAKolC,eAAerJ,EAAiBp1B,GAC3Do/B,EAASx+B,EAAInI,EAAIuH,EAAMvH,EACvB4mC,EAASz+B,EAAIG,EAAIf,EAAMe,EACvBu+B,EAAmBjmC,KAAK0lC,kBAAkBxE,GAC1C1kC,IA6CJ,OA3CIqpC,KAAwBpN,IAAOoN,GAAuBjN,GAClDkN,GAAuBrN,IAAOqN,GAAuBlN,GACjDiN,GAAuBC,GAEnBF,EADAC,GAAuBpN,GACdh4B,KAAK9H,IAAIgO,EAAMe,EAAGH,EAAIG,GAAKu+B,EAE3BxlC,KAAK7H,IAAI+N,EAAMe,EAAGH,EAAIG,GAAKu+B,EAExCzpC,GACI,GAAImN,GAAMhD,EAAMvH,EAAGwmC,GACnB,GAAIj8B,GAAMpC,EAAInI,EAAGwmC,KAGrBppC,GACI,GAAImN,GAAMhD,EAAMvH,EAAGuH,EAAMe,EAAIs+B,EAAS,GACtC,GAAIr8B,GAAMpC,EAAInI,EAAGuH,EAAMe,EAAIs+B,EAAS,IAI5CxpC,GAAU,GAAImN,GAAMhD,EAAMvH,EAAGmI,EAAIG,IAGjCo+B,GAAuBnN,IAAQmN,GAAuBpN,GAClDmN,GAAuBC,GAEnBH,EADAE,GAAuBlN,GACdl4B,KAAK9H,IAAIgO,EAAMvH,EAAGmI,EAAInI,GAAK6mC,EAE3BxlC,KAAK7H,IAAI+N,EAAMvH,EAAGmI,EAAInI,GAAK6mC,EAExCzpC,GACI,GAAImN,GAAMg8B,EAAQh/B,EAAMe,GACxB,GAAIiC,GAAMg8B,EAAQp+B,EAAIG,KAG1BlL,GACI,GAAImN,GAAMhD,EAAMvH,EAAI2mC,EAAS,EAAGp/B,EAAMe,GACtC,GAAIiC,GAAMhD,EAAMvH,EAAI2mC,EAAS,EAAGp/B,EAAMe,EAAIs+B,IAIlDxpC,GAAU,GAAImN,GAAMpC,EAAInI,EAAGuH,EAAMe,IAGlClL,GAEXmoC,gBAAiB,SAAUh+B,EAAOY,EAAK25B,GAAtB,GAYTgF,GACAC,EACKngC,EAbL6/B,EAAsB3E,EAAkBlhC,KAAKolC,eAAelE,EAAiB35B,GAAO,KACpF6+B,EAAyBpmC,KAAKqmC,iBAAiB1/B,EAAOY,EAAKs+B,GAC3Dt8B,GACA5C,EACAA,EACAY,EACAA,GAEAw+B,EAASx+B,EAAInI,EAAIuH,EAAMvH,EACvB4mC,EAASz+B,EAAIG,EAAIf,EAAMe,EACvBvN,EAASoP,EAAOpP,MAGpB,KAAS6L,EAAM,EAAS7L,EAAS,EAAf6L,IAAoBA,EAC9BogC,EACIpgC,EAAM,IAAM,GACZkgC,EAASH,GAAU5rC,EAAS,GAC5BgsC,EAAS,IAETD,EAAS,EACTC,EAASH,IAAW7rC,EAAS,GAAK,IAGlC6L,EAAM,IAAM,GACZkgC,EAAS,EACTC,EAASH,GAAU7rC,EAAS,KAE5B+rC,EAASH,IAAW5rC,EAAS,GAAK,GAClCgsC,EAAS,GAGjB58B,EAAOvD,GAAO,GAAI2D,GAAMJ,EAAOvD,EAAM,GAAG5G,EAAI8mC,EAAQ38B,EAAOvD,EAAM,GAAG0B,EAAIy+B,EAQ5E,OANAngC,KAEIuD,EAAOpP,EAAS,GADhBisC,GAA0BpgC,EAAM,IAAM,IAAMogC,GAA0BpgC,EAAM,IAAM,EAC7D,GAAI2D,GAAMJ,EAAOpP,EAAS,GAAGiF,EAAGmK,EAAOpP,EAAS,GAAGuN,GAEnD,GAAIiC,GAAMJ,EAAOpP,EAAS,GAAGiF,EAAGmK,EAAOpP,EAAS,GAAGuN,IAGxE6B,EAAO,GACPA,EAAO,KAGf88B,iBAAkB,SAAU1/B,EAAOY,EAAK++B,GACpC,GAAIC,EAMJ,OAFIA,GAHe,OAAfD,GAAwBA,IAAe5N,IAAS4N,IAAe3N,GAGlDl4B,KAAK4G,IAAIV,EAAMvH,EAAImI,EAAInI,GAAKqB,KAAK4G,IAAIV,EAAMe,EAAIH,EAAIG,IAFnD,KAOrB0vB,EAAcl1B,EAAME,QACpBC,KAAM,SAAUyF,EAAS5E,GACrB,GAAIwW,GAAO1Z,IACX0Z,GAAK5R,QAAUA,EACf4R,EAAKxW,QAAUvC,KAAe+Y,EAAKxW,QAASA,GAC5CwW,EAAKoS,OAAS,GAAI1B,GAClB1Q,EAAK5R,QAAQ0+B,UAAU5sC,KAAK8f,IAEhC4iB,QAAS,eAGTjF,EAAwBD,EAAYh1B,QACpCC,KAAM,SAAU+Z,EAAYlZ,GAAtB,GACe4E,GAKb2+B,EACAC,EANAhtB,EAAO1Z,IACX0Z,GAAK0C,WAAaA,EAClBtU,EAAU4R,EAAK0C,WAAWtU,QAC1B4R,EAAKitB,IAAM7+B,EAAQk2B,YACnB5G,EAAYnmB,GAAG5O,KAAKoG,KAAKiR,EAAM5R,EAAS5E,GACpCujC,EAAK/sB,EAAK0C,WAAW0oB,cACrB4B,EAAKhtB,EAAK0C,WAAW2oB,cACzBrrB,EAAKktB,SAAW,GAAItc,GAAO3pB,EAAW+Y,EAAKxW,QAAQ2jC,SAAW57B,OAAQw7B,KACtE/sB,EAAKotB,SAAW,GAAIxc,GAAO3pB,EAAW+Y,EAAKxW,QAAQ2jC,SAAW57B,OAAQy7B,KACtEhtB,EAAKoS,OAAO1wB,OAAOse,EAAKktB,UACxBltB,EAAKoS,OAAO1wB,OAAOse,EAAKotB,WAE5B5jC,SAAW2jC,YACXnG,WAAY,WACR,MAAO5I,IAAQvE,MAEnB5sB,MAAO,SAAUlO,GAKb,OAJAuH,KAAKkgC,OAASlgC,KAAKmgC,SAAS1nC,GAC5BuH,KAAKutB,WAAa90B,EAClBuH,KAAK+mC,eAAiB/mC,KAAKoc,WAAWhT,SACtCpJ,KAAKgnC,eAAiBhnC,KAAKoc,WAAWvP,SAC9B7M,KAAKkgC,QACb,IAAK,GACGlgC,KAAKoc,WAAW2f,iBAChB/7B,KAAK2mC,IAAI5F,wBAAwB/gC,KAAKoc,WAAYpc,KAAKoc,WAAW2f,gBAAgBzhB,MAEtF,MACJ,KAAK,GACGta,KAAKoc,WAAW8kB,iBAChBlhC,KAAK2mC,IAAI5F,wBAAwB/gC,KAAKoc,WAAYpc,KAAKoc,WAAW8kB,gBAAgB5mB,SAK9FiZ,KAAM,SAAU2M,EAAQznC,GACpB,OAAQynC,GACR,IAAK,GACDlgC,KAAKoc,WAAWhT,OAAO3Q,EACvB,MACJ,KAAK,GACDuH,KAAKoc,WAAWvP,OAAOpU,EACvB,MACJ,SACI,GAAIkc,GAAQlc,EAAE0Y,MAAMnR,KAAKutB,WACzBvtB,MAAKutB,WAAa90B,EACbuH,KAAKoc,WAAW8kB,iBACjBlhC,KAAKoc,WAAWhT,OAAOpJ,KAAKoc,WAAW0oB,cAAc5zB,KAAKyD,IAEzD3U,KAAKoc,WAAW2f,iBACjB/7B,KAAKoc,WAAWvP,OAAO7M,KAAKoc,WAAW2oB,cAAc7zB,KAAKyD,IAKlE,MADA3U,MAAKs8B,WACE,GAEX11B,KAAM,SAAUnO,GACZ,GAA0DoU,GAAtDo6B,EAAKjnC,KAAK8H,QAAQk2B,YAAa3zB,EAAO48B,EAAG3H,WAe7C,OAbIzyB,GADAo6B,EAAGzH,kBACMyH,EAAGzH,kBAAkBsB,GACvBz2B,GAAQA,YAAgBvC,GAAQq5B,MAC9B92B,EAAK+2B,aAAa5I,KAASnuB,EAAK+2B,aAAa3oC,GAE7CA,EAEO,KAAhBuH,KAAKkgC,OACLlgC,KAAKoc,WAAWhT,OAAOyD,GACA,IAAhB7M,KAAKkgC,QACZlgC,KAAKoc,WAAWvP,OAAOA,GAE3B7M,KAAKkgC,OAASjlC,EACd+E,KAAK2mC,IAAI5F,0BACF,GAAIjL,GAAuB91B,KAAKoc,WAAYpc,KAAK+mC,eAAgB/mC,KAAKgnC,iBAEjF7G,SAAU,SAAU1nC,GAChB,GAAIguC,GAAKzmC,KAAKoc,WAAW0oB,cAAe4B,EAAK1mC,KAAKoc,WAAW2oB,cAAemC,EAAKlnC,KAAKkD,QAAQ2jC,QAAQljC,MAAQ,EAAGwjC,EAAKnnC,KAAKkD,QAAQ2jC,QAAQjjC,OAAS,EAAGwjC,EAAK,GAAIr3B,GAAK02B,EAAGrnC,EAAGqnC,EAAG/+B,GAAG2K,QAAQ60B,EAAIC,GAAKE,EAAK,GAAIt3B,GAAK22B,EAAGtnC,EAAGsnC,EAAGh/B,GAAG2K,QAAQ60B,EAAIC,EACxO,OAAOC,GAAGz7B,SAASlT,GAAK,GAAK4uC,EAAG17B,SAASlT,GAAK,EAAI,GAEtD6jC,QAAS,WACLt8B,KAAK4mC,SAAS1Z,QAASjiB,OAAQjL,KAAK8H,QAAQw/B,aAAatnC,KAAKoc,WAAW0oB,iBACzE9kC,KAAK8mC,SAAS5Z,QAASjiB,OAAQjL,KAAK8H,QAAQw/B,aAAatnC,KAAKoc,WAAW2oB,oBAG7EzN,EAAoBF,EAAYh1B,QAChCC,KAAM,SAAUyF,EAAS5E,GACrB,GAAIwW,GAAO1Z,IACXo3B,GAAYnmB,GAAG5O,KAAKoG,KAAKiR,EAAM5R,EAAS5E,GACxCwW,EAAK6tB,gBAAkB,SAAUphC,GACzBA,EAAEkE,MAAQqP,EAAKY,OACfZ,EAAK4iB,YAIjBvO,KAAM,SAAUzT,GACZ,GAAiBzI,GAAK5X,EAAGutC,EAArB9tB,EAAO1Z,IAOX,KANA0Z,EAAK+pB,UAAW,EAChB/pB,EAAKY,MAAQA,EACbZ,EAAK5R,QAAQu1B,KAAKlE,GAAkBzf,EAAK6tB,iBACzC11B,EAAMyI,EAAMkb,WAAWr7B,OACvBuf,EAAK8b,cACL9b,EAAKoS,OAAOxf,QACPrS,EAAI,EAAO4X,EAAJ5X,EAASA,IACjButC,EAAM,GAAI/P,GAAgBnd,EAAMkb,WAAWv7B,IAC3Cyf,EAAK8b,WAAW57B,KAAK4tC,GACrB9tB,EAAKoS,OAAO1wB,OAAOosC,EAAI1b,OAE3BpS,GAAKoS,OAAOkB,SAAQ,GACpBtT,EAAK4iB,WAETpI,QAAS,WACL,GAAIxa,GAAO1Z,IACX0Z,GAAK5R,QAAQ2/B,OAAOtO,GAAkBzf,EAAK6tB,iBAC3C7tB,EAAKY,MAAQrf,EACbye,EAAK+pB,SAAWxoC,EAChBye,EAAKoS,OAAOkB,SAAQ,IAExBmT,SAAU,SAAU1nC,GAChB,GAAI+uC,GAAKvtC,CACT,KAAKA,EAAI,EAAO+F,KAAKw1B,WAAWr7B,OAApBF,EAA4BA,IAEpC,GADAutC,EAAMxnC,KAAKw1B,WAAWv7B,GAClButC,EAAIrH,SAAS1nC,GAAI,CACjB+uC,EAAIna,QAAO,GACXrtB,KAAK8H,QAAQk2B,YAAYwB,kBAAoBgI,CAC7C,SAIZlL,QAAS,WACL,GAAIt8B,KAAKsa,MAAO,CACZ,GAAIM,GAAS5a,KAAKsa,MAAMM,QACxBA,GAAS5a,KAAK8H,QAAQw/B,aAAa1sB,GACnC5a,KAAK8rB,OAAO1f,SAASwO,EAAOtH,WAC5B7R,EAAEimC,KAAK1nC,KAAKw1B,WAAY,WACpBx1B,KAAKs8B,gBA0BjB/E,EAAkBH,EAAYh1B,QAC9BC,KAAM,SAAUyF,EAAS5E,GACrB,GAAIwW,GAAO1Z,IACXo3B,GAAYnmB,GAAG5O,KAAKoG,KAAKiR,EAAM5R,EAAS5E,GACxCwW,EAAKiuB,eAAgB,EACrBjuB,EAAKpZ,OACLoZ,EAAKsiB,UACLtiB,EAAKkuB,iBACLluB,EAAKmuB,iBACLnuB,EAAKwT,SACLxT,EAAK5R,QAAQu1B,KAAK,SAAU,SAAUl3B,GAClCuT,EAAKujB,YAAY92B,EAAE2hC,YAEvBpuB,EAAK6tB,gBAAkB,WACd7tB,EAAKquB,kBACNruB,EAAK2iB,gBACL3iB,EAAK4iB,YAGb5iB,EAAKsuB,gBAAkB,WACO,GAAtBtuB,EAAKsiB,OAAO7hC,SACZuf,EAAKqjB,OAASrjB,EAAKsiB,OAAO,GAAG5nB,SAASN,OAE1C4F,EAAK6tB,mBAET7tB,EAAK5R,QAAQu1B,KAAKlE,GAAkBzf,EAAK6tB,iBAAiBlK,KAAKnE,GAAYxf,EAAKsuB,iBAChFtuB,EAAK2iB,gBACL3iB,EAAK4iB,WAETp5B,SACI2jC,SACIzgB,MAAQxpB,MAAO,QACf+wB,QAAU/wB,MAAO,WACjBgH,OAAQ,EACRD,MAAO,EACPqqB,OACI5H,MAAQxpB,MAAO,WACf+wB,QAAU/wB,MAAO,aAGzBqjC,YACItS,QACI/wB,MAAO,UACP+G,MAAO,EACPuqB,SAAU,QAEd9H,MAAQxpB,MAAO8rB,KAEnBtX,OAAQ,IAEZw2B,eAAgB,WAAA,GACRluB,GAAO1Z,KACP8H,EAAU4R,EAAK5R,QACfm4B,EAAan4B,EAAQ5E,QAAQ+8B,WAC7B/8B,EAAUvC,KAAe+Y,EAAKxW,QAAQ+8B,WAAYA,EACtDvmB,GAAK9F,KAAO,GAAI+V,GAAUzmB,GAC1BwW,EAAKoS,OAAO1wB,OAAOse,EAAK9F,OAE5Bq0B,WAAY,WACR,MAAOjoC,MAAKkD,QAAQkyB,UAAYp1B,KAAKkD,QAAQkyB,SAAS8S,UAAW,GAErEC,eAAgB,WACZ,OAAQnoC,KAAKkD,QAAQkyB,SAAS8S,YAAcrB,SAAW7mC,KAAKkD,QAAQ2jC,SAExEgB,eAAgB,WACZ,GAAIhB,GAASx8B,EAAM3C,EAAGtI,CACtB,IAAIY,KAAKioC,aAEL,IADApB,EAAU7mC,KAAKmoC,iBACV/oC,EAAI,GAAS,GAALA,EAAQA,IACjB,IAAKsI,EAAI,GAAS,GAALA,EAAQA,KACP,IAANtI,GAAiB,IAANsI,KACX2C,EAAO,GAAIsf,GAAUkd,GACrBx8B,EAAK8iB,eAAeE,OAASwK,GAAM73B,KAAKqtB,OAAQrtB,MAChDA,KAAKM,IAAI1G,MACLwF,EAAGA,EACHsI,EAAGA,EACHokB,OAAQzhB,IAEZrK,KAAK8rB,OAAO1wB,OAAOiP,KAMvCuQ,OAAQ,SAAU1iB,GACd,MAAIA,IACA8H,KAAKg9B,aAAe9kC,EAAMwb,QAC1B1T,KAAKooC,QAAUpoC,KAAK8H,QAAQw/B,aAAapvC,GAAOma,QAAQrS,KAAKkD,QAAQkO,OAAQpR,KAAKkD,QAAQkO,QAD1FpR,GAGOA,KAAKooC,SAGpBjI,SAAU,SAAU1nC,GAChB,GAAuCwB,GAAGi7B,EAAKmT,EAA8CnI,EAAzFwG,EAAK1mC,KAAK8H,QAAQw/B,aAAa7uC,GAA0B6vC,EAAetoC,KAAKM,IAAInG,MAIrF,IAHI6F,KAAK+8B,SACL2J,EAAKA,EAAGhzB,QAAQU,OAAOpU,KAAKooC,QAAQn9B,SAAUjL,KAAK+8B,SAEnD/8B,KAAKioC,aACL,IAAKhuC,EAAI,EAAOquC,EAAJruC,EAAkBA,IAK1B,GAJAimC,EAASlgC,KAAKM,IAAIrG,GAClBi7B,EAAM,GAAIvrB,GAAMu2B,EAAO9gC,EAAG8gC,EAAOx4B,GACjC2gC,EAAeroC,KAAKuoC,iBAAiBrT,GACrCmT,EAAaj3B,OAAOpR,KAAKooC,QAAQhpC,EAAGY,KAAKooC,QAAQ1gC,GAC7C2gC,EAAa18B,SAAS+6B,GACtB,MAAOxR,EAInB,OAAIl1B,MAAKooC,QAAQz8B,SAAS+6B,GACf,GAAI/8B,GAAM,EAAG,GADxB,GAIJ4+B,iBAAkB,SAAU9vC,GACxB,GAAIuH,KAAKioC,aAAc,CACnB,GAAIpB,GAAU7mC,KAAKmoC,iBAAkBnrB,EAAI6pB,EAAQljC,MAAOiK,EAAIi5B,EAAQjjC,OAAQ7E,EAAI,GAAIgR,GAAK,EAAG,EAAGiN,EAAGpP,EAelG,OAdU,GAANnV,EAAE2G,EACFL,EAAEK,GAAK4d,EAAI,EACI,IAARvkB,EAAE2G,EACTL,EAAEK,EAAIqB,KAAKuJ,MAAMhK,KAAKooC,QAAQzkC,MAAQ,GAAKqZ,EAAI,EACxCvkB,EAAE2G,EAAI,IACbL,EAAEK,EAAIY,KAAKooC,QAAQzkC,MAAQ,EAAIqZ,EAAI,GAE7B,EAANvkB,EAAEiP,EACF3I,EAAE2I,GAAKkG,EAAI,EACI,IAARnV,EAAEiP,EACT3I,EAAE2I,EAAIjH,KAAKuJ,MAAMhK,KAAKooC,QAAQxkC,OAAS,GAAKgK,EAAI,EACzCnV,EAAEiP,EAAI,IACb3I,EAAE2I,EAAI1H,KAAKooC,QAAQxkC,OAAS,EAAIgK,EAAI,GAEjC7O,IAGf2hC,WAAY,SAAU7tB,GAAV,GAGAiB,GAFJohB,EAAMl1B,KAAKmgC,SAASttB,EACxB,IAAIqiB,GAAOA,EAAI91B,GAAK,IAAe,GAAT81B,EAAI91B,GAAU81B,EAAIxtB,GAAK,IAAe,GAATwtB,EAAIxtB,GAAU1H,KAAKioC,aAAc,CAOpF,GANIn0B,EAAQ9T,KAAK+8B,OACbjpB,IACAA,EAAQ,IAAMA,EACdohB,EAAI9gB,OAAO,GAAIzK,GAAM,EAAG,GAAImK,GAC5BohB,EAAM,GAAIvrB,GAAMlJ,KAAKrI,MAAM88B,EAAI91B,GAAIqB,KAAKrI,MAAM88B,EAAIxtB,KAEzC,IAATwtB,EAAI91B,GAAoB,IAAT81B,EAAIxtB,EACnB,MAAO,WAEX,IAAa,GAATwtB,EAAI91B,GAAmB,GAAT81B,EAAIxtB,EAClB,MAAO,WAEX,IAAa,IAATwtB,EAAI91B,GAAoB,GAAT81B,EAAIxtB,EACnB,MAAO,WAEX,IAAa,GAATwtB,EAAI91B,GAAmB,IAAT81B,EAAIxtB,EAClB,MAAO,WAEX,IAAc,IAAVwtB,EAAI91B,GAAoB,IAAT81B,EAAIxtB,EACnB,MAAO,UAEX,IAAc,IAAVwtB,EAAI91B,GAAoB,GAAT81B,EAAIxtB,EACnB,MAAO,UAEX,IAAa,GAATwtB,EAAI91B,GAAoB,IAAV81B,EAAIxtB,EAClB,MAAO,UAEX,IAAa,IAATwtB,EAAI91B,GAAqB,IAAV81B,EAAIxtB,EACnB,MAAO,WAGf,MAAO1H,MAAK2nC,cAAgB7P,GAAQvE,KAAOuE,GAAQtD,QAEvDyI,YAAa,WACT,GAAiBhjC,GAAGoQ,EAAhBqP,EAAO1Z,KAAek9B,EAAQxjB,EAAK5R,QAAQ0sB,QAE/C,KADA9a,EAAKsiB,UACA/hC,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BoQ,EAAO6yB,EAAMjjC,GACToQ,YAAgBvC,GAAQq5B,QACxBznB,EAAKsiB,OAAOpiC,KAAKyQ,GACjBA,EAAKm+B,gBAAkB,GAAI7+B,GAGnC+P,GAAKqjB,OAA+B,GAAtBrjB,EAAKsiB,OAAO7hC,OAAcuf,EAAKsiB,OAAO,GAAG5nB,SAASN,MAAQ,EACxE4F,EAAK+uB,YAAc/uB,EAAKqjB,OACxBrjB,EAAKgvB,WACLhvB,EAAKivB,aACLjvB,EAAK2iB,gBACL3iB,EAAK4iB,UACL5iB,EAAKwT,UAETwb,SAAU,WACN,GAAiBzuC,GAAGqgB,EAAhBZ,EAAO1Z,IAEX,KADA0Z,EAAKkvB,kBACA3uC,EAAI,EAAOyf,EAAKsiB,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQZ,EAAKsiB,OAAO/hC,GACpByf,EAAKkvB,eAAehvC,KAAK0gB,EAAMlG,SAASN,QAGhD60B,WAAY,WACR,GAAiB1uC,GAAGqgB,EAAhBZ,EAAO1Z,IAEX,KADA0Z,EAAKmvB,iBACA5uC,EAAI,EAAOyf,EAAKsiB,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQZ,EAAKsiB,OAAO/hC,GACpByf,EAAKmvB,cAAcjvC,KAAK0gB,EAAMM,WAGtCyS,OAAQ,SAAUn1B,EAAOsN,GACrB,GAAIxF,KAAKioC,aAAc,CACnB,GAAIa,GAAgB9oC,KAAKmoC,iBAAkBna,EAAQ8a,EAAc9a,MAAOL,EAASmb,EAAcnb,OAAQvH,EAAO0iB,EAAc1iB,IACxHluB,IAASgP,EAAMiB,UAAU6lB,EAAML,UAC/BA,EAAShtB,KAAegtB,EAAQK,EAAML,SAEtCz1B,GAASgP,EAAMiB,UAAU6lB,EAAM5H,QAC/BA,EAAO4H,EAAM5H,MAEjB5gB,EAAQmoB,OAAOA,EAAO/wB,MAAO+wB,EAAOhqB,MAAOgqB,EAAOC,SAClDpoB,EAAQ4gB,KAAKA,EAAKxpB,MAAOwpB,EAAKwH,WAGtCjnB,MAAO,SAAUlO,GAAV,GAOMwB,GACDqgB,CADR,KANAta,KAAK+oC,IAAMtwC,EACXuH,KAAKgpC,IAAMvwC,EACXuH,KAAKipC,IAAMxwC,EACXuH,KAAK2nC,eAAgB,EACrB3nC,KAAK+nC,iBAAkB,EACvB/nC,KAAKkpC,eACIjvC,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACxB+F,KAAKkpC,YAAYtvC,KAAK0gB,EAAMM,WAGpCsS,OAAQ,WACJ,GAAIjzB,GAAGimC,EAAQiJ,EAAiBnpC,KAAKioC,YACrC,KAAKhuC,EAAI,EAAO+F,KAAKM,IAAInG,OAAbF,EAAqBA,IAC7BimC,EAASlgC,KAAKM,IAAIrG,GAClBimC,EAAOpU,OAAOkB,QAAQmc,IAG9Br1B,MAAO,SAAU5b,GAIb,MAHID,IAAQC,KACR8H,KAAK+8B,OAAS7kC,GAEX8H,KAAK+8B,QAEhB3oB,OAAQ,WAAA,GAIKna,GACDqgB,EAJJrP,EAASjL,KAAKg9B,aAAa/xB,SAC3Bm+B,EAAeppC,KAAK8T,OAExB,KADA9T,KAAK+nC,iBAAkB,EACd9tC,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACxBmvC,GAAgBA,EAAeppC,KAAK4oC,eAAe3uC,GAAK+F,KAAKyoC,aAAe,IAC5EnuB,EAAMlG,OAAOg1B,EAAcn+B,EAE/BjL,MAAKs8B,WAET/I,KAAM,SAAU2M,EAAQznC,GAAlB,GACEkc,GAAO00B,EAAgDzuB,EAAQ3P,EAAQqP,EAAOrgB,EAAG6Z,EAAOw1B,EAAwBC,EAAah1B,EAAQC,EAgB7Hg1B,EA4CIC,EAKAC,EAjEKC,EAAM,GAAIhgC,GAASigC,EAAM,GAAIjgC,GAAqDkgC,EAAU,CACjH,IAAiB,KAAb3J,EAAOx4B,GAAyB,KAAbw4B,EAAO9gC,EAAU,CAGpC,IAFA6L,EAASjL,KAAKg9B,aAAa/xB,SAC3BjL,KAAK+8B,OAAS/8B,KAAK8pC,eAAe5iC,EAAM8D,UAAUC,EAAQxS,IACrDwB,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACpB6Z,GAAS9T,KAAK+8B,OAAS/8B,KAAK4oC,eAAe3uC,GAAK+F,KAAKyoC,aAAe,IACpEnuB,EAAMlG,OAAON,EAAO7I,GAChBqP,EAAM9R,eAAe,WACrB8R,EAAM8hB,OAAO9hB,GAEjBta,KAAK+pC,WAAY,CAErB/pC,MAAKs8B,cACF,CACH,GAAIt8B,KAAKgqC,aAAc,CAEnB,GADIR,EAAMxpC,KAAKiqC,kBAAkBxxC,EAAE0Y,MAAMnR,KAAKipC,MAChC,IAAVO,EAAIpqC,GAAqB,IAAVoqC,EAAI9hC,EAEnB,MADA1H,MAAKgpC,IAAMvwC,EACX,CAEJkc,GAAQ60B,EACRxpC,KAAKipC,IAAM,GAAIt/B,GAAM3J,KAAKipC,IAAI7pC,EAAIoqC,EAAIpqC,EAAGY,KAAKipC,IAAIvhC,EAAI8hC,EAAI9hC,OAE1DiN,GAAQlc,EAAE0Y,MAAMnR,KAAKgpC,IAyBzB,KAvBIhpC,KAAKqgC,aAAaH,IAClB0J,EAAMD,EAAMh1B,EACZ00B,GAAW,IAEPrpC,KAAK+8B,QACLpoB,EAAMP,OAAO,GAAIzK,GAAM,EAAG,GAAI3J,KAAK+8B,QAEvB,IAAZmD,EAAO9gC,EACPuqC,EAAIvqC,EAAIuV,EAAMvV,EACK,GAAZ8gC,EAAO9gC,IACdwqC,EAAIxqC,EAAIuV,EAAMvV,GAEF,IAAZ8gC,EAAOx4B,EACPiiC,EAAIjiC,EAAIiN,EAAMjN,EACK,GAAZw4B,EAAOx4B,IACdkiC,EAAIliC,EAAIiN,EAAMjN,IAGjB2hC,IACDE,EAActU,EAAkBiL,EAAQlgC,KAAKg9B,cAC7CzoB,GAAUvU,KAAKg9B,aAAar5B,MAAQgR,EAAMvV,EAAI8gC,EAAO9gC,GAAKY,KAAKg9B,aAAar5B,MAC5E6Q,GAAUxU,KAAKg9B,aAAap5B,OAAS+Q,EAAMjN,EAAIw4B,EAAOx4B,GAAK1H,KAAKg9B,aAAap5B,QAE5E3J,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAAK,CAGrC,GAFAqgB,EAAQta,KAAKg8B,OAAO/hC,GACpB2gB,EAASN,EAAMM,SACXyuB,EAAU,CACV,IAAKlU,EAAQ7a,GACT,QAEJgvB,GAAYtpC,KAAKkqC,gBAAgBtvB,EAAQ+uB,EAAKC,EAAKP,OAEnDC,GAAY1uB,EAAOlH,QACnB41B,EAAUh1B,MAAMC,EAAQC,EAAQ+0B,EAAavpC,KAAKg9B,aAAa/xB,SAAUqP,EAAMlG,SAASN,OACpF21B,EAAYH,EAAUr+B,SAC1Bw+B,EAAUr1B,OAAOwG,EAAO3P,UAAWjL,KAAK+8B,QACxCuM,EAAY,GAAIv5B,GAAK05B,EAAUrqC,EAAIkqC,EAAU3lC,MAAQ,EAAG8lC,EAAU/hC,EAAI4hC,EAAU1lC,OAAS,EAAG0lC,EAAU3lC,MAAO2lC,EAAU1lC,OAEvH0lC,GAAU3lC,OAAS2W,EAAMpX,QAAQinC,UAAYb,EAAU1lC,QAAU0W,EAAMpX,QAAQknC,YAC3EV,EAAY9uB,EAChBN,EAAMM,OAAO0uB,GACThvB,EAAM9R,eAAe,WACrB8R,EAAM8hB,OAAO9hB,EAAOovB,EAAWJ,IAE/BI,EAAU/lC,QAAU2lC,EAAU3lC,OAAS+lC,EAAU9lC,SAAW0lC,EAAU1lC,SACtE0W,EAAMlG,OAAOkG,EAAMlG,SAASN,OAEhC+1B,GAAW,GAGfA,IACIA,GAAW5vC,GACXqvC,EAAYtpC,KAAKkqC,gBAAgBlqC,KAAKg9B,aAAc2M,EAAKC,EAAKP,GAC9DrpC,KAAK4a,OAAO0uB,IAEZtpC,KAAKq8B,gBAETr8B,KAAKs8B,WAETt8B,KAAK2oC,aAET3oC,KAAKgpC,IAAMvwC,GAEf4nC,aAAc,SAAUH,GACpB,MAAoB,KAAbA,EAAO9gC,GAAwB,IAAb8gC,EAAOx4B,GAEpCg2B,OAAQ,WAAA,GAGK13B,GAFLg2B,EAASh8B,KAAKg8B,OACdqO,EAASrqC,KAAKkpC,WAClB,KAASljC,EAAM,EAASg2B,EAAO7hC,OAAb6L,EAAqBA,IACnCg2B,EAAOh2B,GAAK4U,OAAOyvB,EAAOrkC,GAE9BhG,MAAKq8B,gBACLr8B,KAAKs8B,UACLt8B,KAAK2nC,cAAgB1sC,EACrB+E,KAAK+nC,gBAAkB9sC,EACvB+E,KAAK+pC,UAAY9uC,GAErBqvC,0BAA2B,SAAU1vB,GACjC,MAAI5a,MAAK8H,QAAQyiC,MACNvqC,KAAK8H,QAAQyiC,MAAMC,yBAAyB5vB,GAEhDA,GAEX6vB,sBAAuB,SAAU7vB,GAC7B,MAAI5a,MAAK8H,QAAQyiC,MACNvqC,KAAK8H,QAAQyiC,MAAMG,qBAAqB9vB,GAE5CA,GAEXkvB,eAAgB,SAAUj/B,GAAV,GACR8/B,GAAO3qC,KAAK4qC,cACZC,EAAYpqC,KAAK7H,IAAI+xC,EAAK72B,OAASglB,GAAoBO,GAC3D,OAAOsR,GAAOlqC,KAAKuJ,MAAMa,EAAI,IAAMggC,GAAaA,EAAYhgC,EAAI,KAEpEo/B,kBAAmB,SAAU1qC,GAAV,GAIPorC,GACAG,CAJR,OAAIvrC,aAAauI,GAAQ6B,MACd,GAAI7B,GAAQ6B,MAAM3J,KAAKiqC,kBAAkB1qC,EAAEH,GAAIY,KAAKiqC,kBAAkB1qC,EAAEmI,KAE3EijC,EAAO3qC,KAAK4qC,kBACZE,EAAWrqC,KAAK7H,IAAI+xC,EAAKtuC,MAAQw8B,GAAmBO,IACjDuR,EAAOlqC,KAAKuJ,MAAMzK,EAAIurC,GAAYA,EAAWvrC,IAG5DqrC,YAAa,WAAA,GACLxV,GAAWp1B,KAAK8H,QAAQ5E,QAAQkyB,SAChCuV,IAASvV,OAAgBC,UAAYsV,QACzC,OAAOA,IAEXX,WAAY,WAAA,GACJ5U,GAAWp1B,KAAK8H,QAAQ5E,QAAQkyB,SAChCC,GAAQD,OAAgBC,KACxBsV,GAAQtV,OAAYsV,IACxB,OAAOvV,MAAa,GAASC,KAAS,GAASsV,KAAS,GAE5DT,gBAAiB,SAAUtvB,EAAQ+uB,EAAKC,EAAKP,GACzC,GAA+GI,GAA3Gz1B,EAAK4G,EAAOtH,UAAUpC,KAAKy4B,GAAMz1B,EAAK0G,EAAOnH,cAAcvC,KAAK04B,GAAMN,EAAYv5B,EAAKqF,WAAWpB,EAAIE,EAM1G,OALKm1B,KACDI,EAAYH,EAAUr+B,SACtBw+B,EAAUr1B,OAAOwG,EAAO3P,UAAWjL,KAAK+8B,QACxCuM,EAAY,GAAIv5B,GAAK05B,EAAUrqC,EAAIkqC,EAAU3lC,MAAQ,EAAG8lC,EAAU/hC,EAAI4hC,EAAU1lC,OAAS,EAAG0lC,EAAU3lC,MAAO2lC,EAAU1lC,SAEpH0lC,GAEX1iC,KAAM,WAAA,GACEwQ,GAAMnd,EAAGqgB,EASOM,CARpB,IAAI5a,KAAKgpC,KAAOhpC,KAAK+oC,IACjB,GAAI/oC,KAAK+pC,UACL3yB,EAAO,GAAIif,GAAWr2B,KAAMA,KAAKg8B,OAAQh8B,KAAK4oC,gBAC9C5oC,KAAK+pC,WAAY,MACd,IAAI/pC,KAAK+qC,cAAe,CAC3B,GAAI/qC,KAAK8H,QAAQyiC,MACb,IAAKtwC,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GAChB2gB,EAASN,EAAMM,SACnBA,EAAS5a,KAAKyqC,sBAAsBzqC,KAAKsqC,0BAA0B1vB,IACnEN,EAAMM,OAAOA,GACb5a,KAAKq8B,gBACLr8B,KAAKs8B,SAGb,KAAKriC,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GACpBqgB,EAAMshB,aAEVxkB,GAAO,GAAI6e,GAAcj2B,KAAKg8B,OAAQh8B,KAAKkpC,YAAalpC,MACxDA,KAAK8H,QAAQkjC,oBAMrB,MAHAhrC,MAAK2nC,cAAgB1sC,EACrB+E,KAAK+nC,gBAAkB9sC,EACvB+E,KAAK+pC,UAAY9uC,EACVmc,GAEX2zB,YAAa,WAAA,GAGA/kC,GAFLg2B,EAASh8B,KAAKg8B,OACdqO,EAASrqC,KAAKkpC,WAClB,KAASljC,EAAM,EAASg2B,EAAO7hC,OAAb6L,EAAqBA,IACnC,IAAKg2B,EAAOh2B,GAAK4U,SAASjH,OAAO02B,EAAOrkC,IACpC,OAAO,CAGf,QAAO,GAEXq2B,cAAe,WACX,GAAIzhB,GAA+B,GAAtB5a,KAAKg8B,OAAO7hC,OAAc6F,KAAKg8B,OAAO,GAAGphB,SAASlH,QAAU1T,KAAK8H,QAAQirB,YAAY/yB,KAAKg8B,QAAQ,EAC/Gh8B,MAAK4a,OAAOA,IAEhB0hB,QAAS,WAAA,GACY7xB,GAAGmQ,EAUZ3P,EAOIggC,EAjBRvxB,EAAO1Z,IACPA,MAAKg8B,OAAO7hC,OAAS,GACrBygB,EAAS5a,KAAK4a,SACd5a,KAAK8rB,OAAOkB,SAAQ,GACpBhtB,KAAK8rB,OAAO1f,SAASwO,EAAOtH,WAC5B7R,EAAEimC,KAAK1nC,KAAKM,IAAK,WACbmK,EAAIiP,EAAK6uB,iBAAiB,GAAI5+B,GAAM3J,KAAKZ,EAAGY,KAAK0H,IACjD1H,KAAK8rB,OAAO1f,SAAS3B,EAAE6I,aAE3BtT,KAAK8rB,OAAO1f,SAASwO,EAAOtH,WACxBrI,EAAS,GAAItB,GAAMiR,EAAOjX,MAAQ,EAAGiX,EAAOhX,OAAS,GACzD5D,KAAK8rB,OAAO1X,OAAOpU,KAAK+8B,OAAQ9xB,GAChCjL,KAAK4T,KAAKsZ,QACNvpB,MAAOiX,EAAOjX,MACdC,OAAQgX,EAAOhX,SAEf5D,KAAKkrC,gBACDD,EAAQjrC,KAAKkD,QAAQkyB,SAAShhB,OAAO62B,MACzCjrC,KAAKmrC,qBAAuB,GAAIp7B,GAAK6K,EAAO3P,SAAS7L,EAAGwb,EAAOlT,EAAIujC,EAAMvjC,EAAG,EAAG,GAAG2K,QAAQ44B,EAAMtnC,OAChG3D,KAAKkrC,cAAche,QAAS9tB,EAAGwb,EAAOjX,MAAQ,EAAIsnC,EAAMtnC,MAAQ,MAGpE3D,KAAK8rB,OAAOkB,SAAQ,MAI5BwK,EAAWt1B,EAAME,QACjBC,KAAM,SAAUyF,GACZ,GAAIm4B,GAAan4B,EAAQ5E,QAAQ+8B,UACjCjgC,MAAKkD,QAAUvC,KAAeX,KAAKkD,QAAS+8B,GAC5CjgC,KAAK8rB,OAAS,GAAInC,GAAU3pB,KAAKkD,SACjClD,KAAK8H,QAAUA,GAEnB5E,SACIyqB,QACI/wB,MAAO,UACP+G,MAAO,EACPuqB,SAAU,QAEd9H,MAAQxpB,MAAO8rB,KAEnB/hB,MAAO,SAAUlO,GACbuH,KAAK+oC,IAAM/oC,KAAKorC,IAAM3yC,EACtBuH,KAAKs8B,UACLt8B,KAAK8H,QAAQujC,OAAOrrC,MAAM,IAE9BuH,IAAK,WACDvH,KAAK+oC,IAAM/oC,KAAKorC,IAAMnwC,EACtB+E,KAAK8H,QAAQujC,OAAOrrC,MAAM,IAE9B4a,OAAQ,SAAU1iB,GAId,MAHIA,KACA8H,KAAKooC,QAAUlwC,GAEZ8H,KAAKooC,SAEhB7U,KAAM,SAAU96B,GACZuH,KAAKorC,IAAM3yC,EACXuH,KAAKs8B,WAETA,QAAS,WACL,GAAIt8B,KAAK+oC,IAAK,CACV,GAAIuC,GAAev7B,EAAKqF,WAAWpV,KAAK8H,QAAQw/B,aAAatnC,KAAK+oC,KAAM/oC,KAAK8H,QAAQw/B,aAAatnC,KAAKorC,KACvGprC,MAAK4a,OAAO7K,EAAKqF,WAAWpV,KAAK+oC,IAAK/oC,KAAKorC,MAC3CprC,KAAK8rB,OAAO1f,SAASk/B,EAAah4B,WAClCtT,KAAK8rB,OAAOoB,QACRtpB,OAAQ0nC,EAAa1nC,OAAS,EAC9BD,MAAO2nC,EAAa3nC,MAAQ,QAKxC8zB,EAAkBv1B,EAAME,QACxBC,KAAM,SAAUkzB,GACZv1B,KAAKkD,QAAUvC,KAAe40B,EAAUryB,SACxClD,KAAK8gC,GAAKvL,EACVv1B,KAAK8rB,OAAS,GAAIxB,GAAOtqB,KAAKkD,SAC9BlD,KAAKs8B,WAETjP,OAAQ,SAAUn1B,GACd,GAAIgL,GAAUlD,KAAKkD,QAAS8qB,EAAQ9qB,EAAQ8qB,MAAOL,EAASzqB,EAAQyqB,OAAQvH,EAAOljB,EAAQkjB,IACvFluB,IAASgP,EAAMiB,UAAU6lB,EAAML,UAC/BA,EAAShtB,KAAegtB,EAAQK,EAAML,SAEtCz1B,GAASgP,EAAMiB,UAAU6lB,EAAM5H,QAC/BA,EAAO4H,EAAM5H,MAEjBpmB,KAAK8rB,OAAOoB,QACRS,OAAQA,EACRvH,KAAMA,KAGdkW,QAAS,WACL,GAAI7jC,GAAIuH,KAAK8gC,GAAGxmB,MAAMxS,QAAQyjC,YAAYvrC,KAAK8gC,GAAG10B,YAAao/B,EAAW/yC,EAAE0Y,MAAMnR,KAAK8gC,GAAGxmB,MAAMM,OAAO,eAAetH,WAAYpb,EAAQ,GAAI6X,GAAKtX,EAAE2G,EAAG3G,EAAEiP,EAAG,EAAG,EAChKxP,GAAMma,QAAQrS,KAAKkD,QAAQS,MAAQ,EAAG3D,KAAKkD,QAAQU,OAAS,GAC5D5D,KAAKyrC,cAAgBvzC,EACrB8H,KAAK8rB,OAAOoB,QAASjiB,OAAQ,GAAItB,GAAM6hC,EAASpsC,EAAGosC,EAAS9jC,MAEhEy4B,SAAU,SAAU1nC,GAChB,GAAIiuC,GAAK1mC,KAAK8gC,GAAGxmB,MAAMxS,QAAQyjC,YAAY9yC,EAC3C,OAAOuH,MAAKyrC,cAAc9/B,SAAS+6B,MAmB3C/lC,EAAWmH,GACP8tB,cAAeA,EACfK,cAAeA,EACfG,YAAaA,EACbD,aAAcA,EACdD,kBAAmBA,EACnBF,gBAAiBA,EACjBD,qBAAsBA,EACtBsB,sBAAuBA,EACvBR,eAAgBA,EAChBY,gBAAiBA,EACjBjB,gBAAiBA,EACjBe,gBAAiBA,EACjBC,SAAUA,EACVT,YAAaA,EACbO,kBAAmBA,EACnB3B,eAAgBA,EAChBE,mBAAoBA,EACpBS,YAAaA,EACbC,WAAYA,EACZS,qBAAsBA,EACtBE,eAAgBA,EAChBC,gBAAiBA,EACjBP,cAAeA,EACfF,aAAcA,EACdC,YAAaA,EACbG,mBAAoBA,EACpBT,WAAYA,KAElB31B,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,0BAA2B,wBAAyBD,IAC7D,YACG,SAAU0J,EAAGxG,GAAb,GACOS,GAAQgF,OAAOhF,MAAOoM,EAAUpM,EAAM0F,QAAQ0G,QAAS+I,EAAQ/I,EAAQ+I,MAAOF,EAAO7I,EAAQ6I,KAAMC,EAAO9I,EAAQ8I,KAAMjQ,EAAajF,EAAMiF,WAAYqP,EAAOlI,EAAQkI,KAAMD,EAAOjI,EAAQiI,KAAMS,EAAa1I,EAAQ0I,WAAYE,EAAM5I,EAAQ4I,IAAKg7B,EAAY5jC,EAAQ+I,MAAO3J,EAAQY,EAAQZ,MAAOyC,EAAQ7B,EAAQ6B,MAAO3B,EAAU,KAAUjP,EAAa0H,KAAKG,GAAK,IAAK+K,EAAWzE,EAAMyE,SAAUgC,EAAOlM,EAAEkM,KAClZg+B,EAAajwC,EAAMwG,MAAME;AACzBwpC,gBACI7iC,KAAM,OACN8iC,QAAS,OACTC,MAAO,KACPrR,SAAS,EACTpT,aAAa,EACbkX,SAAU,GACVwN,aAAc,GACdC,WAAY,IACZC,qBAAsB,GACtBC,mBAAoB,GACpBC,4BAA6B,GAC7BC,2BAA4B,GAC5BC,6BAA8B,GAC9BC,MACI3oC,MAAO,KACP4oC,QAAS,GACTC,QAAS,GACTC,kBAAmB,GACnBC,kBAAmB,IAEvBC,gBAAiB,GACjBC,kBAAmB,EACnBC,iBAAkB,EAClBC,eAAgB,IAChBC,iBAAkB,IAClBC,2BAA4B,IAC5BC,iCAAiC,EACjCC,kBAAkB,EAClBC,yBAAyB,EACzBC,iBAAiB,EACjBC,oBAAoB,GAExBhrC,KAAM,aAENirC,qBAAsB,SAAUhvB,GAAV,GAUdivB,GAAoChB,EAA+CC,EAA+C5oC,EAAY4pC,EAAoCC,EAAoCruC,EAAYsI,EAAYzN,EAAGyzC,EAAoBC,EAOjQjrB,EAQAkrB,EACAC,EAIAC,CA7BR,KAAKxvB,EACD,KAAM,yBASV,KAPApX,EAAMgE,QAAQoT,EAAY,SAAUhf,GAChCA,EAAEyf,eAENT,EAAWzkB,KAAK,SAAUgR,EAAGJ,GACzB,MAAOA,GAAEmQ,OAAOjX,MAAQkH,EAAE+P,OAAOjX,QAEjC4pC,EAAWvtC,KAAKkD,QAAQopC,KAAK3oC,MAAO4oC,EAAUvsC,KAAKkD,QAAQopC,KAAKG,kBAAmBD,EAAUxsC,KAAKkD,QAAQopC,KAAKI,kBAAmB9oC,EAAS,EAAG4pC,EAASxtC,KAAKkD,QAAQopC,KAAKC,QAASkB,EAASztC,KAAKkD,QAAQopC,KAAKE,QAASptC,EAAIouC,EAAQ9lC,EAAI+lC,EAAWC,KAAoBC,KAClQrvB,EAAWnkB,OAAS,GAAG,CAQ1B,IAPIiF,GAAKmuC,IACLnuC,EAAIouC,EACJ9lC,GAAK9D,EAAS4oC,EACd5oC,EAAS,GAET8e,EAAYpE,EAAWmB,MAC3Bzf,KAAK+tC,aAAarrB,EAAW,GAAI/Y,GAAMvK,EAAGsI,IACrCzN,EAAI,EAAOyoB,EAAUnF,MAAMpjB,OAApBF,EAA4BA,IACpC0zC,EAAc/zC,KAAK8oB,EAAUnF,MAAMtjB,GAEvC,KAAKA,EAAI,EAAOyoB,EAAUnI,MAAMpgB,OAApBF,EAA4BA,IACpCyzC,EAAc9zC,KAAK8oB,EAAUnI,MAAMtgB,GAEnC2zC,GAAelrB,EAAU9H,OACzBizB,EAAgBD,EAAahqC,QACZ,GAAjBiqC,GAAsBz0C,MAAMy0C,MAC5BA,EAAgB,GAEhBC,EAAeF,EAAajqC,OACZ,GAAhBmqC,GAAqB10C,MAAM00C,MAC3BA,EAAe,GAEfD,GAAiBjqC,IACjBA,EAASiqC,GAEbzuC,GAAK0uC,EAAevB,EAExB,OACIhvB,MAAOowB,EACPpzB,MAAOmzB,IAGfK,aAAc,SAAUrrB,EAAWjqB,GAArB,GACNwB,GAAGgN,EAECiU,EACA8yB,EASA7yB,EAEI8yB,EACA1kC,EAEI2kC,EAjBNtzB,EAAS8H,EAAU9H,OAAQuzB,EAAS11C,EAAE2G,EAAIwb,EAAOxb,EAAGgvC,EAAS31C,EAAEiP,EAAIkT,EAAOlT,CACpF,KAAKzN,EAAI,EAAOyoB,EAAUnF,MAAMpjB,OAApBF,EAA4BA,IAChCihB,EAAOwH,EAAUnF,MAAMtjB,GACvB+zC,EAAa9yB,EAAKN,SACG,IAArBozB,EAAWrqC,OAAqC,IAAtBqqC,EAAWpqC,QAAiC,IAAjBoqC,EAAW5uC,GAA4B,IAAjB4uC,EAAWtmC,IACtFsmC,EAAa,GAAIj+B,GAAK,EAAG,EAAG,EAAG,IAEnCi+B,EAAW5uC,GAAK+uC,EAChBH,EAAWtmC,GAAK0mC,EAChBlzB,EAAKN,OAAOozB,EAEhB,KAAK/zC,EAAI,EAAOyoB,EAAUnI,MAAMpgB,OAApBF,EAA4BA,IAEpC,GADIkhB,EAAOuH,EAAUnI,MAAMtgB,GACvBkhB,EAAK5R,OAAQ,CAGb,IAFI0kC,KACA1kC,EAAS4R,EAAK5R,OACbtC,EAAI,EAAOsC,EAAOpP,OAAX8M,EAAmBA,IACvBinC,EAAK3kC,EAAOtC,GAChBinC,EAAG9uC,GAAK+uC,EACRD,EAAGxmC,GAAK0mC,EACRH,EAAUr0C,KAAKs0C,EAEnB/yB,GAAK5R,OAAS0kC,EAItB,MADAjuC,MAAKquC,yBAA2BzzB,EAAOjX,MAAQ3D,KAAKkD,QAAQopC,KAAKC,QAC1D,GAAI5iC,GAAMwkC,EAAQC,IAE7BE,gBAAiB,SAAUprC,GACvBlD,KAAKkD,QAAUxH,EAAMiF,cAAeX,KAAK4rC,gBACrC1kC,EAAMmB,YAAYnF,KAGtBlD,KAAKkD,QAAUxH,EAAMiF,WAAWX,KAAKkD,QAASA,WAGlDqrC,EAA4B7yC,EAAMwG,MAAME,QACxCC,KAAM,SAAUyF,GACZ9H,KAAKshB,QAAU,GAAI9Q,GACnBxQ,KAAKwuC,SAAW,GAAIh+B,GACpBxQ,KAAKud,SACLvd,KAAKyuC,SACLzuC,KAAK0uC,QAAU,GAAIl+B,GACnBxQ,KAAK2uC,cACL3uC,KAAK4uC,cACL5uC,KAAK6uC,sBACL7uC,KAAK8uC,iBACL9uC,KAAK+uC,SAAW,GAAIv+B,GACpBxQ,KAAKgvC,UAAY,GAAIn+B,GACrB7Q,KAAKivC,WAAa,KAClBjvC,KAAK8H,QAAUA,GAEnBonC,QAAS,SAAUhsC,GACf,GAAIgE,EAAMmB,YAAYrI,KAAK8H,SACvB,KAAM,wBAmBV,OAjBA9H,MAAKkD,QAAUxH,EAAMiF,YACjBysC,iBAAiB,EACjBF,kBAAkB,EAClBC,yBAAyB,GAC1BjqC,OACHlD,KAAKsM,QACLtM,KAAKmvC,qBACLnvC,KAAKovC,0BACLpvC,KAAK2uC,WAAa,GAAIn+B,GAAWxQ,KAAKud,OACtCvd,KAAK4uC,WAAa,GAAIp+B,GAAWxQ,KAAKyuC,OACtCzuC,KAAKivC,WAAa,GAAIp+B,GACtB7Q,KAAK2uC,WAAWzjC,QAAQ,SAAUnQ,GAC9BiF,KAAKivC,WAAW3uB,QAAQvlB,IACzBiF,MACHA,KAAK4uC,WAAW1jC,QAAQ,SAAU7L,GAC9BW,KAAKivC,WAAW7uB,gBAAgB/gB,IACjCW,MACIA,KAAKivC,YAEhBI,cAAe,SAAUjzB,GACrB,MAAOpc,MAAK0uC,QAAQ1rC,IAAIoZ,EAAWtc,KAEvCwvC,SAAU,SAAUh1B,GAChB,MAAOta,MAAKshB,QAAQte,IAAIsX,EAAMxa,KAElCyvC,QAAS,SAAU1kC,EAAGJ,GAClB,MAAOvD,GAAM7L,MAAMwP,EAAE0P,MAAO,SAAUY,GAClC,MAAOA,GAAKC,cAAcvQ,KAAOJ,KAGzC6B,MAAO,WACHtM,KAAKivC,WAAa,KAClBjvC,KAAKgvC,WAAahvC,KAAKkD,QAAQgqC,kBAAoBltC,KAAKkD,QAAQiqC,wBAA0B,GAAIzB,GAAc,KAC5G1rC,KAAK+uC,UAAY/uC,KAAKkD,QAAQgqC,kBAAoBltC,KAAKkD,QAAQiqC,wBAA0B,GAAI38B,GAAe,KAC5GxQ,KAAKshB,QAAU,GAAI9Q,GACnBxQ,KAAKwuC,SAAW,GAAIh+B,GACpBxQ,KAAKud,SACLvd,KAAKyuC,SACLzuC,KAAK0uC,QAAU,GAAIl+B,GACnBxQ,KAAK6uC,sBACL7uC,KAAK8uC,iBACL9uC,KAAK2uC,cACL3uC,KAAK4uC,eAETY,WAAY,SAAUC,GAAV,GACJ5jC,MACAnC,EAAI+lC,EAAe55B,SACvB,KAAKnM,EACD,MAAOmC,EAGX,KADAA,EAAKjS,KAAK8P,GACHA,EAAEgmC,iBACLhmC,EAAIA,EAAEgmC,gBACN7jC,EAAKjS,KAAK8P,EAGd,OADAmC,GAAK4C,UACE5C,GAEX8jC,2BAA4B,SAAUr1B,GAClC,MAAIA,GAAMs1B,cAAgB5vC,KAAK6vC,iBAAiBv1B,GACrCA,EAEHA,EAAMo1B,gBAAyB1vC,KAAK2vC,2BAA2Br1B,EAAMo1B,iBAA7C,MAEpCI,sBAAuB,SAAUjlC,EAAGJ,GAChC,MAAII,GAAE+kC,aAAe5vC,KAAK+vC,eAAellC,EAAGJ,IACjC,EAEJA,EAAEmlC,aAAe5vC,KAAK+vC,eAAetlC,EAAGI,IAEnDklC,eAAgB,SAAUC,EAAOnlC,GAAjB,GAURolC,GACKh2C,EAAO4X,EACRvS,CAXR,KAAK0wC,EAAMJ,YACP,KAAM,wBAEV,IAAII,IAAUnlC,EACV,OAAO,CAEX,IAAIc,EAASqkC,EAAM10B,SAAUzQ,GACzB,OAAO,CAGX,KADIolC,KACKh2C,EAAI,EAAG4X,EAAMm+B,EAAM10B,SAASnhB,OAAY0X,EAAJ5X,EAASA,IAC9CqF,EAAI0wC,EAAM10B,SAASrhB,GACnBqF,EAAEswC,aAAe5vC,KAAK+vC,eAAezwC,EAAGuL,IACxColC,EAAWr2C,KAAK0F,EAGxB,OAAO2wC,GAAW91C,OAAS,GAE/B+1C,gBAAiB,SAAU51B,GACvB,MAAIta,MAAKkD,QAAQkqC,gBACT9yB,EAAM61B,aAAenwC,KAAKowC,WAAW91B,IAC9B,GAENA,EAAM61B,aAAenwC,KAAKowC,WAAW91B,IAC/B,GAEJ,EAEAA,EAAM61B,cAAgBnwC,KAAKqwC,OAAO/1B,IAGjDg2B,cAAe,SAAUh2B,GACrB,MAAOA,GAAM61B,cAAgBnwC,KAAKowC,WAAW91B,KAAWta,KAAKqwC,OAAO/1B,IAExEi2B,oBAAqB,SAAU1lC,EAAGJ,GAAb,GAUb+lC,GACAr8B,EACAgK,EAIAsyB,EACAC,EACAz2C,CAjBJ,KAAK4Q,EACD,KAAM,+BAEV,KAAKJ,EACD,KAAM,+BAEV,KAAKzK,KAAKgvC,UACN,KAAM,yBAKV,IAHIwB,EAAKxwC,KAAKwvC,WAAW3kC,GACrBsJ,EAAKnU,KAAKwvC,WAAW/kC,GACrB0T,EAAQ,KACRjX,EAAM+B,QAAQunC,IAAOtpC,EAAM+B,QAAQkL,GACnC,MAAOnU,MAAKgvC,UAAU9wB,KAAKrD,IAK/B,KAHI41B,EAAKD,EAAG,GACRE,EAAKv8B,EAAG,GACRla,EAAI,EACDw2C,IAAOC,IACVvyB,EAAQqyB,EAAGv2C,GACXA,MACIA,GAAKu2C,EAAGr2C,QAAUF,GAAKka,EAAGha,UAG9Bs2C,EAAKD,EAAGv2C,GACRy2C,EAAKv8B,EAAGla,EAEZ,OAAKkkB,GAGMxQ,EAAK3N,KAAKgvC,UAAUzxB,MAAO,SAAUxiB,GACxC,MAAOA,GAAE8f,KAAKhF,YAAcsI,IAHzBne,KAAKgvC,UAAU9wB,KAAKrD,MAOnCw1B,OAAQ,SAAUhmC,GACd,OAAQA,EAAKqlC,iBAEjBU,WAAY,SAAU91B,GAClB,MAAKA,GAAM0S,UAGH1S,EAAMo1B,gBAAoC1vC,KAAKowC,WAAW91B,EAAMo1B,iBAAxCp1B,EAAM0S,WAF3B,GAIf2jB,aAAc,SAAUr2B,GACpB,MAAIA,GAAMs1B,aAAet1B,EAAM61B,aACpB,EAEJ71B,EAAMo1B,iBAAmB1vC,KAAK2wC,aAAar2B,EAAMo1B,kBAE5DP,mBAAoB,WAAA,GAEHl1C,GAAO4X,EACRyI,EAKAY,CAPZ,KAAIlb,KAAKkD,QAAQgqC,iBAab,KAAM,mDAZN,KAASjzC,EAAI,EAAG4X,EAAM7R,KAAK8H,QAAQk0B,OAAO7hC,OAAY0X,EAAJ5X,EAASA,IACnDqgB,EAAQta,KAAK8H,QAAQk0B,OAAO/hC,GAC5B+F,KAAKkD,QAAQkqC,kBAAoBptC,KAAKowC,WAAW91B,IAAUA,EAAMs1B,YACjE5vC,KAAK8uC,cAAcl1C,KAAK0gB,IAGxBY,EAAO,GAAIvK,GAAK2J,EAAMxa,GAAIwa,GAC9BY,EAAKH,WAAY,EACjB/a,KAAKshB,QAAQ7I,IAAI6B,EAAMxa,GAAIob,GAC3Blb,KAAKud,MAAM3jB,KAAKshB,KAM5Bk0B,wBAAyB,WAAA,GAIZn1C,GAAO4X,EACRqpB,EAKA9xB,EACAwnC,EAmBAC,EACAC,EAaIC,CA3CZ,IAAwC,IAApC/wC,KAAK8H,QAAQw4B,YAAYnmC,OAG7B,IAASF,EAAI,EAAG4X,EAAM7R,KAAK8H,QAAQw4B,YAAYnmC,OAAY0X,EAAJ5X,EAASA,IAE5D,GADIihC,EAAOl7B,KAAK8H,QAAQw4B,YAAYrmC,GAChC+F,KAAKkwC,gBAAgBhV,GACrBl7B,KAAK6uC,mBAAmBj1C,KAAKshC,OAKjC,IAFI9xB,EAAU8xB,EAAKgG,gBAAyBhG,EAAKgG,gBAAgB5mB,MAA5B,KACjCs2B,EAAQ1V,EAAKa,gBAAyBb,EAAKa,gBAAgBzhB,MAA5B,KAC9BlR,GAAWwnC,EAIhB,IAAIjlC,EAAS3L,KAAK8uC,cAAe1lC,IAAYpJ,KAAKwuC,SAAS31B,YAAYzP,GAIvE,IAAIuC,EAAS3L,KAAK8uC,cAAe8B,IAAU5wC,KAAKwuC,SAAS31B,YAAY+3B,GAYrE,GARI5wC,KAAKwuC,SAAS31B,YAAYzP,KAC1BA,EAASpJ,KAAKwuC,SAASplC,IAEvBpJ,KAAKwuC,SAAS31B,YAAY+3B,KAC1BA,EAAO5wC,KAAKwuC,SAASoC,IAErBC,EAAa7wC,KAAKsvC,SAASlmC,GAC3B0nC,EAAW9wC,KAAKsvC,SAASsB,GACzBC,IAAeC,GAAY9wC,KAAKgxC,oBAAoBH,EAAYC,GAChE9wC,KAAK6uC,mBAAmBj1C,KAAKshC,OADjC,CAIA,GAAmB,OAAf2V,GAAoC,OAAbC,EACvB,KAAM,mCAEV,KAAI9wC,KAAKkD,QAAQgqC,iBASb,KAAM,mDARF2D,GAAW91B,WAAa+1B,EAAS/1B,UACjC/a,KAAK6uC,mBAAmBj1C,KAAKshC,IAG7B6V,EAAU,GAAIngC,GAAKigC,EAAYC,EAAU5V,EAAKp7B,GAAIo7B,GACtDl7B,KAAK0uC,QAAQj2B,IAAIyiB,EAAKp7B,GAAIixC,GAC1B/wC,KAAKyuC,MAAM70C,KAAKm3C,QAzBhB/wC,MAAK6uC,mBAAmBj1C,KAAKshC,OAJ7Bl7B,MAAK6uC,mBAAmBj1C,KAAKshC,OAJ7Bl7B,MAAK6uC,mBAAmBj1C,KAAKshC,IAuCzC8V,oBAAqB,SAAUj2C,EAAGyE,GAC9B,MAAO0H,GAAMmE,IAAIrL,KAAKyuC,MAAO,SAAUpvC,GACnC,MAAOA,GAAE+J,SAAWrO,GAAKsE,EAAEwN,SAAWrN,GAAKH,EAAE+J,SAAW5J,GAAKH,EAAEwN,SAAW9R,OAIlFosB,EAAewkB,EAAWvpC,QAC1BC,KAAM,SAAUyF,GACZ,GAAI4R,GAAO1Z,IAEX,IADA2rC,EAAW16B,GAAG5O,KAAKoG,KAAKiR,GACpBxS,EAAMmB,YAAYP,GAClB,KAAM,2BAEV9H,MAAK8H,QAAUA,GAEnBs0B,OAAQ,SAAUl5B,GAAV,GAEA+tC,GACA1yB,EAIAD,EAIKrkB,EACDyoB,EAGJwuB,CAXJ,IAHAlxC,KAAKsuC,gBAAgBprC,GACjB+tC,EAAU,GAAI1C,GAA0BvuC,KAAK8H,SAC7CyW,EAAQ0yB,EAAQ/B,QAAQhsC,IACxBqb,EAAMtV,YAGNqV,EAAaC,EAAMH,0BACnBlX,EAAM+B,QAAQqV,IAAlB,CAGA,IAASrkB,EAAI,EAAOqkB,EAAWnkB,OAAfF,EAAuBA,IAC/ByoB,EAAYpE,EAAWrkB,GAC3B+F,KAAKonB,YAAY1E,EAAWxf,EAGhC,OADIguC,GAAelxC,KAAKstC,qBAAqBhvB,GACtC,GAAIxW,GAAQqpC,YAAYnxC,KAAK8H,QAASopC,KAEjD9pB,YAAa,SAAU7I,EAAOrb,GAAjB,GAKLkuC,GAEAC,EAGKxqC,CAAT,KATIK,EAAMiB,UAAUjF,IAChBlD,KAAKsuC,gBAAgBprC,GAEzBlD,KAAKue,MAAQA,EACT6yB,EAAiD,EAA5BpxC,KAAKkD,QAAQ6oC,aACtC/rC,KAAKsxC,YAAcF,EACfC,EAAcrxC,KAAKuxC,kBACvBvxC,KAAK2D,MAAQ0tC,EAAY1tC,MACzB3D,KAAK4D,OAASytC,EAAYztC,OACjBiD,EAAO,EAAU7G,KAAKkD,QAAQ8oC,WAApBnlC,EAAgCA,IAC/C7G,KAAKwxC,YAAc3qC,GAAkC,EAA1B7G,KAAKkD,QAAQ8oC,WAAiB,EACzDhsC,KAAK8M,OACL9M,KAAKsxC,YAActxC,KAAKwxC,YAAcJ,EAAqB,GAAKA,GAAsB,EAAIvqC,GAAQ,EAAI7G,KAAKkD,QAAQ8oC,cAG3Hl/B,KAAM,WAAA,GACE7S,GAQIihB,EACA9J,CARR,KAAKnX,EAAI,EAAO+F,KAAKue,MAAMhB,MAAMpjB,OAArBF,EAA6BA,IACrC+F,KAAKyxC,WAAWzxC,KAAKue,MAAMhB,MAAMtjB,GAErC,KAAKA,EAAI,EAAO+F,KAAKue,MAAMhE,MAAMpgB,OAArBF,EAA6BA,IACrC+F,KAAK0xC,YAAY1xC,KAAKue,MAAMhE,MAAMtgB,GAEtC,KAAKA,EAAI,EAAO+F,KAAKue,MAAMhB,MAAMpjB,OAArBF,EAA6BA,IAAK,CAG1C,GAFIihB,EAAOlb,KAAKue,MAAMhB,MAAMtjB,GACxBmX,EAAS3Q,KAAKmK,KAAKsQ,EAAKpI,GAAKoI,EAAKpI,GAAKoI,EAAKnI,GAAKmI,EAAKnI,IAC3C,IAAX3B,EACA,MAEJ8J,GAAK9b,GAAKqB,KAAK9H,IAAIyY,EAAQpR,KAAKsxC,aAAep2B,EAAKpI,GAAK1B,EACzD8J,EAAKxT,GAAKjH,KAAK9H,IAAIyY,EAAQpR,KAAKsxC,aAAep2B,EAAKnI,GAAK3B,EACrDpR,KAAKkD,QAAQmkB,cACbnM,EAAK9b,EAAIqB,KAAK9H,IAAIqH,KAAK2D,MAAOlD,KAAK7H,IAAIsiB,EAAKvX,MAAQ,EAAGuX,EAAK9b,IAC5D8b,EAAKxT,EAAIjH,KAAK9H,IAAIqH,KAAK4D,OAAQnD,KAAK7H,IAAIsiB,EAAKtX,OAAS,EAAGsX,EAAKxT,OAI1EiqC,OAAQ,SAAUz2B,GAAV,GACA02B,GAAMnxC,KAAKwJ,SAAWjK,KAAKkD,QAAQ6oC,aAAe,EAClD8F,EAAwB,EAAhBpxC,KAAKwJ,SAAexJ,KAAKG,EACrCsa,GAAK9b,GAAKwyC,EAAMnxC,KAAKkM,IAAIklC,GACzB32B,EAAKxT,GAAKkqC,EAAMnxC,KAAK6W,IAAIu6B,IAE7BC,oBAAqB,SAAUvyC,EAAGxE,EAAGyE,GAAhB,GACb8tB,GAII6gB,EACAC,EACA2D,EACAC,EACAC,EACAC,CAGR,OAXKlyC,MAAKwxC,aAGFrD,EAASpzC,EAAEqE,EAAII,EAAEJ,EACjBgvC,EAASrzC,EAAE2M,EAAIlI,EAAEkI,EACjBqqC,EAAKh3C,EAAE4I,MAAQ,EACfquC,EAAKj3C,EAAE6I,OAAS,EAChBquC,EAAKzyC,EAAEmE,MAAQ,EACfuuC,EAAK1yC,EAAEoE,OAAS,EACpB0pB,EAAQ7sB,KAAKlI,IAAI41C,EAAQ,GAAK1tC,KAAKlI,IAAIw5C,EAAKE,EAAKjyC,KAAKkD,QAAQ6oC,aAAc,GAAKtrC,KAAKlI,IAAI61C,EAAQ,GAAK3tC,KAAKlI,IAAIy5C,EAAKE,EAAKlyC,KAAKkD,QAAQ6oC,aAAc,IARrJze,EAAQ7sB,KAAKlI,IAAIgH,EAAG,GAAKkB,KAAKlI,IAAIyH,KAAKkD,QAAQ6oC,aAAc,GAUlD,EAARze,EAAY,GAEvB6kB,aAAc,SAAU5yC,EAAGxE,EAAGyE,GAC1B,MAAO,GAAIQ,KAAK8xC,oBAAoBvyC,EAAGxE,EAAGyE,IAE9CiyC,WAAY,SAAU12C,GAClBA,EAAE+X,GAAK,EACP/X,EAAEgY,GAAK,EACP7L,EAAMgE,QAAQlL,KAAKue,MAAMhB,MAAO,SAAU/d,GAAV,GAOxBwY,GACAC,EACAm6B,EACArzC,CATJ,IAAIS,IAAMzE,EAAV,CAGA,KAAOA,EAAEqE,IAAMI,EAAEJ,GAAKrE,EAAE2M,IAAMlI,EAAEkI,GAC5B1H,KAAK2xC,OAAOnyC,EAEZwY,GAAKjd,EAAEqE,EAAII,EAAEJ,EACb6Y,EAAKld,EAAE2M,EAAIlI,EAAEkI,EACb0qC,EAAW3xC,KAAKmK,KAAKoN,EAAKA,EAAKC,EAAKA,GACpClZ,EAAwC,EAApCiB,KAAKmyC,aAAaC,EAAUr3C,EAAGyE,GACvCzE,EAAE+X,IAAMkF,EAAKo6B,EAAWrzC,EACxBhE,EAAEgY,IAAMkF,EAAKm6B,EAAWrzC,IACzBiB,OAEP0xC,YAAa,SAAUv2B,GAAV,GASLnD,GACAC,EACAm6B,EACAvnC,EACAiI,EACAC,EAbAyN,EAAIrF,EAAKtO,OACTnD,EAAIyR,EAAK/R,MACb,IAAIM,IAAM8W,EAAV,CAGA,KAAO9W,EAAEtK,IAAMohB,EAAEphB,GAAKsK,EAAEhC,IAAM8Y,EAAE9Y,GAC5B1H,KAAK2xC,OAAOnxB,EAEZxI,GAAKtO,EAAEtK,EAAIohB,EAAEphB,EACb6Y,EAAKvO,EAAEhC,EAAI8Y,EAAE9Y,EACb0qC,EAAW3xC,KAAKmK,KAAKoN,EAAKA,EAAKC,EAAKA,GACpCpN,EAA+C,EAA3C7K,KAAK8xC,oBAAoBM,EAAU1oC,EAAG8W,GAC1C1N,EAAKkF,EAAKo6B,EAAWvnC,EACrBkI,EAAKkF,EAAKm6B,EAAWvnC,EACzB2V,EAAE1N,IAAMA,EACR0N,EAAEzN,IAAMA,EACRrJ,EAAEoJ,IAAMA,EACRpJ,EAAEqJ,IAAMA,IAEZw+B,gBAAiB,WAAA,GACTl1C,GAYAg2C,EACAC,EACA3uC,EACAC,EAfMyf,EAAIrjB,KAAKue,MAAMhB,MAAMpjB,OAAQo4C,EAAQ,IAAKC,EAAa,CACjE,OAAU,KAANnvB,EACOhnB,GAEXA,EAAO6K,EAAM0E,KAAK5L,KAAKue,MAAMhB,MAAO,SAAU7T,EAAGwR,GAC7C,GAAIu3B,GAAOv3B,EAAKvX,MAAQuX,EAAKtX,MAC7B,OAAI6uC,GAAO,EACP/oC,GAAKjJ,KAAKmK,KAAK6nC,GAGZ,GACR,EAAGzyC,MACFqyC,EAAKh2C,EAAOgnB,EACZivB,EAAaD,EAAK5xC,KAAKiyC,KAAKjyC,KAAKmK,KAAKyY,IACtC1f,EAAQ2uC,EAAa7xC,KAAKmK,KAAK2nC,GAC/B3uC,EAAS0uC,EAAa7xC,KAAKmK,KAAK2nC,IAEhC5uC,MAAOA,EAAQ6uC,EACf5uC,OAAQA,EAAS4uC,OAIzBG,EAAsBj3C,EAAMwG,MAAME,QAClCC,KAAM,SAAUa,GACZlD,KAAKiL,OAAS,KACdjL,KAAKkD,QAAUA,GAEnBk5B,OAAQ,SAAUwW,EAAW10B,GAEzB,GADAle,KAAKue,MAAQq0B,EACR5yC,KAAKue,MAAMhB,OAAqC,IAA5Bvd,KAAKue,MAAMhB,MAAMpjB,OAA1C,CAGA,IAAKwR,EAAS3L,KAAKue,MAAMhB,MAAOW,GAC5B,KAAM,qCAEVle,MAAKiL,OAASiT,EACdle,KAAKue,MAAMZ,qBACX3d,KAAK6yC,iBAETC,WAAY,SAAUngC,GAAV,GAGJ/E,GAAOoP,EAAOtV,EAAGzN,EAAGihB,EAIhBxR,EAKJtK,EAII3G,CAZR,KAHAuH,KAAK+yC,qBAAqB/yC,KAAKiL,OAAQ,QAAQ,GAC/CjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,WAAW,GAC3C2C,EAAI,EAAGoP,EAAI,EACV/iB,EAAI,EAAO0Y,EAAKxY,OAATF,EAAiBA,IACzBihB,EAAOvI,EAAK1Y,GACZihB,EAAK+3B,cAAgB,OACjBvpC,EAAI1J,KAAK+B,QAAQmZ,EAAMlL,EAAKiF,OAChC+H,EAAIvc,KAAK7H,IAAIokB,EAAGtT,EAAEwpC,OAClBtlC,GAAKlE,EAAE9F,OAAS5D,KAAKkD,QAAQgpC,kBAKjC,KAHAt+B,GAAK5N,KAAKkD,QAAQgpC,mBACd9sC,EAAIY,KAAKiL,OAAO7L,EAAIY,KAAKkD,QAAQ+oC,qBACrCvkC,EAAI1H,KAAKiL,OAAOvD,GAAK1H,KAAKiL,OAAOrH,OAASgK,GAAK,EAC1C3T,EAAI,EAAO0Y,EAAKxY,OAATF,EAAiBA,IACzBihB,EAAOvI,EAAK1Y,GACRxB,EAAI,GAAIkR,GAAMvK,EAAI8b,EAAKlL,KAAKrM,MAAO+D,GACvC1H,KAAKmzC,QAAQj4B,EAAMziB,GACnBiP,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQgpC,oBAG7CkH,YAAa,SAAUxgC,GAAV,GAGLhF,GAAOoP,EAAOtV,EAAGzN,EAAGihB,EAIhBxR,EAKJtK,EAII3G,CAZR,KAHAuH,KAAK+yC,qBAAqB/yC,KAAKiL,OAAQ,SAAS,GAChDjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,WAAW,GAC3C2C,EAAI,EAAGoP,EAAI,EACV/iB,EAAI,EAAO2Y,EAAMzY,OAAVF,EAAkBA,IAC1BihB,EAAOtI,EAAM3Y,GACbihB,EAAK+3B,cAAgB,QACjBvpC,EAAI1J,KAAK+B,QAAQmZ,EAAMlL,EAAKiF,OAChC+H,EAAIvc,KAAK7H,IAAIokB,EAAGtT,EAAEwpC,OAClBtlC,GAAKlE,EAAE9F,OAAS5D,KAAKkD,QAAQgpC,kBAKjC,KAHAt+B,GAAK5N,KAAKkD,QAAQgpC,mBACd9sC,EAAIY,KAAKiL,OAAO7L,EAAIY,KAAKkD,QAAQ+oC,qBAAuBjsC,KAAKiL,OAAOtH,MACxE+D,EAAI1H,KAAKiL,OAAOvD,GAAK1H,KAAKiL,OAAOrH,OAASgK,GAAK,EAC1C3T,EAAI,EAAO2Y,EAAMzY,OAAVF,EAAkBA,IAC1BihB,EAAOtI,EAAM3Y,GACTxB,EAAI,GAAIkR,GAAMvK,EAAGsI,GACrB1H,KAAKmzC,QAAQj4B,EAAMziB,GACnBiP,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQgpC,oBAG7CmH,SAAU,SAAUC,GAAV,GAGFt2B,GAAOtV,EAAGwT,EAAMjhB,EAIZyP,EAIJtK,EAII3G,CAXR,KAHAuH,KAAK+yC,qBAAqB/yC,KAAKiL,OAAQ,MAAM,GAC7CjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,WAAW,GAC3C+R,EAAI,EACH/iB,EAAI,EAAOq5C,EAAGn5C,OAAPF,EAAeA,IACvBihB,EAAOo4B,EAAGr5C,GACVihB,EAAK+3B,cAAgB,KACjBvpC,EAAI1J,KAAK+B,QAAQmZ,EAAMlL,EAAKiF,OAChC+H,GAAKtT,EAAE/F,MAAQ3D,KAAKkD,QAAQ+oC,oBAIhC,KAFAjvB,GAAKhd,KAAKkD,QAAQ+oC,qBACd7sC,EAAIY,KAAKiL,OAAO7L,EAAIY,KAAKiL,OAAOtH,MAAQ,EAAIqZ,EAAI,EAC/C/iB,EAAI,EAAOq5C,EAAGn5C,OAAPF,EAAeA,IACvBihB,EAAOo4B,EAAGr5C,GACVyN,EAAI1H,KAAKiL,OAAOvD,EAAI1H,KAAKkD,QAAQgpC,mBAAqBhxB,EAAKlL,KAAKpM,OAC5DnL,EAAI,GAAIkR,GAAMvK,EAAGsI,GACrB1H,KAAKmzC,QAAQj4B,EAAMziB,GACnB2G,GAAK8b,EAAKlL,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,sBAG5CsH,WAAY,SAAUC,GAAV,GACJt4B,GAAMjhB,EAGN+iB,EAAOtV,EAIHgC,EAIJtK,EAII3G,CAXR,KAHAuH,KAAK+yC,qBAAqB/yC,KAAKiL,OAAQ,QAAQ,GAC/CjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,WAAW,GAC3C+R,EAAI,EACH/iB,EAAI,EAAOu5C,EAAKr5C,OAATF,EAAiBA,IACzBihB,EAAOs4B,EAAKv5C,GACZihB,EAAKu4B,cAAgB,OACjB/pC,EAAI1J,KAAK+B,QAAQmZ,EAAMlL,EAAKiF,OAChC+H,GAAKtT,EAAE/F,MAAQ3D,KAAKkD,QAAQ+oC,oBAKhC,KAHAjvB,GAAKhd,KAAKkD,QAAQ+oC,qBACd7sC,EAAIY,KAAKiL,OAAO7L,EAAIY,KAAKiL,OAAOtH,MAAQ,EAAIqZ,EAAI,EACpDtV,EAAI1H,KAAKiL,OAAOvD,EAAI1H,KAAKkD,QAAQgpC,mBAAqBlsC,KAAKiL,OAAOrH,OAC7D3J,EAAI,EAAOu5C,EAAKr5C,OAATF,EAAiBA,IACzBihB,EAAOs4B,EAAKv5C,GACRxB,EAAI,GAAIkR,GAAMvK,EAAGsI,GACrB1H,KAAKmzC,QAAQj4B,EAAMziB,GACnB2G,GAAK8b,EAAKlL,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,sBAG5CyH,iBAAkB,WAAA,GAIVC,GACAC,CACJ,IALA5zC,KAAK+yC,qBAAqB/yC,KAAKiL,OAAQ,UAAU,GACjDjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,WAAW,GAC/CjL,KAAK6zC,aAAe,KAChBF,EAAa3zC,KAAKkD,QAAQ2pC,iBAAmB9zC,EAC7C66C,EAAW5zC,KAAKkD,QAAQ4pC,eAAiB/zC,EAC7B46C,GAAZC,EACA,KAAM,sDAEV5zC,MAAK8zC,SAAW,EAChB9zC,KAAKuO,OAAS,GAAI5E,GAAM3J,KAAKiL,OAAO7L,EAAGY,KAAKiL,OAAOvD,GACnD1H,KAAK+zC,sBAAsB/zC,KAAKiL,OAAQ,GACpCjL,KAAK8zC,SAAW,GAChB9zC,KAAKg0C,aAAah0C,KAAKiL,OAAQjL,KAAKkD,QAAQ8pC,2BAA4B2G,EAAYC,GAExF5zC,KAAKiL,OAAOgpC,MAAQL,EAAWD,GAEnCO,YAAa,SAAUV,EAAMW,GAAhB,GAOLn3B,GAAOtV,EAAGwT,EAAMjhB,EAIZyP,EAMJtK,EAII3G,CAbR,KAPIyO,EAAMmB,YAAY8rC,KAClBA,EAAiB,GAErBn0C,KAAK+yC,qBAAqB/yC,KAAKiL,OAAQ,QAAQ,GAC/CjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,WAAW,GAC/CjL,KAAKgzC,kBAAkBhzC,KAAKiL,OAAQ,cAAc,EAAOkpC,GACrDn3B,EAAI,EACH/iB,EAAI,EAAOu5C,EAAKr5C,OAATF,EAAiBA,IACzBihB,EAAOs4B,EAAKv5C,GACZihB,EAAK+3B,cAAgB,OACjBvpC,EAAI1J,KAAK+B,QAAQmZ,EAAMlL,EAAKiF,OAChC+H,GAAKtT,EAAE/F,MAAQ3D,KAAKkD,QAAQ+oC,oBAOhC,KALAjvB,GAAKhd,KAAKkD,QAAQ+oC,qBAClBjvB,GAAKw2B,EAAKA,EAAKr5C,OAAS,GAAGwJ,MAC3BqZ,GAAKw2B,EAAKA,EAAKr5C,OAAS,GAAGwgB,gBAAgBC,SAASjX,MAChDvE,EAAIY,KAAKiL,OAAO7L,EAAIY,KAAKiL,OAAOtH,MAAQ,EAAIqZ,EAAI,EACpDtV,EAAI1H,KAAKiL,OAAOvD,EAAI1H,KAAKkD,QAAQgpC,mBAAqBlsC,KAAKiL,OAAOrH,OAC7D3J,EAAI,EAAOu5C,EAAKr5C,OAATF,EAAiBA,IACzBihB,EAAOs4B,EAAKv5C,GACRxB,EAAI,GAAIkR,GAAMvK,EAAGsI,GACrB1H,KAAKmzC,QAAQj4B,EAAMziB,GACnB2G,GAAK8b,EAAKlL,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,sBAG5C8H,sBAAuB,SAAUh5C,EAAGwE,GAAb,GAIf60C,GAAQp3B,EAAUpP,EAAUymC,EAEnBp6C,EAAO4X,EACRmM,CAFZ,IAJIze,EAAIS,KAAK8zC,WACT9zC,KAAK8zC,SAAWv0C,GAEhB60C,EAAK,EAAGp3B,EAAI,IAAMpP,EAAI,IAAMymC,EAAiB,IAAN90C,EAAU,EAAIkB,KAAKmK,KAAKoS,EAAIA,EAAIpP,EAAIA,GAAKrO,EAChFxE,EAAEugB,SAASnhB,OAAS,EAAG,CACvB,IAASF,EAAI,EAAG4X,EAAM9W,EAAEugB,SAASnhB,OAAY0X,EAAJ5X,EAASA,IAC1C+jB,EAAQjjB,EAAEugB,SAASrhB,GACvBm6C,GAAMp0C,KAAK+zC,sBAAsB/1B,EAAOze,EAAI,EAEhD60C,GAAK3zC,KAAK7H,IAAIy7C,EAAUD,OAExBA,GAAKC,CAGT,OADAt5C,GAAEu5C,YAAcF,EACTA,GAEXG,aAAc,SAAUx5C,GAAV,GACSd,GAIfxB,EAEI+7C,EACAC,EAGJ1W,EAIAjqB,EACA9N,EAEI1G,EACAD,EAKJq1C,EACAp5B,EAxBAq5B,EAAY,CAChB,IAAI55C,EAAEygB,QAAQrhB,OAAS,EACnB,KAAM,6BASV,IAPI1B,EAAIsC,EAAEygB,QAAQ,GACd/iB,IACI+7C,EAAK,GAAI7qC,GAAMlR,EAAE2G,EAAG3G,EAAEiP,GACtB+sC,EAAK,GAAI9qC,GAAM5O,EAAEqE,EAAGrE,EAAE2M,GAC1BitC,EAAY30C,KAAK40C,eAAen0C,KAAK+J,MAAMgqC,EAAG9sC,EAAI+sC,EAAG/sC,EAAG8sC,EAAGp1C,EAAIq1C,EAAGr1C,KAElE2+B,EAAQhjC,EAAEugB,SAASnhB,OACT,IAAV4jC,EACA,MAAO,KAIX,KAFIjqB,KACA9N,KACC/L,EAAI,EAAO8jC,EAAJ9jC,IAAaA,EACjBqF,EAAIvE,EAAEugB,SAASrhB,GACfoF,EAAI,GAAIsK,GAAMrK,EAAEF,EAAGE,EAAEoI,GACzB1B,EAAI/L,GAAKA,EACT6Z,EAAM7Z,GAAK+F,KAAK40C,gBAAgBD,EAAYl0C,KAAK+J,MAAMnL,EAAEqI,EAAIrI,EAAEqI,EAAGrI,EAAED,EAAIC,EAAED,GAK9E,KAHA8H,EAAMqF,OAAOuH,EAAO9N,GAChB0uC,KACAp5B,EAAWvgB,EAAEugB,SACZrhB,EAAI,EAAO8jC,EAAJ9jC,IAAaA,EACrBy6C,EAAI96C,KAAK0hB,EAAStV,EAAI/L,IAE1B,OAAOy6C,IAEXE,eAAgB,SAAU9gC,GACtB,KAAOA,EAAkB,EAAVrT,KAAKG,IAChBkT,GAAS,EAAIrT,KAAKG,EAEtB,MAAe,EAARkT,GACHA,GAAmB,EAAVrT,KAAKG,EAElB,OAAOkT,IAEXkgC,aAAc,SAAU94B,EAAMiL,EAAQwtB,EAAYC,GAApC,GAMD35C,GAAO4X,EACRgjC,EACAC,EACAC,EARJC,EAAapB,EAAWD,EACxBsB,EAAiBD,EAAa,EAC9BE,EAAeh6B,EAAKo5B,YACpBa,EAAW,EACXC,EAASp1C,KAAKu0C,aAAar5B,EAC/B,KAASjhB,EAAI,EAAG4X,EAAMujC,EAAOj7C,OAAY0X,EAAJ5X,EAASA,IACtC46C,EAAYO,EAAOn7C,GACnB66C,EAAKD,EACLE,EAAqBD,EAAGR,YAAcY,EACtCL,EAAUv5B,SAASnhB,OAAS,GAC5B6F,KAAKg0C,aAAaa,EAAW1uB,EAASnmB,KAAKkD,QAAQ6pC,iBAAkB4G,EAAawB,EAAWH,EAAYrB,GAAcwB,EAAWJ,GAAsBC,GAE5Jh1C,KAAKq1C,iBAAiBR,EAAW1uB,EAAQwtB,EAAawB,EAAWH,EAAaD,EAAqBE,GACnGH,EAAGhhC,MAAQihC,EAAqBC,EAChCG,GAAYJ,GAGpBM,iBAAkB,SAAUn6B,EAAMiL,EAAQrS,GACtCoH,EAAK9b,EAAIY,KAAKuO,OAAOnP,EAAI+mB,EAAS1lB,KAAKkM,IAAImH,GAC3CoH,EAAKxT,EAAI1H,KAAKuO,OAAO7G,EAAIye,EAAS1lB,KAAK6W,IAAIxD,GAC3CoH,EAAKo6B,kBAAoB,GAAIvlC,GAAKmL,EAAK9b,EAAG8b,EAAKxT,EAAGwT,EAAKvX,MAAOuX,EAAKtX,SAEvEmvC,qBAAsB,SAAU73B,EAAMq6B,EAAWC,GAC7C,GAAIC,GAAgBv6B,EAAKu4B,aACzBzzC,MAAKue,MAAMuD,oBAAoB5G,EAAM,SAAUngB,GAC3CA,EAAE04C,cAAgB8B,IAEjBC,IACDt6B,EAAKu4B,cAAgBgC,IAG7BzC,kBAAmB,SAAU93B,EAAMkhB,EAAQoZ,EAAcrB,GACjDjtC,EAAMmB,YAAY8rC,KAClBA,EAAiB,EAErB,IAAIuB,GAAax6B,EAAKy6B,cAClBxB,GAAiB,GACjBn0C,KAAKue,MAAMV,aAAa3C,GACxBlb,KAAKue,MAAMuD,oBAAoB5G,EAAM,SAAUxR,GACvCA,EAAEuU,OAASk2B,EAAiB,IAC5BzqC,EAAEisC,eAAiBvZ,OAI3Bp8B,KAAKue,MAAMuD,oBAAoB5G,EAAM,SAAUxR,GAC3CA,EAAEisC,eAAiBvZ,IAElBoZ,IACDt6B,EAAKy6B,eAAiBD,KAIlC3zC,QAAS,SAAUmZ,EAAM06B,GAAhB,GACalsC,GAKde,EACAorC,EACAC,EAIAtuB,EA2DIvtB,EAAG46C,EAtEP73B,EAAI,EAAGpP,EAAI,EACXpR,EAAS,GAAIwT,GAAK,EAAG,EACzB,KAAKkL,EACD,KAAM,EAKV,IAHIzQ,EAAIyQ,EAAKP,gBAAgBC,SACzBi7B,EAAaprC,EAAE9G,MACfmyC,EAAcrrC,EAAE7G,OACQ,IAAxBsX,EAAKM,QAAQrhB,OACb,KAAM,8BAMV,IAJIqtB,EAAStM,EAAKM,QAAQ,GACC,cAAvBN,EAAKu4B,gBACLv4B,EAAKu4B,cAAgBjsB,EAAOisB,eAE5BvsC,EAAM+B,QAAQiS,EAAKI,UACnB9e,EAAS,GAAIwT,GAAKvP,KAAK4G,IAAIwuC,GAAc7tC,EAAU,GAAK6tC,EAAYp1C,KAAK4G,IAAIyuC,GAAe9tC,EAAU,GAAK8tC,OACxG,IAA6B,IAAzB56B,EAAKI,SAASnhB,OAAc,CACnC,OAAQ+gB,EAAKu4B,eACb,IAAK,SACD/pC,EAAI1J,KAAK+B,QAAQmZ,EAAKI,SAAS,GAAIs6B,GACnC54B,EAAI64B,EAAa71C,KAAKkD,QAAQ6pC,iBAAmBtsC,KAAKkM,IAAIuO,EAAK66B,eAAiBrsC,EAAE/F,MAClFiK,EAAIkoC,EAAcr1C,KAAK4G,IAAIrH,KAAKkD,QAAQ6pC,iBAAmBtsC,KAAK6W,IAAI4D,EAAK66B,gBAAkBrsC,EAAE9F,MAC7F,MACJ,KAAK,OACL,IAAK,QACD,OAAQsX,EAAKy6B,gBACb,IAAK,uBACD,KACJ,KAAK,0BACD,KACJ,KAAK,aACDjsC,EAAI1J,KAAK+B,QAAQmZ,EAAKI,SAAS,GAAIs6B,GACnC54B,EAAI64B,EAAansC,EAAE/F,MAAQ3D,KAAKkD,QAAQkpC,2BACxCx+B,EAAIkoC,EAAc91C,KAAKkD,QAAQipC,4BAA8BziC,EAAE9F,MAC/D,MACJ,KAAK,UACD8F,EAAI1J,KAAK+B,QAAQmZ,EAAKI,SAAS,GAAIs6B,GACnC54B,EAAI64B,EAAa71C,KAAKkD,QAAQ+oC,qBAAuBviC,EAAE/F,MACvDiK,EAAInN,KAAK7H,IAAIk9C,EAAapsC,EAAE9F,OAC5B,MACJ,SACI,KAAM,0DAEV,KACJ,KAAK,KACL,IAAK,OACD,OAAQsX,EAAKy6B,gBACb,IAAK,uBACL,IAAK,0BACD,KACJ,KAAK,aACDjsC,EAAI1J,KAAK+B,QAAQmZ,EAAKI,SAAS,GAAIs6B,GACnC54B,EAAIvc,KAAK7H,IAAIi9C,EAAYnsC,EAAE/F,MAAQ3D,KAAKkD,QAAQkpC,4BAChDx+B,EAAIkoC,EAAc91C,KAAKkD,QAAQipC,4BAA8BziC,EAAE9F,MAC/D,MACJ,KAAK,UACD8F,EAAI1J,KAAK+B,QAAQmZ,EAAKI,SAAS,GAAIs6B,GACnChoC,EAAIkoC,EAAc91C,KAAKkD,QAAQgpC,mBAAqBxiC,EAAE9F,OACtDoZ,EAAIvc,KAAK7H,IAAIi9C,EAAYnsC,EAAE/F,MAC3B,MACJ,SACI,KAAM,wDAEV,KACJ,SACI,KAAM,mDAEVnH,EAAS,GAAIwT,GAAKgN,EAAGpP,OAClB,CAEH,OAAQsN,EAAKu4B,eACb,IAAK,OACL,IAAK,QACD,OAAQv4B,EAAKy6B,gBACb,IAAK,uBACL,IAAK,0BACD,KACJ,KAAK,aAGD,IAFA34B,EAAI64B,EACJjoC,EAAIkoC,EAAc91C,KAAKkD,QAAQipC,4BAC1BlyC,EAAI,EAAOihB,EAAKI,SAASnhB,OAAlBF,EAA0BA,IAClC46C,EAAY35B,EAAKI,SAASrhB,GAC1ByP,EAAI1J,KAAK+B,QAAQ8yC,EAAWe,GAC5B54B,EAAIvc,KAAK7H,IAAIokB,EAAGtT,EAAE/F,MAAQ3D,KAAKkD,QAAQkpC,4BACvCx+B,GAAKlE,EAAE9F,OAAS5D,KAAKkD,QAAQmpC,4BAEjCz+B,IAAK5N,KAAKkD,QAAQmpC,4BAClB,MACJ,KAAK,UAGD,IAFArvB,EAAI64B,EACJjoC,EAAI,EACC3T,EAAI,EAAOihB,EAAKI,SAASnhB,OAAlBF,EAA0BA,IAClC46C,EAAY35B,EAAKI,SAASrhB,GAC1ByP,EAAI1J,KAAK+B,QAAQ8yC,EAAWe,GAC5B54B,EAAIvc,KAAK7H,IAAIokB,EAAG64B,EAAa71C,KAAKkD,QAAQ+oC,qBAAuBviC,EAAE/F,OACnEiK,GAAKlE,EAAE9F,OAAS5D,KAAKkD,QAAQgpC,kBAEjCt+B,IAAK5N,KAAKkD,QAAQgpC,kBAClB,MACJ,SACI,KAAM,yDAEV,KACJ,KAAK,KACL,IAAK,OACD,OAAQhxB,EAAKy6B,gBACb,IAAK,uBACL,IAAK,0BACD,KACJ,KAAK,aAGD,IAFA34B,EAAI64B,EACJjoC,EAAIkoC,EAAc91C,KAAKkD,QAAQipC,4BAC1BlyC,EAAI,EAAOihB,EAAKI,SAASnhB,OAAlBF,EAA0BA,IAClC46C,EAAY35B,EAAKI,SAASrhB,GAC1ByP,EAAI1J,KAAK+B,QAAQ8yC,EAAWe,GAC5B54B,EAAIvc,KAAK7H,IAAIokB,EAAGtT,EAAE/F,MAAQ3D,KAAKkD,QAAQkpC,4BACvCx+B,GAAKlE,EAAE9F,OAAS5D,KAAKkD,QAAQmpC,4BAEjCz+B,IAAK5N,KAAKkD,QAAQmpC,4BAClB,MACJ,KAAK,UAGD,IAFArvB,EAAI,EACJpP,EAAI,EACC3T,EAAI,EAAOihB,EAAKI,SAASnhB,OAAlBF,EAA0BA,IAClC46C,EAAY35B,EAAKI,SAASrhB,GAC1ByP,EAAI1J,KAAK+B,QAAQ8yC,EAAWe,GAC5B54B,GAAKtT,EAAE/F,MAAQ3D,KAAKkD,QAAQ+oC,qBAC5Br+B,EAAInN,KAAK7H,IAAIgV,EAAGlE,EAAE9F,OAAS5D,KAAKkD,QAAQgpC,mBAAqB4J,EAEjE94B,IAAKhd,KAAKkD,QAAQ+oC,oBAClB,MACJ,SACI,KAAM,wDAEV,KACJ,SACI,KAAM,mDAEVzvC,EAAS,GAAIwT,GAAKgN,EAAGpP,GAIzB,MAFAsN,GAAK86B,YAAcv1C,KAAKmK,KAAKoS,EAAIA,EAAI,EAAIpP,EAAIA,EAAI,GACjDsN,EAAKlL,KAAOxT,EACLA,GAEX22C,QAAS,SAAUp4C,EAAGtC,GAAb,GACDwB,GAAGg8C,EAAIj4B,EAAO9C,EAAMg7B,EAQhB92C,EAAGsI,EACHyuC,EAT+B1rC,EAAI1P,EAAE4f,gBAAgBC,SACzDi7B,EAAaprC,EAAE9G,MACfmyC,EAAcrrC,EAAE7G,MACpB,IAAIsD,EAAM+B,QAAQlO,EAAEugB,UAChBvgB,EAAEqE,EAAI3G,EAAE2G,EACRrE,EAAE2M,EAAIjP,EAAEiP,EACR3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKtX,EAAE2G,EAAG3G,EAAEiP,EAAGmuC,EAAYC,OAIrD,QAAQ/6C,EAAE04C,eACV,IAAK,OACD,OAAQ14C,EAAE46C,gBACV,IAAK,uBACL,IAAK,0BACD,KACJ,KAAK,aAMD,IALAQ,EAAe19C,EACfsC,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QACpD8D,EAAIjP,EAAEiP,EAAIouC,EAAc91C,KAAKkD,QAAQipC,4BAChClyC,EAAI,EAAOihB,EAAKI,SAASnhB,OAAlBF,EAA0BA,IAClCihB,EAAOA,EAAKI,SAASrhB,GACrBmF,EAAI+2C,EAAa/2C,EAAI8b,EAAKP,gBAAgBhX,MAAQ3D,KAAKkD,QAAQkpC,2BAC/D6J,EAAK,GAAItsC,GAAMvK,EAAGsI,GAClB1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnBvuC,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQmpC,4BAEzC,MACJ,KAAK,UAOD,IANA8J,EAAe,GAAIxsC,GAAMlR,EAAE2G,EAAIrE,EAAEiV,KAAKrM,MAAQkyC,EAAYp9C,EAAEiP,GAAK3M,EAAEiV,KAAKpM,OAASkyC,GAAe,GAChG/6C,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QACpDxE,EAAI+2C,EAAa/2C,EAAIY,KAAKkD,QAAQ+oC,qBAClCvkC,EAAIjP,EAAEiP,EACDzN,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/BihB,EAAOngB,EAAEugB,SAASrhB,GAClBg8C,EAAK,GAAItsC,GAAMvK,EAAI8b,EAAKlL,KAAKrM,MAAO+D,GACpC1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnBvuC,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQgpC,kBAEzC,MACJ,SACI,KAAM,4BAEV,KACJ,KAAK,QACD,OAAQnxC,EAAE46C,gBACV,IAAK,uBACL,IAAK,0BACD,KACJ,KAAK,aAOD,IANAQ,EAAe19C,EACfsC,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QACpDxE,EAAI3G,EAAE2G,EAAIy2C,EAAa71C,KAAKkD,QAAQkpC,2BACpC1kC,EAAIjP,EAAEiP,EAAIouC,EAAc91C,KAAKkD,QAAQipC,4BAChClyC,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/BihB,EAAOngB,EAAEugB,SAASrhB,GAClBg8C,EAAK,GAAItsC,GAAMvK,EAAGsI,GAClB1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnBvuC,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQmpC,4BAEzC,MACJ,KAAK,UAOD,IANA8J,EAAe,GAAIxsC,GAAMlR,EAAE2G,EAAG3G,EAAEiP,GAAK3M,EAAEiV,KAAKpM,OAASkyC,GAAe,GACpE/6C,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QACpDxE,EAAI3G,EAAE2G,EAAIy2C,EAAa71C,KAAKkD,QAAQ+oC,qBACpCvkC,EAAIjP,EAAEiP,EACDzN,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/BihB,EAAOngB,EAAEugB,SAASrhB,GAClBg8C,EAAK,GAAItsC,GAAMvK,EAAGsI,GAClB1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnBvuC,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQgpC,kBAEzC,MACJ,SACI,KAAM,4BAEV,KACJ,KAAK,KAKD,GAJAiK,EAAe,GAAIxsC,GAAMlR,EAAE2G,GAAKrE,EAAEiV,KAAKrM,MAAQkyC,GAAc,EAAGp9C,EAAEiP,EAAI3M,EAAEiV,KAAKpM,OAASkyC,GACtF/6C,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QAChDnD,KAAK4G,IAAI8uC,EAAa/2C,EAAI3G,EAAE2G,GAAK4I,EAAS,CAE1C,IADAkuC,EAAgB,EACXj8C,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/B+jB,EAAQjjB,EAAEugB,SAASrhB,GACnBi8C,GAAiBl4B,EAAMhO,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,oBAErDiK,IAAiBl2C,KAAKkD,QAAQ+oC,qBAC9B7sC,EAAI3G,EAAE2G,GAAKy2C,EAAaK,GAAiB,MAEzC92C,GAAI3G,EAAE2G,CAEV,KAAKnF,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/BihB,EAAOngB,EAAEugB,SAASrhB,GAClByN,EAAIyuC,EAAazuC,EAAI1H,KAAKkD,QAAQgpC,mBAAqBhxB,EAAKlL,KAAKpM,OACjEqyC,EAAK,GAAItsC,GAAMvK,EAAGsI,GAClB1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnB72C,GAAK8b,EAAKlL,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,oBAExC,MACJ,KAAK,OACD,OAAQlxC,EAAE46C,gBACV,IAAK,uBACL,IAAK,0BACD,KACJ,KAAK,aAOD,IANAQ,EAAe19C,EACfsC,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QACpDxE,EAAI3G,EAAE2G,EAAIY,KAAKkD,QAAQkpC,2BACvB1kC,EAAIjP,EAAEiP,EAAIouC,EAAc91C,KAAKkD,QAAQipC,4BAChClyC,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/BihB,EAAOngB,EAAEugB,SAASrhB,GAClBg8C,EAAK,GAAItsC,GAAMvK,EAAGsI,GAClB1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnBvuC,GAAKwT,EAAKlL,KAAKpM,OAAS5D,KAAKkD,QAAQmpC,4BAEzC,MACJ,KAAK,UAKD,GAJA8J,EAAe,GAAIxsC,GAAMlR,EAAE2G,GAAKrE,EAAEiV,KAAKrM,MAAQkyC,GAAc,EAAGp9C,EAAEiP,GAClE3M,EAAEqE,EAAI+2C,EAAa/2C,EACnBrE,EAAE2M,EAAIyuC,EAAazuC,EACnB3M,EAAEu6C,kBAAoB,GAAIvlC,GAAKhV,EAAEqE,EAAGrE,EAAE2M,EAAG3M,EAAE4I,MAAO5I,EAAE6I,QAChDnD,KAAK4G,IAAI8uC,EAAa/2C,EAAI3G,EAAE2G,GAAK4I,EAAS,CAE1C,IADAkuC,EAAgB,EACXj8C,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/B+jB,EAAQjjB,EAAEugB,SAASrhB,GACnBi8C,GAAiBl4B,EAAMhO,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,oBAErDiK,IAAiBl2C,KAAKkD,QAAQ+oC,qBAC9B7sC,EAAI3G,EAAE2G,GAAKy2C,EAAaK,GAAiB,MAEzC92C,GAAI3G,EAAE2G,CAEV,KAAKnF,EAAI,EAAOc,EAAEugB,SAASnhB,OAAfF,EAAuBA,IAC/BihB,EAAOngB,EAAEugB,SAASrhB,GAClByN,EAAIyuC,EAAazuC,EAAI1H,KAAKkD,QAAQgpC,mBAAqB4J,EACvDG,EAAK,GAAItsC,GAAMvK,EAAGsI,GAClB1H,KAAKmzC,QAAQj4B,EAAM+6B,GACnB72C,GAAK8b,EAAKlL,KAAKrM,MAAQ3D,KAAKkD,QAAQ+oC,oBAExC,MACJ,SACI,KAAM,4BAEV,KACJ,KAAK,OACD,KACJ,SACI,KAAM,8BAIlB4G,aAAc,WAAA,GAON9pC,GAIAqtC,EAAQC,EAAMC,EAAQC,EACtBj7B,CAXJ,IAAKtb,KAAKiL,SAGN/D,EAAM+B,QAAQjJ,KAAKiL,OAAOqQ,UAS9B,OANIvS,EAAO/I,KAAKkD,QAAQ2oC,QACpB3kC,EAAMmB,YAAYU,KAClBA,EAAO,QAGPuS,EAAWtb,KAAKiL,OAAOqQ,SACnBvS,EAAK5J,eACb,IAAK,SACL,IAAK,aACDa,KAAK0zC,kBACL,MACJ,KAAK,oBACL,IAAK,UACD0C,EAASp2C,KAAKiL,OAAOqQ,SACe,IAAhCtb,KAAKiL,OAAOqQ,SAASnhB,OACrB6F,KAAKozC,YAAYgD,IAEjBG,EAAYj7B,EAASnhB,OAAS,EAC9Bk8C,EAAO1oC,EAAK3N,KAAKiL,OAAOqQ,SAAU,SAAUvgB,GACxC,MAAOmM,GAAMwE,QAAQ4P,EAAUvgB,GAAKw7C,IAExCD,EAAS3oC,EAAK3N,KAAKiL,OAAOqQ,SAAU,SAAUvgB,GAC1C,MAAOmM,GAAMwE,QAAQ4P,EAAUvgB,IAAMw7C,IAEzCv2C,KAAK8yC,WAAWuD,GAChBr2C,KAAKozC,YAAYkD,GAErB,MACJ,KAAK,kBACDF,EAASp2C,KAAKiL,OAAOqQ,SACe,IAAhCtb,KAAKiL,OAAOqQ,SAASnhB,OACrB6F,KAAKuzC,WAAW6C,IAEhBG,EAAYj7B,EAASnhB,OAAS,EAC9Bk8C,EAAO1oC,EAAK3N,KAAKiL,OAAOqQ,SAAU,SAAUvgB,GACxC,MAAOmM,GAAMwE,QAAQ4P,EAAUvgB,GAAKw7C,IAExCD,EAAS3oC,EAAK3N,KAAKiL,OAAOqQ,SAAU,SAAUvgB,GAC1C,MAAOmM,GAAMwE,QAAQ4P,EAAUvgB,IAAMw7C,IAEzCv2C,KAAKqzC,SAASgD,GACdr2C,KAAKuzC,WAAW+C,GAEpB,MACJ,KAAK,QACDt2C,KAAKozC,YAAYpzC,KAAKiL,OAAOqQ,SAC7B,MACJ,KAAK,OACDtb,KAAK8yC,WAAW9yC,KAAKiL,OAAOqQ,SAC5B,MACJ,KAAK,KACL,IAAK,SACDtb,KAAKqzC,SAASrzC,KAAKiL,OAAOqQ,SAC1B,MACJ,KAAK,OACL,IAAK,MACDtb,KAAKuzC,WAAWvzC,KAAKiL,OAAOqQ,SAC5B,MACJ,KAAK,UACL,IAAK,cACD,GAAyC,EAArCtb,KAAKkD,QAAQszC,sBACb,KAAM,kDAEVx2C,MAAKk0C,YAAYl0C,KAAKiL,OAAOqQ,SAAUtb,KAAKkD,QAAQszC,sBACpD,MACJ,KAAK,YACL,IAAK,YAKTC,EAAa9K,EAAWvpC,QACxBC,KAAM,SAAUyF,GACZ,GAAI4R,GAAO1Z,IAEX,IADA2rC,EAAW16B,GAAG5O,KAAKoG,KAAKiR,GACpBxS,EAAMmB,YAAYP,GAClB,KAAM,uBAEV9H,MAAK8H,QAAUA,GAEnBs0B,OAAQ,SAAUl5B,GAAV,GAEA+tC,GAEAC,CACJ,OAJAlxC,MAAKsuC,gBAAgBprC,GACjB+tC,EAAU,GAAI1C,GAA0BvuC,KAAK8H,SACjD9H,KAAKue,MAAQ0yB,EAAQ/B,UACjBgC,EAAelxC,KAAK02C,mBACjB,GAAI5uC,GAAQqpC,YAAYnxC,KAAK8H,QAASopC,IAEjDwF,iBAAkB,WAAA,GAIVp4B,GAIA8d,EACA9W,EACKrrB,EACDyoB,EACAkwB,EAIA10B,EACAqB,CAhBR,KAAIvf,KAAKue,MAAMtV,YAGXqV,EAAate,KAAKue,MAAMH,0BACxBlX,EAAM+B,QAAQqV,IAAlB,CAKA,IAFI8d,EAAS,GAAIuW,GAAoB3yC,KAAKkD,SACtCoiB,KACKrrB,EAAI,EAAOqkB,EAAWnkB,OAAfF,EAAuBA,IAAK,CAGxC,GAFIyoB,EAAYpE,EAAWrkB,GACvB24C,EAAY5yC,KAAK22C,QAAQj0B,IACxBkwB,EACD,KAAM,mDAEN10B,GAAO00B,EAAU10B,KACjBqB,EAAOqzB,EAAUrzB,KACrB6c,EAAOA,OAAO7c,EAAMrB,GACpBoH,EAAM1rB,KAAK2lB,GAEf,MAAOvf,MAAKstC,qBAAqBhoB,KAErCqxB,QAAS,SAAUp4B,GAAV,GAGQtkB,GAAO4X,EACRqJ,EACKjU,EACD2vC,EALZ14B,EAAO,IACX,IAAIle,KAAKkD,QAAQ4oC,OAAS9rC,KAAKkD,QAAQ4oC,MAAM3xC,OAAS,EAClD,IAASF,EAAI,EAAG4X,EAAM0M,EAAMhB,MAAMpjB,OAAY0X,EAAJ5X,EAASA,IAE/C,IADIihB,EAAOqD,EAAMhB,MAAMtjB,GACdgN,EAAI,EAAOjH,KAAKkD,QAAQ4oC,MAAM3xC,OAAvB8M,EAA+BA,IAE3C,GADI2vC,EAAiB52C,KAAKkD,QAAQ4oC,MAAM7kC,GACpC2vC,IAAmB17B,EAAKP,gBAAiB,CACzCuD,EAAOhD,CACP,OAKhB,IAAKgD,IACDA,EAAOK,EAAML,QACRA,GACD,KAAM,qCAGd,OAAOle,MAAK62C,eAAet4B,EAAOL,IAEtC24B,eAAgB,SAAUt4B,EAAOL,GAC7B,GAAIqB,GAAOhB,EAAMS,gBAAgBd,EACjC,OAAIhX,GAAMmB,YAAYkX,IAASA,EAAKtW,UACzB,MAGPsW,KAAMA,EACNrB,KAAMqB,EAAKrB,SAInB44B,EAAgBnL,EAAWvpC,QAC3BC,KAAM,SAAUyF,GACZ,GAAI4R,GAAO1Z,IAEX,IADA2rC,EAAW16B,GAAG5O,KAAKoG,KAAKiR,GACpBxS,EAAMmB,YAAYP,GAClB,KAAM,2BAEV9H,MAAK8H,QAAUA,GAEnBs0B,OAAQ,SAAUl5B,GAAV,GAEA+tC,GACA1yB,EAIAD,EAIKrkB,EACDyoB,EAGJwuB,CAXJ,IAHAlxC,KAAKsuC,gBAAgBprC,GACjB+tC,EAAU,GAAI1C,GAA0BvuC,KAAK8H,SAC7CyW,EAAQ0yB,EAAQ/B,QAAQhsC,IACxBqb,EAAMtV,YAGNqV,EAAaC,EAAMH,0BACnBlX,EAAM+B,QAAQqV,IAAlB,CAGA,IAASrkB,EAAI,EAAOqkB,EAAWnkB,OAAfF,EAAuBA,IAC/ByoB,EAAYpE,EAAWrkB,GAC3B+F,KAAKonB,YAAY1E,EAAWxf,EAGhC,OADIguC,GAAelxC,KAAKstC,qBAAqBhvB,GACtC,GAAIxW,GAAQqpC,YAAYnxC,KAAK8H,QAASopC,KAEjD6F,uBAAwB,WAAA,GACXhwC,GACDmU,CADR,KAASnU,EAAI,EAAO/G,KAAKue,MAAMhB,MAAMpjB,OAArB4M,EAA6BA,IACrCmU,EAAOlb,KAAKue,MAAMhB,MAAMxW,GAC5BmU,EAAK87B,MAAQ,GACb97B,EAAK+7B,oBAAsB,EAC3B/7B,EAAKg8B,kBAAoB,EACzBh8B,EAAKH,WAAY,EACjBG,EAAKi8B,YAAc,EACnBj8B,EAAKk8B,YAAc,EACnBl8B,EAAKm8B,iBAAmB,EACxBn8B,EAAKo8B,mBAAqB,EAC1Bp8B,EAAKq8B,aAAe,GAG5BC,SAAU,SAAUj5B,GAAV,GACYtkB,GAAGoF,EAAG8b,EAGpBs8B,EAAax9B,EAAMpN,EA0BnB6qC,EAMK38C,EACDmgB,EACAy8B,EAaJX,EAlDAl1C,KACA81C,EAAW,GAAIpnC,GACfqnC,EAAa,CAQjB,KANA3wC,EAAMgE,QAAQqT,EAAMhB,MAAO,SAAUrC,GACJ,IAAzBA,EAAKT,SAAStgB,SACdy9C,EAASh/B,IAAIsC,EAAM,GACnBpZ,EAAQlI,KAAKshB,MAGdpZ,EAAQ3H,OAAS,GAEpB,IADA8f,EAAOnY,EAAQjD,QACV5E,EAAI,EAAOggB,EAAKO,SAASrgB,OAAlBF,EAA0BA,IAClCkhB,EAAOlB,EAAKO,SAASvgB,GACrB4S,EAASsO,EAAKtO,OAEV4qC,EADAG,EAAS/+B,YAAYhM,GACPpM,KAAK7H,IAAIg/C,EAAS50C,IAAIiX,GAAQ,EAAG29B,EAAS50C,IAAI6J,IAE9C+qC,EAAS50C,IAAIiX,GAAQ,EAEvC29B,EAASh/B,IAAI/L,EAAQ4qC,GACjBA,EAAcI,IACdA,EAAaJ,GAEZ9rC,EAAS7J,EAAS+K,IACnB/K,EAAQlI,KAAKiT,EAUzB,KANI6qC,EAAcE,EAAS79B,OAC3B29B,EAAY79C,KAAK,SAAUsY,EAAI2lC,GAAd,GACTC,GAAUH,EAAS50C,IAAImP,GACvB6lC,EAAUJ,EAAS50C,IAAI80C,EAC3B,OAAO5wC,GAAMC,KAAK6wC,EAAUD,KAEvBh9C,EAAI,EAAO28C,EAAYv9C,OAAhBY,IAA0BA,EAGtC,GAFImgB,EAAOw8B,EAAY38C,GACnB48C,EAAW92C,OAAOC,UACO,IAAzBoa,EAAKV,SAASrgB,OAAlB,CAGA,IAAKkF,EAAI,EAAO6b,EAAKV,SAASrgB,OAAlBkF,IAA4BA,EACpC8b,EAAOD,EAAKV,SAASnb,GACrBs4C,EAAWl3C,KAAK9H,IAAIg/C,EAAUC,EAAS50C,IAAImY,EAAKtO,QAEhD8qC,GAAW,GACXC,EAASh/B,IAAIsC,EAAMy8B,EAAW,GAKtC,IAFA33C,KAAKi4C,UAEAh+C,EAAI,EAAO49C,EAAa,EAAjB59C,EAAoBA,IAC5B+8C,KACAA,EAAMkB,WACNl4C,KAAKi4C,OAAOr+C,KAAKo9C,EAMrB,KAJAY,EAAS1sC,QAAQ,SAAUgQ,EAAM87B,GAC7B97B,EAAK87B,MAAQA,EACbh3C,KAAKi4C,OAAOjB,GAAOp9C,KAAKshB,IACzBlb,MACEX,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,EAAwBA,IAEhC,IADA23C,EAAQh3C,KAAKi4C,OAAO54C,GACfpF,EAAI,EAAO+8C,EAAM78C,OAAVF,EAAkBA,IAC1B+8C,EAAM/8C,GAAGs9C,aAAet9C,GAIpCmtB,YAAa,SAAU7I,EAAOrb,GAC1B,GAAIgE,EAAMmB,YAAYkW,GAClB,KAAM,yDAENrX,GAAMiB,UAAUjF,IAChBlD,KAAKsuC,gBAAgBprC,GAEzBlD,KAAKue,MAAQA,EACbA,EAAME,gBACN,IAAI+F,GAAgBjG,EAAM0E,aAC1BjjB,MAAK+2C,yBACL/2C,KAAKw3C,SAASj5B,EAAOrb,GACrBlD,KAAKm4C,WACLn4C,KAAKo4C,qBACLp4C,KAAKq4C,aACLr4C,KAAKs4C,eACLt4C,KAAKu4C,oBACLv4C,KAAKw4C,aACLtxC,EAAMgE,QAAQsZ,EAAe,SAAUre,GAC/BA,EAAEoD,QACFpD,EAAEoD,OAAOkF,aAIrBgqC,WAAY,SAAUj5C,EAAGzE,EAAG29C,GAAhB,GACJr5C,GAAIG,EAAEw3C,MACN/8C,EAAIuF,EAAEm5C,UACV34C,MAAK44C,aAAav5C,GAAGpF,GAAKy+C,GAE9BG,WAAY,SAAUr5C,EAAGzE,GAAb,GAECgM,GADL+xC,EAAO,EAAGC,EAAKv5C,EAAEm5C,WAAYK,EAAKj+C,EAAE49C,WAAYt5C,EAAIG,EAAEw3C,MAAOr+C,EAAM8H,KAAK9H,IAAIogD,EAAIC,GAAKpgD,EAAM6H,KAAK7H,IAAImgD,EAAIC,EAC5G,KAASjyC,EAAIpO,EAASC,EAAJmO,IAAWA,EACzB+xC,GAAQ94C,KAAK44C,aAAav5C,GAAG0H,EAEjC,OAAO+xC,IAEXG,iBAAkB,SAAUC,GAAV,GACkBn+C,GAAGmgB,EAC1B5b,EACD65C,EAUA55C,EAGI65C,EAMAC,EAGIl9B,EAGKhW,EACDmzC,EA5BhBC,EAAU,GAAI/oC,EAClB,KAASlR,EAAI,EAAOU,KAAKi4C,OAAO99C,OAAhBmF,IAA0BA,EAEtC,GADI65C,EAAaD,EAAY55C,GAC7B,CAGA,IAAKvE,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAC/BmgB,EAAOi+B,EAAWp+C,GACbw+C,EAAQ1gC,YAAYqC,IACrBlb,KAAKw5C,UAAUt+B,EAAMq+B,EAASj6C,EAItC,KADIC,EAAIsB,OAAO44C,kBACV1+C,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAC/BmgB,EAAOi+B,EAAWp+C,GACdq+C,EAAep5C,KAAKo5C,aAAal+B,GACjCk+B,GAAgBp5C,KAAK05C,cAAc12C,IAAIo2C,KAAkB95C,IACzDC,EAAIkB,KAAK9H,IAAI4G,EAAGg6C,EAAQv2C,IAAIo2C,GAAgBG,EAAQv2C,IAAIkY,GAAQlb,KAAK64C,WAAW39B,EAAMk+B,IAG9F,IAAI75C,IAAMsB,OAAO44C,kBAAmB,CAEhC,IADIJ,KACCt+C,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAK/B,IAJAmgB,EAAOi+B,EAAWp+C,GACdohB,KACJjV,EAAMuF,SAAS0P,EAAWnc,KAAK25C,QAAQ32C,IAAIkY,IAC3ChU,EAAMuF,SAAS0P,EAAWnc,KAAK45C,UAAU52C,IAAIkY,IACpC/U,EAAI,EAAOgW,EAAUhiB,OAAdgM,EAAsBA,IAC9BmzC,EAAWn9B,EAAUhW,GACrBnG,KAAK05C,cAAc12C,IAAIs2C,GAAYh6C,GACnC+5C,EAAEz/C,KAAK2/C,EAAQv2C,IAAIs2C,GAAYC,EAAQv2C,IAAIkY,GAIvDm+B,GAAEx/C,OAEE0F,EADa,IAAb85C,EAAEl/C,OACE,EACGk/C,EAAEl/C,OAAS,IAAM,EACpBk/C,EAAEr5C,KAAK65C,OAAOR,EAAEl/C,OAAQ,KAEvBk/C,EAAEr5C,KAAK65C,OAAOR,EAAEl/C,OAAQ,GAAK,GAAKk/C,EAAEr5C,KAAK65C,OAAOR,EAAEl/C,OAAQ,KAAO,EAG9E,IAAKY,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAC/BmgB,EAAOi+B,EAAWp+C,GAClBw+C,EAAQ3gC,IAAIsC,EAAMq+B,EAAQv2C,IAAIkY,GAAQ3b,GAG9C,MAAOg6C,IAEXO,iBAAkB,SAAUC,GAAV,GACmBh/C,GAAGmgB,EAC3B5b,EACD65C,EAUA55C,EAGIy6C,EAMAX,EAGIl9B,EAGKhW,EACDmzC,EA5BhBW,EAAW,GAAIzpC,EACnB,KAASlR,EAAI,EAAOU,KAAKi4C,OAAO99C,OAAhBmF,IAA0BA,EAEtC,GADI65C,EAAaY,EAAaz6C,GAC9B,CAGA,IAAKvE,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAC/BmgB,EAAOi+B,EAAWp+C,GACbk/C,EAASphC,YAAYqC,IACtBlb,KAAKk6C,WAAWh/B,EAAM++B,EAAU36C,EAIxC,KADIC,EAAIsB,OAAOs5C,kBACVp/C,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAC/BmgB,EAAOi+B,EAAWp+C,GACdi/C,EAAch6C,KAAKg6C,YAAY9+B,GAC/B8+B,GAAeh6C,KAAKo6C,eAAep3C,IAAIg3C,KAAiB16C,IACxDC,EAAIkB,KAAK7H,IAAI2G,EAAG06C,EAASj3C,IAAIg3C,GAAeC,EAASj3C,IAAIkY,GAAQlb,KAAK64C,WAAWmB,EAAa9+B,IAGtG,IAAI3b,IAAMsB,OAAOs5C,kBAAmB,CAEhC,IADId,KACCt+C,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAK/B,IAJAmgB,EAAOi+B,EAAWp+C,GACdohB,KACJjV,EAAMuF,SAAS0P,EAAWnc,KAAK25C,QAAQ32C,IAAIkY,IAC3ChU,EAAMuF,SAAS0P,EAAWnc,KAAK45C,UAAU52C,IAAIkY,IACpC/U,EAAI,EAAOgW,EAAUhiB,OAAdgM,EAAsBA,IAC9BmzC,EAAWn9B,EAAUhW,GACrBnG,KAAKo6C,eAAep3C,IAAIs2C,GAAYh6C,GACpC+5C,EAAEz/C,KAAKqgD,EAASj3C,IAAIkY,GAAQ++B,EAASj3C,IAAIs2C,GAIrDD,GAAEx/C,OAEE0F,EADa,IAAb85C,EAAEl/C,OACE,EACGk/C,EAAEl/C,OAAS,IAAM,EACpBk/C,EAAEr5C,KAAK65C,OAAOR,EAAEl/C,OAAQ,KAEvBk/C,EAAEr5C,KAAK65C,OAAOR,EAAEl/C,OAAQ,GAAK,GAAKk/C,EAAEr5C,KAAK65C,OAAOR,EAAEl/C,OAAQ,KAAO,EAG9E,IAAKY,EAAI,EAAOo+C,EAAWh/C,OAAfY,EAAuBA,IAC/BmgB,EAAOi+B,EAAWp+C,GAClBk/C,EAASrhC,IAAIsC,EAAM++B,EAASj3C,IAAIkY,GAAQ3b,GAGhD,MAAO06C,IAEXI,aAAc,WAAA,GACNC,IAAapiD,MAAO,MACpBsE,EAASwD,KAAKu6C,eAAeD,EAAU,EAE3C,OADAt6C,MAAK05C,cAAgBY,EAASpiD,MACvBsE,GAEXg+C,cAAe,WAAA,GACPC,IAAcviD,MAAO,MACrBsE,EAASwD,KAAKu6C,eAAeE,EAAW,GAE5C,OADAz6C,MAAKo6C,eAAiBK,EAAUviD,MACzBsE,GAEX+9C,eAAgB,SAAUG,EAAUn7C,GAApB,GAEHF,GAED23C,EACKj8C,EACDmgB,EAIQy/B,EACKp2B,EACDq2B,EASpBC,EACK5gD,EArBL6gD,EAAc,EAAGC,EAAOL,EAASxiD,MAAQ,GAAIsY,EACjD,KAASnR,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,IAA0BA,EAGtC,IAFAy7C,EAAcz7C,EACV23C,EAAQh3C,KAAKi4C,OAAO54C,GACftE,EAAU,IAANwE,EAAU,EAAIy3C,EAAM78C,OAAS,EAAQY,GAAL,GAAci8C,EAAM78C,OAAVY,EAAkBA,GAAKwE,EAE1E,GADI2b,EAAO87B,EAAMj8C,GACZggD,EAAKliC,YAAYqC,GAUlB4/B,EAAcC,EAAK/3C,IAAIkY,OARvB,IADA6/B,EAAKniC,IAAIsC,EAAM4/B,GACX5/B,EAAKH,UAEL,IADI4/B,EAAS36C,KAAKg7C,aAAa9/B,GACtBqJ,EAAK,EAAQo2B,EAAOxgD,OAAZoqB,EAAoBA,IAC7Bq2B,EAAQD,EAAOp2B,GACnBw2B,EAAKniC,IAAIgiC,EAAOE,EASpC,KADID,KACK5gD,EAAI,EAAO+F,KAAKi4C,OAAO99C,OAAhBF,EAAwBA,IACpC4gD,EAAMjhD,KAAK,KAQf,OANAmhD,GAAK7vC,QAAQ,SAAUgQ,EAAM+/B,GACC,OAAtBJ,EAAMI,KACNJ,EAAMI,OAEVJ,EAAMI,GAAYrhD,KAAKshB,KAEpB2/B,GAEXK,kBAAmB,WACf,MAA8C,OAAvCl7C,KAAKkD,QAAQ2oC,QAAQ1sC,eAAiE,SAAvCa,KAAKkD,QAAQ2oC,QAAQ1sC,eAAmE,aAAvCa,KAAKkD,QAAQ2oC,QAAQ1sC,eAEhIg8C,oBAAqB,WACjB,MAA8C,UAAvCn7C,KAAKkD,QAAQ2oC,QAAQ1sC,eAAoE,SAAvCa,KAAKkD,QAAQ2oC,QAAQ1sC,eAAmE,eAAvCa,KAAKkD,QAAQ2oC,QAAQ1sC,eAEnIi8C,oBAAqB,WACjB,MAA8C,UAAvCp7C,KAAKkD,QAAQ2oC,QAAQ1sC,eAAoE,SAAvCa,KAAKkD,QAAQ2oC,QAAQ1sC,eAElFo5C,kBAAmB,WA6Lf,QAAS8C,GAAcrE,EAAOsE,GAA9B,GAEavgD,GACDmgB,EAFJtX,EAAS/C,OAAO06C,SACpB,KAASxgD,EAAI,EAAOi8C,EAAM78C,OAAVY,IAAoBA,EAC5BmgB,EAAO87B,EAAMj8C,GAEb6I,EADA03C,EAAIJ,oBACKz6C,KAAK7H,IAAIgL,EAAQsX,EAAKtX,QAEtBnD,KAAK7H,IAAIgL,EAAQsX,EAAKvX,MAGvC,OAAOC,GAvMI,GACX3J,GAAGoF,EAAG6b,EAAM87B,EAAOj8C,EAAGiiB,EAmDdw+B,EAIAC,EASIC,EAKIn/C,EAGAw8C,EACAC,EAShBE,EACAa,EACAR,EACAU,EACA76C,EAIAu8C,EACAC,EAGIC,EAAoBC,EAuBxBC,EA8DAC,EACAC,EAOAC,EAAuD9qC,EAenDxN,CAzMR,KAAKvE,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,IAA0BA,EAClC23C,EAAQh3C,KAAKi4C,OAAO54C,GACpB23C,EAAMn9C,KAAKmG,KAAKm8C,sBAGpB,KADAn8C,KAAK44C,gBACAv5C,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,IAA0BA,EAGlC,IAFA23C,EAAQh3C,KAAKi4C,OAAO54C,GACpBW,KAAK44C,aAAav5C,MACbtE,EAAI,EAAOi8C,EAAM78C,OAAVY,IAAoBA,EAC5BmgB,EAAO87B,EAAMj8C,GACbmgB,EAAKy9B,WAAa59C,EAClBiF,KAAK44C,aAAav5C,GAAGtE,GAAKiF,KAAKkD,QAAQ6oC,aAC/BiL,EAAM78C,OAAS,EAAnBY,IAEIiF,KAAK44C,aAAav5C,GAAGtE,IADrBiF,KAAKk7C,qBACuBhgC,EAAKvX,MAAQqzC,EAAMj8C,EAAI,GAAG4I,OAAS,GAEnCuX,EAAKtX,OAASozC,EAAMj8C,EAAI,GAAG6I,QAAU,EA+BjF,KA1BA5D,KAAK45C,UAAY,GAAIppC,GACrBxQ,KAAK25C,QAAU,GAAInpC,GACnBtJ,EAAMgE,QAAQlL,KAAKue,MAAMhB,MAAO,SAAUrC,GACtClb,KAAK45C,UAAUhhC,IAAIsC,MACnBlb,KAAK25C,QAAQ/gC,IAAIsC,OAClBlb,MACHkH,EAAMgE,QAAQlL,KAAKue,MAAMhE,MAAO,SAAUY,GAAV,GACxB5M,GAAS4M,EAAK/R,OACdgzC,EAAOjhC,EAAKtO,OACZ2mC,EAAO,KAAMF,EAAK,IAClB/kC,GAAOyoC,MAAQoF,EAAKpF,OACpBxD,EAAOr4B,EAAK/R,OACZkqC,EAAKn4B,EAAKtO,SAEVymC,EAAKn4B,EAAK/R,OACVoqC,EAAOr4B,EAAKtO,QAEhB7M,KAAK45C,UAAU52C,IAAIswC,GAAI15C,KAAK45C,GAC5BxzC,KAAK25C,QAAQ32C,IAAIwwC,GAAM55C,KAAK05C,IAC7BtzC,MACHA,KAAK45C,UAAU//B,aAAa,SAAUhO,GAClCA,EAAKhS,KAAKmG,KAAKm8C,wBAChBn8C,MACHA,KAAK25C,QAAQ9/B,aAAa,SAAUhO,GAChCA,EAAKhS,KAAKmG,KAAKm8C,wBAChBn8C,MACEX,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAS,EAAzBkF,IAA8BA,EAEtC,IADA23C,EAAQh3C,KAAKi4C,OAAO54C,GACf2d,EAAI,EAAOg6B,EAAM78C,OAAS,EAAnB6iB,EAAsBA,IAE9B,GADIw+B,EAAcxE,EAAMh6B,GACnBw+B,EAAYzgC,YAGb0gC,EAAWz7C,KAAK45C,UAAU52C,IAAIw4C,GAAa,GAC1CC,EAAS1gC,WAGd,IAAKhgB,EAAIiiB,EAAI,EAAOg6B,EAAM78C,OAAVY,IAAoBA,EAChCmgB,EAAO87B,EAAMj8C,GACRmgB,EAAKH,YAGN2gC,EAAW17C,KAAK45C,UAAU52C,IAAIkY,GAAM,GACnCwgC,EAAS3gC,WAGV0gC,EAASlE,aAAemE,EAASnE,eAC7Bh7C,EAAMk/C,EAASlE,aACnBkE,EAASlE,aAAemE,EAASnE,aACjCmE,EAASnE,aAAeh7C,EACpBw8C,EAAK0C,EAAS9C,WACdK,EAAK0C,EAAS/C,WAClB34C,KAAKi4C,OAAO54C,EAAI,GAAG05C,GAAM2C,EACzB17C,KAAKi4C,OAAO54C,EAAI,GAAG25C,GAAMyC,EACzBA,EAAS9C,WAAaK,EACtB0C,EAAS/C,WAAaI,GAetC,KAVIG,EAAcl5C,KAAKq6C,eACnBN,EAAe/5C,KAAKw6C,gBACpBjB,EAAUv5C,KAAKi5C,iBAAiBC,GAChCe,EAAWj6C,KAAK85C,iBAAiBC,GACjC36C,EAAI,GAAIoR,GACZtJ,EAAMgE,QAAQlL,KAAKue,MAAMhB,MAAO,SAAUrC,GACtC9b,EAAEwZ,IAAIsC,GAAOq+B,EAAQv2C,IAAIkY,GAAQ++B,EAASj3C,IAAIkY,IAAS,KAEvDygC,EAAQ,GAAInrC,GACZorC,EAAS,GAAIprC,GACZnR,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,IAA0BA,EAGlC,IAFA23C,EAAQh3C,KAAKi4C,OAAO54C,GAChBw8C,EAAgB,GAAIC,EAAc,GACjC/gD,EAAI,EAAOi8C,EAAM78C,OAAVY,IAAoBA,EAC5BmgB,EAAO87B,EAAMj8C,GACb4gD,EAAM/iC,IAAIsC,EAAM,GAChB0gC,EAAOhjC,IAAIsC,GAAM,GACbA,EAAKH,YACiB,KAAlB8gC,EACAA,EAAgB9gD,EACT8gD,IAAkB9gD,EAAI,EAC7B8gD,EAAgB9gD,GAEhB+gD,EAAc/gD,EACd4gD,EAAM/iC,IAAIo+B,EAAM6E,GAAgB,GAC5Bz8C,EAAE4D,IAAIkY,GAAQ9b,EAAE4D,IAAIg0C,EAAM6E,MAAoB77C,KAAK64C,WAAW7B,EAAM6E,GAAgB3gC,GACpF0gC,EAAOhjC,IAAIo+B,EAAM6E,IAAgB,GAEjCD,EAAOhjC,IAAIo+B,EAAM6E,IAAgB,GAErCA,EAAgB9gD,GAwFhC,KAnFIghD,GACA,EACA,IAEJ70C,EAAMgE,QAAQ6wC,EAAY,SAAUx8C,GAAV,GAEbF,GACD23C,EACAqF,EACAC,EACAC,EAqBIC,EAgBIC,EA1CZ91C,EAAc,IAANpH,EAAU,EAAIS,KAAKi4C,OAAO99C,OAAS,CAC/C,KAASkF,EAAIsH,EAAYtH,GAAL,GAAcW,KAAKi4C,OAAO99C,OAAhBkF,EAAwBA,GAAKE,EAAG,CAK1D,GAJIy3C,EAAQh3C,KAAKi4C,OAAO54C,GACpBg9C,EAAoBr8C,KAAK08C,kBAAkB1F,GAC3CsF,EAAe,KACfC,EAAW,KACW,KAAtBF,EAGA,IAFAC,EAAetF,EAAMqF,GACrBE,KACKtiD,EAAI,EAAOoiD,EAAJpiD,EAAuBA,IAC/BsiD,EAAS3iD,KAAKo9C,EAAM/8C,QAGxBqiD,GAAe,KACfC,EAAWvF,CAEf,IAAIuF,EAASpiD,OAAS,EAAG,CAErB,IADA6F,KAAK28C,WAAWv9C,EAAG,KAAMk9C,EAAc/8C,EAAGg9C,GACrCtiD,EAAI,EAAOsiD,EAASpiD,OAAS,EAAtBF,IAA2BA,EACnC+F,KAAKy4C,WAAW8D,EAAStiD,GAAIsiD,EAAStiD,EAAI,GAAImF,EAAE4D,IAAIu5C,EAAStiD,EAAI,IAAMmF,EAAE4D,IAAIu5C,EAAStiD,IAEtFqiD,IACAt8C,KAAKy4C,WAAW8D,EAASA,EAASpiD,OAAS,GAAImiD,EAAcl9C,EAAE4D,IAAIs5C,GAAgBl9C,EAAE4D,IAAIu5C,EAASA,EAASpiD,OAAS,KAG5H,KAAOmiD,GAAc,CAEjB,GADIE,EAAax8C,KAAK48C,gBAAgB5F,EAAOsF,IActC,GAAIX,EAAM34C,IAAIs5C,KAAkB/8C,EAAG,CAItC,IAHA88C,EAAoBC,EAAa3D,WAC7B8D,EAAkBD,EAAW7D,WACjC4D,KACKtiD,EAAIoiD,EAAoB,EAAOI,EAAJxiD,EAAqBA,IACjDsiD,EAAS3iD,KAAKo9C,EAAM/8C,GAEpBsiD,GAASpiD,OAAS,GAClB6F,KAAK28C,WAAWv9C,EAAGk9C,EAAcE,EAAYj9C,EAAGg9C,GAEpDX,EAAOhjC,IAAI0jC,GAAc,QAvBZ,CAGb,IAFAD,EAAoBC,EAAa3D,WACjC4D,KACKtiD,EAAIoiD,EAAoB,EAAOrF,EAAM78C,OAAVF,EAAkBA,IAC9CsiD,EAAS3iD,KAAKo9C,EAAM/8C,GAExB,IAAIsiD,EAASpiD,OAAS,EAAG,CAErB,IADA6F,KAAK28C,WAAWv9C,EAAGk9C,EAAc,KAAM/8C,EAAGg9C,GACrCtiD,EAAI,EAAOsiD,EAASpiD,OAAS,EAAtBF,IAA2BA,EACnC+F,KAAKy4C,WAAW8D,EAAStiD,GAAIsiD,EAAStiD,EAAI,GAAImF,EAAE4D,IAAIu5C,EAAStiD,EAAI,IAAMmF,EAAE4D,IAAIu5C,EAAStiD,IAE1F+F,MAAKy4C,WAAW6D,EAAcC,EAAS,GAAIn9C,EAAE4D,IAAIu5C,EAAS,IAAMn9C,EAAE4D,IAAIs5C,KAc9EA,EAAeE,EAEnBx8C,KAAK68C,iBAAiBx9C,EAAGE,EAAGo8C,EAAOC,KAExC57C,MACCg8C,EAAiBh8C,KAAKo7C,sBAAwB,EAAIp7C,KAAKi4C,OAAO99C,OAAS,EACvE8hD,EAAyB,SAAUl1C,EAAGu0C,GACtC,MAAIA,GAAIF,sBACOE,EAAIrD,OAAO99C,OAAf4M,EAEAA,GAAK,GAGhBm1C,EAAiBl8C,KAAKo7C,sBAAwB,EAAK,GAAIhqC,EAAS,EAa/DnX,EAAI+hD,EAAgBC,EAAuBhiD,EAAG+F,MAAO/F,GAAKiiD,EAAgB,CAG3E,IAFAlF,EAAQh3C,KAAKi4C,OAAOh+C,GAChB2J,EAASy3C,EAAcrE,EAAOh3C,MAC7BjF,EAAI,EAAOi8C,EAAM78C,OAAVY,IAAoBA,EAC5BmgB,EAAO87B,EAAMj8C,GACTiF,KAAKk7C,qBACLhgC,EAAK9b,EAAIA,EAAE4D,IAAIkY,GACfA,EAAKxT,EAAI0J,EAASxN,EAAS,IAE3BsX,EAAK9b,EAAIgS,EAASxN,EAAS,EAC3BsX,EAAKxT,EAAItI,EAAE4D,IAAIkY,GAGvB9J,IAAUpR,KAAKkD,QAAQypC,gBAAkB/oC,IAGjDi5C,iBAAkB,SAAUx9C,EAAGE,EAAGo8C,EAAOC,GAAvB,GAIVkB,GAAmBC,EACnB/F,EACKj8C,EACDiiD,EAEIC,EAGQxkD,EACAykD,EACAnE,EACAC,EACK/+C,EAODkjD,EACAC,EACKn2C,CAxB7B,MAAY,EAAR5H,EAAIE,GAASF,EAAIE,GAAKS,KAAKi4C,OAAO99C,QAKtC,IAFI2iD,EAAa,KAAMC,EAAmB,KACtC/F,EAAQh3C,KAAKi4C,OAAO54C,EAAIE,GACnBxE,EAAI,EAAOi8C,EAAM78C,OAAVY,IAAoBA,EAEhC,GADIiiD,EAAahG,EAAMj8C,GACnBiiD,EAAWjiC,YACPkiC,EAAmBj9C,KAAKq9C,mBAAmBL,EAAY39C,GACvD49C,EAAiBliC,WAAW,CAC5B,GAAI+hC,EAAY,CAKZ,IAJIrkD,EAAImjD,EAAO54C,IAAI+5C,GACfG,EAASl9C,KAAKi4C,OAAO54C,GACrB05C,EAAKgE,EAAiBpE,WACtBK,EAAKiE,EAAiBtE,WACjB1+C,EAAI8+C,EAAK,EAAOC,EAAJ/+C,IAAUA,EACvBijD,EAAOjjD,GAAG8gB,YACVtiB,EAAIA,GAAKmjD,EAAO54C,IAAIk6C,EAAOjjD,IAGnC,IAAIxB,EAIA,IAHAkjD,EAAM/iC,IAAIkkC,EAAYv9C,GAClB49C,EAAKL,EAAWnE,WAChByE,EAAKJ,EAAWrE,WACX1xC,EAAIk2C,EAAK,EAAOC,EAAJn2C,IAAUA,EACvB+vC,EAAM/vC,GAAG8T,WACT4gC,EAAM/iC,IAAIo+B,EAAM/vC,GAAI1H,GAKpCu9C,EAAaE,EACbD,EAAmBE,IAKnCI,mBAAoB,SAAUniC,EAAM7b;AAChC,GAAIi6C,GAAWt5C,KAAK25C,QAAQ32C,IAAIkY,GAAM,EACtC,OAAIo+B,GAAStC,QAAU33C,EACZi6C,GAEXA,EAAWt5C,KAAK45C,UAAU52C,IAAIkY,GAAM,GAChCo+B,EAAStC,QAAU33C,EACZi6C,EAEJ,OAEXqD,WAAY,SAAUv9C,EAAGk9C,EAAcE,EAAYc,EAAKf,GAIpD,GAHwB,IAApBA,EAASpiD,QACT6F,KAAKu9C,gBAAgBn+C,EAAGk9C,EAAcE,EAAYc,EAAKf,EAAS,IAEhEA,EAASpiD,OAAS,EAAG,CACrB,GAAI4E,GAAIw9C,EAASpiD,OAAQqmB,EAAIxgB,KAAK65C,OAAO96C,EAAG,EAC5CiB,MAAK28C,WAAWv9C,EAAGk9C,EAAcE,EAAYc,EAAKf,EAAS9pC,MAAM,EAAG+N,IACpExgB,KAAK28C,WAAWv9C,EAAGk9C,EAAcE,EAAYc,EAAKf,EAAS9pC,MAAM+N,IACjExgB,KAAKw9C,iBAAiBp+C,EAAGk9C,EAAcE,EAAYc,EAAKf,KAGhEgB,gBAAiB,SAAUn+C,EAAGk9C,EAAcE,EAAYc,EAAKpiC,GAA5C,GACTiB,GAAoB,KAARmhC,EAAat9C,KAAK45C,UAAU52C,IAAIkY,GAAQlb,KAAK25C,QAAQ32C,IAAIkY,GACrEngB,EAAIohB,EAAUhiB,MACR,KAANY,IACIA,EAAI,IAAM,EACVqE,EAAEwZ,IAAIsC,EAAM9b,EAAE4D,IAAImZ,EAAUnc,KAAK65C,OAAO9+C,EAAG,MAE3CqE,EAAEwZ,IAAIsC,GAAO9b,EAAE4D,IAAImZ,EAAUnc,KAAK65C,OAAO9+C,EAAG,GAAK,IAAMqE,EAAE4D,IAAImZ,EAAUnc,KAAK65C,OAAO9+C,EAAG,MAAQ,GAE9FuhD,GACAl9C,EAAEwZ,IAAIsC,EAAMza,KAAK7H,IAAIwG,EAAE4D,IAAIkY,GAAO9b,EAAE4D,IAAIs5C,GAAgBt8C,KAAK64C,WAAWyD,EAAcphC,KAEtFshC,GACAp9C,EAAEwZ,IAAIsC,EAAMza,KAAK9H,IAAIyG,EAAE4D,IAAIkY,GAAO9b,EAAE4D,IAAIw5C,GAAcx8C,KAAK64C,WAAW39B,EAAMshC,OAIxFgB,iBAAkB,SAAUp+C,EAAGk9C,EAAcE,EAAYc,EAAKf,GAA5C,GAEKtiD,GAAGqF,EAAGvE,EAAGohB,EAAWm9B,EAAUmE,EA4B7CC,EA4BAC,EAAaC,EACbp+C,EA1DAT,EAAIw9C,EAASpiD,OAAQqmB,EAAIxgB,KAAK65C,OAAO96C,EAAG,GACxC8+C,IACJ,KAAK5jD,EAAI,EAAOumB,EAAJvmB,IAASA,EAAG,CAGpB,IAFAqF,EAAI,EACJ6c,EAAoB,KAARmhC,EAAat9C,KAAK45C,UAAU52C,IAAIu5C,EAAStiD,IAAM+F,KAAK25C,QAAQ32C,IAAIu5C,EAAStiD,IAChFc,EAAI,EAAOohB,EAAUhiB,OAAdY,IAAwBA,EAChCu+C,EAAWn9B,EAAUphB,GACjBqE,EAAE4D,IAAIs2C,IAAal6C,EAAE4D,IAAIu5C,EAAStiD,IAClCqF,KAEAA,IACAu+C,EAASjkD,MACLmN,EAAG3H,EAAE4D,IAAIs2C,GAAYt5C,KAAK64C,WAAW0D,EAAStiD,GAAIsiD,EAAS/7B,EAAI,IAC/DthB,EAAG,IAIf2+C,GAASjkD,MACLmN,EAAG3H,EAAE4D,IAAIu5C,EAAStiD,IAAM+F,KAAK64C,WAAW0D,EAAStiD,GAAIsiD,EAAS/7B,EAAI,IAClEthB,EAAGI,IAWX,IARIg9C,GACAuB,EAASjkD,MACLmN,EAAG3H,EAAE4D,IAAIs5C,GAAgBt8C,KAAK64C,WAAWyD,EAAcC,EAAS/7B,EAAI,IACpEthB,EAAG2B,OAAOC,YAGlB+8C,EAAShkD,KAAKmG,KAAK89C,6BACfJ,KACCzjD,EAAIumB,EAAOzhB,EAAJ9E,IAASA,EAAG,CAGpB,IAFAqF,EAAI,EACJ6c,EAAoB,KAARmhC,EAAat9C,KAAK45C,UAAU52C,IAAIu5C,EAAStiD,IAAM+F,KAAK25C,QAAQ32C,IAAIu5C,EAAStiD,IAChFc,EAAI,EAAOohB,EAAUhiB,OAAdY,IAAwBA,EAChCu+C,EAAWn9B,EAAUphB,GACjBqE,EAAE4D,IAAIs2C,IAAal6C,EAAE4D,IAAIu5C,EAAStiD,IAClCqF,KAEAA,IACAo+C,EAAU9jD,MACNmN,EAAG3H,EAAE4D,IAAIs2C,GAAYt5C,KAAK64C,WAAW0D,EAAStiD,GAAIsiD,EAAS/7B,IAC3DthB,EAAG,IAIfw+C,GAAU9jD,MACNmN,EAAG3H,EAAE4D,IAAIu5C,EAAStiD,IAAM+F,KAAK64C,WAAW0D,EAAStiD,GAAIsiD,EAAS/7B,IAC9DthB,EAAGI,IAYX,IATIk9C,GACAkB,EAAU9jD,MACNmN,EAAG3H,EAAE4D,IAAIw5C,GAAcx8C,KAAK64C,WAAW2D,EAAYD,EAAS/7B,IAC5DthB,EAAG2B,OAAOC,YAGlB48C,EAAU7jD,KAAKmG,KAAK+9C,4BAChBJ,EAAU,EAAGC,EAAW,EACxBp+C,EAAIQ,KAAK64C,WAAW0D,EAAS/7B,EAAI,GAAI+7B,EAAS/7B,IAC3CphB,EAAE4D,IAAIu5C,EAAS/7B,IAAMphB,EAAE4D,IAAIu5C,EAAS/7B,EAAI,IAAMhhB,GACjD,GAAco+C,EAAVD,EAAoB,CACpB,GAAwB,IAApBE,EAAS1jD,OAAc,CACvBiF,EAAEwZ,IAAI2jC,EAAS/7B,EAAI,GAAIphB,EAAE4D,IAAIu5C,EAAS/7B,IAAMhhB,EAC5C,OAEAi+C,EAAOI,EAASh/C,QAChB8+C,GAAoBF,EAAKv+C,EACzBE,EAAEwZ,IAAI2jC,EAAS/7B,EAAI,GAAIi9B,EAAK12C,GAC5B3H,EAAEwZ,IAAI2jC,EAAS/7B,EAAI,GAAI/f,KAAK7H,IAAIwG,EAAE4D,IAAIu5C,EAAS/7B,EAAI,IAAKphB,EAAE4D,IAAIu5C,EAAS/7B,IAAMhhB,QAE9E,CACH,GAAyB,IAArBk+C,EAAUvjD,OAAc,CACxBiF,EAAEwZ,IAAI2jC,EAAS/7B,GAAIphB,EAAE4D,IAAIu5C,EAAS/7B,EAAI,IAAMhhB,EAC5C,OAEAi+C,EAAOC,EAAU7+C,QACjB++C,GAAsBH,EAAKv+C,EAC3BE,EAAEwZ,IAAI2jC,EAAS/7B,GAAIi9B,EAAK12C,GACxB3H,EAAEwZ,IAAI2jC,EAAS/7B,GAAI/f,KAAK9H,IAAIyG,EAAE4D,IAAIu5C,EAAS/7B,IAAKphB,EAAE4D,IAAIu5C,EAAS/7B,EAAI,IAAMhhB,IAIrF,IAAKvF,EAAIumB,EAAI,EAAGvmB,GAAK,EAAGA,IACpBmF,EAAEwZ,IAAI2jC,EAAStiD,GAAIwG,KAAK9H,IAAIyG,EAAE4D,IAAIu5C,EAAStiD,IAAKmF,EAAE4D,IAAIu5C,EAAS/7B,EAAI,IAAMxgB,KAAK64C,WAAW0D,EAAStiD,GAAIsiD,EAAS/7B,EAAI,KAEvH,KAAKvmB,EAAIumB,EAAI,EAAOzhB,EAAJ9E,EAAOA,IACnBmF,EAAEwZ,IAAI2jC,EAAStiD,GAAIwG,KAAK7H,IAAIwG,EAAE4D,IAAIu5C,EAAStiD,IAAKmF,EAAE4D,IAAIu5C,EAAS/7B,IAAMxgB,KAAK64C,WAAW0D,EAAStiD,GAAIsiD,EAAS/7B,OAGnHg5B,UAAW,SAAUt+B,EAAMq+B,EAASyE,GAChC,GAAIzhD,GAAMsE,OAAOs5C,iBACjBjzC,GAAMgE,QAAQlL,KAAKi+C,cAAc/iC,GAAO,SAAUhc,GAC9C,GAAI86C,GAAch6C,KAAKg6C,YAAY96C,EAC/B86C,IAAeh6C,KAAK05C,cAAc12C,IAAIg3C,KAAiBh6C,KAAK05C,cAAc12C,IAAI9D,KACzEq6C,EAAQ1gC,YAAYmhC,IACrBh6C,KAAKw5C,UAAUQ,EAAaT,EAASyE,GAEzCzhD,EAAMkE,KAAK7H,IAAI2D,EAAKg9C,EAAQv2C,IAAIg3C,GAAeh6C,KAAK64C,WAAWmB,EAAa96C,MAEjFc,MACCzD,IAAQsE,OAAOs5C,oBACf59C,EAAM,GAEV2K,EAAMgE,QAAQlL,KAAKi+C,cAAc/iC,GAAO,SAAUhc,GAC9Cq6C,EAAQ3gC,IAAI1Z,EAAG3C,MAGvB29C,WAAY,SAAUh/B,EAAM++B,EAAUiE,GAClC,GAAI3hD,GAAMsE,OAAO44C,iBACjBvyC,GAAMgE,QAAQlL,KAAKi+C,cAAc/iC,GAAO,SAAUhc,GAC9C,GAAIk6C,GAAep5C,KAAKo5C,aAAal6C,EACjCk6C,IAAgBp5C,KAAKo6C,eAAep3C,IAAIo2C,KAAkBp5C,KAAKo6C,eAAep3C,IAAI9D,KAC7E+6C,EAASphC,YAAYugC,IACtBp5C,KAAKk6C,WAAWd,EAAca,EAAUiE,GAE5C3hD,EAAMkE,KAAK9H,IAAI4D,EAAK09C,EAASj3C,IAAIo2C,GAAgBp5C,KAAK64C,WAAW35C,EAAGk6C,MAEzEp5C,MACCzD,IAAQsE,OAAO44C,oBACfl9C,EAAM,GAEV2K,EAAMgE,QAAQlL,KAAKi+C,cAAc/iC,GAAO,SAAUhc,GAC9C+6C,EAASrhC,IAAI1Z,EAAG3C,MAGxBy9C,YAAa,SAAU9+B,GACnB,GAAI87B,GAAQh3C,KAAKi4C,OAAO/8B,EAAK87B,OAAQ2B,EAAaz9B,EAAKy9B,UACvD,OAAsB,KAAfA,EAAmB,KAAO3B,EAAM2B,EAAa,IAExDS,aAAc,SAAUl+B,GAAV,GACN87B,GAAQh3C,KAAKi4C,OAAO/8B,EAAK87B,OACzB2B,EAAaz9B,EAAKy9B,UACtB,OAAOA,KAAe3B,EAAM78C,OAAS,EAAI,KAAO68C,EAAM2B,EAAa,IAEvEsF,cAAe,SAAU/iC,GACrB,MAAOA,GAAKH,UAAY/a,KAAKg7C,aAAa9/B,IAASA,IAEvDo9B,aAAc,WAAA,GACNr+C,GAAGoF,EAAG8f,EAAI63B,EAAO97B,EASjBijC,EACKC,EAQLC,CAjBJ,KAAKh/C,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,EAAwBA,IAEhC,IADA23C,EAAQh3C,KAAKi4C,OAAO54C,GACf8f,EAAK,EAAQ63B,EAAM78C,OAAXglB,EAAmBA,IAC5BjE,EAAO87B,EAAM73B,GACbjE,EAAKm8B,iBAAmBn8B,EAAKg8B,kBAC7Bh8B,EAAKo8B,mBAAqBp8B,EAAK+7B,mBAIvC,KADIkH,EAAsB,EACjBC,EAAK,EAAQD,EAALC,EAA0BA,IAAM,CAC7C,IAAKnkD,EAAI+F,KAAKi4C,OAAO99C,OAAS,EAAGF,GAAK,EAAGA,IACrC+F,KAAKs+C,aAAY,EAAOrkD,EAE5B,KAAKA,EAAI,EAAO+F,KAAKi4C,OAAO99C,OAAS,EAAzBF,EAA4BA,IACpC+F,KAAKs+C,aAAY,EAAMrkD,GAI/B,IADIokD,EAAUx9C,OAAOC,UAChBzB,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,EAAwBA,IAEhC,IADA23C,EAAQh3C,KAAKi4C,OAAO54C,GACf8f,EAAK,EAAQ63B,EAAM78C,OAAXglB,EAAmBA,IAC5BjE,EAAO87B,EAAM73B,GACbk/B,EAAU59C,KAAK9H,IAAI0lD,EAASnjC,EAAKq8B,aAGzC,IAAc,EAAV8G,EACA,IAAKh/C,EAAI,EAAOW,KAAKi4C,OAAO99C,OAAhBkF,EAAwBA,IAEhC,IADA23C,EAAQh3C,KAAKi4C,OAAO54C,GACf8f,EAAK,EAAQ63B,EAAM78C,OAAXglB,EAAmBA,IAC5BjE,EAAO87B,EAAM73B,GACbjE,EAAKq8B,aAAer8B,EAAKq8B,aAAe8G,GAKxDC,YAAa,SAAU9K,EAAMwD,GAAhB,GACLuH,GACAC,EAMApJ,EACKr6C,CAAT,KALIyjD,EADAhL,EACaxzC,KAAKi4C,OAAOsG,EAAcvH,EAAQ,GAElCh3C,KAAKi4C,OAAOsG,EAAcvH,EAAQ,GAE/C5B,KACKr6C,EAAI,EAAOyjD,EAAWrkD,OAAfY,EAAuBA,IACnCq6C,EAAOx7C,KAAK4kD,EAAWzjD,GAE3Bq6C,GAAOv7C,KAAK,SAAUknB,EAAIC,GAAd,GACJy9B,IAAc19B,EAAGs2B,iBAAmBt2B,EAAGu2B,oBAAsB,EAC7DoH,GAAc19B,EAAGq2B,iBAAmBr2B,EAAGs2B,oBAAsB,CACjE,OAAI72C,MAAK4G,IAAIo3C,EAAaC,GAAc,KAC7B,EAEMA,EAAbD,EACO,EAEJ,KAEXv3C,EAAMgE,QAAQkqC,EAAQ,SAAUl6B,GAAV,GACdyjC,GAAczjC,EAAKq8B,aACnBqH,EAAiB5+C,KAAK6+C,eAAe3jC,GACrC4jC,GAAgB5jC,EAAKm8B,iBAAmBn8B,EAAKo8B,oBAAsB,CACvE,MAAI72C,KAAK4G,IAAIs3C,EAAcC,GAAkB,MAGzCn+C,KAAK4G,IAAIs3C,EAAcC,GAAkB,OAG7C,GAAkBA,EAAdD,EACA,KAAqBC,EAAdD,GACE3+C,KAAK++C,UAAU7jC,EAAMsjC,EAAYM,IAGtCH,EAAczjC,EAAKq8B,iBAGvB,MAAOoH,EAAcC,GACZ5+C,KAAKg/C,SAAS9jC,EAAMsjC,EAAYM,IAGrCH,EAAczjC,EAAKq8B,cAG5Bv3C,MACCu+C,EAAc,GACdv+C,KAAKi/C,aAAaV,EAAc,GAElBv+C,KAAKi4C,OAAO99C,OAAS,EAAnCokD,GACAv+C,KAAKk/C,WAAWX,EAAc,IAGtCQ,UAAW,SAAU7jC,EAAM87B,EAAOmI,GAAvB,GAMHC,GACAC,EANA35C,EAAQwB,EAAMwE,QAAQsrC,EAAO97B,EACjC,OAAIxV,KAAUsxC,EAAM78C,OAAS,GACzB+gB,EAAKq8B,aAAer8B,EAAKq8B,aAAe,IACjC,IAEP6H,EAAYpI,EAAMtxC,EAAQ,GAC1B25C,GAAqBD,EAAU/H,iBAAmB+H,EAAU9H,oBAAsB,EAClF8H,EAAU7H,aAAer8B,EAAKq8B,aAAe,GAC7Cr8B,EAAKq8B,aAAer8B,EAAKq8B,aAAe,IACjC,GAEP8H,EAAoBF,GAAY1+C,KAAK4G,IAAIg4C,EAAoBF,GAAY,MAClE,EAEPn/C,KAAK++C,UAAUK,EAAWpI,EAAOmI,IACjCjkC,EAAKq8B,aAAer8B,EAAKq8B,aAAe,IACjC,IAEJ,IAEXyH,SAAU,SAAU9jC,EAAM87B,EAAOmI,GAAvB,GAMFG,GACAC,EANA75C,EAAQwB,EAAMwE,QAAQsrC,EAAO97B,EACjC,OAAc,KAAVxV,GACAwV,EAAKq8B,aAAer8B,EAAKq8B,aAAe,IACjC,IAEP+H,EAAWtI,EAAMtxC,EAAQ,GACzB65C,GAAoBD,EAASjI,iBAAmBiI,EAAShI,oBAAsB,EACvDp8B,EAAKq8B,aAAe,EAA5C+H,EAAS/H,cACTr8B,EAAKq8B,aAAer8B,EAAKq8B,aAAe,IACjC,GAEPgI,EAAmBJ,GAAY1+C,KAAK4G,IAAIk4C,EAAmBJ,GAAY,MAChE,EAEPn/C,KAAKg/C,SAASM,EAAUtI,EAAOmI,IAC/BjkC,EAAKq8B,aAAer8B,EAAKq8B,aAAe,IACjC,IAEJ,IAEXiI,eAAgB,SAAUtkC,EAAMC,GAC5Bnb,KAAKy/C,cAAc7mC,IAAIsC,EAAMC,GACxBnb,KAAK0/C,cAAc7mC,YAAYsC,IAChCnb,KAAK0/C,cAAc9mC,IAAIuC,MAE3Bnb,KAAK0/C,cAAc18C,IAAImY,GAAMvhB,KAAKshB,IAEtC8/B,aAAc,SAAU9/B,GACpB,MAAOlb,MAAK0/C,cAAc18C,IAAIhD,KAAKy/C,cAAcz8C,IAAIkY,KAEzDi9B,SAAU,WAAA,GAGFnB,GAAOz6C,EAAK2kB,EAAShG,EAAMnc,EAAGsgB,EAASplB,EAAGoF,EAAGkb,EAC7C09B,EACA0H,EAKIxkC,EACAykC,EACArgD,EACAsgD,EACAC,EACAC,EACAC,EACAn5C,EACApO,CATR,KARAuH,KAAK0/C,cAAgB,GAAIlvC,GACzBxQ,KAAKy/C,cAAgB,GAAIjvC,GACwB+J,EAAQva,KAAKue,MAAMhE,MAAM9H,MAAM,GAC5EwlC,EAASj4C,KAAKi4C,OACd0H,EAAuB,SAAUM,EAASC,EAAW/kC,GACrD88B,EAAOgI,GAAS/H,QAAQgI,GAAajI,EAAOgI,GAAS/H,QAAQgI,OAC7DjI,EAAOgI,GAAS/H,QAAQgI,GAAWtmD,KAAKuhB,IAEvC9b,EAAI,EAAOkb,EAAMpgB,OAAVkF,EAAkBA,IAU1B,GATI8b,EAAOZ,EAAMlb,GACbugD,EAAIzkC,EAAK/R,OACT7J,EAAI4b,EAAKtO,OACTgzC,EAASD,EAAE5I,MACX8I,EAASvgD,EAAEy3C,MACX+I,EAAOH,EAAErI,aACTyI,EAAOzgD,EAAEg4C,aACT1wC,GAAQm5C,EAAOD,GAAQt/C,KAAK4G,IAAIy4C,EAASD,GACzCpnD,EAAImnD,EACJC,EAASC,EAAS,EAAG,CACrB,IAAK7lD,EAAI4lD,EAAS,EAAG5lD,EAAI6lD,EAAQ7lD,IAAK,CAwBlC,IAvBAinB,EAAU,GAAIvQ,GACduQ,EAAQ9hB,EAAIwgD,EAAExgD,EACd8hB,EAAQxZ,EAAIk4C,EAAEl4C,EACdwZ,EAAQvd,MAAQi8C,EAAEj8C,MAAQ,IAC1Bud,EAAQtd,OAASg8C,EAAEh8C,OAAS,IAC5BozC,EAAQiB,EAAOh+C,GACfsC,GAAOtC,EAAI6lD,GAAUj5C,EAAOk5C,EACxBxjD,EAAMy6C,EAAM78C,SACZoC,EAAMy6C,EAAM78C,QAEZ4lD,GAAQ9H,EAAO4H,GAAQ1lD,OAAS,GAAK6lD,GAAQ/H,EAAO6H,GAAQ3lD,OAAS,EACrEoC,EAAMy6C,EAAM78C,OACI,IAAT4lD,GAAuB,IAATC,IACrBzjD,EAAM,GAEV2kB,EAAQ81B,MAAQ/8C,EAChBinB,EAAQi2B,YAAc,EACtBj2B,EAAQk2B,YAAc,EACtBl2B,EAAQg2B,kBAAoB,EAC5Bh2B,EAAQ+1B,oBAAsB,EAC9B/1B,EAAQq2B,aAAeh7C,EACvB2kB,EAAQnG,WAAY,EACpB7T,EAAMiF,OAAO6qC,EAAO91B,EAAS3kB,GACxBwC,EAAIxC,EAAM,EAAOy6C,EAAM78C,OAAV4E,EAAkBA,IAChCmc,EAAO87B,EAAMj4C,GACbmc,EAAKq8B,aAAer8B,EAAKq8B,aAAe,CAE5Cl4B,GAAU,GAAIzO,GAAKnY,EAAGyoB,GACtB7B,EAAQ8gC,iBAAmB,EAC3BR,EAAqB1lD,EAAI,EAAGA,EAAGolB,GAC/B5mB,EAAIyoB,EACJlhB,KAAKue,MAAMiB,SAAS0B,GACpBlhB,KAAKue,MAAMmB,QAAQL,GACnB6B,EAAQxb,MAAQ1F,KAAKue,MAAMhB,MAAMpjB,OAAS,EAC1C6F,KAAKw/C,eAAet+B,EAAS/F,GAEjCwkC,EAAqBG,EAAS,EAAGA,EAAQzgC,GACzClE,EAAK0B,aAAapkB,GAClB0iB,EAAKglC,iBAAmBN,EAASC,EAAS,MACvC,IAAsB,GAAlBD,EAASC,EAAa,CAC7B,IAAK7lD,EAAI4lD,EAAS,EAAOC,EAAJ7lD,EAAYA,IAAK,CAyBlC,IAxBAinB,EAAU,GAAIvQ,GACduQ,EAAQ9hB,EAAIwgD,EAAExgD,EACd8hB,EAAQxZ,EAAIk4C,EAAEl4C,EACdwZ,EAAQvd,MAAQi8C,EAAEj8C,MAAQ,IAC1Bud,EAAQtd,OAASg8C,EAAEh8C,OAAS,IAC5BozC,EAAQiB,EAAOh+C,GACfsC,GAAOtC,EAAI4lD,GAAUh5C,EAAOk5C,EACxBxjD,EAAMy6C,EAAM78C,SACZoC,EAAMy6C,EAAM78C,QAEZ4lD,GAAQ9H,EAAO4H,GAAQ1lD,OAAS,GAAK6lD,GAAQ/H,EAAO6H,GAAQ3lD,OAAS,EACrEoC,EAAMy6C,EAAM78C,OACI,IAAT4lD,GAAuB,IAATC,IACrBzjD,EAAM,GAEV2kB,EAAQ81B,MAAQ/8C,EAChBinB,EAAQi2B,YAAc,EACtBj2B,EAAQk2B,YAAc,EACtBl2B,EAAQg2B,kBAAoB,EAC5Bh2B,EAAQ+1B,oBAAsB,EAC9B/1B,EAAQq2B,aAAeh7C,EACvB2kB,EAAQnG,WAAY,EACpBxe,GAAOA,EACP2K,EAAMiF,OAAO6qC,EAAO91B,EAAS3kB,GACxBwC,EAAIxC,EAAM,EAAOy6C,EAAM78C,OAAV4E,EAAkBA,IAChCmc,EAAO87B,EAAMj4C,GACbmc,EAAKq8B,aAAer8B,EAAKq8B,aAAe,CAE5Cl4B,GAAU,GAAIzO,GAAKnY,EAAGyoB,GACtB7B,EAAQ8gC,iBAAmB,EAC3BR,EAAqB1lD,EAAI,EAAGA,EAAGolB,GAC/B5mB,EAAIyoB,EACJlhB,KAAKue,MAAMiB,SAAS0B,GACpBlhB,KAAKue,MAAMmB,QAAQL,GACnB6B,EAAQxb,MAAQ1F,KAAKue,MAAMhB,MAAMpjB,OAAS,EAC1C6F,KAAKw/C,eAAet+B,EAAS/F,GAEjCwkC,EAAqBG,EAAS,EAAGA,EAAQ3kC,GACzCA,EAAK0B,aAAapkB,GAClB0iB,EAAKglC,iBAAmBL,EAASD,EAAS,MAE1CF,GAAqBE,EAAQC,EAAQ3kC,IAIjDq9B,WAAY,WAER,IAFQ,GAIKn5C,GACD8b,EAIA5R,EASAyI,EACAmuC,EACK5gD,EACD2b,EACAklC,EArBZC,GAAQ,EACLA,GAEH,IADAA,GAAQ,EACChhD,EAAI,EAAOW,KAAKue,MAAMhE,MAAMpgB,OAArBkF,EAA6BA,IAEzC,GADI8b,EAAOnb,KAAKue,MAAMhE,MAAMlb,GACvB8b,EAAKglC,iBAAV,CAcA,IAXI52C,KACJA,EAAOkb,SACHrlB,EAAG+b,EAAKtO,OAAOzN,EACfsI,EAAGyT,EAAKtO,OAAOnF,IAEnB6B,EAAOkb,SACHrlB,EAAG+b,EAAK/R,OAAOhK,EACfsI,EAAGyT,EAAK/R,OAAO1B,IAEfsK,EAAOmJ,EACPglC,EAAmBhlC,EAAKglC,iBACnB5gD,EAAI,EAAO4gD,EAAJ5gD,EAAsBA,IAC9B2b,EAAOlJ,EAAK5I,OACZg3C,EAAWllC,EAAKT,SAAS,GAC7BlR,EAAOkb,SACHrlB,EAAGghD,EAASh3C,OAAOhK,EACnBsI,EAAG04C,EAASh3C,OAAO1B,IAEvBsK,EAAOouC,CAEXjlC,GAAK0B,aAAa7K,EAAK5I,QACvB+R,EAAKglC,iBAAmB,EACpB52C,EAAOpP,OAAS,GAChBoP,EAAO5D,OAAO,EAAG,GACjB4D,EAAO5D,OAAO4D,EAAOpP,OAAS,GAC9BghB,EAAK5R,OAASA,GAEd4R,EAAK5R,UAET82C,GAAQ,CACR,SAIZjI,mBAAoB,WAIhB,IAJgB,GACAn+C,GAAZqmD,EAAQ,GACRC,EAAgB,EAChBC,EAAO,EACM,IAAVF,KACCE,IAASD,IADG,CAKhB,IADAD,EAAQ,EACHrmD,EAAI+F,KAAKi4C,OAAO99C,OAAS,EAAGF,GAAK,EAAGA,IACrCqmD,GAAStgD,KAAKygD,wBAAuB,EAAOxmD,EAEhD,KAAKA,EAAI,EAAO+F,KAAKi4C,OAAO99C,OAAS,EAAzBF,EAA4BA,IACpCqmD,GAAStgD,KAAKygD,wBAAuB,EAAMxmD,KAIvDilD,WAAY,SAAUlI,GAAV,GAIJwH,GAAiCvkD,EAAGoF,EAAG8b,EACvC8kC,EACAjuC,EAKIkJ,EACAwlC,EACAC,CAZR,IAAc,IAAV3J,EAAJ,CAMA,IAHIwH,EAAax+C,KAAKi4C,OAAOjB,GACzBiJ,EAAU,GAAIvvC,GACdsB,EAAOhS,KAAKi4C,OAAOjB,EAAQ,GAC1B/8C,EAAI,EAAO+X,EAAK7X,OAATF,EAAiBA,IACzBgmD,EAAQxnC,IAAIzG,EAAK/X,GAErB,KAAKA,EAAI,EAAOukD,EAAWrkD,OAAfF,EAAuBA,IAAK,CAIpC,IAHIihB,EAAOsjC,EAAWvkD,GAClBymD,EAAM,EACNC,EAAQ,EACPthD,EAAI,EAAO6b,EAAKT,SAAStgB,OAAlBkF,EAA0BA,IAClC8b,EAAOD,EAAKT,SAASpb,GACjB4gD,EAAQt0C,SAASwP,EAAK/R,UACtBu3C,IACAD,GAAOvlC,EAAK/R,OAAOmuC,aAG3B,KAAKl4C,EAAI,EAAO6b,EAAKV,SAASrgB,OAAlBkF,EAA0BA,IAClC8b,EAAOD,EAAKV,SAASnb,GACjB4gD,EAAQt0C,SAASwP,EAAKtO,UACtB8zC,IACAD,GAAOvlC,EAAKtO,OAAO0qC,aAGvBoJ,GAAQ,GACRzlC,EAAKi8B,YAAcuJ,EAAMC,EACzBzlC,EAAKg8B,kBAAoByJ,IAEzBzlC,EAAKi8B,YAAcl9C,EACnBihB,EAAKg8B,kBAAoB,MAIrC+H,aAAc,SAAUjI,GAAV,GAINwH,GAAiCvkD,EAAGoF,EAAG8b,EACvC+kC,EACAluC,EAKIkJ,EACAwlC,EACAC,CAZR,IAAI3J,IAAUh3C,KAAKi4C,OAAO99C,OAAS,EAAnC,CAMA,IAHIqkD,EAAax+C,KAAKi4C,OAAOjB,GACzBkJ,EAAY,GAAIxvC,GAChBsB,EAAOhS,KAAKi4C,OAAOjB,EAAQ,GAC1B/8C,EAAI,EAAO+X,EAAK7X,OAATF,EAAiBA,IACzBimD,EAAUznC,IAAIzG,EAAK/X,GAEvB,KAAKA,EAAI,EAAOukD,EAAWrkD,OAAfF,EAAuBA,IAAK,CAIpC,IAHIihB,EAAOsjC,EAAWvkD,GAClBymD,EAAM,EACNC,EAAQ,EACPthD,EAAI,EAAO6b,EAAKT,SAAStgB,OAAlBkF,EAA0BA,IAClC8b,EAAOD,EAAKT,SAASpb,GACjB6gD,EAAUv0C,SAASwP,EAAK/R,UACxBu3C,IACAD,GAAOvlC,EAAK/R,OAAOmuC,aAG3B,KAAKl4C,EAAI,EAAO6b,EAAKV,SAASrgB,OAAlBkF,EAA0BA,IAClC8b,EAAOD,EAAKV,SAASnb,GACjB6gD,EAAUv0C,SAASwP,EAAKtO,UACxB8zC,IACAD,GAAOvlC,EAAKtO,OAAO0qC,aAGvBoJ,GAAQ,GACRzlC,EAAKk8B,YAAcsJ,EAAMC,EACzBzlC,EAAK+7B,oBAAsB0J,IAE3BzlC,EAAKk8B,YAAcn9C,EACnBihB,EAAK+7B,oBAAsB,MAIvCwJ,uBAAwB,SAAUjN,EAAMwD,GAAhB,GAChBuH,GACAC,EAMAoC,EAMAlnC,EAmBAzf,EAAGqmD,EAOCO,EAEI3lC,CARZ,KA9BIsjC,EADAhL,EACaxzC,KAAKi4C,OAAOsG,EAAcvH,EAAQ,GAElCh3C,KAAKi4C,OAAOsG,EAAcvH,EAAQ,GAE/C4J,EAAYpC,EAAW/rC,MAAM,GAC7B+gC,EACAxzC,KAAKk/C,WAAWX,GAEhBv+C,KAAKi/C,aAAaV,GAElB7kC,EAAO1Z,KACXw+C,EAAW3kD,KAAK,SAAUknB,EAAIC,GAAd,GAUR8/B,GATAC,EAAernC,EAAKmlC,eAAe99B,GAAKigC,EAAetnC,EAAKmlC,eAAe79B,EAC/E,OAAIvgB,MAAK4G,IAAI05C,EAAeC,GAAgB,KACpCjgC,EAAGhF,WAAaiF,EAAGjF,SACZrC,EAAKunC,eAAelgC,EAAIC,GACxBD,EAAGhF,SAAWiF,EAAGjF,SACjB,EAEJ,IAEP+kC,EAA+C,KAA/BE,EAAeD,GAC/BD,EAAe,EACR,GACe,EAAfA,EACA,EAEJpnC,EAAKunC,eAAelgC,EAAIC,MAE5Bs/B,EAAQ,EACVrmD,EAAI,EAAOukD,EAAWrkD,OAAfF,EAAuBA,IAC3BukD,EAAWvkD,KAAO2mD,EAAU3mD,IAC5BqmD,GAGR,IAAIA,EAAQ,EAER,IADIO,EAAQ,EACP5mD,EAAI,EAAOukD,EAAWrkD,OAAfF,EAAuBA,IAC3BihB,EAAOsjC,EAAWvkD,GACtBihB,EAAKq8B,aAAesJ,GAG5B,OAAOP,IAEXjI,WAAY,WAGR,IAHQ,GAOA6I,GACAC,EACK9hD,EACD23C,EACAoK,EACAC,EACAC,EACKvmD,EACDu4C,EACAE,EACA+N,EAoBAC,EACAC,EACAC,EACAC,EAkBAC,EACAC,EA1DZtB,EAAgBvgD,KAAKkD,QAAQ0pC,kBAC7B4T,EAAO,IACE,CACT,GAAIA,IAASD,EACT,KAIJ,KAFIW,EAAwB,GAAZV,EAAO,EACnBW,EAAaX,EAAO,IAAM,EACrBnhD,EAAI6hD,EAAY,EAAIlhD,KAAKi4C,OAAO99C,OAAS,EAAG+mD,EAAiBlhD,KAAKi4C,OAAO99C,OAAS,GAA1BkF,EAA8BA,GAAK,EAAGA,GAAK6hD,EAAY,EAAI,GAAI,CAK5H,IAJIlK,EAAQh3C,KAAKi4C,OAAO54C,GACpB+hD,GAAa,EACbC,GAAgB,EAChBC,EAAe,EACVvmD,EAAI,EAAOi8C,EAAM78C,OAAS,EAAnBY,EAAsBA,IAC9Bu4C,EAAK,EACLE,EAAO,EACP+N,EAAc,EACdF,GACU,IAANhiD,IACAi0C,EAAKtzC,KAAK8hD,mCAAmCziD,EAAI,EAAGA,IAEpDA,IAAMW,KAAKi4C,OAAO99C,OAAS,IAC3Bq5C,EAAOxzC,KAAK8hD,mCAAmCziD,EAAGA,EAAI,IAEtD6hD,EACA5N,GAAM,EAENE,GAAQ,EAEZ+N,EAAcjO,EAAKE,GAEnB+N,EAAcD,EAEE,IAAhBC,IAGAC,EAAQxK,EAAMj8C,GACd0mD,EAAQzK,EAAMj8C,EAAI,GAClB2mD,EAAeF,EAAMjK,aACrBoK,EAAeF,EAAMlK,aACzBP,EAAMj8C,GAAK0mD,EACXzK,EAAMj8C,EAAI,GAAKymD,EACfA,EAAMjK,aAAeoK,EACrBF,EAAMlK,aAAemK,EACrBpO,EAAK,EACK,IAANj0C,IACAi0C,EAAKtzC,KAAK8hD,mCAAmCziD,EAAI,EAAGA,IAExDm0C,EAAO,EACHn0C,IAAMW,KAAKi4C,OAAO99C,OAAS,IAC3Bq5C,EAAOxzC,KAAK8hD,mCAAmCziD,EAAGA,EAAI,IAEtD6hD,EACA5N,GAAM,EAENE,GAAQ,EAERoO,EAAatO,EAAKE,EAClBqO,GAAS,EAETA,EADAV,EACSS,GAAcL,EAEdK,EAAaL,EAEtBM,GACAL,EAAQxK,EAAMj8C,GACd0mD,EAAQzK,EAAMj8C,EAAI,GAClB2mD,EAAeF,EAAMjK,aACrBoK,EAAeF,EAAMlK,aACrBP,EAAMj8C,GAAK0mD,EACXzK,EAAMj8C,EAAI,GAAKymD,EACfA,EAAMjK,aAAeoK,EACrBF,EAAMlK,aAAemK,EACrBJ,EAAeC,EACfF,GAAgB,IAEhBD,GAAa,EACbC,GAAgB,GAGpBD,KACI/hD,IAAMW,KAAKi4C,OAAO99C,OAAS,GAC3B6F,KAAKk/C,WAAW7/C,EAAI,GAEd,IAANA,GACAW,KAAKi/C,aAAa5/C,EAAI,OAM1CyiD,mCAAoC,SAAUC,EAAQC,GAAlB,GAE5BC,GAAOC,EAAOC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAqB9BC,EACAC,EACAC,EACAC,EAzBRroC,EAAQva,KAAKi4C,OAAO8J,GAAQ7J,QAAQ8J,GAEpCa,EAAY,EACZ1oD,EAASogB,EAAMpgB,MACnB,KAAKooD,EAAK,EAAQpoD,EAALooD,EAAaA,IAEtB,IADAN,EAAQ1nC,EAAMgoC,GACTC,EAAKD,EAAK,EAAQpoD,EAALqoD,EAAaA,IAC3BN,EAAQ3nC,EAAMioC,GACVP,EAAMp1C,OAAOmqC,QAAUgL,GACvBG,EAAMF,EAAM74C,OACZg5C,EAAMH,EAAMp1C,SAEZs1C,EAAMF,EAAMp1C,OACZu1C,EAAMH,EAAM74C,QAEZ84C,EAAMr1C,OAAOmqC,QAAUgL,GACvBK,EAAMH,EAAM94C,OACZk5C,EAAMJ,EAAMr1C,SAEZw1C,EAAMH,EAAMr1C,OACZy1C,EAAMJ,EAAM94C,QAEZq5C,EAAQN,EAAI5K,aACZmL,EAAQN,EAAI7K,aACZoL,EAAQN,EAAI9K,aACZqL,EAAQN,EAAI/K,aACwB,GAAnCkL,EAAQE,IAAUD,EAAQE,IAC3BC,GAIZ,OAAOA,IAEXhE,eAAgB,SAAU3jC,GAAV,GACRg8B,GAAoBh8B,EAAKg8B,kBACzBD,EAAsB/7B,EAAK+7B,oBAC3BE,EAAcj8B,EAAKi8B,YACnBC,EAAcl8B,EAAKk8B,WACvB,OAAIF,GAAoB,GAAKD,EAAsB,GACvCE,EAAcC,GAAe,EAErCF,EAAoB,EACbC,EAEPF,EAAsB,EACfG,EAEJ,GAEX+E,sBAAuB,SAAU/8C,EAAGsI,GAChC,MAAqBA,GAAE6vC,aAAnBn4C,EAAEm4C,aACK,GAEPn4C,EAAEm4C,aAAe7vC,EAAE6vC,aACZ,EAEJ,GAEXwG,2BAA4B,SAAU3+C,EAAGsI,GACrC,MAAaA,GAAEX,EAAR3H,EAAE2H,EAAU,GAAK3H,EAAE2H,EAAIW,EAAEX,EAAI,EAAI,GAE5C+2C,4BAA6B,SAAU1+C,EAAGsI,GACtC,MAAaA,GAAEX,EAAR3H,EAAE2H,EAAU,EAAI3H,EAAE2H,EAAIW,EAAEX,EAAI,GAAK,GAE5C21C,kBAAmB,SAAU1F,GACzB,IAAK,GAAI13C,GAAI,EAAO03C,EAAM78C,OAAVmF,EAAkBA,IAC9B,GAAI03C,EAAM13C,GAAGyb,UACT,MAAOzb,EAGf,OAAO,IAEX2hD,eAAgB,SAAU9uC,EAAI2lC,GAAd,GACRiB,GAAK5mC,EAAGzM,MACRszC,EAAKlB,EAAGpyC,KACZ,OAASszC,GAALD,EACO,EAEPA,EAAKC,EACE,GAEJ,GAEXa,OAAQ,SAAUiJ,EAAWC,GACzB,OAAQD,EAAYA,EAAYC,GAAeA,GAEnDnG,gBAAiB,SAAU5F,EAAO97B,GAAjB,GAEJjhB,GADL4kB,EAAY3D,EAAKy9B,UACrB,KAAS1+C,EAAI4kB,EAAY,EAAOm4B,EAAM78C,OAAVF,IAAoBA,EAC5C,GAAI+8C,EAAM/8C,GAAG8gB,UACT,MAAOi8B,GAAM/8C,EAGrB,OAAO,SAGXk3C,EAAcz1C,EAAMwG,MAAME,QAC1BC,KAAM,SAAUyF,EAASk7C,GACrB,GAAI97C,EAAMmB,YAAYP,GAClB,KAAM,kBAEV9H,MAAK8H,QAAUA,EACf9H,KAAKshB,QAAU,GAAI9Q,GACnBxQ,KAAKuhB,QAAU,GAAI/Q,GACnBxQ,KAAKijD,QAAQD,EAAeA,EAAel7C,IAE/Cm7C,QAAS,SAAUC,GAAV,GACDhoC,GAAMqC,EAAOjD,EAAOrgB,EAAGihC,EAAM/f,EAAMZ,EAuC/ByhB,EACAsE,CAvCR,IAAI4iB,YAAiCp7C,GAAQ+I,MAAO,CAChD,IAAK5W,EAAI,EAAOipD,EAAsB3lC,MAAMpjB,OAAhCF,EAAwCA,IAChDihB,EAAOgoC,EAAsB3lC,MAAMtjB,GACnCqgB,EAAQY,EAAKP,gBACb3a,KAAKshB,QAAQ1I,IAAI0B,EAAMwR,OAAOhsB,GAAI,GAAIiQ,GAAKmL,EAAK9b,EAAG8b,EAAKxT,EAAGwT,EAAKvX,MAAOuX,EAAKtX,QAEhF,KAAK3J,EAAI,EAAOipD,EAAsB3oC,MAAMpgB,OAAhCF,EAAwCA,IAChDkhB,EAAO+nC,EAAsB3oC,MAAMtgB,GACnCihC,EAAO/f,EAAKoB,qBACZvc,KAAKuhB,QAAQ3I,IAAIsiB,EAAKpP,OAAOhsB,GAAIqb,EAAK5R,cAEvC,IAAI25C,YAAiCC,OAExC,IADA5lC,EAAQ2lC,EACHjpD,EAAI,EAAOsjB,EAAMpjB,OAAVF,EAAkBA,IAC1BihB,EAAOqC,EAAMtjB,GACbqgB,EAAQY,EAAKP,gBACTL,GACAta,KAAKshB,QAAQ1I,IAAI0B,EAAMwR,OAAOhsB,GAAI,GAAIiQ,GAAKmL,EAAK9b,EAAG8b,EAAKxT,EAAGwT,EAAKvX,MAAOuX,EAAKtX,aAGjF,IAAIs/C,EAAsB16C,eAAe,UAAY06C,EAAsB16C,eAAe,SAAU,CAGvG,IAFA+U,EAAQ2lC,EAAsB3lC,MAC9BhD,EAAQ2oC,EAAsB3oC,MACzBtgB,EAAI,EAAOsjB,EAAMpjB,OAAVF,EAAkBA,IAC1BihB,EAAOqC,EAAMtjB,GACbqgB,EAAQY,EAAKP,gBACTL,GACAta,KAAKshB,QAAQ1I,IAAI0B,EAAMwR,OAAOhsB,GAAI,GAAIiQ,GAAKmL,EAAK9b,EAAG8b,EAAKxT,EAAGwT,EAAKvX,MAAOuX,EAAKtX,QAGpF,KAAK3J,EAAI,EAAOsgB,EAAMpgB,OAAVF,EAAkBA,IAC1BkhB,EAAOZ,EAAMtgB,GACbihC,EAAO/f,EAAKoB,qBACR2e,GACAl7B,KAAKuhB,QAAQ3I,IAAIsiB,EAAKpP,OAAOhsB,GAAIqb,EAAK5R,YAG3C,CAGH,IAFIyyB,EAASh8B,KAAK8H,QAAQk0B,OACtBsE,EAActgC,KAAK8H,QAAQw4B,YAC1BrmC,EAAI,EAAO+hC,EAAO7hC,OAAXF,EAAmBA,IAC3BqgB,EAAQ0hB,EAAO/hC,GACf+F,KAAKshB,QAAQ1I,IAAI0B,EAAMwR,OAAOhsB,GAAIwa,EAAMM,SAE5C,KAAK3gB,EAAI,EAAOqmC,EAAYnmC,OAAhBF,EAAwBA,IAChCihC,EAAOoF,EAAYrmC,GACnB+F,KAAKuhB,QAAQ3I,IAAIsiB,EAAKpP,OAAOhsB,GAAIo7B,EAAK3xB,aAKtD5I,GAAWmH,GACPzF,KAAM,SAAUmD,GACZ9J,EAAM2G,KAAKmD,EAASsC,EAAQgH,KAEhCqY,aAAcA,EACdsvB,WAAYA,EACZ2M,aAAc7U,EACduI,cAAeA,EACfnL,WAAYA,EACZwF,YAAaA,KAEnBzwC,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,uBACH,aACA,oBACA,gBACA,iBACA,eACA,qBACA,qBACA,uBACA,sBACA,2BACA,0BACDD,IACL,YACG,SAAU0J,EAAGxG,GAoDV,QAASooD,GAAQl9C,GACb,GAAIm9C,GAAYn9C,EAAEo9C,cAAe5uC,EAAQ,CAOzC,OANI2uC,GAAUE,YACV7uC,GAAS2uC,EAAUE,WAAa,GAChC7uC,EAAQA,EAAQ,EAAInc,GAAKk6C,KAAK/9B,GAASnc,GAAKwR,MAAM2K,IAC3C2uC,EAAUG,SACjB9uC,EAAQ2uC,EAAUG,QAEf9uC,EAEX,QAAS+uC,GAAgBnuB,GACrB,MAAOA,GAAUryB,QAAQnH,KAAKoD,gBAAkBq5B,GAAKr5B,cAEzD,QAASwkD,GAAiB9wC,EAAOyH,GAAjC,GACkCspC,GACrB3pD,EACDutC,EAEIsR,EAJR+K,EAAkBC,GAAgBC,EAAOzpC,EAAMkb,UACnD,KAASv7B,EAAI,EAAO8pD,EAAK5pD,OAATF,EAAiBA,IACzButC,EAAMuc,EAAK9pD,GACVypD,EAAgBlc,KACbsR,EAAOjmC,EAAMmxC,WAAWxc,EAAIp7B,YACrBy3C,EAAP/K,IACA+K,EAAkB/K,EAClB8K,EAASpc,GAIrB,OAAOoc,GAEX,QAASK,GAAerxB,EAAOJ,GAA/B,GACQv4B,GAAiB6xB,EAKR7kB,EALNqb,KACHhH,EAAWsX,EAAM3F,mBAAmB3R,SACpCnhB,EAASmhB,EAASnhB,MACtB,KAAKF,EAAI,EAAOu4B,EAAQr4B,OAAZF,EAAoBA,IAE5B,IADA6xB,EAAS0G,EAAQv4B,GACRgN,EAAI,EAAO9M,EAAJ8M,EAAYA,IACxB,GAAIqU,EAASrU,IAAM6kB,EAAOmB,mBAAoB,CAC1C3K,EAAQ1oB,KAAKqN,EACb,OAIZ,MAAOqb,GAgjGX,QAAS4hC,GAAoBC,GACzB,GAAI3nD,KAoBJ,OAnBA2nD,GAAWA,MACPlsD,GAAQksD,EAAS1oD,OAA2B,OAAlB0oD,EAAS1oD,OACnCe,EAAOf,KAAO0oD,EAAS1oD,MAEvBxD,GAAQksD,EAAS/kD,IAAqB,OAAf+kD,EAAS/kD,IAChC5C,EAAO4C,EAAI+kD,EAAS/kD,GAEpBnH,GAAQksD,EAASz8C,IAAqB,OAAfy8C,EAASz8C,IAChClL,EAAOkL,EAAIy8C,EAASz8C,GAEpBzP,GAAQksD,EAASxgD,QAA6B,OAAnBwgD,EAASxgD,QACpCnH,EAAOmH,MAAQwgD,EAASxgD,OAExB1L,GAAQksD,EAASvgD,SAA+B,OAApBugD,EAASvgD,SACrCpH,EAAOoH,OAASugD,EAASvgD,QAEzB3L,GAAQksD,EAASp7C,OAA2B,OAAlBo7C,EAASp7C,OACnCvM,EAAOuM,KAAOo7C,EAASp7C,MAEpBvM,EAEX,QAAS4nD,GAAyBD,GAC9B,GAAI3nD,KAgCJ,OA/BA2nD,GAAWA,MACPlsD,GAAQksD,EAAS1oD,OAA2B,OAAlB0oD,EAAS1oD,OACnCe,EAAOuZ,QAAUouC,EAAS1oD,MAE1BxD,GAAQksD,EAASp7C,OAA2B,OAAlBo7C,EAASp7C,OACnCvM,EAAOuM,KAAOo7C,EAASp7C,MAEvB9Q,GAAQksD,EAASj2C,OAA2B,OAAlBi2C,EAASj2C,OACnC1R,EAAO0R,KAAOi2C,EAASj2C,MAEvBjW,GAAQksD,EAASE,gBAA6C,OAA3BF,EAASE,gBAC5C7nD,EAAO6nD,cAAgBF,EAASE,eAEhCpsD,GAAQksD,EAASG,QAA6B,OAAnBH,EAASG,QACpC9nD,EAAO8nD,MAAQH,EAASG,OAExBrsD,GAAQksD,EAASI,QAA6B,OAAnBJ,EAASI,QACpC/nD,EAAO+nD,MAAQJ,EAASI,OAExBtsD,GAAQksD,EAASn2C,KAAuB,OAAhBm2C,EAASn2C,KACjCxR,EAAOwR,GAAKm2C,EAASn2C,IAErB/V,GAAQksD,EAASK,cAAyC,OAAzBL,EAASK,cAC1ChoD,EAAOgoD,YAAcL,EAASK,aAE9BvsD,GAAQksD,EAASM,MAAyB,OAAjBN,EAASM,MAClCjoD,EAAOioD,IAAMN,EAASM,KAEtBxsD,GAAQksD,EAASO,MAAyB,OAAjBP,EAASO,MAClCloD,EAAOkoD,IAAMP,EAASO,KAEnBloD,EAiZX,QAASmoD,GAAmB9uC,EAAW3S,GAAvC,GAGY0hD,GAFJC,EAAQ7kD,KAAK8kD,WAAWC,OAAOF,KAC/BA,KACID,EAAYC,EAAM5zC,GAAGkX,OAAO1sB,KAAO,OAASopD,EAAMG,QACtDvjD,EAAE,gBAAmByB,EAAQsD,MAAQ,QAASy+C,SAASpvC,GAAWqvC,mBAC9DC,eAAgBN,EAAMG,QACtBI,cAAeR,EACfE,WAAY9kD,KAAK8kD,WAAWjqC,OAAOwqC,SACnCC,YAAa,IACbC,gBAAgB,KAI5B,QAASC,GAAarB,GAClBnkD,KAAKmkD,SAAWA,EAChBnkD,KAAKylD,aAsBT,QAASC,KACL1lD,KAAKk9B,SA8NT,QAASyoB,GAAcxB,GACnB,GAAI3nD,GAAS2nD,CAKb,OAJIA,aAAoBzoD,OAAMmf,KAAK+qC,QAC/BppD,EAAS2nD,EAASkB,SAClB7oD,EAAO2nD,EAASa,SAAWb,EAAS0B,YAEjCrpD,EAEX,QAASspD,GAAqBx2B,GAA9B,GAGQ9pB,GAASQ,EAFTs6B,KACAtE,IAEJ,KAAKh2B,EAAM,EAASspB,EAASn1B,OAAf6L,EAAuBA,IACjCR,EAAU8pB,EAAStpB,GACfR,YAAmB27B,GACnBnF,EAAOpiC,KAAK4L,GAEZ86B,EAAY1mC,KAAK4L,EAGzB,QACIw2B,OAAQA,EACRsE,YAAaA,GAGrB,QAASylB,GAAYjB,EAAYD,GAC7B,MAAIC,GAAWC,OAAOF,MACX,GAAIC,GAAWC,OAAOF,MAAMA,GAEhC,GAAInpD,OAAMmf,KAAKmrC,iBAAiBnB,GAE3C,QAASoB,GAAWz/C,EAAOq+C,GACnB5sD,GAAQ4sD,EAAMr+C,KACdq+C,EAAMjsC,IAAIpS,EAAO,MAGzB,QAAS0/C,GAAmBC,EAAa/9B,EAAgBD,GAAzD,GACQ3hB,GACKR,CAAT,KAASA,EAAM,EAASmiB,EAAOhuB,OAAb6L,EAAqBA,IACnCQ,EAAQ2hB,EAAOniB,GACXoiB,IAAmBnwB,GAAQmwB,EAAe5hB,MAC1C4hB,EAAe5hB,GAAS2/C,EAAY3/C,IAIhD,QAAS4/C,GAAkBt6B,GACvB,GAAIu6B,GAAOv6B,EAAOmB,mBAAmBiG,YAAY,OAC3B,IAAlBmzB,EAAK93C,OAAOnP,GAA6B,IAAlBinD,EAAK93C,OAAO7G,IACnCokB,EAAO1f,UAAUi6C,EAAK93C,OAAOnP,GAAIinD,EAAK93C,OAAO7G,GAz4HxD,GAeO4+C,GA+EAC,EAqGAC,EAmCArlB,EA4aAwC,EAmrBA8iB,EAi4DAC,EAyPAC,EAmDAC,EA6JAC,EA6CAC,EAyEAC,EApwHA3lD,EAAU1F,MAAM0F,QAAS4yB,EAAOt4B,MAAMyF,QAAS6lD,EAAOtrD,MAAM8uB,SAAU1iB,EAAU1G,EAAQ0G,QAASm/C,EAASvrD,MAAMoT,GAAGm4C,OAAQ/kD,EAAQxG,MAAMwG,MAAO21B,EAAQp2B,EAAEo2B,MAAOl3B,EAAajF,MAAMiF,WAAYyB,EAASX,EAAEW,OAAQ8kD,EAAyBxrD,MAAMmf,KAAKqsC,uBAAwB38B,EAASziB,EAAQyiB,OAAQH,EAAQtiB,EAAQsiB,MAAOT,EAAY7hB,EAAQ6hB,UAAWW,EAASxiB,EAAQwiB,OAAQhB,EAAqBxhB,EAAQwhB,mBAAoBvZ,EAAOjI,EAAQiI,KAAMia,EAAOliB,EAAQkiB,KAAMgM,EAAkBluB,EAAQkuB,gBAAiBD,EAAuBjuB,EAAQiuB,qBAAsBrM,EAAY5hB,EAAQ4hB,UAAWS,EAAQriB,EAAQqiB,MAAOxgB,EAAQ7B,EAAQ6B,MAAOsG,EAAYnI,EAAQmI,UAAWonB,EAAwBvvB,EAAQuvB,sBAAuBb,EAAkB1uB,EAAQ0uB,gBAAiBO,GAAcjvB,EAAQivB,YAAaS,GAAW1vB,EAAQ0vB,SAAUD,GAAkBzvB,EAAQyvB,gBAAiBD,GAAoBxvB,EAAQwvB,kBAAmBQ,GAAUhwB,EAAQgwB,QAAS5wB,GAAQY,EAAQZ,MAAOsS,GAAa9d,MAAM8d,WAAY+c,GAAazuB,EAAQyuB,WAAYD,GAAcxuB,EAAQwuB,YAAaY,GAAiBpvB,EAAQovB,eAAgBC,GAAkBrvB,EAAQqvB,gBAAiB9uB,GAAcnB,GAAMmB,YAAaF,GAAYjB,GAAMiB,UAAWlQ,GAAUyD,MAAMwF,KAAKjJ,QAAS8P,GAAUtG,EAAEsG,QAASgJ,GAAarV,MAAMqV,WAAYrI,GAAWxB,GAAMwB,SAAUy+C,GAAgB1lD,EAAE0lD,cAAe3uD,GAAOiI,KACt1C2mD,GAAK,gBAAiBC,GAAY,YAAaluB,GAAmB,mBAAoBmuB,GAAS,SAAUC,GAAQ,QAASvuB,GAAO,OAAQC,GAAW,UAAWF,GAAa,YAAaO,GAAc,aAAcC,GAAc,aAAciuB,GAAQ,QAAShvB,GAAO,OAAQC,GAAM,MAAOC,GAAQ,QAASC,GAAO,OAAQC,GAAS,SAAUkrB,GAAS,iBAAkB2D,GAAS,SAAUvuB,GAAa,aAAca,GAAM,MAAOP,GAAa,YAAaC,GAAW,UAAWiuB,GAAO,OAAQC,GAAuB,IAAKC,GAAwB,IAAKC,GAAqB,YAAaC,GAAsB,IAAKC,GAAuB,IAAKC,GAAyB,GAAIC,GAA0B,GAAIC,GAAyB,EAAGC,GAAgC,SAAUrnD,GAAYD,OAAOC,UAAWy6C,IAAa16C,OAAOC,UAAWsnD,GAAW,WAAYC,GAAc,cAAeruB,GAAU,UAAWtR,GAAc,cAAeuC,GAAQ,QAASC,GAAS,SAAUC,GAAI,IAAKC,GAAI,IAAKk9B,GAAgB,iBAAmBlB,GAAK,cAAgBA,GAAImB,GAAmB,IAAMC,GAAsB,EAAGC,GAAkB,4HAA6HC,GAA4B,CAC/uC5gD,GAAQ6gD,oBACF5sD,KAAM08B,KACN18B,KAAM68B,KACN78B,KAAM48B,KACN58B,KAAM28B,KAEJ38B,KAAMy8B,GACNpsB,SAAU,SAAUkO,GAChB,MAAOA,GAAMsuC,YAAY,aAIjCtC,GACA5oB,QACIjiC,KAAM,SACNotD,WAAY,WACZC,UAAW,mBACXC,UAAW,UAEfp6C,QACIlT,KAAM,SACNotD,WAAY,WACZC,UAAW,mBACXC,UAAW,WAGnBjhD,EAAQoe,cAAgB,SAAU/lB,GAC9B,GAAI6oD,IACAjgD,KAAM8+C,GACNn4B,KAAM,GACN/C,UAAU,EACVb,OAAQ,KACR1sB,EAAG8oD,GACHxgD,EAAGwgD,GACH/d,SAAU6d,GACV5d,UAAW6d,GACXtkD,MAAOmkD,GACPlkD,OAAQmkD,GACR/5B,SACAoH,UACI5O,SAAS,EACT+a,UAEJ/L,WAAY1tB,EAAQ6gD,kBACpBtxC,UAAYvD,MAAO,GAGvB,OADA5M,IAAMgC,aAAa8/C,EAAU7oD,GACtB6oD,GA4CPzC,EAAiB/sC,GAAWpX,QAC5BC,KAAM,SAAUa,GACZ,GAAIwW,GAAO1Z,IACX0Z,GAAKyqC,UAAYjhD,OAAeihD,SAChC3qC,GAAWvI,GAAG5O,KAAKoG,KAAKiR,GACxBA,EAAKxW,QAAUvC,GAAab,GAAIgI,EAAQ8H,YAAc8J,EAAKxW,QAASA,GACpEwW,EAAK4a,YAAa,EAClB5a,EAAKoS,OAAS,GAAI1B,IACdtqB,GAAI4Z,EAAKxW,QAAQpD,GACjB6sB,SAAUjT,EAAKxW,QAAQypB,WAE3BjT,EAAK5Z,GAAK4Z,EAAKxW,QAAQpD,GACvB4Z,EAAKuvC,aAET/lD,SACI8qB,SACAgV,OAAQlL,GAAQE,KAChBjiB,SAAWD,MAAO,iBAClBmqB,YAAY,EACZipB,cAAc,EACdzpB,QAAQ,GAEZiB,WAAY,SAAU7tB,GAClB,MAAI7S,MAAKk8B,QACEl8B,KAAKk8B,QAAQwE,WAAW7tB,GAE5B7S,KAAKkD,QAAQ8/B,QAExBhW,QAAS,SAAU90B,GACf,MAAImQ,IAAYnQ,GACL8H,KAAK8rB,OAAOkB,WAEnBhtB,KAAK8rB,OAAOkB,QAAQ90B,GAApB8H,IAGR4a,OAAQ,aAER0hB,QAAS,WACLt8B,KAAK8rB,OAAOoB,UAEhB9gB,SAAU,SAAUyG,GAChB7S,KAAKkD,QAAQ9D,EAAIyT,EAAMzT,EACvBY,KAAKkD,QAAQwE,EAAImL,EAAMnL,EACvB1H,KAAK8rB,OAAO1f,SAASyG,IAEzBjK,SAAU,WACN,MAAO5I,MAAKkD,QAAQpD,IAExBqpD,UAAW,WACP,GAAIC,GAAOzoD,MAAiBuC,QAASlD,KAAKkD,SAI1C,OAHIlD,MAAKmkD,WACLiF,EAAKjF,SAAWnkD,GAAAA,KAAKmkD,UAElBiF,GAEXC,SAAU,SAAUtzC,GAAV,GAEE7S,GAMAomD,EACAC,CAOR,OAfIxzC,KAAY9a,IACRiI,EAAUlD,KAAKkD,QACf4E,EAAQZ,MAAMwB,SAASqN,GACvB7S,EAAQ6S,QAAQta,KAAOsa,EAEvBpV,EAAWuC,EAAQ6S,QAASA,GAE5BuzC,EAAiBpmD,EAAQ6S,QACzBwzC,EAAgBvpD,KAAKwpD,eACpBD,EAGDvpD,KAAKypD,qBAAqBH,GAF1BtpD,KAAK0pD,qBAAqBJ,IAK3BtpD,KAAKkD,QAAQ6S,QAAQta,MAEhCiuD,qBAAsB,SAAUxmD,GACxBA,EAAQzH,OACRuE,KAAKwpD,eAAiB,GAAI9/B,GAAUxmB,GACpClD,KAAKwpD,eAAev2B,gBAAiB,EACrCjzB,KAAK8rB,OAAO1wB,OAAO4E,KAAKwpD,kBAGhCC,qBAAsB,SAAUvmD,GAC5BlD,KAAKwpD,eAAet8B,OAAOhqB,IAE/Bi9B,SAAU,SAAUttB,GAChB,GAAI+H,GAAS5a,KAAK4a,QAClB,OAAO5a,MAAKgtB,WAAapS,EAAOjP,SAASkH,IAAU7S,KAAKkD,QAAQu8B,QAEpEwpB,UAAW,WAAA,GAGCpuC,GAA4B8uC,EAFhCjwC,EAAO1Z,IACP0Z,GAAKxW,QAAQ6S,QAAQpa,WACjBkf,EAAOnB,EAAKyqC,aAAgBwF,EAAkBjuD,MAAMC,SAAS+d,EAAKxW,QAAQ6S,QAAQpa,UAAYE,UAAW,aAC7G6d,EAAKxW,QAAQ6S,QAAQta,KAAOkuD,EAAgB9uC,KAGpD+uC,WAAY,WACR,MAAO5pD,MAAKkD,QAAQ+8B,cAAe,GAEvColB,OAAQ,WACJ,OAASvlD,GAAIE,KAAKkD,QAAQpD,OAG9B0mD,EAAYtkD,EAAME,QAClBC,KAAM,SAAUiY,EAAOpX,GACnBlD,KAAKkD,QAAUvC,KAAeX,KAAKkD,QAASA,GAC5ClD,KAAKsgC,eACLtgC,KAAKsa,MAAQA,GAEjBpX,SACIS,MAAO,EACPC,OAAQ,EACRwiB,MAAQxpB,MAAOurD,IACfn6B,UAEJ5hB,SAAU,WACN,MAAIpM,MAAKkD,QAAQkJ,SACNpM,KAAKkD,QAAQkJ,SAASpM,KAAKsa,OAE3Bta,KAAKsa,MAAMsuC,YAAY5oD,KAAKkD,QAAQnH,OAGnDspD,OAAQ,WACJ,OACIwE,QAAS7pD,GAAAA,KAAKsa,MACdib,UAAWv1B,KAAKkD,QAAQnH,SAIpCyqD,EAAUj0C,MAAQ,SAAUzK,EAAS9N,GAAnB,GAELC,GACDqgB,EAFJ9H,EAAUxY,EAAI0C,MAAM,KAAMoD,EAAK0S,EAAQ,GAAIzW,EAAOyW,EAAQ,IAAMgmB,EACpE,KAASv+B,EAAI,EAAO6N,EAAQk0B,OAAO7hC,OAAnBF,EAA2BA,IAEvC,GADIqgB,EAAQxS,EAAQk0B,OAAO/hC,GACvBqgB,EAAMpX,QAAQpD,IAAMA,EACpB,MAAOwa,GAAM8mB,aAAarlC,EAAK0b,SAIvC0pB,EAAQolB,EAAenkD,QACvBC,KAAM,SAAUa,EAAS4E,GACrB,GAAI4R,GAAO1Z,IACXumD,GAAet1C,GAAG5O,KAAKoG,KAAKiR,EAAMxW,GAClClD,KAAK8H,QAAUA,EACf9H,KAAK8pD,yBACL5mD,EAAUwW,EAAKxW,QACfwW,EAAK8b,cACL9b,EAAK3Q,KAAO7F,EAAQ6F,KACpB2Q,EAAKqwC,oBACLrwC,EAAKswC,eACLtwC,EAAK3D,QAAQ2D,EAAK3D,WAClB2D,EAAKuwC,qBAET/mD,QAAS4E,EAAQoe,gBACjBgkC,qBAAsB,SAAUrF,GAC5B,GAAIsF,GAAejG,EAAoBW,GAAS7kD,KAAKmkD,SACrDnkD,MAAKkD,QAAUvC,KAAeX,KAAKkD,QAASinD,GAC5CnqD,KAAKoqD,eACDpqD,KAAKkD,QAAQ6S,UACb/V,KAAKipD,YACLjpD,KAAK+V,QAAQ/V,KAAKkD,QAAQ6S,WAGlC+zC,uBAAwB,SAAUjF,EAAOr+C,GAAjB,GAEZ2jD,GAmBQvvC,CApBZ5a,MAAK8H,SAAW9H,KAAK8H,QAAQuiD,cACzBF,EAAejG,EAAoBW,GAAS7kD,KAAKmkD,UACjDU,GAASr+C,EACJpF,EAAQ+D,QAAQqB,GACb,IACA,IACA,QACA,YAaAoU,EAAS5a,KAAK4a,SAClBA,EAAOpU,GAASq+C,EAAMr+C,GACtBxG,KAAK4a,OAAOA,KAbR5a,KAAKkD,QAAQ4oB,OACb9rB,KAAKoqD,eACED,EAAaphD,OACpB/I,KAAKkD,QAAUvC,KAAeX,KAAKkD,QAASinD,GAC5CnqD,KAAKoqD,gBAELpqD,KAAKkD,QAAQ6S,UACb/V,KAAKipD,YACLjpD,KAAK+V,QAAQ/V,KAAKkD,QAAQ6S,WAQlC/V,KAAKkD,QAAUvC,KAAeX,KAAKkD,QAASinD,KAIxDC,aAAc,WACVpqD,KAAK8rB,OAAOxf,QACZtM,KAAKwpD,eAAiB,KACtBxpD,KAAKkD,QAAQihD,SAAWnkD,KAAKmkD,SAC7BnkD,KAAK+pD,oBACL/pD,KAAKgqD,gBAETpuB,YAAa,SAAU0uB,GAAV,GAGD1vC,GACAiqC,EAHJ/8C,EAAU9H,KAAK8H,OACfA,IAAWA,EAAQuiD,cACfzvC,EAAS5a,KAAKooC,QACdyc,EAAQ7kD,KAAKmkD,SACbU,IACA/8C,EAAQyiD,uBACJtyD,GAAQ4sD,EAAMzlD,IAAMwb,EAAOxb,IAAMylD,EAAMzlD,GACvCylD,EAAMjsC,IAAI,IAAKgC,EAAOxb,GAEtBnH,GAAQ4sD,EAAMn9C,IAAMkT,EAAOlT,IAAMm9C,EAAMn9C,GACvCm9C,EAAMjsC,IAAI,IAAKgC,EAAOlT,GAEtBzP,GAAQ4sD,EAAMlhD,QAAUiX,EAAOjX,QAAUkhD,EAAMlhD,OAC/CkhD,EAAMjsC,IAAI,QAASgC,EAAOjX,OAE1B1L,GAAQ4sD,EAAMjhD,SAAWgX,EAAOhX,SAAWihD,EAAMjhD,QACjDihD,EAAMjsC,IAAI,SAAUgC,EAAOhX,QAE/B5D,KAAKmkD,SAAWU,EAChB/8C,EAAQ0iD,sBACJF,GACAxiD,EAAQkjC,uBAKxBgf,aAAc,WAAA,GACNpvC,GAAS5a,KAAK8rB,OAAOc,UAAS,GAC9B1pB,EAAUlD,KAAKkD,OACnBlD,MAAK4a,OAAO,GAAI7K,GAAK7M,EAAQ9D,EAAG8D,EAAQwE,EAAGkT,EAAOjX,MAAOiX,EAAOhX,SAChE5D,KAAKyqD,UACLzqD,KAAK0qD,iBAET30C,QAAS,SAAUA,GACf,GAAIvZ,GAASwD,KAAKqpD,SAAStzC,EAE3B,OADA/V,MAAK0qD,gBACEluD,GAEXkuD,cAAe,WAAA,GAIHC,GACAC,EACAC,EACAC,EACAC,EAPJzB,EAAiBtpD,KAAKkD,QAAQ6S,YAC9BwzC,EAAgBvpD,KAAKwpD,cACrBD,IAAiBD,EAAexzC,QAC5B60C,EAAgB3qD,KAAK8rB,OAAOc,WAC5Bg+B,EAAU,GAAI9iD,GAAQoI,UAAUy6C,GAChCE,EAAgBtB,EAAcp8B,eAAek5B,KAAK,MAClDyE,EAAc,GAAI/6C,GAAK,EAAG,EAAG86C,EAAclnD,QAASknD,EAAcjnD,UAClEmnD,EAAgBH,EAAQ90C,MAAMg1C,EAAaxB,EAAexzC,OAC9DyzC,EAAcn9C,SAAS2+C,EAAcz3C,aAG7C22C,kBAAmB,WACf,GAA+G10B,GAAWt7B,EAAtHiJ,EAAUlD,KAAKkD,QAAS/I,EAAS+I,EAAQsyB,WAAWr7B,OAAQ6wD,EAAoB9nD,EAAQ8nD,iBAC5F,KAAK/wD,EAAI,EAAOE,EAAJF,EAAYA,IACpBs7B,EAAY,GAAIixB,GAAUxmD,KAAMW,KAAeqqD,EAAmB9nD,EAAQsyB,WAAWv7B,KACrF+F,KAAKw1B,WAAW57B,KAAK27B,IAG7B3a,OAAQ,SAAU1iB,GAAV,GACA0iB,GASY+hB,CARhB,IAAIzkC,EACA,GAAIwQ,GAASxQ,GACT,OAAQA,GACR,IAAKmwD,IACDztC,EAAS5a,KAAKirD,oBACd,MACJ,KAAK7C,IACDxtC,EAAS5a,KAAKirD,qBACVtuB,EAAM38B,KAAK8H,QAAQk4B,KACvBplB,EAAOxb,GAAKu9B,EAAIv9B,EAChBwb,EAAOlT,GAAKi1B,EAAIj1B,CAChB,MACJ,KAAKsyB,IACDpf,EAAS5a,KAAKkrD,gBACd,MACJ,SACItwC,EAAS5a,KAAKooC,YAGlBpoC,MAAKmrD,WAAWjzD,GAChB8H,KAAKorD,uBACCprD,KAAK8H,SAAW9H,KAAK8H,QAAQujD,YAC/BrrD,KAAKsrD,yBAIb1wC,GAAS5a,KAAKooC,OAElB,OAAOxtB,IAEXuwC,WAAY,SAAUv3C,GAAV,GACJ1Q,GAAUlD,KAAKkD,QACfoQ,EAAUM,EAAKN,UACflU,EAAI8D,EAAQ9D,EAAIkU,EAAQlU,EACxBsI,EAAIxE,EAAQwE,EAAI4L,EAAQ5L,EACxB/D,EAAQT,EAAQS,MAAQnL,GAAKI,IAAIgb,EAAKjQ,MAAOT,EAAQinC,UACrDvmC,EAASV,EAAQU,OAASpL,GAAKI,IAAIgb,EAAKhQ,OAAQV,EAAQknC,UAC5DpqC,MAAKooC,QAAU,GAAIr4B,GAAK3Q,EAAGsI,EAAG/D,EAAOC,GACrC5D,KAAK8rB,OAAOoB,QACR9tB,EAAGA,EACHsI,EAAGA,EACH/D,MAAOA,EACPC,OAAQA,KAGhBwI,SAAU,SAAUyG,GAChB,MAAIA,IACA7S,KAAK4a,OAAO,GAAI7K,GAAK8C,EAAMzT,EAAGyT,EAAMnL,EAAG1H,KAAKooC,QAAQzkC,MAAO3D,KAAKooC,QAAQxkC,SAAxE5D,GAEOA,KAAKooC,QAAQ90B,WAG5BI,MAAO,WACH,GAAI01C,GAAOppD,KAAKmpD,WAKhB,OAJAC,GAAKlmD,QAAQpD,GAAKgI,EAAQ8H,WACtB5P,KAAK8H,SAAW9H,KAAK8H,QAAQuiD,aAAepyD,GAAQ+H,KAAKmkD,YACzDiF,EAAKlmD,QAAQihD,SAAWwB,EAAc3lD,KAAKmkD,WAExC,GAAIhjB,GAAMioB,EAAKlmD,UAE1BsxB,OAAQ,SAAUt8B,GACd,GAA4B4vC,GAAUyjB,EAAlCzjD,EAAU9H,KAAK8H,OAInB,OAHIO,IAAYnQ,KACZA,GAAQ,GAER8H,KAAK4pD,cACD5pD,KAAKs0B,YAAcp8B,GACnB4vC,KACAyjB,KACAvrD,KAAKs0B,WAAap8B,EACd8H,KAAKs0B,YACLxsB,EAAQ47B,eAAe9pC,KAAKoG,MAC5B8nC,EAASluC,KAAKoG,QAEdkH,GAAMqE,OAAOzD,EAAQ47B,eAAgB1jC,MACrCurD,EAAW3xD,KAAKoG,OAEf8H,EAAQ0jD,oBACT1jD,EAAQ2jD,kBAAkB3jB,EAAUyjB,IAEjC,GAff,GAmBJn3C,OAAQ,SAAUN,EAAO7I,EAAQob,GAAzB,GAMI5b,GAAmBihD,EAA2CC,EAAYC,EAL9Ex3C,EAASpU,KAAK8rB,OAAO1X,QAsBzB,OArBIN,KAAU7Y,IACNorB,KAAa,GAASrmB,KAAK8H,SAAW9H,KAAK8H,QAAQ04B,iBAAmB1sB,IAAUM,EAAON,OACvF9T,KAAK8H,QAAQ04B,gBAAgB/nB,IAAI,GAAI3Q,GAAQuuB,WAAWr2B,KAAK8H,QAAQs4B,kBAAmBpgC,OAAQoU,EAAON,SAAS,GAEhHrJ,EAAIzK,KAAK4a,SAAU8wC,EAAK,GAAI/hD,GAAMc,EAAE9G,MAAQ,EAAG8G,EAAE7G,OAAS,GAC1DqH,IACA0gD,EAAa73C,EAAQM,EAAON,MAC5B83C,EAAcnhD,EAAEQ,SAASmJ,OAAOnJ,EAAQ,IAAM0gD,GAAYx6C,MAAMu6C,GAChE1rD,KAAKwoC,gBAAkBxoC,KAAKwoC,gBAAgBt3B,KAAK06C,EAAYz6C,MAAM1G,EAAE6I,YACrEtT,KAAKoM,SAASw/C,IAElB5rD,KAAK8rB,OAAO1X,OAAON,EAAO43C,GAC1B1rD,KAAKkD,QAAQmU,SAASvD,MAAQA,EAC1B9T,KAAK8H,SAAW9H,KAAK8H,QAAQ07B,oBAC7BxjC,KAAK8H,QAAQ07B,mBAAmBlH,UAEpCt8B,KAAKsrD,qBACDtrD,KAAK8H,SACL9H,KAAK8H,QAAQlC,QAAQszB,IAAc7uB,KAAMrK,QAG1CoU,GAEXksB,YAAa,SAAUv3B,GAAV,GACQ9O,GAAGgN,EAAG4kD,EAAKC,EAAMtkB,EAOlBp+B,EAKAyD,EAZZrQ,IACJ,KAAKvC,EAAI,EAAO+F,KAAKw1B,WAAWr7B,OAApBF,EAA4BA,IAGpC,IAFAutC,EAAMxnC,KAAKw1B,WAAWv7B,GACtB6xD,EAAOtkB,EAAIlH,YACNr5B,EAAI,EAAG6kD,EAAUA,EAAK3xD,OAAT8M,EAAiBA,IAC/B4kD,EAAMC,EAAK7kD,GACC,OAAR8B,GACIK,EAASyiD,EAAIziD,SACbA,EAAOkR,OAASlR,EAAOkR,OAASta,MAChCxD,EAAO5C,KAAKiyD,IAED,MAAR9iD,GACH8D,EAASg/C,EAAIh/C,SACbA,EAAOyN,OAASzN,EAAOyN,OAASta,MAChCxD,EAAO5C,KAAKiyD,IAGhBrvD,EAAO5C,KAAKiyD,EAIxB,OAAOrvD,IAEX8uD,mBAAoB,WAChB7pD,EAAEimC,KAAK1nC,KAAKsgC,cAAe,WACvBtgC,KAAKs8B,aAGb8E,aAAc,SAAU2qB,GACpB,GAAI9xD,GAAGutC,CACP,KAAI9+B,GAASqjD,GAQN,MAAIA,aAAuBpiD,GACvBg6C,EAAiBoI,EAAa/rD,MAE9BA,KAAKw1B,WAAWr7B,OAAS6F,KAAKw1B,WAAW,GAAK,IATrD,KADAu2B,EAAcA,EAAYC,oBACrB/xD,EAAI,EAAO+F,KAAKw1B,WAAWr7B,OAApBF,EAA4BA,IAEpC,GADAutC,EAAMxnC,KAAKw1B,WAAWv7B,GAClButC,EAAItkC,QAAQnH,KAAKiwD,qBAAuBD,EACxC,MAAOvkB,IASvBohB,YAAa,SAAUrjB,GACnB,GAAI96B,GAAIzK,KAAK4a,SAAUqxC,EAAS1mB,EAAK9lC,OAAO,GAAGN,cAAgBomC,EAAK9yB,MAAM,EAC1E,OAAI1B,IAAWtG,EAAEwhD,IACNjsD,KAAKksD,gBAAgBzhD,EAAEwhD,MAE3BxhD,EAAEQ,UAEbiiB,OAAQ,SAAUhqB,GAAV,GAEIipD,GACAC,CAFJlpD,KACIipD,EAAensD,KAAKkD,QAExBlD,KAAKqsD,YAAYn/B,OAAOltB,KAAKssD,eAAeppD,IACxClD,KAAK8sB,oBAAoB5pB,GACrB+nB,GACAC,GACAC,GACAC,OAEJprB,KAAK4a,OAAO,GAAI7K,GAAKo8C,EAAa/sD,EAAG+sD,EAAazkD,EAAGykD,EAAaxoD,MAAOwoD,EAAavoD,SACtFwoD,GAAe,GAEflpD,EAAQsyB,aACR22B,EAAa32B,WAAatyB,EAAQsyB,WAClCx1B,KAAKusD,qBAETJ,EAAexrD,EAAWwrD,EAAcjpD,IACpCA,EAAQmU,UAAY+0C,IACpBpsD,KAAKyqD,UAEL0B,EAAap2C,SACb/V,KAAK+V,QAAQo2C,EAAap2C,WAItCw2C,kBAAmB,WAAA,GAIXnwC,GACAhT,EACAyD,EACK7G,EANLs6B,EAActgC,KAAKsgC,aAMvB,KALAtgC,KAAKw1B,cACLx1B,KAAKiqD,oBAIIjkD,EAAM,EAASs6B,EAAYnmC,OAAlB6L,EAA0BA,IACxCoW,EAAakkB,EAAYt6B,GACzBoD,EAASgT,EAAWhT,SACpByD,EAASuP,EAAWvP,SAChBzD,EAAOkR,OAASlR,EAAOkR,QAAUta,KACjCoc,EAAWhT,OAAOpJ,KAAKohC,aAAah4B,EAAOlG,QAAQnH,OAAS,MACrD8Q,EAAOyN,OAASzN,EAAOyN,QAAUta,MACxCoc,EAAWvP,OAAO7M,KAAKohC,aAAav0B,EAAO3J,QAAQnH,OAAS,MAEhEqgB,EAAWwf,eAGnB9O,oBAAqBhlB,EAAQogB,mBAC7BokC,eAAgB,SAAUppD,GACtB,OACI2X,KAAM3X,EAAQwsB,KACdtmB,OAAQlG,EAAQkG,OAChB4kB,MAAO9qB,EAAQ8qB,MACf5H,KAAMljB,EAAQkjB,KACduH,OAAQzqB,EAAQyqB,SAGxBy9B,qBAAsB,WACdprD,KAAK8H,SACL9H,KAAK8H,QAAQlC,QAAQuzB,IACjB9uB,KAAMrK,KACN4a,OAAQ5a,KAAKooC,QAAQ10B,WAIjCw4C,gBAAiB,SAAUr5C,GACvB,GAAIuB,GAASpU,KAAKoU,SAAUwG,EAAS5a,KAAK4a,SAAU5G,EAAK4G,EAAOtH,SAIhE,OAHIc,GAAON,OACPjB,EAAMuB,OAAOA,EAAOnJ,SAASiG,KAAK8C,GAAK,IAAMI,EAAON,OAEjDjB,GAEXo4C,mBAAoB,WAChB,GAAIrwC,GAAS5a,KAAK4a,SAAU5G,EAAK4G,EAAOtH,UAAWY,EAAK0G,EAAOnH,aAC/D,OAAO1D,GAAKqF,WAAWpV,KAAK8H,QAAQyjC,YAAYv3B,GAAKhU,KAAK8H,QAAQyjC,YAAYr3B,KAElFg3C,eAAgB,WACZ,GAAItwC,GAAS5a,KAAK4a,SAAS/G,cAAc7T,KAAKoU,SAASN,OAAQE,EAAK4G,EAAOtH,UAAWY,EAAK0G,EAAOnH,aAClG,OAAO1D,GAAKqF,WAAWpB,EAAIE,IAE/Bu2C,QAAS,WACL,GAAIpzC,GAAWrX,KAAKkD,QAAQmU,QACxBA,IAAYA,EAASvD,OACrB9T,KAAKoU,OAAOiD,EAASvD,OAEzB9T,KAAKwoC,gBAAkB,GAAI7+B,IAE/B0jB,OAAQ,SAAUn1B,GACd,GAAIgL,GAAUlD,KAAKkD,QAAS8qB,EAAQ9qB,EAAQ8qB,MAAOL,EAASzqB,EAAQyqB,OAAQvH,EAAOljB,EAAQkjB,IACvFluB,IAASiQ,GAAU6lB,EAAML,UACzBA,EAAShtB,KAAegtB,EAAQK,EAAML,SAEtCz1B,GAASiQ,GAAU6lB,EAAM5H,QACzBA,EAAO4H,EAAM5H,MAEjBpmB,KAAKqsD,YAAYn/B,QACbS,OAAQA,EACRvH,KAAMA,IAENljB,EAAQkyB,UAAYlyB,EAAQkyB,SAAS5O,SACrCxmB,KAAK8H,QAAQ0kD,gBAAgBxsD,KAAM9H,IAG3CioC,SAAU,SAAUjoC,GAChB,GAAI8H,KAAKgtB,UAAW,CAChB,GAA4By/B,GAAxB7xC,EAAS5a,KAAK4a,SAAwB9G,EAAQ9T,KAAKoU,SAASN,KAChE,IAAI5b,EAAM+Q,UAAY/Q,EAAM+Q,UACxB,MAAOgH,GAAUuF,MAAMtd,EAAO0iB,EAAQ9G,EAAQA,EAAQ,EAGtD,IADA24C,EAAev0D,EAAMwb,QAAQU,OAAOwG,EAAO3P,SAAU6I,GACjD8G,EAAOjP,SAAS8gD,GAChB,MAAOzsD,QAKvBqlD,OAAQ,WACJ,OAASwE,QAAS7pD,KAAKkD,QAAQpD,KAEnCiqD,kBAAmB,WAAA,GAKXsC,GAJAnpD,EAAUlD,KAAKkD,QACfwpD,EAAgB1sD,KAAKssD,eAAeppD,GACpCypD,EAAiBzpD,EAAQ4oB,OACzB/iB,GAAQ7F,EAAQ6F,KAAO,IAAIijD,mBAE/BU,GAAc/oD,MAAQT,EAAQS,MAC9B+oD,EAAc9oD,OAASV,EAAQU,OAC3BmN,GAAW47C,GACXN,EAAcM,EAAelkD,KAAKzI,KAAMkD,GACjCwpD,EAAc7xC,MACrBwxC,EAAc,GAAIriC,GAAK0iC,GACvBtG,EAAkBiG,IAElBA,EADe,aAARtjD,EACO,GAAI4gB,GAAU+iC,GACb,UAAR3jD,EACO,GAAIuhB,GAAOoiC,GACV,QAAR3jD,EACO,GAAI2gB,GAAUgjC,GACb,SAAR3jD,EACO,GAAIohB,GAAMuiC,GAEV,GAAI1iC,GAAK0iC,GAE3B1sD,KAAKqsD,YAAcA,EACnBrsD,KAAK8rB,OAAO1wB,OAAO4E,KAAKqsD,gBAG5B1oB,EAAa4iB,EAAenkD,QAC5BC,KAAM,SAAU6L,EAAMF,EAAI9K,GACtB,GAAIwW,GAAO1Z,IACXumD,GAAet1C,GAAG5O,KAAKoG,KAAKiR,EAAMxW,GAClClD,KAAK8pD,yBACL9pD,KAAK4sD,cACLlzC,EAAKgW,KAAO,GAAI5nB,GAAQoiB,SAASxQ,EAAKxW,SACtCwW,EAAKgW,KAAKtJ,KAAKsC,IACfhP,EAAKoS,OAAO1wB,OAAOse,EAAKgW,MACxBhW,EAAKmzC,aAAenzC,EAAKozC,aAAe,GAAInjD,GAC5C+P,EAAKqzC,WAAW7+C,GAChBwL,EAAKszC,WAAWh/C,GAChB0L,EAAK3D,QAAQ2D,EAAKxW,QAAQ6S,SAC1B2D,EAAKuzC,YACDh1D,GAAQiL,IAAYA,EAAQqG,QAC5BmQ,EAAKnQ,OAAOrG,EAAQqG,SAG5BrG,SACI8qB,OAASL,WACT6C,SAAUk3B,GACVj3B,OAAQi3B,GACRn+C,UACA02B,YAAY,EACZokB,cAAe7rB,GACf00B,YAAa10B,IAEjB0xB,qBAAsB,SAAUrF,GAC5B7kD,KAAK8pD,uBAAuBjF,GAAS7kD,KAAKmkD,WAE9C2F,uBAAwB,SAAUjF,GAAV,GAEZsI,GACAjqD,EAGQgL,EASAF,CAdZhO,MAAK8H,SAAW9H,KAAK8H,QAAQuiD,cACzB8C,EAAUntD,KAAK8H,QAAQslD,SACvBlqD,EAAUkhD,EAAyBS,GAAS7kD,KAAKmkD,UACjDU,GACI5sD,GAAQiL,EAAQgL,OACZA,EAAOi/C,EAAQjqD,EAAQgL,MACvBA,GAAQjW,GAAQiL,EAAQmhD,iBACxBn2C,EAAOA,EAAKkzB,aAAal+B,EAAQmhD,gBAErCrkD,KAAKoJ,OAAO8E,IACLjW,GAAQiL,EAAQohD,QAAUrsD,GAAQiL,EAAQqhD,QACjDvkD,KAAKoJ,OAAO,GAAIO,GAAMzG,EAAQohD,MAAOphD,EAAQqhD,QAE7CtsD,GAAQiL,EAAQ8K,KACZA,EAAKm/C,EAAQjqD,EAAQ8K,IACrBA,GAAM/V,GAAQiL,EAAQshD,eACtBx2C,EAAKA,EAAGozB,aAAal+B,EAAQshD,cAEjCxkD,KAAK6M,OAAOmB,IACL/V,GAAQiL,EAAQuhD,MAAQxsD,GAAQiL,EAAQwhD,MAC/C1kD,KAAK6M,OAAO,GAAIlD,GAAMzG,EAAQuhD,IAAKvhD,EAAQwhD,MAE3CzsD,GAAQiL,EAAQ6F,OAAS/I,KAAK+I,SAAW7F,EAAQ6F,OACjD/I,KAAKuJ,WACLvJ,KAAK+I,KAAK7F,EAAQ6F,OAEtB/I,KAAKmkD,SAAWU,EAChB7kD,KAAKipD,YACLjpD,KAAKktB,OAAOltB,KAAKkD,UAEjBlD,KAAKkD,QAAUvC,KAAeuC,EAASlD,KAAKkD,WAIxD04B,YAAa,SAAU0uB,GACnB,GAAItqD,KAAK8H,SAAW9H,KAAK8H,QAAQuiD,aACzBrqD,KAAK8H,QAAQulD,sBAAuB,CACpC,GAAIxI,GAAQ7kD,KAAK8H,QAAQulD,sBAAsBC,SAASttD,KAAKmkD,SAASoJ,IAClE1I,KACA7kD,KAAK8H,QAAQyiD,uBACTtyD,GAAQ+H,KAAKkD,QAAQohD,QAAiC,OAAvBtkD,KAAKkD,QAAQohD,OAC5C2B,EAAW,OAAQpB,GACnBoB,EAAW,gBAAiBpB,GAC5BA,EAAMjsC,IAAI,QAAS5Y,KAAKkD,QAAQohD,OAChCO,EAAMjsC,IAAI,QAAS5Y,KAAKkD,QAAQqhD,SAEhCM,EAAMjsC,IAAI,OAAQ5Y,KAAKkD,QAAQgL,MAC3BjW,GAAQ4sD,EAAMR,gBACdQ,EAAMjsC,IAAI,gBAAiB5Y,KAAKkhC,gBAAkBlhC,KAAKkhC,gBAAgBh+B,QAAQnH,KAAO,MAE1FkqD,EAAW,QAASpB,GACpBoB,EAAW,QAASpB,IAEpB5sD,GAAQ+H,KAAKkD,QAAQuhD,MAA6B,OAArBzkD,KAAKkD,QAAQuhD,KAC1CwB,EAAW,KAAMpB,GACjBoB,EAAW,cAAepB,GAC1BA,EAAMjsC,IAAI,MAAO5Y,KAAKkD,QAAQuhD,KAC9BI,EAAMjsC,IAAI,MAAO5Y,KAAKkD,QAAQwhD,OAE9BG,EAAMjsC,IAAI,KAAM5Y,KAAKkD,QAAQ8K,IACzB/V,GAAQ4sD,EAAML,cACdK,EAAMjsC,IAAI,cAAe5Y,KAAK+7B,gBAAkB/7B,KAAK+7B,gBAAgB74B,QAAQnH,KAAO,MAExFkqD,EAAW,MAAOpB,GAClBoB,EAAW,MAAOpB,IAElB5sD,GAAQ+H,KAAKkD,QAAQ6F,OAAS9Q,GAAQ4sD,EAAM97C,OAC5C87C,EAAMjsC,IAAI,OAAQ5Y,KAAKkD,QAAQ6F,MAEnC/I,KAAKmkD,SAAWU,EAChB7kD,KAAK8H,QAAQ0iD,sBACTF,GACAtqD,KAAK8H,QAAQu5B,4BAMjCyD,YAAa,WACT,MAAO9kC,MAAK4kC,yBAA2B5kC,KAAK4kC,yBAAyBx4B,WAAapM,KAAK6sD,cAE3FE,WAAY,SAAU3jD,GAAV,GAGJ+6C,GAFAqJ,EAAcpkD,YAAkB+3B,GAChCssB,EAAmBztD,KAAKkD,QAAQmhD,eAAiB7rB,KAEjDg1B,GAAgBpkD,EAAOg4B,aAAaqsB,MAGpCrkD,IAAWnO,IACX+E,KAAKkO,KAAO9E,GAEhBpJ,KAAK0tD,6BACU,OAAXtkD,EACIpJ,KAAKkhC,kBACLlhC,KAAK6sD,cAAgB7sD,KAAK4kC,0BAA4B5kC,KAAKkhC,iBAAiB90B,WAC5EpM,KAAK2tD,wBACL3tD,KAAK4tD,gBAAgB,KAAM5tD,KAAK6sD,eAE7BzjD,YAAkBo9C,IACzBrC,EAAW/6C,EAAOkR,MAAM6pC,SACpBA,GACAnkD,KAAK4tD,gBAAgBzJ,EAASrkD,IAElCE,KAAKkhC,gBAAkB93B,EACvBpJ,KAAKkhC,gBAAgBZ,YAAY1mC,KAAKoG,OAC/BoJ,YAAkBO,IACzB3J,KAAK4tD,gBAAgB,KAAMxkD,GAC3BpJ,KAAK6sD,aAAezjD,EAChBpJ,KAAKkhC,iBACLlhC,KAAK2tD,yBAEFH,IACPrJ,EAAW/6C,EAAO+6C,SACdA,GACAnkD,KAAK4tD,gBAAgBzJ,EAASrkD,IAElCE,KAAKkhC,gBAAkB93B,EAAOg4B,aAAaqsB,GAC3CztD,KAAKkhC,gBAAgBZ,YAAY1mC,KAAKoG,SAG9CoJ,OAAQ,SAAUA,EAAQid,GAQtB,MAPIle,IAAUiB,KACNid,GAAYrmB,KAAK8H,SACjB9H,KAAK8H,QAAQ04B,gBAAgB1C,iBAAiB,GAAIh2B,GAAQ+tB,mBAAmB71B,KAAMoJ,IAEvFpJ,KAAK+sD,WAAW3jD,GAChBpJ,KAAKs8B,WAEFt8B,KAAKkhC,gBAAkBlhC,KAAKkhC,gBAAkBlhC,KAAK6sD,cAE9De,gBAAiB,SAAU1/C,EAAM2/C,GAC7B7tD,KAAKkD,QAAQgL,KAAOA,EAChB2/C,GACA7tD,KAAKkD,QAAQohD,MAAQuJ,EAAUzuD,EAC/BY,KAAKkD,QAAQqhD,MAAQsJ,EAAUnmD,IAE/B1H,KAAKkD,QAAQohD,MAAQ,KACrBtkD,KAAKkD,QAAQqhD,MAAQ,OAG7BuJ,cAAe,SAAU51D,GACrB,IAAIA,EAYA,MAHK8H,MAAK+tD,iBACN/tD,KAAK+tD,eAAiB,GAAIjmD,GAAQgI,YAAY9P,KAAK8kC,cAAe,KAAM,OAErE9kC,KAAK+tD,cAXZ,MAAI71D,YAAiB4P,GAAQgI,aAKzB,KAAM,8CAJN5X,GAAMya,KAAO,KACb3S,KAAK+tD,eAAiB71D,EACtB8H,KAAKoJ,OAAOlR,EAAM2a,QAW9BkyB,YAAa,WACT,MAAO/kC,MAAK6kC,yBAA2B7kC,KAAK6kC,yBAAyBz4B,WAAapM,KAAK8sD,cAE3FE,WAAY,SAAUngD,GAAV,GAGJs3C,GAFA6J,EAAcnhD,YAAkBs0B,GAChCssB,EAAmBztD,KAAKkD,QAAQshD,aAAehsB,KAE/Cw1B,GAAgBnhD,EAAOu0B,aAAaqsB,MAGpC5gD,IAAW5R,IACX+E,KAAKgO,GAAKnB,GAEd7M,KAAKiuD,6BACU,OAAXphD,EACI7M,KAAK+7B,kBACL/7B,KAAK8sD,cAAgB9sD,KAAK6kC,0BAA4B7kC,KAAK+7B,iBAAiB3vB,WAC5EpM,KAAKkuD,wBACLluD,KAAKmuD,cAAc,KAAMnuD,KAAK8sD,eAE3BjgD,YAAkB25C,IACzBrC,EAAWt3C,EAAOyN,MAAM6pC,SACpBA,GACAnkD,KAAKmuD,cAAchK,EAASrkD,IAEhCE,KAAK+7B,gBAAkBlvB,EACvB7M,KAAK+7B,gBAAgBuE,YAAY1mC,KAAKoG,OAC/B6M,YAAkBlD,IACzB3J,KAAKmuD,cAAc,KAAMthD,GACzB7M,KAAK8sD,aAAejgD,EAChB7M,KAAK+7B,iBACL/7B,KAAKkuD,yBAEFF,IACP7J,EAAWt3C,EAAOs3C,SACdA,GACAnkD,KAAKmuD,cAAchK,EAASrkD,IAEhCE,KAAK+7B,gBAAkBlvB,EAAOu0B,aAAaqsB,GAC3CztD,KAAK+7B,gBAAgBuE,YAAY1mC,KAAKoG,SAG9C6M,OAAQ,SAAUA,EAAQwZ,GAQtB,MAPIle,IAAU0E,KACNwZ,GAAYrmB,KAAK8H,SACjB9H,KAAK8H,QAAQ04B,gBAAgB1C,iBAAiB,GAAIh2B,GAAQ+tB,mBAAmB71B,KAAM/E,EAAW4R,IAElG7M,KAAKgtD,WAAWngD,GAChB7M,KAAKs8B,WAEFt8B,KAAK+7B,gBAAkB/7B,KAAK+7B,gBAAkB/7B,KAAK8sD,cAE9DqB,cAAe,SAAUngD,EAAIogD,GACzBpuD,KAAKkD,QAAQ8K,GAAKA,EACdogD,GACApuD,KAAKkD,QAAQuhD,IAAM2J,EAAQhvD,EAC3BY,KAAKkD,QAAQwhD,IAAM0J,EAAQ1mD,IAE3B1H,KAAKkD,QAAQuhD,IAAM,KACnBzkD,KAAKkD,QAAQwhD,IAAM,OAG3B2J,cAAe,SAAUn2D,GACrB,IAAIA,EAYA,MAHK8H,MAAKsuD,iBACNtuD,KAAKsuD,eAAiB,GAAIxmD,GAAQgI,YAAY9P,KAAK+kC,cAAe,KAAM,OAErE/kC,KAAKsuD,cAXZ,MAAIp2D,YAAiB4P,GAAQgI,aAKzB,KAAM,8CAJN5X,GAAM0a,MAAQ,KACd5S,KAAKsuD,eAAiBp2D,EACtB8H,KAAK6M,OAAO3U,EAAM2a,QAW9B05C,kBAAmB,WACfvsD,KAAK27B,iBAAiB37B,KAAKoJ,SAAU,UACrCpJ,KAAK27B,iBAAiB37B,KAAK6M,SAAU,WAEzC8uB,iBAAkB,SAAU4yB,EAAUxyD,GAApB,GAINooD,GACAqK,EACAC,EASIC,EAdRh1C,EAAO1Z,KACP8H,EAAU4R,EAAK5R,OACfymD,aAAoB/H,KAAc1+C,EAAQqyB,aAAao0B,EAASj0C,MAAMxa,KAClEqkD,EAAWoK,EAASj0C,MAAM6pC,SAC1BqK,EAAgBD,EAASrrD,QAAQnH,KACjC0yD,EAAe,WACf,GAAIn0C,GAAQxS,EAAQslD,SAASjJ,EAASrkD,GACtCyuD,GAAWj0C,EAAM8mB,aAAaotB,GAC9B90C,EAAK3d,GAAMwyD,GAAU,GACrB70C,EAAKkiB,eAEL9zB,EAAQslD,SAASjJ,EAASrkD,IAC1B2uD,KAEIC,EAAe5mD,EAAQ6mD,oBAAoBrB,SAASnJ,EAASoJ,KAC7DmB,GACA5mD,EAAQ8mD,2BAA2Bh1D,KAAK80D,EAAaG,WAAWJ,MAIxE/0C,EAAK3d,GAAMwyD,GAAU,IAG7Bx4C,QAAS,SAAUA,GACf,GAAIvZ,GAASwD,KAAKqpD,SAAStzC,EAI3B,OAHI9d,IAAQ8d,IACR/V,KAAK0qD,gBAEFluD,GAEXktD,qBAAsB,SAAUxmD,GAC5B,GAAI4oB,EAWJ,OAVI/a,IAAW7N,EAAQ4oB,QACnBA,EAAS5oB,EAAQ4oB,OAAOrjB,KAAKzI,KAAMkD,GAC5BA,EAAQzH,OACfqwB,EAAS,GAAIpC,GAAUxmB,IAEvB4oB,IACA9rB,KAAKwpD,eAAiB19B,EACtBA,EAAOmH,gBAAiB,EACxBjzB,KAAK8rB,OAAO1wB,OAAO0wB,IAEhBA,GAEX29B,qBAAsB,SAAUvmD,GACxB6N,GAAW7N,EAAQ4oB,SACnB9rB,KAAK8rB,OAAOvgB,OAAOvL,KAAKwpD;AACxBxpD,KAAK0pD,qBAAqBxmD,IAE1BlD,KAAKwpD,eAAet8B,OAAOhqB,IAGnCwnD,cAAe,WAAA,GAEHt5C,GACA7H,EACAulD,EACAC,EAKAh/B,EACAxC,EACAwF,EACApvB,EACAC,EACAorD,EACA5c,EAKAv/B,EAEIiB,EAeAm7C,EAIA1iB,EACAC,CA1CZ,IAAIxsC,KAAKwpD,eAAgB,CAKrB,IAJIp4C,EAASs3C,GACTn/C,EAASvJ,KAAKskC,YACdwqB,EAASt2D,GAAKwR,MAAMT,EAAOpP,OAAS,GACpC40D,EAAWD,EAAS,EACjBC,EAAW,GAAKxlD,EAAOwlD,GAAUp7C,OAAOpK,EAAOulD,KAClDC,IACAD,GAEA/+B,GAAWxmB,EAAOulD,GAClBvhC,EAAahkB,EAAOwlD,GACpBh8B,EAAc/yB,KAAKwpD,eAAe58B,WAClCjpB,EAAQovB,EAAYpvB,MACpBC,EAASmvB,EAAYnvB,OACrBorD,EAAczlD,EAAOpP,OAAS,IAAM,EACpCi4C,EAAW7kB,EAAWy2B,WAAWj0B,GACjCi/B,GAAezlD,EAAOpP,OAAS,GAAKi4C,EAAW,IAAM7kB,EAAW7lB,IAAMqoB,EAASroB,GAAgB/D,EAAXyuC,GAAoB7kB,EAAWnuB,IAAM2wB,EAAS3wB,GAAgBwE,EAAXwuC,KACvI4c,GAAc,EACd59C,EAAS,GAGT49C,GACIl7C,EAAQpY,MAAMwF,KAAKlI,IAAIR,GAAKgS,MAAMulB,EAASroB,EAAI6lB,EAAW7lB,EAAGqoB,EAAS3wB,EAAImuB,EAAWnuB,IACzFyT,EAAQ,GAAIlJ,IAAOomB,EAAS3wB,EAAImuB,EAAWnuB,GAAK,EAAImuB,EAAWnuB,GAAI2wB,EAASroB,EAAI6lB,EAAW7lB,GAAK,EAAI6lB,EAAW7lB,GACvF,KAApBlP,GAAK6O,IAAIyM,IACTjB,EAAMzT,GAAKgS,EACXyB,EAAMnL,GAAK9D,EAAS,GACbkQ,EAAQ,MAAQ,GACvBjB,EAAMzT,GAAKuE,EAAQ,EACnBkP,EAAMnL,GAAK9D,EAASwN,GACL,IAAR0C,GAAmBA,EAAJ,GAAqB,GAARA,EACnCjB,EAAMnL,GAAK9D,GACI,EAARkQ,GAAaA,EAAQ,MAC5BjB,EAAMzT,GAAKuE,EACXkP,EAAMnL,GAAK9D,KAGXqrD,EAASz2D,GAAKwR,MAAMT,EAAOpP,OAAS,GACxC0Y,EAAQtJ,EAAO0lD,GAAQv7C,QACvB6Z,EAAahkB,EAAO0lD,EAAS,GAC7Bl/B,EAAWxmB,EAAO0lD,EAAS,GACvB1iB,EAA0B15B,EAAMzT,GAAtBmuB,EAAWnuB,GAA8ByT,EAAMzT,GAApB2wB,EAAS3wB,EAAegS,GAAU2hB,EAAYpvB,MAAQyN,EAC3Fo7B,EAA0B35B,EAAMnL,GAAtB6lB,EAAW7lB,GAA8BmL,EAAMnL,GAApBqoB,EAASroB,EAAe0J,GAAU2hB,EAAYnvB,OAASwN,EAChGyB,EAAMzT,GAAKmtC,EACX15B,EAAMnL,GAAK8kC,GAEfxsC,KAAKwpD,eAAep9C,SAASyG,KAGrC2hB,OAAQ,SAAUt8B,GACd,GAA4B4vC,GAAUyjB,EAAlCzjD,EAAU9H,KAAK8H,OACnB,OAAI9H,MAAK4pD,cACD5pD,KAAKs0B,aAAep8B,GACpB8H,KAAKs0B,WAAap8B,EAClB4vC,KACAyjB,KACIvrD,KAAKs0B,YACLt0B,KAAKk8B,QAAU,GAAI7E,GAAsBr3B,KAAMA,KAAKkD,QAAQgsD,WAC5DpnD,EAAQujC,OAAOrrC,KAAKk8B,SAAS,GAC7Bp0B,EAAQ47B,eAAe9pC,KAAKoG,MAC5B8nC,EAASluC,KAAKoG,OAEVA,KAAKk8B,UACLp0B,EAAQujC,OAAOrrC,KAAKk8B,SAAS,GAC7Bh1B,GAAMqE,OAAOzD,EAAQ47B,eAAgB1jC,MACrCA,KAAKk8B,QAAUjhC,EACfswD,EAAW3xD,KAAKoG,OAGpBA,KAAKk8B,SACLl8B,KAAKk8B,QAAQI,UAEZx0B,EAAQ0jD,oBACT1jD,EAAQ2jD,kBAAkB3jB,EAAUyjB,IAEjC,GAxBf,GA4BJ3wC,OAAQ,SAAU1iB,GACd,OAAIA,GAAUwQ,GAASxQ,GAGZ8H,KAAKooC,SAFZpoC,KAAKooC,QAAUlwC,EAAf8H,IAKR+I,KAAM,SAAU7Q,GACZ,GAAIgL,GAAUlD,KAAKkD,OACnB,OAAIhL,IACIA,IAAUgL,EAAQ6F,OAClB7F,EAAQ6F,KAAO7Q,EACf8H,KAAK4sD,cACL5sD,KAAKs8B,WAHT,GAMOp5B,EAAQ6F,MAGvB6jD,YAAa,WACT,GAAI7jD,IAAQ/I,KAAKkD,QAAQ6F,MAAQ,IAAI5J,aAEjCa,MAAKmvD,QADLpmD,GAAQs+C,GACO,GAAIlwB,IAAgBn3B,MAEpB,GAAIk3B,IAAel3B,OAG1CuJ,OAAQ,SAAUrR,GAAV,GAGS+B,GACDm1D,EAUJC,EAEStoD,CAfjB,KAAI7O,EAYG,CAEH,GADIm3D,KACAlnD,GAAUnI,KAAKitD,UACf,IAASlmD,EAAI,EAAO/G,KAAKitD,SAAS9yD,OAAlB4M,EAA0BA,IACtCsoD,EAAIz1D,KAAKoG,KAAKitD,SAASlmD,GAAG8L,MAGlC,OAAOw8C,GAjBP,IADArvD,KAAKitD,YACIhzD,EAAI,EAAO/B,EAAMiC,OAAVF,EAAkBA,IAE9B,GADIm1D,EAAal3D,EAAM+B,GACnBm1D,YAAsBtnD,GAAQ6B,MAC9B3J,KAAKitD,SAASrzD,KAAK,GAAIkO,GAAQgI,YAAYs/C,QACxC,CAAA,IAAIA,EAAW5mD,eAAe,OAAQ4mD,EAAW5mD,eAAe,KAGnE,KAAM,8EAFNxI,MAAKitD,SAASrzD,KAAK,GAAIkO,GAAQgI,YAAY,GAAInG,GAAMylD,EAAWhwD,EAAGgwD,EAAW1nD,OAe9F48B,UAAW,WAAA,GAGMv9B,GAFTsoD,GAAOrvD,KAAK8kC,cAChB,IAAI9kC,KAAKitD,SACL,IAASlmD,EAAI,EAAO/G,KAAKitD,SAAS9yD,OAAlB4M,EAA0BA,IACtCsoD,EAAIz1D,KAAKoG,KAAKitD,SAASlmD,GAAG8L,MAIlC,OADAw8C,GAAIz1D,KAAKoG,KAAK+kC,eACPsqB,GAEX/yB,QAAS,WACLt8B,KAAKsvD,qBACLtvD,KAAKuvD,eACLvvD,KAAK0qD,gBACD1qD,KAAKk8B,SACLl8B,KAAKk8B,QAAQI,WAGrBgzB,mBAAoB,WAChB,GAAuBxqB,GAAaC,EAAyEyqB,EAAiBC,EAA1HrzC,EAAapc,KAAgCoJ,EAASgT,EAAWhT,SAAUyD,EAASuP,EAAWvP,QAC/FzD,aAAkBO,GAClBm7B,EAAc17B,EACPA,YAAkBo9C,KACrB9C,EAAgBt6C,GAChBomD,EAAkBpmD,EAAOkR,OAEzB8B,EAAWwoB,yBAA2Bx7B,EACtC07B,EAAc17B,EAAOgD,aAGzBS,YAAkBlD,GAClBo7B,EAAcl4B,EACPA,YAAkB25C,KACrB9C,EAAgB72C,GAChB4iD,EAAkB5iD,EAAOyN,OAEzB8B,EAAWyoB,yBAA2Bh4B,EACtCk4B,EAAcl4B,EAAOT,aAGzB04B,EACI2qB,IACArzC,EAAWyoB,yBAA2B8e,EAAiB7e,EAAa2qB,IAEjED,IACHzqB,EACA3oB,EAAWwoB,yBAA2B+e,EAAiB5e,EAAayqB,GAC7DC,GACPzvD,KAAK0vD,uBAAuBF,EAAiBC,KAIzDC,uBAAwB,SAAUF,EAAiBC,GAA3B,GAIhBE,GACAC,EAAsBC,EACtB/qB,EAAaC,EACb+qB,EAAWC,EACX7uB,EAAiBnF,EACjBi0B,EAAWC,EACXnX,EATAoX,EAAiBpM,GACjBpL,EAAUoL,GACVqM,EAAmBX,EAAgBh6B,UAQvC,KAAKw6B,EAAY,EAAeG,EAAiBh2D,OAA7B61D,EAAqCA,IAErD,GADA9uB,EAAkBivB,EAAiBH,IAC9BtM,EAAgBxiB,GAGjB,IAFA4D,EAAc5D,EAAgB90B,WAC9BujD,EAAmBF,EAAgBj6B,WAC9By6B,EAAY,EAAeN,EAAiBx1D,OAA7B81D,EAAqCA,IACrDl0B,EAAkB4zB,EAAiBM,GAC9BvM,EAAgB3nB,KACjBgJ,EAAchJ,EAAgB3vB,WAC9B0sC,EAAOtgD,GAAKJ,MAAM0sC,EAAYkf,WAAWjf,IAC9BmrB,EAAPpX,GAAyB94C,KAAK8H,SAAW9H,KAAKowD,iBAAiBtrB,EAAaC,EAAa7D,EAAiBnF,KAC1Gm0B,EAAiBpX,EACjB8W,EAAuB1uB,EACvB2uB,EAAuB9zB,GAEhB2c,EAAPI,IACAgX,EAAY5uB,EACZ6uB,EAAYh0B,EACZ2c,EAAUI,GAM1B8W,KACAE,EAAYF,EACZG,EAAYF,GAEhB7vD,KAAK4kC,yBAA2BkrB,EAChC9vD,KAAK6kC,yBAA2BkrB,GAEpCK,iBAAkB,SAAUtrB,EAAaC,EAAa7D,EAAiBnF,GAArD,GAINxyB,GAAyF5C,EAAOY,EAAKqM,EAGhG5N,EANTqqD,EAASrwD,KAAKmvD,QACdmB,GAAY,CAChB,IAAID,YAAkBl5B,IAIlB,IAHI5tB,EAAS8mD,EAAO5rB,YAAYK,EAAaC,EAAa7D,EAAiBnF,GAC3ExyB,EAAOkb,QAAQqgB,GACfv7B,EAAO3P,KAAKmrC,GACH/+B,EAAM,EAASuD,EAAOpP,OAAb6L,EAAqBA,IAYnC,GAXAW,EAAQ4C,EAAOvD,EAAM,GACrBuB,EAAMgC,EAAOvD,GACb4N,EAAO,GAAI7D,GAAKvX,GAAKG,IAAIgO,EAAMvH,EAAGmI,EAAInI,GAAI5G,GAAKG,IAAIgO,EAAMe,EAAGH,EAAIG,GAAIlP,GAAK6O,IAAIV,EAAMvH,EAAImI,EAAInI,GAAI5G,GAAK6O,IAAIV,EAAMe,EAAIH,EAAIG,IAClHkM,EAAKjQ,MAAQ,IACbiQ,EAAKxU,IACLwU,EAAKjQ,OAAS,GAEdiQ,EAAKhQ,OAAS,IACdgQ,EAAKlM,IACLkM,EAAKhQ,QAAU,IAEdgQ,EAAK3K,WAAajJ,KAAK8H,QAAQyoD,gBAAgBC,YAAY58C,GAAO,CACnE08C,GAAY,CACZ,OAIZ,MAAOA,IAEXpjC,OAAQ,SAAUhqB,GACd,GAAIA,EAAS,CACTlD,KAAKkD,QAAUvC,KAAeX,KAAKkD,QAASA,EAC5C,IAAIqG,GAASvJ,KAAKkD,QAAQqG,MACtBtR,IAAQsR,IAAWA,EAAOpP,OAAS,IACnC6F,KAAKuJ,OAAOA,GACZvJ,KAAKuvD,iBAELrsD,GAAWA,EAAQ6S,SAAW7S,EAAQzH,OACtCuE,KAAK+V,QAAQ7S,EAAQ6S,SAEzB/V,KAAK0vB,KAAKxC,QACN9G,KAAMljB,EAAQkjB,KACduH,OAAQzqB,EAAQyqB,OAChB6C,SAAUttB,EAAQstB,SAClBC,OAAQvtB,EAAQutB,WAI5B/c,MAAO,WACH,GAAI01C,GAAOppD,KAAKmpD,WAIhB,OAHInpD,MAAK8H,SAAW9H,KAAK8H,QAAQuiD,aAAepyD,GAAQ+H,KAAKmkD,YACzDiF,EAAKlmD,QAAQihD,SAAWwB,EAAc3lD,KAAKmkD,WAExC,GAAIxgB,GAAW3jC,KAAKkO,KAAMlO,KAAKgO,GAAIo7C,EAAKlmD,UAEnDimD,UAAW,WAAA,GACHj7C,GAAOlO,KAAKkO,KAAKm3C,OAASrlD,KAAKkO,KAAKm3C,OAASrlD,GAAAA,KAAKkO,KAAiBF,EAAKhO,KAAKgO,GAAGq3C,OAASrlD,KAAKgO,GAAGq3C,OAASrlD,GAAAA,KAAKgO,GAC/Go7C,EAAOzoD,MACPuC,QAASlD,KAAKkD,QACdgL,KAAMA,EACNF,GAAIA,GAMR,OAJI/V,IAAQ+H,KAAKmkD,YACbiF,EAAKjF,SAAWnkD,GAAAA,KAAKmkD,UAEzBiF,EAAKlmD,QAAQqG,OAASvJ,KAAKuJ,SACpB6/C,GAEXjpB,SAAU,SAAUjoC,GAChB,GAAI8H,KAAKgtB,UAAW,CAChB,GAAIv0B,GAAI,GAAIkR,GAAMzR,EAAMkH,EAAGlH,EAAMwP,GAAIwG,EAAOlO,KAAK8kC,cAAe92B,EAAKhO,KAAK+kC,aAC1E,IAAI7sC,EAAM+Q,UAAY/Q,EAAM+Q,WAAa/Q,EAAMyT,SAASuC,IAAShW,EAAMyT,SAASqC,GAC5E,MAAOhO,KAEX,IAAIA,KAAKmvD,QAAQhrB,QAAQ1rC,GACrB,MAAOuH,QAInBqtB,OAAQ,SAAUn1B,GACd,GAAI0E,IAASoD,KAAKkD,QAAQyqB,YAAc/wB,KACpC1E,IAASiQ,GAAUnI,KAAKkD,QAAQ8qB,MAAML,OAAO/wB,SAC7CA,EAAQoD,KAAKkD,QAAQ8qB,MAAML,OAAO/wB,OAEtCoD,KAAK0vB,KAAKxC,QAASS,QAAU/wB,MAAOA,MAExC2yD,aAAc,WACLt3D,GAAQ+H,KAAK0vB,QAGlB1vB,KAAKmvB,YACLnvB,KAAK4a,OAAO5a,KAAKmvD,QAAQ9qB,eAE7BlV,UAAW,WAAA,GAIH/lB,GACAyD,EACAtD,CALAvJ,MAAKmvD,SACLnvD,KAAKmvD,QAAQ5qB,QAEbn7B,EAASpJ,KAAK8kC,cACdj4B,EAAS7M,KAAK+kC,cACdx7B,EAASvJ,KAAKuJ,SAClBvJ,KAAK0vB,KAAKxC,QAAS3jB,QAASH,GAAQsb,OAAOnb,GAASsD,OAExD8gD,sBAAuB,WACnB3tD,KAAKkhC,gBAAkBjmC,EACvB+E,KAAK4kC,yBAA2B3pC,GAEpCizD,sBAAuB,WACnBluD,KAAK+7B,gBAAkB9gC,EACvB+E,KAAK6kC,yBAA2B5pC,GAEpCyyD,2BAA4B,WACpB1tD,KAAKkhC,iBACLh6B,GAAMqE,OAAOvL,KAAKkhC,gBAAgBZ,YAAatgC,OAGvDiuD,2BAA4B,WACpBjuD,KAAK+7B,iBACL70B,GAAMqE,OAAOvL,KAAK+7B,gBAAgBuE,YAAatgC,OAGvDqlD,OAAQ,WAAA,GAEAn3C,GAAMF,EAAI6E,EADVuJ,EAAapc,IAoBjB,OAlBIoc,GAAWlO,MAAQkO,EAAWlO,KAAKm3C,OACnCn3C,EAAOkO,EAAWlO,KAAKm3C,UAEvBxyC,EAAQuJ,EAAWywC,aACnB3+C,GACI9O,EAAGyT,EAAMzT,EACTsI,EAAGmL,EAAMnL,IAGb0U,EAAWpO,IAAMoO,EAAWpO,GAAGq3C,OAC/Br3C,EAAKoO,EAAWpO,GAAGq3C,UAEnBxyC,EAAQuJ,EAAW0wC,aACnB9+C,GACI5O,EAAGyT,EAAMzT,EACTsI,EAAGmL,EAAMnL,KAIbwG,KAAMA,EACNF,GAAIA,MAIZy4C,EAAUQ,EAAO7kD,QACjBC,KAAM,SAAUmD,EAASirD,GACrB,GAAI/2C,GAAO1Z,IACXtE,OAAMw4B,QAAQ1uB,GACdyhD,EAAOh2C,GAAG5O,KAAKoG,KAAKiR,EAAMlU,EAASirD,GACnC/2C,EAAKg3C,aACLh3C,EAAKi3C,gBACLj3C,EAAKk3C,qBAAqBl3C,EAAKxW,SAC/BwW,EAAKm3C,cAAcJ,GACnB/2C,EAAKo3C,cACLp3C,EAAKoqB,UAAY,GAAI1Z,IAAQtqB,GAAI,eACjC4Z,EAAKykB,OAAO/iC,OAAOse,EAAKoqB,WACxBpqB,EAAK62C,gBAAkB,GAAIxJ,GAAertC,GAC1CA,EAAKsmB,KAAO,GAAIr2B,GAChB+P,EAAK8sB,aACL9sB,EAAKq3C,aAAe,GAAI3mC,IAAQtqB,GAAI,kBACpC4Z,EAAKykB,OAAO/iC,OAAOse,EAAKq3C,cACxBr3C,EAAKs3C,kBACLt3C,EAAKujB,cACLvjB,EAAKu3C,kBACLv3C,EAAKw3C,uBACLx3C,EAAK0mB,iBAAmB,GAAI7I,IAAgB7d,GAAQ0b,SAAU1b,EAAKxW,QAAQkyB,WAC3E1b,EAAK8pB,mBAAqB,GAAIlM,IAAkB5d,GAChDA,EAAK2xB,OAAO3xB,EAAK0mB,kBAAkB,GACnC1mB,EAAK2xB,OAAO3xB,EAAK8pB,oBAAoB,GACrC9pB,EAAKinB,SAAW,GAAInJ,IAAS9d,GAC7BA,EAAKy3C,cACLz3C,EAAK03C,oBAAqB,EAC1B13C,EAAK23C,wBACL33C,EAAK5E,KAAK4E,EAAKxW,QAAQ4R,MACvB4E,EAAKykB,OAAOnK,QAEhB9wB,SACInH,KAAM,UACNu1D,MAAO,UACPl1B,OAAQ,GACRsG,SAAU,GACV5tB,KAAM,EACN8tB,QAAS,EACTC,QAAS,EACTiiB,cACAyM,WAAW,EACX51D,SAAU,GACV61D,UAAU,EACVp8B,UACIhhB,UACA8zB,UACAzsC,MAAM,EACN8lC,SACAlM,MACIsV,MACItuC,KAAM,GACNyX,MAAO,KAGfvI,QAAQ,GAEZ8zB,UAAY3lC,IAAK,QACjBumC,YAAcvmC,IAAK,QACnB+3D,SACI38B,SAAS,EACTxJ,OAAQ,OAEZ7P,MACIqZ,SAAS,EACTyX,QAAS,GACTC,QAAS,IAEbtmB,cAAepe,EAAQoe,eAAgBG,UAAU,IACjDqrC,oBACIt8B,UAAYmM,UACZx4B,KAAMs+C,IAEVrrB,UACAsE,gBAEJhD,QACI7D,GACAD,GACAO,GACA0tB,GACAvuB,GACAC,GACAmuB,GACAC,GACAjuB,GACAC,GACA,eACA,OACA,SACA,OACA,SACA,MACA,YACAR,GACAC,GACAC,IAEJiE,MAAO,WACH,MAAOz7B,MAEXyvD,qBAAsB,WAAA,GAGV3vB,GAFJnM,EAAWp1B,KAAKkD,QAAQkyB,QACxBA,KACImM,EAAQnM,EAASmM,OACjBvhC,KAAKqqD,aAAe9oB,KAAU,GAAWA,GAA0B,IAAjBA,EAAMpnC,SACxDonC,GACI,cACA,OACA,OACA,kBACA,wBAGJA,GAASA,EAAMpnC,SACf6F,KAAK2xD,QAAU,GAAIjL,GAAe1mD,MAC9BuhC,MAAOA,MACPqwB,MAAO/5B,EAAM73B,KAAK6xD,cAAe7xD,MACjC8xD,OAAO,IAEX9xD,KAAK2xD,QAAQnsD,QAAQy9B,KAAM8uB,UAAW,SACtC/xD,KAAKwF,QAAQwsD,QAAQhyD,KAAK2xD,QAAQnsD,SAClCxF,KAAKiyD,aAIjBC,YAAa,WAAA,GAEDpN,GACAqN,EACAzsD,EACAm/C,EACAvqC,EAGIo0C,GARR1uD,KAAKoyD,QAAUpyD,KAAKoyD,OAAO7qD,QAAUvH,KAAKoyD,UACtCtN,EAAa9kD,KAAK8kD,WAClBqN,EAAOrN,EAAWqN,WAClBzsD,EAAQysD,EAAKh4D,OACb0qD,EAAQkB,EAAYjB,MACpBxqC,EAAQta,KAAKqyD,aAAaxN,MACzB7kD,KAAK4F,QAAQ,OAAS0U,MAAOA,MAC9BwqC,EAAW34C,OAAOzG,EAAOm/C,GACrB6J,EAAe1uD,KAAK2uD,oBAAoBrB,SAASzI,EAAM0I,KAC3DmB,EAAalpD,QAAU8U,EACvBta,KAAKsyD,KAAKh4C,MAItB+3C,aAAc,SAAUlO,EAAUjhD,GAC9BA,EAAUvC,KAAeX,KAAKkD,QAAQgjB,cAAehjB,GACrDA,EAAQihD,SAAWA,CACnB,IAAI7pC,GAAQ,GAAI6mB,GAAMj+B,EAASlD,KAC/B,OAAOsa,IAEXi4C,iBAAkB,WAAA,GAENlF,GACA8E,EACAzsD,EACAm/C,EACAzoC,GALJpc,KAAKoyD,QAAUpyD,KAAKoyD,OAAO7qD,QAAUvH,KAAKoyD,UACtC/E,EAAwBrtD,KAAKqtD,sBAC7B8E,EAAO9E,EAAsB8E,WAC7BzsD,EAAQysD,EAAKh4D,OACb0qD,EAAQkB,EAAYsH,MACpBjxC,EAAapc,KAAK6gC,kBAAkBgkB,GACnC7kD,KAAK4F,QAAQ,OAASwW,WAAYA,MACnCpc,KAAKwyD,oBAAoB3N,EAAM0I,KAAOnxC,EACtCixC,EAAsBlhD,OAAOzG,EAAOm/C,GACpC7kD,KAAKyyD,cAAcr2C,GAAY,GAC/Bpc,KAAKsyD,KAAKl2C,MAItBykB,kBAAmB,SAAUsjB,EAAU/6C,EAAQyD,GAA5B,GAGXuP,GAFAlZ,EAAUvC,KAAeX,KAAKkD,QAAQwuD,mBAG1C,OAFAxuD,GAAQihD,SAAWA,EACf/nC,EAAa,GAAIunB,GAAWv6B,GAAU,GAAIO,GAASkD,GAAU,GAAIlD,GAASzG,IAGlFwvD,UAAW,SAAUvO,EAAUwO,GAApB,GAEHC,GAASj3D,EACTy5B,EAKIy9B,CAJR,IAHA7yD,KAAK8yD,aAED19B,EAAWp1B,KAAKkD,QAAQkyB,SACV,SAAdu9B,EACAC,EAAUx9B,EAAS29B,aACnBp3D,EAAWy5B,EAAS49B,kBACjB,CAAA,GAAkB,cAAdL,EAQP,MAPIE,GAA4Bh7B,EAAM8sB,EAAoB3kD,MAC1D4yD,EAAUjyD,MACNuN,KAAM2kD,EACN7kD,GAAI6kD,GACLz9B,EAAS69B,mBACZt3D,EAAWy5B,EAAS89B,mBAIxBlzD,KAAKoyD,OAAS,GAAIxL,GAAY5mD,KAAKwF,SAC/BmJ,OAAQkpB,EAAM73B,KAAKmzD,QAASnzD,MAC5B09B,OAAQ7F,EAAM73B,KAAKozD,QAASpzD,MAC5B6kD,MAAOV,EACPp7C,KAAM4pD,EACN9lD,OAAQ7M,KACR4yD,QAASA,EACTj3D,SAAUA,IAEdqE,KAAK4F,QAAQ,OAAQ5F,KAAKqzD,cAE9Bf,KAAM,SAAUjoD,GACZ,GAAIA,EAAK85C,SAAU,CACf,GAAIwO,GAAatoD,YAAgB82B,GAAQ,QAAU,YACnDnhC,MAAK0yD,UAAUroD,EAAK85C,SAAUwO,KAGtCG,WAAY,WACJ9yD,KAAKoyD,SACLpyD,KAAKszD,qBAAqBC,cAAcvzD,KAAKoyD,OAAOvN,OACpD7kD,KAAKwzD,mBAGbC,SAAU,WACFzzD,KAAKoyD,QAAUpyD,KAAKoyD,OAAO7qD,QAAUvH,KAAK4F,QAAQ,OAAQ5F,KAAKqzD,cAC/DrzD,KAAKszD,qBAAqBI,QAGlCP,QAAS,WACDnzD,KAAKoyD,QAAUpyD,KAAKoyD,OAAO7qD,QAAUvH,KAAK4F,QAAQ,OAAQ5F,KAAKqzD,eAC/DrzD,KAAKszD,qBAAqBI,OAC1B1zD,KAAKwzD,mBAGbJ,QAAS,WAAA,GAEGvO,GAEAr/C,CAHJxF,MAAKoyD,SAAWpyD,KAAK4F,QAAQ,SAAU5F,KAAKqzD,eACxCxO,EAAQ7kD,KAAKoyD,OAAOvN,MACxB7kD,KAAKszD,qBAAqBC,cAAc1O,GACpCr/C,EAAUxF,KAAKwyD,oBAAoB3N,EAAM0I,MAAQvtD,KAAKotD,SAASvI,EAAM/kD,IACrE0F,GACAA,EAAQ0kD,qBAAqBrF,GAEjC7kD,KAAKwzD,mBAGbF,mBAAoB,WAChB,MAAoC,UAA7BtzD,KAAKoyD,OAAOlvD,QAAQ6F,KAAmB/I,KAAK8kD,WAAa9kD,KAAKqtD,uBAEzEgG,UAAW,WACP,GAAI72D,IAAWqZ,UAAW7V,KAAKoyD,OAAOuB,QAEtC,OADAn3D,GAAOwD,KAAKoyD,OAAOlvD,QAAQ6F,MAAQ/I,KAAKoyD,OAAOvN,MACxCroD,GAEXg3D,eAAgB,WACRxzD,KAAKoyD,SACLpyD,KAAKoyD,OAAOwB,QACZ5zD,KAAKoyD,OAAS,OAGtBzB,cAAe,WACX3wD,KAAK2zD,QAAU3zD,KAAKwF,QAAQ2P,QAAQ8tB,IAAI,WAAY,YAAY4wB,KAAK,WAAY,GAAGC,SAAS,sBAC7F9zD,KAAKy+B,WAAah9B,EAAE,WAAWwjD,SAASjlD,KAAKwF,UAEjDqrD,cAAe,SAAUJ,GAAV,GACPvtD,GAAUlD,KAAKkD,QACfkyB,EAAWlyB,EAAQkyB,SACnBlP,EAAgBhjB,EAAQgjB,cACxBwrC,EAAqBxuD,EAAQwuD,mBAC7BqC,GAAqBtD,OAAmBvqC,aACxCkP,MAAa,GACblP,EAAckP,UAAW,EACzBs8B,EAAmBt8B,UAAW,IAE9B8wB,EAAmB9wB,EAAUlP,EAAckP,UACvC,OACA,SACA,YAEJ8wB,EAAmB9wB,EAAUs8B,EAAmBt8B,UAC5C,OACA,YAGJ2+B,GAAqBA,EAAkBv+B,aACvCtyB,EAAQgjB,cAAcsP,WAAau+B,EAAkBv+B,aAG7Ds7B,YAAa,WAAA,GACLkD,GAAkBvyD,EAAE,+BAAiCwjD,SAASjlD,KAAKy+B,YAAY,GAC/Ew1B,EAAWj0D,KAAKk0D,UACpBl0D,MAAKm+B,OAAS,GAAI5T,GAAOypC,GACrBrwD,MAAOswD,EAAStwD,OAASgkD,GACzB/jD,OAAQqwD,EAASrwD,QAAUgkD,MAGnCoJ,gBAAiB,WAAA,GACTt3C,GAAO1Z,KACPwF,EAAUkU,EAAKlU,OACnBA,GAAQ2uD,GAAG7L,GAAezwB,EAAMne,EAAK06C,OAAQ16C,IACxChe,MAAMk8B,QAAQy8B,OAAU34D,MAAMk8B,QAAQ4G,UAKvC9kB,EAAK46C,YAAc,GAAI54D,OAAM64D,WAAW/uD,GACpCgvD,YAAY,EACZC,IAAK58B,EAAMne,EAAKg7C,KAAMh7C,KAE1BA,EAAK46C,YAAYj3B,MACb,eACA,gBACA,eAEAs3B,aAAc98B,EAAMne,EAAKk7C,cAAel7C,GACxCm7C,cAAeh9B,EAAMne,EAAKo7C,eAAgBp7C,GAC1Cq7C,WAAYl9B,EAAMne,EAAKs7C,YAAat7C,KAExCA,EAAKskB,YAAc,GAAIjH,IAAYrd,GAC/BA,EAAKxW,QAAQm8B,YAAa,GAC1B3lB,EAAK0kB,SAASqB,WAnBlB/lB,EAAKskB,YAAc,GAAIjH,IAAYrd,GACnC1Z,KAAKo+B,SAASu1B,QAAQQ,GAAG,YAAc/M,GAAIvvB,EAAMne,EAAKu7C,WAAYv7C,IAAOy6C,GAAG,UAAY/M,GAAIvvB,EAAMne,EAAKw7C,SAAUx7C,IAAOy6C,GAAG,YAAc/M,GAAIvvB,EAAMne,EAAKy7C,WAAYz7C,IAAOy6C,GAAG,YAAc/M,GAAIvvB,EAAMne,EAAK07C,WAAY17C,IAAOy6C,GAAG,WAAa/M,GAAIvvB,EAAMne,EAAK27C,UAAW37C,IACxQlU,EAAQ2uD,GAAG,UAAY/M,GAAIvvB,EAAMne,EAAK47C,SAAU57C,KAoBpD1Z,KAAKu1D,aAAe19B,EAAMne,EAAKwoB,aAAcxoB,GAC7CA,EAAK87C,eAAiB39B,EAAMne,EAAKwuB,OAAQxuB,GAAM,GAC/Che,MAAM+5D,SAAS/7C,EAAK87C,gBACpBx1D,KAAKq9B,KAAK7D,GAAY3B,EAAMne,EAAKyoB,gBAAiBzoB,IAClD1Z,KAAKq9B,KAAKtD,GAAKlC,EAAMne,EAAKyoB,gBAAiBzoB,KAE/Cg7C,KAAM,SAAUvuD,GAAV,GAKMkE,GAJJ2zB,EAAch+B,KAAKg+B,YACnBvlC,EAAIuH,KAAK01D,wBAAwBvvD,EACrC63B,GAAYyD,mBAAmBhpC,GAC3BulC,EAAYsB,cACRj1B,EAAO2zB,EAAYsB,YACnBt/B,KAAKkD,QAAQ+8B,cAAe,IAC5BjgC,KAAKmiC,kBACD93B,EAAKiqB,WACLjqB,EAAKmqB,QAAO,GAEZx0B,KAAKw0B,OAAOnqB,GAAQoqB,gBAAgB,IAExCz0B,KAAK21D,kBAET31D,KAAK4F,QAAQ,SACTyE,KAAMA,EACNwI,MAAOpa,MAInBi9D,wBAAyB,SAAUvvD,GAC/B,MAAOnG,MAAK41D,gBAAgBjsD,EAAMxD,EAAE/G,EAAEy2D,SAAU1vD,EAAEuB,EAAEmuD,YAExDjB,cAAe,SAAUzuD,GAAV,GAGP2vD,GACAC,CAHJ/1D,MAAKmiC,kBACLniC,KAAKo+B,SAASgB,UACV02B,EAAgB91D,KAAK41D,gBAAgB,GAAIjsD,GAAMxD,EAAE8E,OAAO7L,EAAG+G,EAAE8E,OAAOvD,IACpEquD,GACAljD,MAAOijD,EACPhhD,KAAM9U,KAAK8U,QAEX9U,KAAK4F,QAAQ4zB,GAAYu8B,KAG7B/1D,KAAKg2D,SAAW7vD,EAChBnG,KAAKi2D,eAAiBH,IAE1BhB,eAAgB,SAAU3uD,GAAV,GAaR+vD,GACAv5B,EAbAw5B,EAAkBn2D,KAAKg2D,SACvBF,EAAgB91D,KAAKi2D,eACrBhrD,EAASjL,KAAKo2D,eAAe,GAAIzsD,GAAMxD,EAAE8E,OAAO7L,EAAG+G,EAAE8E,OAAOvD,IAC5D2uD,EAAalwD,EAAEisC,SAAW+jB,EAAgB/jB,SAC1Ct9B,EAAO9U,KAAKs2D,MACZC,GAAa,CACb/9D,IAAK6O,IAAIgvD,EAAa,IAAM9N,KAC5BvoD,KAAKs2D,MAAQxhD,EAAO9U,KAAKw2D,cAAc1hD,EAAOuhD,GAC9Cr2D,KAAKkD,QAAQ4R,KAAOA,EACpB9U,KAAKg2D,SAAW7vD,EAChBowD,GAAa,GAEbL,EAAcJ,EAAczkD,MAAMyD,GAClC6nB,EAAM1xB,EAAOkG,MAAM+kD,IACnBK,GAAcv2D,KAAKggC,KAAKgkB,WAAWrnB,IAAQ6rB,MAC3CxoD,KAAKy2D,cAAc95B,GACnB38B,KAAK02D,mBAETvwD,EAAEwwD,kBAEN3B,YAAa,WACLh1D,KAAKkD,QAAQm8B,YAAa,GAC1Br/B,KAAKo+B,SAASqB,SAElBz/B,KAAK4F,QAAQ6zB,IACT5mB,MAAO7S,KAAKi2D,eACZnhD,KAAM9U,KAAK8U,UAGnBm9C,QAAS,WACL,GAAIiC,GAAWl0D,KAAKk0D,UAChBl0D,MAAKm+B,QACLn+B,KAAKm+B,OAAO9hC,KAAK63D,GAEjBl0D,KAAKy+B,YAAcz+B,KAAK2xD,SACxB3xD,KAAKy+B,WAAW76B,OAAOswD,EAAStwD,SAGxCwxD,WAAY,SAAUjvD,GAClB,GAAI+U,GAAO/U,EAAE0G,OAAO+pD,UAChB17C,IAAQA,EAAK27C,WAAWxpC,QACxBnS,EAAK27C,WAAWxpC,QAAO,EAAMnS,EAAK27C,aAG1CxB,UAAW,SAAUlvD,GACjB,GAAI+U,GAAO/U,EAAE0G,OAAO+pD,UAChB17C,IAAQA,EAAK27C,WAAWxpC,QACxBnS,EAAK27C,WAAWxpC,QAAO,EAAOnS,EAAK27C,aAG3CnG,WAAY,WACR,GAAIh3C,GAAO1Z,KAAM82D,EAAS11D,EAAQ0N,GAAGgoD,WAAcC,IAAcr9C,EAAKxW,aAAeouD,OAAS,IAAInyD,cAAe63D,GAAgBF,EAAOC,QAAkBjvD,OAC1J4R,GAAKxW,QAAUvC,KAAeq2D,EAAct9C,EAAKxW,SAC7CwW,EAAKxW,QAAQkyB,YAAa,GAC1Bz0B,EAAW+Y,EAAKxW,SAAWkyB,UAAW4hC,OAAoB5hC,YAGlEi8B,sBAAuB,WAAA,GACfnuD,GAAUlD,KAAKkD,QACf+zD,EAAe/zD,EAAQ84B,OAAO7hC,MAC9B88D,IACAj3D,KAAKk3D,gBAELh0D,EAAQo9B,YAAYnmC,QACpB6F,KAAKm3D,qBAELF,GAAgB/zD,EAAQk5B,QACxBp8B,KAAKo8B,OAAOl5B,EAAQk5B,SAG5B86B,cAAe,WACX,GAAkE58C,GAAOrgB,EAArEyf,EAAO1Z,KAAMkD,EAAUwW,EAAKxW,QAAS84B,EAAS94B,EAAQ84B,MAC1D,KAAK/hC,EAAI,EAAO+hC,EAAO7hC,OAAXF,EAAmBA,IAC3BqgB,EAAQ0hB,EAAO/hC,GACfyf,EAAK4M,SAAShM,IAGtB68C,mBAAoB,WAChB,GAAyHj8B,GAAM9xB,EAAQyD,EAAQ5S,EAA3I6N,EAAU9H,KAAMkD,EAAU4E,EAAQ5E,QAAS8lD,EAAW9lD,EAAQwuD,mBAAoBpxB,EAAcp9B,EAAQo9B,WAC5G,KAAKrmC,EAAI,EAAOqmC,EAAYnmC,OAAhBF,EAAwBA,IAChCihC,EAAOoF,EAAYrmC,GACnBmP,EAAStB,EAAQsvD,sBAAsBl8B,EAAKhtB,MAC5CrB,EAAS/E,EAAQsvD,sBAAsBl8B,EAAKltB,IAC5ClG,EAAQ0e,QAAQpd,EAAQyD,EAAQlM,KAAeqoD,EAAU9tB,KAGjEk8B,sBAAuB,SAAUl0D,GAAV,GAGf2J,GAFA/E,EAAU9H,KACV6pD,EAAUnhD,GAASxF,GAAWA,EAAUA,EAAQ2mD,SAAW3mD,EAAQpD,EAUvE,OARI+pD,IACAh9C,EAAS/E,EAAQqyB,aAAa0vB,GAC1B3mD,EAAQqyB,YACR1oB,EAASA,EAAOu0B,aAAal+B,EAAQqyB,aAGzC1oB,EAAS,GAAIlD,GAAMzG,EAAQ9D,GAAK,EAAG8D,EAAQwE,GAAK,GAE7CmF,GAEXqnB,QAAS,WACL,GAAIxa,GAAO1Z,IACXinD,GAAOh2C,GAAGijB,QAAQzrB,KAAKiR,GACnB1Z,KAAKs0D,aACLt0D,KAAKs0D,YAAYpgC,UAErBx4B,MAAM27D,aAAa39C,EAAK87C,gBACxB97C,EAAKpN,QACLoN,EAAKlU,QAAQ8xD,IAAIlQ,IACjB1tC,EAAK0kB,SAASu1B,QAAQ2D,IAAIlQ,IAC1B1tC,EAAKykB,OAAOjK,SAAQ,GACpBxa,EAAKykB,OAASljC,EACdye,EAAK85C,iBACL95C,EAAK69C,kBACL79C,EAAK89C,wBACL99C,EAAKyoB,mBAETo1B,gBAAiB,WACb,GAAIn5B,GAAWp+B,KAAKo+B,QACfA,KAGLA,EAASlK,UACTkK,EAAS54B,QAAQ+F,SACjBvL,KAAKo+B,SAAW,OAEpB/c,KAAM,WAAA,GAKEpnB,GAAGmiB,EAAY9B,EAJf8uC,GACAptB,UACAsE,eAGJ,KAAKrmC,EAAI,EAAO+F,KAAKg8B,OAAO7hC,OAAhBF,EAAwBA,IAChCqgB,EAAQta,KAAKg8B,OAAO/hC,GAChBqgB,EAAMpX,QAAQgmD,cACdE,EAAKptB,OAAOpiC,KAAK0gB,EAAMpX,QAG/B,KAAKjJ,EAAI,EAAO+F,KAAKsgC,YAAYnmC,OAArBF,EAA6BA,IACrCmiB,EAAapc,KAAKsgC,YAAYrmC,GAC9BmvD,EAAK9oB,YAAY1mC,KAAK+G,KAAeyb,EAAWlZ,QAASkZ,EAAWipC,UAExE,OAAO+D,IAEXxnB,MAAO,WACH,IAAK5hC,KAAKwF,QAAQiyD,GAAG/7D,MAAMg8D,kBAAmB,CAC1C,GAAqIz9D,GAAjIuL,EAAUxF,KAAKwF,QAASmyD,EAAkBnyD,EAAQ,GAAIyqC,KAAiB2nB,KAAcC,EAAkB51D,SAAS41D,eACpH,GACIF,GAAkBA,EAAgBtzD,WAC9BszD,EAAgBG,aAAeH,EAAgBzwC,eAC/C+oB,EAAWr2C,KAAK+9D,GAChBC,EAAQh+D,KAAK+9D,EAAgB93B,kBAE5B83B,GAAmBE,EAE5B,KADAryD,EAAQo8B,QACH3nC,EAAI,EAAOg2C,EAAW91C,OAAfF,EAAuBA,IAC/Bg2C,EAAWh2C,GAAG4lC,UAAY+3B,EAAQ39D,KAI9C89D,KAAM,SAAU70D,GACZlD,KAAKsM,QACLtM,KAAKg4D,WAAW90D,GAChBlD,KAAKk3D,gBACLl3D,KAAKm3D,sBAETa,WAAY,SAAU90D,GAClBvC,EAAWX,KAAKkD,QAASA,IAE7BoJ,MAAO,WACH,GAAIoN,GAAO1Z,IACX0Z,GAAK8a,QAAO,GACZ9a,EAAKoqB,UAAUx3B,QACfoN,EAAK62C,gBAAgBjkD,QACrBoN,EAAKujB,eAETzW,QAAS,SAAUpd,EAAQyD,EAAQ3J,GAA1B,GACDkZ,GAEI+nC,CAUR,OAXInkD,MAAKqtD,uBAAyBrtD,KAAKqqD,aAC/BlG,EAAWnkD,KAAKqtD,sBAAsB50C,QAC1C2D,EAAapc,KAAKwyD,oBAAoBrO,EAASoJ,KAC/CnxC,EAAWhT,OAAOA,GAClBgT,EAAWvP,OAAOA,GAClBuP,EAAW8Q,OAAOhqB,GAClBkZ,EAAWwf,gBAEXxf,EAAa,GAAIunB,GAAWv6B,EAAQyD,EAAQlM,KAAeX,KAAKkD,QAAQwuD,mBAAoBxuD,IAC5FlD,KAAKyyD,cAAcr2C,IAEhBA,GAEXoG,UAAW,SAAUpZ,EAAQyD,GAAlB,GACE5S,GACDqF,CADR,KAASrF,EAAI,EAAO+F,KAAKsgC,YAAYnmC,OAArBF,EAA6BA,IAEzC,GADIqF,EAAIU,KAAKsgC,YAAYrmC,GACrBqF,EAAE4O,MAAQ9E,GAAU9J,EAAE0O,IAAMnB,EAC5B,OAAO,CAGf,QAAO,GAEX4lD,cAAe,SAAUr2C,EAAYiK,GAajC,MAZIA,MAAa,GACbrmB,KAAKwgC,gBAAgB/nB,IAAI,GAAI3Q,GAAQouB,kBAAkB9Z,EAAYpc,OAAO,GAE9Eoc,EAAWtU,QAAU9H,KACrBoc,EAAW8tC,uBACX9tC,EAAWkgB,UACXt8B,KAAK8jC,UAAU1oC,OAAOghB,EAAW0P,QACjC9rB,KAAKsgC,YAAY1mC,KAAKwiB,GACtBpc,KAAK4F,QAAQ0hD,IACT2Q,OAAQ77C,GACR87C,aAEG97C,GAEXmK,eAAgB,SAAUnK,EAAYiK,GAAtB,GAER89B,GADAkJ,EAAwBrtD,KAAKqtD,qBAEjC,IAAIA,GAAyBrtD,KAAKqqD,aAI9B,GAHAlG,EAAW4B,EAAYsH,EAAuB1H,EAAcvpC,EAAW+nC,WACvE/nC,EAAW+nC,SAAWA,EACtB/nC,EAAWwf,eACN57B,KAAK4F,QAAQ,OAASwW,WAAYA,IAKnC,MAJApc,MAAKwyD,oBAAoBrO,EAASoJ,KAAOnxC,EACzCixC,EAAsB50C,IAAI0rC,GAC1BnkD,KAAKyyD,cAAcr2C,EAAYiK,GAC/BjK,EAAWmwC,oBACJnwC,MAER,KAAKpc,KAAK4F,QAAQ,OAASwW,WAAYA,IAG1C,MAFApc,MAAKyyD,cAAcr2C,EAAYiK,GAC/BjK,EAAWmwC,oBACJnwC,GAGfkK,SAAU,SAAUjc,EAAMgc,GACtB,GAAI/L,GAAO4L,EAAgBlmB,KAAKkD,QAAQgjB,aACxC,IAAI7b,YAAgB82B,GAChB7mB,EAAQjQ,MACL,CAAA,GAAMA,YAAgB3O,OAAMwG,MAI/B,MAHAgkB,GAAgBvlB,KAAeulB,EAAe7b,OAC9CiQ,EAAQ,GAAI6mB,GAAMjb,EAAelmB,MAiBrC,MAbIqmB,MAAa,GACbrmB,KAAKwgC,gBAAgB/nB,IAAI,GAAI3Q,GAAQquB,aAAa7b,EAAOta,OAAO,GAEpEA,KAAKg8B,OAAOpiC,KAAK0gB,GACbA,EAAMxS,UAAY9H,OAClBA,KAAKuwD,gBAAgBpkD,OAAOmO,GAC5BA,EAAMxS,QAAU9H,MAEpBA,KAAK8jC,UAAU1oC,OAAOkf,EAAMwR,QAC5B9rB,KAAK4F,QAAQ0hD,IACT2Q,OAAQ39C,GACR49C,aAEG59C,GAEX0L,UAAW,SAAU1L,EAAO+L,GAAjB,GAGH89B,GAOQuK,EATRh1C,EAAO1Z,KACP8kD,EAAaprC,EAAKorC,UAEtB,IAAIA,GAAc9kD,KAAKqqD,aAInB,GAHAlG,EAAW4B,EAAYjB,EAAYa,EAAcrrC,EAAM6pC,WACvD7pC,EAAM6pC,SAAWA,EACjB7pC,EAAMshB,eACD57B,KAAK4F,QAAQ,OAAS0U,MAAOA,IAK9B,MAJAta,MAAK8kD,WAAWrsC,IAAI0rC,GAChBuK,EAAe1uD,KAAK2uD,oBAAoBrB,SAASnJ,EAASoJ,KAC9DmB,EAAalpD,QAAU8U,EACvBo0C,EAAaroC,SAAWA,EACjB/L,MAER,KAAKta,KAAK4F,QAAQ,OAAS0U,MAAOA,IACrC,MAAOta,MAAKsmB,SAAShM,EAAO+L,IAGpC9a,OAAQ,SAAU2xB,EAAO7W,GAAjB,GAEAiJ,GACA0M,EACAsE,EACArmC,CAQJ,KAZAijC,EAAQn1B,GAAQm1B,GAASA,EAAMzqB,MAAM,IAAMyqB,GACvC5N,EAAWw2B,EAAqB5oB,GAChClB,EAAS1M,EAAS0M,OAClBsE,EAAchR,EAASgR,YAEtBroC,GAAQouB,KACTA,GAAW,GAEXA,GACArmB,KAAKwgC,gBAAgBhD,QAEzBx9B,KAAKuqD,uBACAtwD,EAAI+hC,EAAO7hC,OAAS,EAAGF,GAAK,EAAGA,IAChC+F,KAAKm4D,YAAYn8B,EAAO/hC,GAAIosB,EAAUia,EAE1C,KAAKrmC,EAAIqmC,EAAYnmC,OAAS,EAAGF,GAAK,EAAGA,IACrC+F,KAAKm4D,YAAY73B,EAAYrmC,GAAIosB,EAErCrmB,MAAKwqD,sBACDnkC,GACArmB,KAAKwgC,gBAAgB7C,QAAO,GAEhC39B,KAAK4F,QAAQ0hD,IACT2Q,SACAC,QAASh7B,KAGjBk7B,qBAAsB,SAAU/tD,GACxBrK,KAAKqqD,cACLrqD,KAAK8kD,WAAWv5C,OAAOlB,EAAK85C,gBACrBnkD,MAAKotD,SAAS/iD,EAAK85C,SAASrkD,MAG3Cu4D,0BAA2B,SAAUhuD,GAC7BrK,KAAKqqD,cACLrqD,KAAKqtD,sBAAsB9hD,OAAOlB,EAAK85C,gBAChCnkD,MAAKwyD,oBAAoBnoD,EAAK85C,SAASoJ,OAGtDtrB,eAAgB,SAAU/E,GAAV,GAER7yB,GAAMq1B,EAAMtK,EACPpvB,EAFL+7B,IAEJ,KAAS/7B,EAAM,EAASk3B,EAAM/iC,OAAZ6L,EAAoBA,IAClCqE,EAAO6yB,EAAMl3B,GACbovB,EAAW/qB,EAAKnH,QAAQkyB,SAEpBsK,EADAr1B,YAAgB82B,IACP7mB,MAAOjQ,IAEP+R,WAAY/R,GAErB+qB,GAAYA,EAAS7pB,UAAW,IAAUvL,KAAK4F,QAAQ,SAAU85B,IACjEqC,EAASnoC,KAAKyQ,EAGtB,OAAO03B,IAEXlH,KAAM,WACF76B,KAAKwgC,gBAAgB3F,QAEzBE,KAAM,WACF/6B,KAAKwgC,gBAAgBzF,QAEzBvG,OAAQ,SAAUnqB,EAAMnH,GACpB,IAAIiF,GAAUkC,GAqBV,MAAOrK,MAAK0jC,cApBZxgC,GAAUvC,GAAa8zB,gBAAgB,GAASvxB,EAChD,IAAwEjJ,GAAGuL,EAAvEivB,EAAiBvxB,EAAQuxB,eAAgByI,KAAY4K,IAUzD,KATKrT,GACDz0B,KAAKu8B,WAETv8B,KAAKwrD,oBAAqB,EACtBnhD,YAAgB84C,OAChBjmB,EAAQ7yB,EACDA,YAAgBk8C,KACvBrpB,GAAS7yB,IAERpQ,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BuL,EAAU03B,EAAMjjC,GACZuL,EAAQgvB,QAAO,IACfsT,EAASluC,KAAK4L,EAGtBxF,MAAKyrD,kBAAkB3jB,MACvB9nC,KAAKwrD,oBAAqB,GAKlCnpB,UAAW,WACPriC,KAAKw0B,OAAOx0B,KAAKg8B,OAAOtX,OAAO1kB,KAAKsgC,eAExCM,WAAY,SAAUhtB,GAAV,GACJ3Z,GAAGijC,EAAO7yB,EAEVy9B,CACJ,IAFA9nC,KAAKwrD,oBAAqB,EACtB1jB,KACAl0B,YAAgB7D,GAEhB,IADAmtB,EAAQl9B,KAAKg8B,OAAOtX,OAAO1kB,KAAKsgC,aAC3BrmC,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BoQ,EAAO6yB,EAAMjjC,GACP2Z,IAAQvJ,EAAK81B,SAASvsB,KAAUvJ,EAAKnH,QAAQu8B,QAC3Cp1B,EAAKmqB,QAAO,IACZsT,EAASluC,KAAKyQ,EAK9BrK,MAAKyrD,kBAAkB3jB,MACvB9nC,KAAKwrD,oBAAqB,GAE9BjvB,SAAU,SAAUlyB,GAChBrK,KAAKwrD,oBAAqB,CAC1B,IAAiChmD,GAASvL,EAAtCsxD,KAAiBruB,IAQrB,KAPI7yB,YAAgB84C,OAChBjmB,EAAQ7yB,EACDA,YAAgBk8C,GACvBrpB,EAAMtjC,KAAKyQ,GACHlC,GAAUkC,KAClB6yB,EAAQl9B,KAAK0jC,eAAejxB,MAAM,IAEjCxY,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BuL,EAAU03B,EAAMjjC,GACZuL,EAAQgvB,QAAO,IACf+2B,EAAW3xD,KAAK4L,EAGxBxF,MAAKyrD,qBAAsBF,GAC3BvrD,KAAKwrD,oBAAqB,GAE9Bj5B,QAAS,SAAU2K,EAAO7W,GAAjB,GAID7pB,GAAuC8lB,EAGnClL,CANH8lB,KACDA,EAAQl9B,KAAK0jC,eAAejxB,SAE5BjW,EAASwD,KAAKs4D,iBAAiBp7B,IAC9BjlC,GAAQouB,IAAaA,GACtB/D,EAAU2hC,EAAejkD,KAAK8jC,UAAWtnC,EAAOg2B,SAC5Cpb,EAAO,GAAIkf,IAAYt2B,KAAMk9B,EAAO5a,GACxCtiB,KAAKwgC,gBAAgB/nB,IAAIrB,KAEzBpX,KAAK8jC,UAAUvR,QAAQ/1B,EAAOg2B,SAC9BxyB,KAAKu4D,aAAa/7D,GAAQ,KAGlCi2B,OAAQ,SAAUyK,EAAO7W,GAAjB,GAIA7pB,GAAuC8lB,EAGnClL,CANH8lB,KACDA,EAAQl9B,KAAK0jC,eAAejxB,SAE5BjW,EAASwD,KAAKs4D,iBAAiBp7B,IAC9BjlC,GAAQouB,IAAaA,GACtB/D,EAAU2hC,EAAejkD,KAAK8jC,UAAWtnC,EAAOg2B,SAC5Cpb,EAAO,GAAImf,IAAWv2B,KAAMk9B,EAAO5a,GACvCtiB,KAAKwgC,gBAAgB/nB,IAAIrB,KAEzBpX,KAAK8jC,UAAUrR,OAAOj2B,EAAOg2B,SAC7BxyB,KAAKu4D,aAAa/7D,GAAQ,KAGlCg8D,cAAe,SAAUnuD,EAAMnH,GAAhB,GAGPpB,GAAS8R,EAAM6kD,EAAUC,EAFzBxE,EAAWl0D,KAAKk0D,WAChBtJ,EAAU,GAAI9iD,GAAQoI,UAAUgkD,EAEb,KAAnBA,EAASvwD,OAAmC,IAApBuwD,EAAStwD,SAGrCV,EAAUvC,GACN85B,SAAS,EACT3kB,MAAO,iBACR5S,GACkB,QAAjBA,EAAQ4S,QACR5S,EAAQ4S,MAAQ,iBAEhBzL,YAAgBk8C,GAChB3yC,EAAOvJ,EAAKuQ,OAAOytC,IACZtgD,GAAQsC,GACfuJ,EAAO5T,KAAK+yB,YAAY1oB,GACjBA,YAAgB0F,KACvB6D,EAAOvJ,EAAKqJ,SAEhB+kD,EAAW7kD,EAAKF,QAChBE,EAAKkB,KAAK9U,KAAKs2D,QACX1iD,EAAKjQ,MAAQuwD,EAASvwD,OAASiQ,EAAKhQ,OAASswD,EAAStwD,UACtD5D,KAAKs2D,MAAQt2D,KAAKw2D,cAAch+D,GAAKG,IAAIu7D,EAASvwD,MAAQ80D,EAAS90D,MAAOuwD,EAAStwD,OAAS60D,EAAS70D,SACrGgQ,EAAO6kD,EAAS/kD,QAAQoB,KAAK9U,KAAKs2D,QAEtCt2D,KAAK24D,iBACL72D,EAAU8R,EAAKF,QACfk3C,EAAQ90C,MAAMlC,EAAM1Q,EAAQ4S,OAC5B4iD,EAAS9kD,EAAKN,UAAUnC,MAAMrP,EAAQwR,WACtCtT,KAAK28B,IAAI+7B,EAAOrnD,MAAM,IAAKnO,EAAQu3B,WAEvCm+B,YAAa,SAAUrjB,GAAV,GAILrY,GAAuB/jC,EAAKkR,EAAMpQ,EAiClCgiC,EACAD,EAkBA5kB,CAnDJ,IAJI/O,GAAYktC,KACZA,EAAY,QAEZrY,EAAQl9B,KAAKw0B,SACI,IAAjB0I,EAAM/iC,OAAV,CAGA,OAAQo7C,EAAUp2C,eAClB,IAAK,OACL,IAAK,MACDhG,EAAM2H,EACN,MACJ,KAAK,QACL,IAAK,SACD3H,EAAMoiD,GAGV,IAAKthD,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAE1B,GADAoQ,EAAO6yB,EAAMjjC,GACToQ,YAAgB82B,GAChB,OAAQoU,EAAUp2C,eAClB,IAAK,OACDhG,EAAMX,GAAKG,IAAIQ,EAAKkR,EAAKnH,QAAQ9D,EACjC,MACJ,KAAK,MACDjG,EAAMX,GAAKG,IAAIQ,EAAKkR,EAAKnH,QAAQwE,EACjC,MACJ,KAAK,QACDvO,EAAMX,GAAKI,IAAIO,EAAKkR,EAAKnH,QAAQ9D,EACjC,MACJ,KAAK,SACDjG,EAAMX,GAAKI,IAAIO,EAAKkR,EAAKnH,QAAQwE,GAO7C,IAFIu0B,KACAD,KACC/hC,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAE1B,GADAoQ,EAAO6yB,EAAMjjC,GACToQ,YAAgB82B,GAGhB,OAFAnF,EAAOpiC,KAAKyQ,GACZ4xB,EAAWriC,KAAKyQ,EAAKuQ,UACb26B,EAAUp2C,eAClB,IAAK,OACL,IAAK,QACDkL,EAAK+B,SAAS,GAAIzC,GAAMxQ,EAAKkR,EAAKnH,QAAQwE,GAC1C,MACJ,KAAK,MACL,IAAK,SACD2C,EAAK+B,SAAS,GAAIzC,GAAMU,EAAKnH,QAAQ9D,EAAGjG,IAKhDie,EAAO,GAAItP,GAAQmuB,cAAc+F,EAAQC,GAC7Cj8B,KAAKwgC,gBAAgB/nB,IAAIrB,GAAM,KAEnCtC,KAAM,SAAUA,EAAM5R,GAAhB,GAEMqmC,GAII2sB,EACA2C,EACAC,CASZ,OAhBIhkD,KACIy0B,EAAcrmC,EAAUA,EAAQ2P,MAAQ,GAAI/K,GAAQ6B,MAAM,EAAG,GACjEmL,EAAO9U,KAAKs2D,MAAQt2D,KAAKw2D,cAAc1hD,GAClCzM,GAAYkhC,KACbA,EAAc,GAAIzhC,GAAQ6B,MAAMnR,GAAKJ,MAAMmxC,EAAYnqC,GAAI5G,GAAKJ,MAAMmxC,EAAY7hC,IAC9EwuD,EAAc3sB,EAAYl4B,MAAMyD,GAChC+jD,EAAiB74D,KAAKurC,YAAYhC,GAClCuvB,EAAMD,EAAe1nD,MAAM+kD,GAC/Bl2D,KAAK8/B,UAAU,GAAIh4B,GAAQ6B,MAAMnR,GAAKJ,MAAM0gE,EAAI15D,GAAI5G,GAAKJ,MAAM0gE,EAAIpxD,MAEnExE,IACAA,EAAQ4R,KAAOA,GAEnB9U,KAAKy2D,gBACLz2D,KAAK02D,mBAEF12D,KAAKs2D,OAEhByC,QAAS,SAAUp8B,GACf,GAAIwB,GAASn+B,KAAKm+B,MAIlB,OAHKA,GAAOxS,YACRgR,EAAMA,EAAIzrB,KAAKlR,KAAKggC,OAEjBrD,GAEXA,IAAK,SAAUA,EAAKlC,GAAf,GAEO/gB,GACA0kB,CAFJzB,aAAehzB,KACX+P,EAAO1Z,KACPo+B,EAAW1kB,EAAK0kB,SACpBzB,EAAMjjB,EAAKq/C,QAAQp8B,GACnBA,EAAMA,EAAItrB,MAAM,IACZopB,EACA2D,EAAS46B,iBAAiBr8B,EAAIv9B,EAAGu9B,EAAIj1B,EAAG,WACpCgS,EAAKg9C,qBAGTt4B,EAAS66B,SAASt8B,EAAIv9B,EAAGu9B,EAAIj1B,GAC7BgS,EAAKg9C,qBAIjBxC,SAAU,WAAA,GACF1uD,GAAUxF,KAAKwF,QACf7B,EAAQ6B,EAAQ7B,QAChBC,EAAS4B,EAAQ5B,QAIrB,OAHI5D,MAAK2xD,UACL/tD,GAAU5D,KAAK2xD,QAAQnsD,QAAQ0zD,eAE5B,GAAInpD,GAAK,EAAG,EAAGpM,EAAOC,IAEjC6X,KAAM,WAAA,GAIWxhB,GACDoQ,CAJZ,IAAIrK,KAAKkD,QAAQuY,KAAKqZ,QAGlB,IAFA90B,KAAKmxD,cACLnxD,KAAKm5D,YAAc,EACVl/D,EAAI,EAAO+F,KAAK0jC,eAAevpC,OAAxBF,EAAgCA,IACxCoQ,EAAOrK,KAAK0jC,eAAezpC,GAC/B+F,KAAKmxD,WAAWv3D,KAAKyQ,IAIjCi4B,IAAK,WAAA,GAIYroC,GACDoQ,CAJZ,IAAIrK,KAAKkD,QAAQuY,KAAKqZ,QAAS,CAG3B,IAFA90B,KAAKmxD,cACLnxD,KAAKm5D,YAAc,EACVl/D,EAAI,EAAO+F,KAAK0jC,eAAevpC,OAAxBF,EAAgCA,IACxCoQ,EAAOrK,KAAK0jC,eAAezpC,GAC/B+F,KAAKmxD,WAAWv3D,KAAKyQ,EAEzBrK,MAAKuL,OAAOvL,KAAKmxD,YAAY,KAGrC5uB,MAAO,WAAA,GAEKl4B,GAAM+uD,EAAQn/D,EACdo/D,EACA/pC,EACAgR,EACAtE,EACA5qB,CANR,IAAIpR,KAAKmxD,WAAWh3D,OAAS,EAAG,CAW5B,IATIk/D,KACA/pC,EAAWw2B,EAAqB9lD,KAAKmxD,YACrC7wB,EAAchR,EAASgR,YACvBtE,EAAS1M,EAAS0M,OAClB5qB,GACAhS,EAAGY,KAAKm5D,YAAcn5D,KAAKkD,QAAQuY,KAAK8wB,QACxC7kC,EAAG1H,KAAKm5D,YAAcn5D,KAAKkD,QAAQuY,KAAK+wB,SAE5CxsC,KAAKu8B,WACAtiC,EAAI,EAAO+hC,EAAO7hC,OAAXF,EAAmBA,IAC3BoQ,EAAO2xB,EAAO/hC,GACdm/D,EAAS/uD,EAAKqJ,QACd2lD,EAAQhvD,EAAKvK,IAAMs5D,EACnBA,EAAOhtD,SAAS,GAAIzC,GAAMU,EAAKnH,QAAQ9D,EAAIgS,EAAOhS,EAAGiL,EAAKnH,QAAQwE,EAAI0J,EAAO1J,IAC7E0xD,EAAOtxD,QAAU9H,KACjBo5D,EAASp5D,KAAKgmB,UAAUozC,GACpBA,GACAA,EAAO5kC,QAGf,KAAKv6B,EAAI,EAAOqmC,EAAYnmC,OAAhBF,EAAwBA,IAChCoQ,EAAOi2B,EAAYrmC,GACnBm/D,EAASp5D,KAAKumB,eAAelc,EAAKqJ,SAC9B0lD,IACAp5D,KAAKs5D,wBAAwBF,EAAQ/uD,EAAM,SAAUgvD,EAASjoD,GAC9DpR,KAAKs5D,wBAAwBF,EAAQ/uD,EAAM,SAAUgvD,EAASjoD,GAC9DgoD,EAAO5kC,QAAO,GACd4kC,EAAOx9B,cAGf57B,MAAKkiC,eACLliC,KAAKm5D,aAAe,IAG5BG,wBAAyB,SAAUl9C,EAAYm9C,EAAkB/K,EAAe6K,EAASjoD,GAAhE,GACjBy9C,GAAYH,EAAc3nC,EAC1Bla,EAAS0sD,EAAiB/K,KAC1B1mD,EAAU9H,IACV6M,aAAkB25C,IAAa6S,EAAQxsD,EAAOyN,MAAMxa,KACpDinB,EAAcsyC,EAAQxsD,EAAOyN,MAAMxa,IAC/BgI,EAAQqyB,aAAapT,EAAYjnB,IACjCsc,EAAWoyC,GAAeznC,EAAYqa,aAAav0B,EAAO3J,QAAQnH,QAElE2yD,EAAe5mD,EAAQ6mD,oBAAoBrB,SAASvmC,EAAYo9B,SAASoJ,KACrEmB,IACAG,EAAa,SAAUxkD,GACnB0c,EAAcjf,EAAQslD,SAAS/iD,EAAKvK,IACpCsc,EAAWoyC,GAAeznC,EAAYqa,aAAav0B,EAAO3J,QAAQnH,OAClEqgB,EAAWwf,eAEf9zB,EAAQ8mD,2BAA2Bh1D,KAAK80D,EAAaG,WAAWA,OAIxEzyC,EAAWoyC,GAAe,GAAI7kD,GAAM4vD,EAAiB/K,EAAgB,WAAWpvD,EAAIgS,EAAOhS,EAAGm6D,EAAiB/K,EAAgB,WAAW9mD,EAAI0J,EAAO1J,KAG7JqrB,YAAa,SAAUmK,EAAO3uB,GAAjB,GACgByD,GAEjB3H,EAEKpQ,EAJT2Z,EAAO7D,EAAKoF,QAAeqkD,EAAKrxD,GAAU+0B,GAASl9B,KAAKs4D,iBAAiBp7B,IAAWlB,OAAQh8B,KAAKg8B,OACrG,IAAIw9B,EAAGx9B,OAAO7hC,OAAS,EAGnB,IAFIkQ,EAAOmvD,EAAGx9B,OAAO,GACrBpoB,EAAOvJ,EAAKuQ,OAAOof,IACV//B,EAAI,EAAOu/D,EAAGx9B,OAAO7hC,OAAdF,EAAsBA,IAClCoQ,EAAOmvD,EAAGx9B,OAAO/hC,GACjB+X,EAAO3H,EAAKuQ,OAAOof,IACfzrB,KAAW,IACXyD,EAAK5S,GAAKiL,EAAKm+B,gBAAgBppC,EAC/B4S,EAAKtK,GAAK2C,EAAKm+B,gBAAgB9gC,GAEnCkM,EAAOA,EAAKtB,MAAMN,EAG1B,OAAO4B,IAEX6lD,iBAAkB,WACd,GAAIC,GAAkB15D,KAAKwF,QAAQ4L,QAInC,OAHIpR,MAAK2xD,UACL+H,EAAgBtmD,KAAOpT,KAAK2xD,QAAQnsD,QAAQ0zD,eAEzCQ,GAEXtD,eAAgB,SAAUvjD,GACtB,GAAI6mD,GAAkB15D,KAAKy5D,kBAC3B,OAAO,IAAI9vD,GAAMkJ,EAAMzT,EAAIs6D,EAAgB/mD,KAAME,EAAMnL,EAAIgyD,EAAgBtmD,MAE/EumD,eAAgB,SAAU9mD,GACtB,GAAI6mD,GAAkB15D,KAAKy5D,kBAC3B,OAAO,IAAI9vD,GAAMkJ,EAAMzT,EAAIs6D,EAAgB/mD,KAAME,EAAMnL,EAAIgyD,EAAgBtmD,MAE/EwmD,YAAa,SAAU/mD,GACnB,MAAO7S,MAAK65D,qBAAqBhnD,EAAO7S,KAAK85D,gBAEjDvuB,YAAa,SAAU14B,GACnB,MAAO7S,MAAK65D,qBAAqBhnD,EAAO7S,KAAK+5D,UAEjDzyB,aAAc,SAAUz0B,GACpB,MAAO7S,MAAK65D,qBAAqBhnD,EAAO7S,KAAKg6D,eAEjDC,aAAc,SAAUpnD,GACpB,MAAO7S,MAAK65D,qBAAqBhnD,EAAO7S,KAAKk6D,qBAEjDtE,gBAAiB,SAAU/iD,GACvB,GAAIsnD,GAAYn6D,KAAKo2D,eAAevjD,EAKpC,OAJK7S,MAAKm+B,OAAOxS,YACbwuC,EAAU/6D,EAAI+6D,EAAU/6D,EAAIY,KAAKo+B,SAASwB,WAC1Cu6B,EAAUzyD,EAAIyyD,EAAUzyD,EAAI1H,KAAKo+B,SAASyB,WAEvC7/B,KAAK45D,YAAYO,IAE5BC,gBAAiB,SAAUvnD,GACvB,MAAO7S,MAAK25D,eAAe35D,KAAKurC,YAAY14B,KAEhDgnD,qBAAsB,SAAUhnD,EAAOua,GAAjB,GAOVpZ,GAAyDE,EAN7D1X,EAASqW,CASb,OARIA,aAAiBlJ,GACbyjB,IACA5wB,EAAS4wB,EAAO7xB,MAAMsX,KAGtBmB,EAAKhU,KAAK65D,qBAAqBhnD,EAAMS,UAAW8Z,GAASlZ,EAAKlU,KAAK65D,qBAAqBhnD,EAAMY,cAAe2Z,GACjH5wB,EAASuT,EAAKqF,WAAWpB,EAAIE,IAE1B1X,GAEX69D,cAAe,SAAUvV,GACrB9kD,KAAKkD,QAAQ4hD,WAAaA,EAC1B9kD,KAAKs6D,cACDt6D,KAAKkD,QAAQsuD,UACbxxD,KAAK8kD,WAAWyV,SAGxBC,yBAA0B,SAAU1V,GAChC9kD,KAAKkD,QAAQmqD,sBAAwBvI,EACrC9kD,KAAKy6D,wBACDz6D,KAAKkD,QAAQsuD,UACbxxD,KAAKqtD,sBAAsBkN,SAGnCn+B,OAAQ,SAAUl5B,GAAV,GAEA6F,GASA1J,EAiBAk7B,EACAC,EAEIpjB,CAnBR,QAXApX,KAAKqrD,YAAa,EAEdhjD,GAAYnF,KACZA,EAAUlD,KAAKkD,QAAQk5B,QAGvBrzB,EADAV,GAAYnF,IAAYmF,GAAYnF,EAAQ6F,MACrC,OAEA7F,EAAQ6F,KAGXA,EAAK5J,eACb,IAAK,OACDE,EAAI,GAAIyI,GAAQ2uC,WAAWz2C,KAC3B,MACJ,KAAK,UACDX,EAAI,GAAIyI,GAAQgvC,cAAc92C,KAC9B,MACJ,KAAK,gBACL,IAAK,QACL,IAAK,SACL,IAAK,iBACDX,EAAI,GAAIyI,GAAQqf,aAAannB,KAC7B,MACJ,SACI,KAAM,qBAAwB+I,EAAO,sBAErCwxB,EAAe,GAAIzyB,GAAQqpC,YAAYnxC,MACvCw6B,EAAan7B,EAAE+8B,OAAOl5B,GACtBs3B,IACIpjB,EAAO,GAAItP,GAAQ6tB,eAAe4E,EAAcC,EAAYt3B,EAAUA,EAAQu3B,QAAU,MAC5Fz6B,KAAKwgC,gBAAgB/nB,IAAIrB,IAE7BpX,KAAKqrD,YAAa,EAClBrrD,KAAK06D,sBAETvgC,aAAc,SAAUr6B,GACpB,GAAIqe,EAIJ,QAHAA,EAAQjX,GAAM7L,MAAM2E,KAAKg8B,OAAQ,SAAUtyB,GACvC,MAAOA,GAAEoiB,OAAOhsB,KAAOA,KAGhBqe,EAEXA,EAAQjX,GAAM7L,MAAM2E,KAAKsgC,YAAa,SAAUhhC,GAC5C,MAAOA,GAAEwsB,OAAOhsB,KAAOA,KAI/B8wD,qBAAsB,SAAU1tD,GACxBA,EAAQk5B,SACRl5B,EAAQk5B,OAASz7B,EAAWmH,EAAQ6jC,WAAW16B,GAAG26B,mBAAsB1oC,EAAQk5B,UAGxFqvB,kBAAmB,SAAU3jB,EAAUyjB,IAC/BzjB,EAAS3tC,QAAUoxD,EAAWpxD,SAC9B6F,KAAK4F,QAAQ6hD,IACT3f,SAAUA,EACVyjB,WAAYA,KAIxBiL,cAAe,SAAU1hD,GACrB,MAAOtc,IAAKG,IAAIH,GAAKI,IAAIkc,EAAM9U,KAAKkD,QAAQ0/B,SAAU5iC,KAAKkD,QAAQ2/B,UAEvE4zB,cAAe,SAAUl6D,GACrB,GAAIuL,GAAU9H,KAAM28B,EAAMpgC,GAAOuL,EAAQk4B,IACrCl4B,GAAQq2B,OAAOxS,WACf7jB,EAAQs2B,SAAS66B,SAASt8B,EAAIv9B,EAAGu9B,EAAIj1B,GACrCI,EAAQ6wD,mBAER7wD,EAAQg4B,UAAUnD,GAClB70B,EAAQ6yD,wBAGhBC,WAAY,WACR56D,KAAK4F,QAAQm0B,IACT4mB,MAAO3gD,KAAKggC,KACZrrB,MAAO9T,OAAOg6D,OAGtB/6B,UAAW,SAAUnD,GACjB38B,KAAKggC,KAAOrD,EACZ38B,KAAK86D,oBAETnC,eAAgB,WAAA,GACR7jD,GAAO9U,KAAKs2D,MACZ1qC,EAAY,GAAItC,GAAmB,EAAG,EAAGxU,EAAMA,EACnD8W,GAAUC,OAAO7rB,KAAK8jC,WACtB9jC,KAAK+6D,kBAAkBnvC,GACvB5rB,KAAK86D,oBAETH,oBAAqB,WAAA,GACbh+B,GAAM38B,KAAKggC,KAAMlrB,EAAO9U,KAAKs2D,MAC7B1qC,EAAY,GAAItC,GAAmBqT,EAAIv9B,EAAGu9B,EAAIj1B,EAAGoN,EAAMA,EAC3D8W,GAAUC,OAAO7rB,KAAK8jC,WACtB9jC,KAAK+6D,kBAAkBnvC,GACvB5rB,KAAK86D,oBAETC,kBAAmB,SAAUC,GACzBh7D,KAAKg6D,aAAegB,EAAgB3vC,WACpCrrB,KAAKk6D,mBAAqBc,EAAgBzvC,SAASF,YAEvDyvC,iBAAkB,WAAA,GACVn+B,GAAM38B,KAAKggC,KAAMlrB,EAAO9U,KAAKs2D,MAC7B1qC,EAAY,GAAItC,GAAmBqT,EAAIv9B,EAAGu9B,EAAIj1B,EAAGoN,EAAMA,EAC3D9U,MAAK+5D,QAAUnuC,EAAUP,WACzBrrB,KAAK85D,cAAgBluC,EAAUL,SAASF,YAE5C+R,SAAU,SAAUF,EAAO5a,GACvB,GAAI9lB,GAASwD,KAAKs4D,iBAAiBp7B,EACnCl9B,MAAK8jC,UAAUnR,QAAQn2B,EAAOg2B,QAASlQ,GACvCtiB,KAAKu4D,aAAa/7D,GAAQ,IAE9B+7D,aAAc,SAAU/7D,EAAQ+1B,GAC5B,GAAyGt4B,GAAGoQ,EAAxG4wD,EAAW1oC,EAAUvyB,KAAKg8B,OAAO7hC,OAAS,EAAI,EAAG+gE,EAAS3oC,EAAUvyB,KAAKsgC,YAAYnmC,OAAS,EAAI,CACtG,KAAKF,EAAI,EAAOuC,EAAOw/B,OAAO7hC,OAAlBF,EAA0BA,IAClCoQ,EAAO7N,EAAOw/B,OAAO/hC,GACrBiN,GAAMqE,OAAOvL,KAAKg8B,OAAQ3xB,GAC1BnD,GAAMiF,OAAOnM,KAAKg8B,OAAQ3xB,EAAM4wD,EAEpC,KAAKhhE,EAAI,EAAOuC,EAAOsvD,KAAK3xD,OAAhBF,EAAwBA,IAChCoQ,EAAO7N,EAAOsvD,KAAK7xD,GACnBiN,GAAMqE,OAAOvL,KAAKsgC,YAAaj2B,GAC/BnD,GAAMiF,OAAOnM,KAAKsgC,YAAaj2B,EAAM6wD,IAG7C5C,iBAAkB,SAAUp7B,GAAV,GACVjjC,GAUIoQ,EAVD7N,KAAakjC,EAAOxC,CAS3B,KARA1gC,EAAOg2B,WACPh2B,EAAOw/B,UACPx/B,EAAOsvD,QACF5uB,EAEOn1B,GAAQm1B,KAChBwC,GAAQxC,IAFRwC,EAAO1/B,KAAK0jC,eAAejxB,QAI1BxY,EAAI,EAAOylC,EAAKvlC,OAATF,EAAiBA,IACrBoQ,EAAOq1B,EAAKzlC,GACZoQ,YAAgB82B,IAChB3kC,EAAOw/B,OAAOpiC,KAAKyQ,GACnB7N,EAAOg2B,QAAQ54B,KAAKyQ,EAAKyhB,SAClBzhB,YAAgBs5B,KACvBnnC,EAAOsvD,KAAKlyD,KAAKyQ,GACjB7N,EAAOg2B,QAAQ54B,KAAKyQ,EAAKyhB,QAGjC,OAAOtvB,IAEX27D,YAAa,SAAU9tD,EAAMgc,EAAU80C,GACnC9wD,EAAKmqB,QAAO,GACRnqB,YAAgB82B,IAChBnhC,KAAKo4D,qBAAqB/tD,GAC1BrK,KAAKo7D,aAAa/wD,EAAMgc,EAAU80C,IAC3B9wD,YAAgBs5B,KACvB3jC,KAAKq4D,0BAA0BhuD,GAC/BrK,KAAKq7D,kBAAkBhxD,EAAMgc,IAEjCrmB,KAAK8jC,UAAUv4B,OAAOlB,EAAKyhB,SAE/BsvC,aAAc,SAAU9gD,EAAO+L,EAAU80C,GAA3B,GACNlhE,GAAGmiB,EAAYmZ,EASNtuB,EATiB8c,KAAcH,IAO5C,KANA5jB,KAAKg+B,YAAYgD,eACb3a,GACArmB,KAAKwgC,gBAAgB1C,iBAAiB,GAAI9H,GAAgB1b,IAE9DpT,GAAMqE,OAAOvL,KAAKg8B,OAAQ1hB,GAC1Bta,KAAKuwD,gBAAgBhlD,OAAO+O,GACvBrgB,EAAI,EAAOqgB,EAAMkb,WAAWr7B,OAArBF,EAA6BA,IAErC,IADAs7B,EAAYjb,EAAMkb,WAAWv7B,GACpBgN,EAAI,EAAOsuB,EAAU+K,YAAYnmC,OAA1B8M,EAAkCA,IAC9CmV,EAAamZ,EAAU+K,YAAYr5B,GAC9Bk0D,GAAuB/5D,EAAQ+D,QAAQiX,EAAY++C,KAChD/+C,EAAW8kB,iBAAmB3L,EAC9BxR,EAAQnqB,KAAKwiB,GACNA,EAAW2f,iBAAmBxG,GACrC3R,EAAQhqB,KAAKwiB,GAK7B,KAAKniB,EAAI,EAAO8pB,EAAQ5pB,OAAZF,EAAoBA,IAC5B8pB,EAAQ9pB,GAAGmP,OAAO,KAAMid,GACxBtC,EAAQ9pB,GAAG2hC,aAEf,KAAK3hC,EAAI,EAAO2pB,EAAQzpB,OAAZF,EAAoBA,IAC5B2pB,EAAQ3pB,GAAG4S,OAAO,KAAMwZ,GACxBzC,EAAQ3pB,GAAG2hC,eAGnBy/B,kBAAmB,SAAUj/C,EAAYiK,GACjCjK,EAAW8kB,iBACXh6B,GAAMqE,OAAO6Q,EAAW8kB,gBAAgBZ,YAAalkB,GAErDA,EAAW2f,iBACX70B,GAAMqE,OAAO6Q,EAAW2f,gBAAgBuE,YAAalkB,GAErDiK,GACArmB,KAAKwgC,gBAAgB1C,iBAAiB,GAAI/H,GAAqB3Z,IAEnElV,GAAMqE,OAAOvL,KAAKsgC,YAAalkB,IAEnCk/C,iBAAkB,SAAUp+B,EAAOq+B,GAC/B,GAAIlxD,GAAMiR,EAAUhB,EAAOtU,CAE3B,KADAk3B,EAAQn1B,GAAQm1B,GAASA,GAASA,GAC3BA,EAAM/iC,QAGT,GAFAkQ,EAAO6yB,EAAMr+B,QACbyb,EAAQta,KAAKotD,SAAS/iD,EAAKkjD,KACvBjzC,IACAta,KAAKw7D,wBAAwBlhD,GAC7Bta,KAAKm4D,YAAY79C,GAAO,SACjBta,MAAKotD,SAAS/iD,EAAKkjD,KACtBgO,GAAalxD,EAAKoxD,aAAepxD,EAAKqxD,UAEtC,IADApgD,EAAWjR,EAAKiR,SAAST,OACpB7U,EAAM,EAASsV,EAASnhB,OAAf6L,EAAuBA,IACjCk3B,EAAMtjC,KAAK0hB,EAAStV,KAMxCw1D,wBAAyB,SAAUlhD,GAAV,GAEjBtU,GADAs6B,EAAchmB,EAAMgmB,aAExB,IAAIA,EACA,IAAKt6B,EAAM,EAASs6B,EAAYnmC,OAAlB6L,EAA0BA,IACpChG,KAAKm4D,YAAY73B,EAAYt6B,IAAM,IAI/C21D,aAAc,SAAUxX,EAAU99B,GAApB,GAIN/L,GAIApX,CAPJ,IAAKjL,GAAQksD,GAIb,OADI7pC,EAAQta,KAAKotD,SAASjJ,EAASrkD,KAExBwa,GAEPpX,EAAUvC,KAAeX,KAAKkD,QAAQgjB,eAC1ChjB,EAAQihD,SAAWA,EACnB7pC,EAAQ,GAAI6mB,GAAMj+B,EAASlD,MAC3BA,KAAKsmB,SAAShM,EAAO+L,KAAa,GAClCrmB,KAAKotD,SAASjJ,EAASrkD,IAAMwa,EACtBA,IAEXshD,kBAAmB,SAAUzX,GAAV,GAIX7pC,GAIApX,CAPJ,IAAKjL,GAAQksD,GAIb,OADI7pC,EAAQta,KAAKotD,SAASjJ,EAASoJ,MAExBjzC,GAEPpX,EAAUvC,KAAeX,KAAKkD,QAAQgjB,eAC1ChjB,EAAQihD,SAAWA,EACnB7pC,EAAQ,GAAI6mB,GAAMj+B,EAASlD,MAC3BA,KAAKsmB,SAAShM,GACdta,KAAKotD,SAASjJ,EAASoJ,KAAOjzC,EACvBA,IAEXuhD,cAAe,SAAU3+B,EAAO1V,GAC5B,GAAInd,GAAMrE,EAAKsU,EAAOwhD,EAAa1/C,CACnC,KAAKpW,EAAM,EAASk3B,EAAM/iC,OAAZ6L,EAAoBA,IAC9BqE,EAAO6yB,EAAMl3B,GACbsU,EAAQta,KAAK47D,kBAAkBvxD,GAC/ByxD,EAAc97D,KAAK47D,kBAAkBp0C,GACjCs0C,IAAgB97D,KAAKwiB,UAAUs5C,EAAaxhD,KAC5C8B,EAAapc,KAAKwmB,QAAQs1C,EAAaxhD,KAInDyhD,eAAgB,SAAU51D,GACtB,GAA4FH,GAAKg2D,EAA7FtiD,EAAO1Z,KAAMkb,EAAO/U,EAAE+U,KAAM6G,EAAS5b,EAAE4b,OAAQmb,EAAQ/2B,EAAE+2B,MAAOh6B,EAAUwW,EAAKxW,OACnF,KAAIiD,EAAEK,MAAN,CAGA,GAAc,UAAVub,EACA/hB,KAAKs7D,iBAAiBn1D,EAAE+2B,OAAO,OAU/B,KARMnb,GAAqB,eAAXA,GAA6B/hB,KAAKi8D,gBAC9Cj8D,KAAKi8D,eAAgB,EACrBD,GAAY,GAEXj6C,GAAW7G,GACZxB,EAAKpN,QAETtM,KAAK67D,cAAc3+B,EAAOhiB,GACrBlV,EAAM,EAASk3B,EAAM/iC,OAAZ6L,EAAoBA,IAC9Bk3B,EAAMl3B,GAAK+xD,MAGf70D,GAAQk5B,SAAW4/B,GAAuB,UAAVj6C,GAAgC,OAAVA,IACtDrI,EAAK0iB,OAAOl5B,EAAQk5B,QAEpB4/B,IACAh8D,KAAK4F,QAAQ,aACb5F,KAAKi8D,eAAgB,KAG7B9G,WAAY,SAAUhvD,GAClB,GAAI1N,GAAIuH,KAAKk8D,mBAAmB/1D,EACjB,IAAXA,EAAEg2D,OAAcn8D,KAAKg+B,YAAYr3B,MAAMlO,EAAGuH,KAAKo8D,MAAMj2D,MACrDnG,KAAKmiC,kBACLh8B,EAAEwwD,mBAGV0F,SAAU,SAAUhyD,GACZA,YAAgB82B,GAChBnhC,KAAKsmB,SAASjc,GACPA,YAAgBs5B,IACvB3jC,KAAKyyD,cAAcpoD,IAG3B6qD,SAAU,SAAU/uD,GAChB,GAAI1N,GAAIuH,KAAKk8D,mBAAmB/1D,EACjB,IAAXA,EAAEg2D,OAAcn8D,KAAKg+B,YAAYz2B,IAAI9O,EAAGuH,KAAKo8D,MAAMj2D,MACnDnG,KAAK21D,iBACLxvD,EAAEwwD,mBAGVhB,eAAgB,WAAA,GAGJnwD,GAEI4vB,EACAmM,EAgBI+6B,EACAzpD,EAMA0pD,EACAC,EAEIh3B,EAGAi3B,EAlChB30D,EAAU9H,KAAKg+B,YAAYl2B,OAC1B9H,MAAK08D,eAA6C,IAA5B50D,EAAQ0sB,SAASr6B,SACpCqL,EAAUsC,EAAQ0sB,SAAS,GAC3BhvB,GAAWA,EAAQtC,QAAQkyB,YAAa,IACpCA,EAAW5vB,EAAQtC,QAAQkyB,SAC3BmM,EAAQnM,EAASmM,MACjBvhC,KAAKqqD,aAAgC,IAAjB9oB,EAAMpnC,SACtBqL,YAAmB27B,GACnBI,GACI,OACA,kBACA,uBAEG/7B,YAAmBm+B,KAC1BpC,GAAS,SAETnM,GAAYA,EAAS7pB,UAAW,GAChCg2B,EAAM3nC,KAAK,WAGf2nC,GAASA,EAAMpnC,SACXmiE,EAAU,GAEdt8D,KAAK08D,cAAgB,GAAIhW,GAAe5+C,GACpCy5B,MAAOA,EACPqwB,MAAO/5B,EAAM73B,KAAK6xD,cAAe7xD,MACjC8xD,OAAO,IAEPyK,EAAav8D,KAAK08D,cAAcC,OAAOn3D,QAAQo3D,aAC/CJ,EAAcx8D,KAAK08D,cAAcC,OAAOn3D,QAAQ0zD,cAChD1zD,YAAmB27B,IACfqE,EAAcxlC,KAAKurC,YAAY/lC,EAAQoV,OAAOof,KAClDnnB,EAAQlJ,EAAM67B,EAAYpmC,EAAGomC,EAAY99B,GAAGyJ,MAAMxH,GAAO4yD,EAAa/2B,EAAY7hC,OAAS,EAAG64D,EAAcF,KACrG92D,YAAmBm+B,KACtB84B,EAAmBz8D,KAAKurC,YAAY/lC,EAAQoV,UAChD/H,EAAQlJ,EAAM8yD,EAAiBr9D,EAAGq9D,EAAiB/0D,GAAGyJ,MAAMxH,GAAO4yD,EAAaE,EAAiB94D,MAAQ,IAAM,EAAG64D,EAAcF,KAEhIzpD,GACK7S,KAAKm+B,OAAOxS,YACb9Y,EAAQA,EAAM1B,MAAMxH,EAAM3J,KAAKo+B,SAASwB,WAAY5/B,KAAKo+B,SAASyB,aAEtEhtB,EAAQ7S,KAAK25D,eAAe9mD,GAC5BA,EAAQlJ,EAAMnR,GAAKI,IAAIia,EAAMzT,EAAG,GAAI5G,GAAKI,IAAIia,EAAMnL,EAAG,IACtD1H,KAAK08D,cAAcG,OAAOhqD,IAE1B7S,KAAKmiC,sBAMzB0vB,cAAe,SAAU1rD,GACrBnG,KAAK4F,QAAQ,eAAgBO,GAC7BnG,KAAKmiC,mBAET8yB,WAAY,SAAU9uD,GAClB,IAAInG,KAAKoxD,mBAAT,CAGA,GAAI34D,GAAIuH,KAAKk8D,mBAAmB/1D,EACf,KAAZA,EAAEg2D,OAA0B,GAAXh2D,EAAEg2D,QAAen8D,KAAKg+B,YAAYzK,KAAK96B,EAAGuH,KAAKo8D,MAAMj2D,KACvEA,EAAEwwD,mBAGVrB,SAAU,SAAUnvD,GACZnG,KAAKg+B,YAAY8D,QAAQ37B,EAAE22D,QAAS98D,KAAKo8D,MAAMj2D,KAC/CA,EAAEwwD,kBAGVvC,OAAQ,SAAUjuD,GACd,GAAIwO,GAAQ0uC,EAAQl9C,GAAI1N,EAAIuH,KAAKk8D,mBAAmB/1D,GAAIkuB,EAAO1zB,EAAWX,KAAKo8D,MAAMj2D,IAAMwO,MAAOA,GAC9F3U,MAAKg+B,YAAYwE,MAAM/pC,EAAG47B,IAC1BluB,EAAEwwD,kBAGVyF,MAAO,SAAUj2D,GACb,OACIouB,QAASpuB,EAAEouB,QACXyN,QAAS77B,EAAE67B,QACXrN,OAAQxuB,EAAEwuB,OACVC,SAAUzuB,EAAEyuB,WAGpBsnC,mBAAoB,SAAU/1D,GAC1B,GAAI42D,GAAa52D,EAAE62D,QAAU/hE,EAAYkL,EAAEo9C,cAAgBp9C,EAAG0M,EAAQ,GAAIlJ,GAAMozD,EAAWC,MAAOD,EAAWE,OAAQ7rD,EAASpR,KAAK41D,gBAAgB/iD,EACnJ,OAAOzB,IAEX8rD,oBAAqB,SAAUrqD,GAC3B,MAAOA,GAAMxB,MAAM,EAAIrR,KAAK8U,SAEhCmoB,YAAa,WACTj9B,KAAKg8B,UACLh8B,KAAK0jC,kBACL1jC,KAAKsgC,eACLtgC,KAAKotD,YACLptD,KAAKwyD,uBACLxyD,KAAK2uD,oBAAsB,GAAIjJ,GAC/B1lD,KAAK4uD,8BACL5uD,KAAKwgC,gBAAkB,GAAIhK,IACvB2mC,OAAQn9D,KAAKu1D,aACb6H,OAAQp9D,KAAKu1D,eAEjBv1D,KAAKF,GAAKgI,EAAQ8H,YAEtBqhD,gBAAiB,WACb,GAAIv3C,GAAO1Z,IACX0Z,GAAK4gD,cACD5gD,EAAK2wC,aACL3wC,EAAK+gD,wBAEL/gD,EAAKxW,QAAQsuD,WACT93C,EAAK2wC,aACLrqD,KAAKq9D,gBAAiB,EACtBr9D,KAAKs9D,qBAAsB,EAC3B5jD,EAAKorC,WAAWyV,QAChB7gD,EAAK2zC,sBAAsBkN,SAE3B7gD,EAAKorC,WAAWyV,UAI5BD,YAAa,WAAA,GAGDiD,GACAC,CAHJvlE,IAAQ+H,KAAKkD,QAAQmqD,wBACrBrtD,KAAKqqD,aAAc,EACfkT,EAAYv9D,KAAKkD,QAAQ4hD,eACzB0Y,EAAKz1D,GAAQw1D,IAAe1iD,KAAM0iD,GAAcA,EAChDv9D,KAAK8kD,YAAc9kD,KAAKy9D,sBACxBz9D,KAAK8kD,WAAWrd,OAAO,SAAUznC,KAAKy9D,uBAAuBh2B,OAAO,eAAgBznC,KAAK09D,4BAA4Bj2B,OAAO,QAASznC,KAAK29D,sBAE1I39D,KAAKy9D,sBAAwB5lC,EAAM73B,KAAK49D,eAAgB59D,MACxDA,KAAK09D,2BAA6B7lC,EAAM73B,KAAK69D,oBAAqB79D,MAClEA,KAAK29D,oBAAsB9lC,EAAM73B,KAAK89D,OAAQ99D,OAElDA,KAAK8kD,WAAappD,MAAMmf,KAAKkjD,WAAWl+D,OAAO29D,GAAIngC,KAAK,SAAUr9B,KAAKy9D,uBAAuBpgC,KAAK,eAAgBr9B,KAAK09D,4BAA4BrgC,KAAK,QAASr9B,KAAK29D,uBAEvK39D,KAAKg+D;AACLh+D,KAAKqqD,aAAc,IAG3BoQ,sBAAuB,WAAA,GAGX+C,GAFJD,EAAYv9D,KAAKkD,QAAQmqD,qBACzBkQ,KACIC,EAAKz1D,GAAQw1D,IAAe1iD,KAAM0iD,GAAcA,EAChDv9D,KAAKqtD,uBAAyBrtD,KAAKi+D,2BACnCj+D,KAAKqtD,sBAAsB5lB,OAAO,SAAUznC,KAAKi+D,4BAA4Bx2B,OAAO,eAAgBznC,KAAKk+D,iCAAiCz2B,OAAO,QAASznC,KAAKm+D,2BAE/Jn+D,KAAKi+D,2BAA6BpmC,EAAM73B,KAAKo+D,oBAAqBp+D,MAClEA,KAAKk+D,gCAAkCrmC,EAAM73B,KAAKq+D,yBAA0Br+D,MAC5EA,KAAKm+D,yBAA2BtmC,EAAM73B,KAAKs+D,kBAAmBt+D,OAElEA,KAAKqtD,sBAAwB3xD,MAAMmf,KAAKkjD,WAAWl+D,OAAO29D,GAAIngC,KAAK,SAAUr9B,KAAKi+D,4BAA4B5gC,KAAK,eAAgBr9B,KAAKk+D,iCAAiC7gC,KAAK,QAASr9B,KAAKm+D,4BAGpMN,oBAAqB,SAAU13D,GACb,QAAVA,EAAE4C,OACF/I,KAAKq9D,gBAAiB,IAG9BgB,yBAA0B,SAAUl4D,GAClB,QAAVA,EAAE4C,OACF/I,KAAKs9D,qBAAsB,IAGnCQ,OAAQ,WACJ99D,KAAKq9D,gBAAiB,GAE1BiB,kBAAmB,WACft+D,KAAKs9D,qBAAsB,GAE/BM,eAAgB,SAAUz3D,GACL,WAAbA,EAAE4b,OACE/hB,KAAKu+D,kBACLv+D,KAAKw+D,cAAcr4D,EAAE+2B,OAEL,eAAb/2B,EAAE4b,OACL/hB,KAAKu+D,kBACLv+D,KAAKy+D,cAAct4D,EAAE+2B,MAAO/2B,EAAEK,OAEd,QAAbL,EAAE4b,OACT/hB,KAAK2uD,oBAAoBl2C,IAAItS,EAAE+2B,OACX,SAAb/2B,EAAE4b,OACT/hB,KAAK0+D,YAAYv4D,EAAE+2B,OAEnBl9B,KAAKs8B,WAGbiiC,eAAgB,WACZ,OAAQv+D,KAAKiG,YAEjBskD,qBAAsB,WAClBvqD,KAAKiG,YAAcjG,KAAKiG,YAAc,GAAK,GAE/CukD,oBAAqB,WACjBxqD,KAAKiG,WAAazN,GAAKI,KAAKoH,KAAKiG,YAAc,GAAK,EAAG,IAE3Dq2B,QAAS,WACLt8B,KAAKq9D,gBAAiB,EACjBr9D,KAAKs9D,qBACNt9D,KAAK2+D,+BAGbA,4BAA6B,WACzB3+D,KAAKsM,QACLtM,KAAK4+D,WAAW5+D,KAAK8kD,WAAWqN,QAC5BnyD,KAAKqtD,uBACLrtD,KAAK6+D,gBAAgB7+D,KAAKqtD,sBAAsB8E,QAAQ,GAExDnyD,KAAKkD,QAAQk5B,OACbp8B,KAAKo8B,OAAOp8B,KAAKkD,QAAQk5B,QAEzBp8B,KAAK06D,qBAET16D,KAAK4F,QAAQ,cAEjB0lD,mBAAoB,WAChBtrD,KAAKs9D,qBAAsB,EACtBt9D,KAAKq9D,gBACNr9D,KAAK2+D,+BAGbjE,mBAAoB,WAAA,GAEP10D,GADLs6B,EAActgC,KAAKsgC,WACvB,KAASt6B,EAAM,EAASs6B,EAAYnmC,OAAlB6L,EAA0BA,IACxCs6B,EAAYt6B,GAAKs2B,WAGzBkiC,cAAe,SAAUthC,GAAV,GAEP7yB,GAAMpQ,EADNkzD,EAAUntD,KAAKotD,QAEnB,KAAKnzD,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BoQ,EAAO6yB,EAAMjjC,GACTkzD,EAAQ9iD,EAAKvK,MACbE,KAAKuL,OAAO4hD,EAAQ9iD,EAAKvK,KAAK,GAC9BqtD,EAAQ9iD,EAAKvK,IAAM,OAI/B4+D,YAAa,WAAA,GACL52D,GAAU9H,KACV8+D,EAAgBh3D,EAAQ6mD,mBAC5BmQ,GAAc5zD,QAAQ,SAAUwjD,GAAV,GACdvK,GAAWuK,EAAavK,SACxB7pC,EAAQo0C,EAAalpD,OACpB2+C,GAAS7gB,UACNhpB,GACAA,EAAM4vC,uBACNpiD,EAAQwe,SAAShM,EAAOo0C,EAAaroC,UACrCve,EAAQslD,SAASjJ,EAASrkD,IAAMwa,GAEhCxS,EAAQ6zD,aAAaxX,GAEzBuK,EAAaqQ,WACbD,EAAcvzD,OAAO44C,OAIjCsa,cAAe,SAAUvhC,EAAO12B,GAAjB,GACFvM,GACDkqD,EACA7pC,CAFR,KAASrgB,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BkqD,EAAWjnB,EAAMjjC,GACjBqgB,EAAQta,KAAKotD,SAASjJ,EAASrkD,IAC/Bwa,GACAA,EAAMwvC,uBAAuB3F,EAAU39C,IAInDo4D,WAAY,SAAUI,GAClB,IAAK,GAAI/kE,GAAI,EAAO+kE,EAAU7kE,OAAdF,EAAsBA,IAClC+F,KAAK27D,aAAaqD,EAAU/kE,IAAI,IAGxCmkE,oBAAqB,SAAUj4D,GACV,WAAbA,EAAE4b,OACE/hB,KAAKu+D,kBACLv+D,KAAKi/D,mBAAmB94D,EAAE+2B,OAEV,QAAb/2B,EAAE4b,OACT/hB,KAAK6+D,gBAAgB14D,EAAE+2B,OACH,SAAb/2B,EAAE4b,SACW,eAAb5b,EAAE4b,OACL/hB,KAAKu+D,kBACLv+D,KAAKk/D,mBAAmB/4D,EAAE+2B,OAG9Bl9B,KAAKsrD,uBAGb2T,mBAAoB,SAAU/hC,GAC1B,IAAK,GAAIjjC,GAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC9B+F,KAAKuL,OAAOvL,KAAKwyD,oBAAoBt1B,EAAMjjC,GAAGszD,MAAM,GACpDvtD,KAAKwyD,oBAAoBt1B,EAAMjjC,GAAGszD,KAAO,MAGjD2R,mBAAoB,SAAUhiC,GAAV,GACPjjC,GACDkqD,EACA/nC,CAFR,KAASniB,EAAI,EAAOijC,EAAM/iC,OAAVF,EAAkBA,IAC1BkqD,EAAWjnB,EAAMjjC,GACjBmiB,EAAapc,KAAKwyD,oBAAoBrO,EAASoJ,KACnDnxC,EAAW0tC,uBAAuB3F,IAG1C0a,gBAAiB,SAAUv+B,EAAaja,GAAvB,GAEJpsB,GACDkqD,EAFJhqD,EAASmmC,EAAYnmC,MACzB,KAASF,EAAI,EAAOE,EAAJF,EAAYA,IACpBkqD,EAAW7jB,EAAYrmC,GAC3B+F,KAAKm/D,uBAAuBhb,EAAU99B,IAG9C84C,uBAAwB,SAAUhb,EAAU99B,GAApB,GAEZnY,GAIAF,EAKI9K,EAEAkZ,CAZPpc,MAAKwyD,oBAAoBrO,EAASoJ,OAC/Br/C,EAAOlO,KAAKo/D,mBAAmBjb,EAASj2C,MACvCjW,GAAQiW,IAAkB,OAATA,IAClBA,EAAO,GAAIvE,GAAMw6C,EAASG,MAAOH,EAASI,QAE1Cv2C,EAAKhO,KAAKo/D,mBAAmBjb,EAASn2C,IACrC/V,GAAQ+V,IAAc,OAAPA,IAChBA,EAAK,GAAIrE,GAAMw6C,EAASM,IAAKN,EAASO,MAEtCzsD,GAAQiW,IAASjW,GAAQ+V,KACrB9K,EAAUvC,KAAeX,KAAKkD,QAAQwuD,oBAC1CxuD,EAAQihD,SAAWA,EACf/nC,EAAa,GAAIunB,GAAWz1B,EAAMF,EAAI9K,GAC1ClD,KAAKwyD,oBAAoBrO,EAASoJ,KAAOnxC,EACzCpc,KAAKyyD,cAAcr2C,EAAYiK,MAI3C+4C,mBAAoB,SAAUlnE,GAC1B,GAAIq9B,EAIJ,OAHIt9B,IAAQC,IAAoB,OAAVA,IAClBq9B,EAAYv1B,KAAKotD,SAASl1D,IAEvBq9B,GAEXyoC,gBAAiB,WACb,GAAItkD,GAAO1Z,KAAMkD,EAAUwW,EAAKxW,QAAS4hD,EAAa5hD,EAAQ4hD,UAC9DA,GAAa/8C,GAAQ+8C,IAAgBjqC,KAAMiqC,GAAeA,EACrDA,EAAW38B,SACZ28B,EAAW38B,SACL3hB,MAAO,SACPA,MAAO,QACPA,MAAO,mBACPA,MAAO,cAGbkT,EAAKorC,YAAcprC,EAAK6tB,iBACxB7tB,EAAK2lD,oBAET3lD,EAAK6tB,gBAAkB1P,EAAMne,EAAKqiD,eAAgBriD,GAClDA,EAAK4lD,cAAgBznC,EAAMne,EAAKokD,OAAQpkD,GACxCA,EAAKorC,WAAaoC,EAAuBrnD,OAAOilD,GAAYznB,KAAKiqB,GAAQ5tC,EAAK6tB,iBAAiBlK,KAAKmqB,GAAO9tC,EAAK4lD,gBAEpHD,kBAAmB,WACf,GAAI3lD,GAAO1Z,IACX0Z,GAAKorC,WAAWrd,OAAO6f,GAAQ5tC,EAAK6tB,iBAAiBE,OAAO+f,GAAO9tC,EAAK4lD,gBAE5Ej0B,OAAQ,SAAUnP,EAASoF,GACnBA,IAAarmC,GAAaihC,IACtBoF,GACAthC,KAAKwmC,UAAU5sC,KAAKsiC,GACpBl8B,KAAK+wD,aAAa31D,OAAO8gC,EAAQpQ,UAEjC5kB,GAAMqE,OAAOvL,KAAKwmC,UAAWtK,GAC7Bl8B,KAAK+wD,aAAaxlD,OAAO2wB,EAAQpQ,WAI7C0gC,gBAAiB,SAAUlyC,EAAOpiB,GAC1BA,EACA8H,KAAKwjC,mBAAmBzV,KAAKzT,GAE7Bta,KAAKwjC,mBAAmBtP,WAGhCwiC,gBAAiB,WAAA,GAEJz8D,GACDiiC,EAFJqjC,EAAWv/D,KAAKwmC,SACpB,KAASvsC,EAAI,EAAOslE,EAASplE,OAAbF,EAAqBA,IAC7BiiC,EAAUqjC,EAAStlE,GACnBiiC,EAAQG,eACRH,EAAQG,gBAEZH,EAAQI,WAGhBkjC,SAAU,WACN,IAAK,GAAIvlE,GAAI,EAAO+F,KAAKsgC,YAAYnmC,OAArBF,EAA6BA,IACzC+F,KAAKsgC,YAAYrmC,GAAGqiC,WAG5B6F,gBAAiB,WACTniC,KAAK08D,gBACL18D,KAAK08D,cAAc+C,OACnBz/D,KAAK08D,cAAcxoC,UACnBl0B,KAAK08D,cAAgB,OAG7BlF,sBAAuB,WACfx3D,KAAK2xD,UACL3xD,KAAK2xD,QAAQ8N,OACbz/D,KAAK2xD,QAAQz9B,UACbl0B,KAAK2xD,QAAU,OAGvB+N,gBAAiB,WAAA,GACT5rC,GAAU9zB,KAAKm+B,OAAOtK,SACtB8rC,EAAe3Y,EAAKp7B,YAAYD,WAAWmI,EAAQ10B,GAAI00B,EAAQpsB,GAC/Dk4D,EAAW,GAAI5Y,GAAKj3C,MACpB,EACA,IAEA+jB,EAAQnwB,MACRmwB,EAAQlwB,SAERi8D,EAAW7rC,EAAKhK,KAAK81C,SAASF,GAC9BG,EAAO,GAAI/rC,GAAK5J,OAAQwB,UAAW+zC,IACnCK,EAAW,GAAIhsC,GAAK5J,OAAQ61C,KAAMJ,IAClC3hD,EAAOle,KAAKm+B,OAAOhR,eAAe7R,SAAS,EAG/C,OAFA0kD,GAAS5kE,OAAO2kE,GAChBA,EAAKzkD,SAAS1hB,KAAKskB,GACZ8hD,GAEXE,aAAc,WAAA,GACN5rD,GAAQ0yC,EAAKp7B,YAAYtX,MAAM,EAAItU,KAAKs2D,OACxCyJ,EAAO,GAAI/rC,GAAK5J,OAAQwB,UAAWtX,IACnC4J,EAAOle,KAAK8jC,UAAU3W,cAE1B,OADA4yC,GAAKzkD,SAAS1hB,KAAKskB,GACZ6hD,GAEX79B,aAAc,WACVliC,KAAKgrC,oBACLhrC,KAAKqhC,0BAET2J,kBAAmB,WACXhrC,KAAK8kD,YAAc9kD,KAAKqqD,aACxBrqD,KAAK8kD,WAAW4O,QAGxBryB,uBAAwB,WACpB,GAAI3nB,GAAO1Z,IACP0Z,GAAK2zC,uBAAyB3zC,EAAK2wC,cACnC5oD,EAAE0+D,KAAK5kE,MAAMkG,EAAGiY,EAAKk1C,4BAA4BwR,KAAK,WAClD1mD,EAAK2zC,sBAAsBqG,SAE/Bh6C,EAAK2mD,iCAIjBj/D,EAAQk/D,YAAYl+D,OAAOqkD,EAAQx1C,IAAI,GACnCvV,MAAM6kE,UACN7kE,MAAM6kE,SAASn+D,OAAOqkD,EAAQx1C,IA4D9By1C,EAAiBhrD,MAAM8d,WAAWpX,QAClCC,KAAM,SAAUyF,EAAS5E,GACrBxH,MAAM8d,WAAWvI,GAAG5O,KAAKoG,KAAKzI,MAC9BA,KAAK8H,QAAUA,EACf9H,KAAKkD,QAAUvC,KAAeX,KAAKkD,QAASA,GAC5ClD,KAAKwgE,UACLxgE,KAAKygE,gBACLzgE,KAAK0gE,cACL1gE,KAAK2gE,cACD3gE,KAAKkD,QAAQ4uD,OACb9xD,KAAK4gE,cAET5gE,KAAKq9B,KAAKr9B,KAAKs9B,OAAQp6B,IAE3Bo6B,QAAS,SACTsjC,YAAa,WACT5gE,KAAK6V,UAAYpU,EAAE,UAAUrG,OAAO4E,KAAKwF,SACzCxF,KAAK28D,OAAS38D,KAAK6V,UAAUgrD,eAAeC,iBAEhDH,YAAa,WAAA,GACA1mE,GACDqkC,CADR,KAASrkC,EAAI,EAAO+F,KAAKwgE,OAAOrmE,OAAhBF,EAAwBA,IAChCqkC,EAAOt+B,KAAKwgE,OAAOvmE,IACnBqkC,EAAKyiC,SAAWziC,EAAKyiC,QAAQ5mE,SAAWlC,GAAQqmC,EAAKyiC,WACrD/gE,KAAKghE,SAASvoD,IAAI6lB,IAI9BmiC,cAAe,WACXzgE,KAAKwF,QAAU/D,EAAE,UACjBzB,KAAKghE,SAAWhhE,KAAKwF,QAAQy7D,cACzBrP,MAAO/5B,EAAM73B,KAAK4xD,MAAO5xD,MACzBkhE,WAAW,IACZC,kBACHnhE,KAAKwF,QAAQy9B,IAAI,SAAU,SAE/By9B,YAAa,WACT,IAAK,GAAIzmE,GAAI,EAAO+F,KAAKkD,QAAQq+B,MAAMpnC,OAAvBF,EAA+BA,IAC3C+F,KAAKohE,WAAWphE,KAAKkD,QAAQq+B,MAAMtnC,KAG3CmnE,WAAY,SAAU9iC,GAClB,GAAI+iC,IAAYla,GAAc7oB,GAAQA,EAAKviC,KAAOuiC,GAAQ,MACtDt+B,MAAKqhE,GACLrhE,KAAKqhE,GAAU/iC,GAEft+B,KAAKwgE,OAAO5mE,KAAK0kC,IAGzBu+B,OAAQ,SAAUhqD,GACV7S,KAAK28D,QACL38D,KAAK28D,OAAO2E,KAAKzuD,EAAMzT,EAAGyT,EAAMnL,IAGxC+3D,KAAM,WACEz/D,KAAK28D,QACL38D,KAAK28D,OAAO/I,SAGpB2N,SAAU,WACN,OACIx4D,KAAM,cACNg4D,aAGRS,SAAU,WACNxhE,KAAKwgE,OAAO5mE,MACR6nE,eAAgB,oBAChBC,SAAU,WACV34D,KAAM,SACNtN,KAAM,OACNkmE,WAAY3hE,KAAK4hE,gBAAiB7/C,OAAQ,YAGlD8/C,WAAY,WACR7hE,KAAKwgE,OAAO5mE,MACR6nE,eAAgB,mBAChBC,SAAU,WACV34D,KAAM,SACNtN,KAAM,SACNkmE,WAAY3hE,KAAK4hE,gBAAiB7/C,OAAQ,cAGlD+/C,wBAAyB,SAAU5+D,GAC/BlD,KAAK+hE,aAAa,UAClB/hE,KAAKgiE,aAAajB,QAAQnnE,MACtB6nE,eAAgB,uBAChBC,SAAU,WACVjmE,KAAM,sBACNm3B,MAAO,SACP+uC,WAAY3hE,KAAK4hE,gBACb7/C,OAAQ,sBACRlb,KAAM3D,EAAQ2D,UAI1Bo7D,oBAAqB,SAAU/+D,GAC3BlD,KAAK+hE,aAAa,UAClB/hE,KAAKgiE,aAAajB,QAAQnnE,MACtB6nE,eAAgB,sBAChBE,WAAY3hE,KAAK4hE,gBACb7/C,OAAQ,kBACRlb,KAAM3D,EAAQ2D,OAElB66D,SAAU,WACVjmE,KAAM,kBACNm3B,MAAO,YAGfsvC,gBAAiB,WACbliE,KAAK+hE,aAAa,UAClB/hE,KAAKmiE,aAAapB,QAAQnnE,MACtB6nE,eAAgB,mBAChBC,SAAU,WACVjmE,KAAM,cACNm3B,MAAO,SACP+uC,WAAY3hE,KAAK4hE,gBAAiB7/C,OAAQ,mBAGlDqgD,qBAAsB,WAClBpiE,KAAK+hE,aAAa,UAClB/hE,KAAKmiE,aAAapB,QAAQnnE,MACtB6nE,eAAgB,uBAChBC,SAAU,WACVjmE,KAAM,mBACNm3B,MAAO,SACP+uC,WAAY3hE,KAAK4hE,gBAAiB7/C,OAAQ,wBAGlDsgD,SAAU,WACNriE,KAAK+hE,aAAa,WAClB/hE,KAAKsiE,cAAcvB,QAAQnnE,MACvB6nE,eAAgB,kBAChBC,SAAU,WACVjmE,KAAM,OACNm3B,MAAO,UACP+uC,WAAY3hE,KAAK4hE,gBAAiB7/C,OAAQ,YAGlDwgD,SAAU,WACNviE,KAAK+hE,aAAa,WAClB/hE,KAAKsiE,cAAcvB,QAAQnnE,MACvB6nE,eAAgB,kBAChBC,SAAU,WACVjmE,KAAM,OACNm3B,MAAO,UACP+uC,WAAY3hE,KAAK4hE,gBAAiB7/C,OAAQ,YAGlDggD,aAAc,SAAUhmE,GACpB,GAAIymE,GAAO,IAAMzmE,EAAO,OACnBiE,MAAKwiE,KACNxiE,KAAKwiE,GAAQxiE,KAAKuhE,WAClBvhE,KAAKwgE,OAAO5mE,KAAKoG,KAAKwiE,MAG9BZ,eAAgB,SAAUD,GACtB,GAAI9N,KAOJ,OANI8N,GAAW5/C,SACX8xC,EAAKn4D,MAAMm4D,KAAK,WAAa8N,EAAW5/C,QAExC4/C,EAAW96D,OACXgtD,EAAKn4D,MAAMm4D,KAAK,SAAW8N,EAAW96D,MAEnCgtD,GAEX4O,eAAgB,SAAUj9D,GAAV,GAMRqB,GALAgtD,KACA9xC,EAASvc,EAAQquD,KAAKn4D,MAAMm4D,KAAK,UAQrC,OAPI9xC,KACA8xC,EAAK9xC,OAASA,GAEdlb,EAAOrB,EAAQquD,KAAKn4D,MAAMm4D,KAAK,SAC/BhtD,IACAgtD,EAAKhtD,KAAOA,GAETgtD,GAEXjC,MAAO,SAAUzrD,GAAV,GACCw7D,GAAa3hE,KAAKyiE,eAAehhE,EAAE0E,EAAE0G,SACrCkV,EAAS4/C,EAAW5/C,MACpBA,IACA/hB,KAAK+hB,GAAQ4/C,GAEjB3hE,KAAK4F,QAAQ,QAAS5F,KAAK0iE,UAAU3gD,KAEzC2gD,UAAW,SAAU3gD,GACjB,GAAIvc,GAAUxF,KAAK2iE,mBAAoB3mC,KAAasE,IAMpD,OALI96B,aAAmB27B,GACnBnF,EAAOpiC,KAAK4L,GAEZ86B,EAAY1mC,KAAK4L,IAGjBw2B,OAAQA,EACRsE,YAAaA,EACbve,OAAQA,IAGhB6gD,SAAU,WAAA,GACF96D,GAAU9H,KAAK8H,QACfi6B,EAAWj6B,EAAQm6B,eAAejiC,KAAK2iE,mBACvC5gC,GAAS5nC,SACT6F,KAAK8H,QAAQyD,OAAOw2B,GAAU,GAC9B/hC,KAAK8H,QAAQo6B,iBAGrBowB,KAAM,WACFtyD,KAAK8H,QAAQwqD,KAAKtyD,KAAK2iE,mBAAmB,KAE9CE,gBAAiB,SAAU3/D,GACvB,GAAI4Q,GAAQ9K,WAAW9F,EAAQ2D,MAAQ,GACvC7G,MAAKyqD,QAAQ32C,IAEjBgvD,oBAAqB,SAAU5/D,GAC3B,GAAI4Q,GAAQ9K,WAAW9F,EAAQ2D,MAAQ,GACvC7G,MAAKyqD,SAAS32C,IAElB22C,QAAS,SAAU32C,GACf,GAAIooB,GAAUl8B,KAAK8H,QAAQs4B,gBAC3BlE,GAAQpoB,MAAMooB,EAAQpoB,QAAUA,GAChCooB,EAAQ9nB,UAEZuuD,iBAAkB,WACd,MAAO3iE,MAAK8H,QAAQ0sB,UAExB09B,YAAa,WACTlyD,KAAK8H,QAAQoqD,eAEjBK,iBAAkB,WACdvyD,KAAK8H,QAAQyqD,oBAEjB13B,KAAM,WACF76B,KAAK8H,QAAQ+yB,QAEjBE,KAAM,WACF/6B,KAAK8H,QAAQizB,QAEjB7G,QAAS,WACLl0B,KAAK8H,QAAU,KACf9H,KAAKwF,QAAU,KACfxF,KAAKkD,QAAU,KACXlD,KAAKghE,UACLhhE,KAAKghE,SAAS9sC,UAEdl0B,KAAK28D,QACL38D,KAAK28D,OAAOzoC,aAIpByyB,EAASjrD,MAAM8d,WAAWpX,QAC1BC,KAAM,SAAUmD,EAAStC,GACrBxH,MAAM8d,WAAWvI,GAAG5O,KAAKoG,KAAKzI,MAC9BA,KAAKkD,QAAUd,GAAO,KAAUpC,KAAKkD,QAASA,GAC9ClD,KAAKwF,QAAUA,EACfxF,KAAK6kD,MAAQ7kD,KAAKkD,QAAQ2hD,MAC1B7kD,KAAKmoB,OAASnoB,KAAK+iE,aACnB/iE,KAAKgjE,iBACLhjE,KAAKijE,kBAET//D,SAAW0vD,YACXoQ,eAAgB,WACZhjE,KAAK2zD,QAAU3zD,KAAKwF,SAExBy9D,eAAgB,WACZ,GAAI//D,GAAUlD,KAAKkD,OACnBlD,MAAKo1B,SAAW,GAAI15B,OAAMoT,GAAGo0D,SAASljE,KAAK2zD,SACvCxrC,OAAQnoB,KAAKmoB,OACbtb,OAAQ3J,EAAQ2J,OAChBs2D,gBAAgB,EAChBte,MAAO7kD,KAAK6kD,SAGpBwF,YAAa,SAAU7jD,GACnB,MAAOxG,MAAK6kD,MAAMzvB,UAAYp1B,KAAK6kD,MAAMzvB,SAAS5uB,IAEtDu8D,WAAY,WAAA,GAGCv8D,GACDhK,EAEI41D,EALRjqC,KACAi7C,EAAcpjE,KAAK6kD,MAAM18B,MAC7B,KAAS3hB,IAAS48D,GACV5mE,KACAwD,KAAKqqD,YAAY7jD,KACb4rD,EAASpyD,KAAKkD,QAAQ0vD,QAAQpsD,GAC9B4rD,IACA51D,EAAO41D,OAASA,GAEpB51D,EAAOgK,MAAQA,EACf2hB,EAAOvuB,KAAK4C,GAGpB,OAAO2rB,IAEX5gB,IAAK,WACD,MAAOvH,MAAKo1B,SAAS7tB,OAEzB2sB,QAAS,WACLl0B,KAAKo1B,SAASlB,UACdl0B,KAAKo1B,SAAS5vB,QAAQyG,KAAK,IAAMvQ,MAAMm4D,KAAK,iBAAmB,KAAK1+C,QACpEnV,KAAK6kD,MAAQ7kD,KAAK2zD,QAAU3zD,KAAKwF,QAAUxF,KAAKqjE,QAAUrjE,KAAKo1B,SAAW,QAG9EwxB,EAAcD,EAAOvkD,QACrBC,KAAM,SAAUmD,EAAStC,GACrByjD,EAAO11C,GAAG5O,KAAKoG,KAAKzI,KAAMwF,EAAStC,GACnClD,KAAKq9B,KAAKr9B,KAAKs9B,OAAQt9B,KAAKkD,SAC5BlD,KAAKshE,QAEThkC,QACI,SACA,UAEJp6B,SACIxC,QACIoxD,OAAO,EACPoP,WAAW,EACX3P,WAAW,EACX32B,MAAO,OACP5N,SAAS,IAGjBg2C,eAAgB,WAAA,GAGRM,GAFA5pD,EAAO1Z,IACXA,MAAK2zD,QAAUlyD,EAAE,oCAAoCoyD,KAAKn4D,MAAMm4D,KAAK,OAAQ7zD,KAAK6kD,MAAM0I,KACpF+V,EAAc,GACdtjE,KAAKkD,QAAQvH,UACb2nE,GAAetjE,KAAKujE,kBACpBvjE,KAAKmoB,WAELm7C,GAAetjE,KAAKwjE,gBAExBF,GAAetjE,KAAKyjE,iBACpBzjE,KAAK2zD,QAAQv4D,OAAOqG,EAAE,wCAAwCrG,OAAOkoE,IACrEtjE,KAAKU,OAAS,GAAIhF,OAAMoT,GAAG40D,OAAO1jE,KAAK2zD,QAAQ1O,SAASjlD,KAAKwF,SAAUxF,KAAKkD,QAAQxC,QACpFV,KAAKU,OAAO28B,KAAK,QAAS,SAAUl3B,GAC5BA,EAAEw9D,gBACFx9D,EAAEy9D,OAAOp+D,QAAQo8B,QACjBloB,EAAKmqD,aAAa19D,MAG1BnG,KAAK8jE,uBAETP,gBAAiB,WACb,GAAI5nE,GAAWqE,KAAKkD,QAAQvH,QAK5B,OAJwB,gBAAbA,KACPA,EAAW+E,OAAOqjE,SAASpoE,IAE/BA,EAAWD,MAAMC,SAASA,GAAUqE,KAAK6kD,QAG7C2e,cAAe,WAAA,GAEFvpE,GACDuM,EAFJw9D,EAAO,EACX,KAAS/pE,EAAI,EAAO+F,KAAKmoB,OAAOhuB,OAAhBF,EAAwBA,IAChCuM,EAAQxG,KAAKmoB,OAAOluB,GACxB+pE,GAAQ,yCAA2Cx9D,EAAMA,MAAQ,MAAQA,EAAMA,OAAS,IAAM,iBAC1FxG,KAAKqqD,YAAY7jD,EAAMA,SACvBw9D,GAAQ,QAAUtoE,MAAMm4D,KAAK,iBAAmB,KAAOrtD,EAAMA,MAAQ,gCAG7E,OAAOw9D,IAEXP,eAAgB,WACZ,GAAIO,GAAO,8CAIX,OAHAA,IAAQhkE,KAAKikE,cAAc,UAC3BD,GAAQhkE,KAAKikE,cAAc,UAC3BD,GAAQ,UAGZC,cAAe,SAAUloE,GACrB,MAAOL,OAAMC,SAAS8sD,IAAiBnC,EAAevqD,KAE1D+nE,oBAAqB,WACjB9jE,KAAKkkE,oBAAsBrsC,EAAM73B,KAAK6jE,aAAc7jE,MACpDA,KAAKU,OAAO8E,QAAQ2uD,GAAG5M,GAAQH,GAAI,qBAAsBpnD,KAAKkkE,qBAC9DlkE,KAAKmkE,oBAAsBtsC,EAAM73B,KAAKokE,aAAcpkE,MACpDA,KAAKU,OAAO8E,QAAQ2uD,GAAG5M,GAAQH,GAAI,qBAAsBpnD,KAAKmkE,sBAElEC,aAAc,SAAUj+D,GACpBA,EAAEwwD,iBACF32D,KAAK4F,QAAQ,WAEjBi+D,aAAc,SAAU19D,GACpBA,EAAEwwD,iBACF32D,KAAK4F,QAAQ,WAEjB07D,KAAM,WACFthE,KAAKU,OAAOuK,SAASq2D,QAEzB1N,MAAO,WACH5zD,KAAKU,OAAO28B,KAAK,aAAcxF,EAAM73B,KAAKk0B,QAASl0B,OAAO4zD,SAE9D1/B,QAAS,WACLl0B,KAAKU,OAAOkzD,QAAQ1/B,UACpBl0B,KAAKU,OAAO8E,QAAQ8xD,IAAI/P,GAAQH,GAAI,qBAAsBpnD,KAAKkkE,qBAC/DlkE,KAAKU,OAAO8E,QAAQ8xD,IAAI/P,GAAQH,GAAI,qBAAsBpnD,KAAKmkE,qBAC/DnkE,KAAKkkE,oBAAsB,KAC3BlkE,KAAKqkE,wBAA0B,KAC/BrkE,KAAKU,OAAS,KACdimD,EAAO11C,GAAGijB,QAAQzrB,KAAKzI,SAoB/BwlD,EAAav0C,GAAKu0C,EAAa78C,WAC3BkmD,WAAY,SAAUyV,GAClB,GAAIC,GAAW9iE,EAAE+iE,UAKjB,OAJAxkE,MAAKylD,UAAU7rD,MACX0qE,SAAUA,EACVG,SAAUF,IAEPA,GAEXxF,SAAU,WAAA,GAEF10D,GACKrE,EAFLy/C,EAAYzlD,KAAKylD,SAErB,KAASz/C,EAAM,EAASy/C,EAAUtrD,OAAhB6L,EAAwBA,IACtCqE,EAAOrK,KAAKylD,UAAUz/C,GACtBqE,EAAKi6D,SAAStkE,KAAKmkD,UACnB95C,EAAKo6D,SAASC,SAElB1kE,MAAKylD,eAMbC,EAAwBz0C,GAAKy0C,EAAwB/8C,WACjD8P,IAAK,SAAUykB,GACX,IAAK,GAAIl3B,GAAM,EAASk3B,EAAM/iC,OAAZ6L,EAAoBA,IAClChG,KAAKk9B,MAAMA,EAAMl3B,GAAKunD,KAAO,GAAI/H,GAAatoB,EAAMl3B,KAG5DkF,QAAS,SAAUo5D,GACf,IAAK,GAAI/W,KAAOvtD,MAAKk9B,MACjBonC,EAAStkE,KAAKk9B,MAAMqwB,KAG5BD,SAAU,SAAUC,GAChB,MAAOvtD,MAAKk9B,MAAMqwB,IAEtBhiD,OAAQ,SAAUlB,SACPrK,MAAKk9B,MAAM7yB,EAAKkjD,OAG3B1G,EAAW3kD,EAAME,QACjBC,KAAM,WACFrC,KAAKg8B,WAET2oC,KAAM,SAAUrqD,EAAOM,GACnB5a,KAAKg8B,OAAOpiC,MACRghB,OAAQA,EACRN,MAAOA,IAEXA,EAAMsqD,UAAY5kE,MAEtBmM,OAAQ,SAAUmO,EAAOM,GACrB5a,KAAK2kE,KAAKrqD,EAAOM,IAErBrP,OAAQ,SAAU+O,GAAV,GAGKtU,GAFLg2B,EAASh8B,KAAKg8B,OACd7hC,EAAS6hC,EAAO7hC,MACpB,KAAS6L,EAAM,EAAS7L,EAAN6L,EAAcA,IAC5B,GAAIg2B,EAAOh2B,GAAKsU,QAAUA,EAAO,CAC7B0hB,EAAOr2B,OAAOK,EAAK,EACnB,SAIZwqD,YAAa,SAAU58C,GAAV,GAGA3Z,GAFL+hC,EAASh8B,KAAKg8B,OACd7hC,EAAS6hC,EAAO7hC,MACpB,KAASF,EAAI,EAAOE,EAAJF,EAAYA,IACxB,GAAI+F,KAAK6kE,UAAU7oC,EAAO/hC,GAAGqgB,MAAO1G,GAChC,OAAO,GAInBixD,UAAW,SAAUvqD,EAAO1G,GAAjB,GAGHshB,GAFAphB,EAAQwG,EAAMlG,SAASN,MACvB8G,EAASN,EAAMM,QAOnB,OAFIsa,GAHCphB,EAGK7D,EAAUuF,MAAM5B,EAAMgH,GAAS9G,GAF/B8G,EAAO7F,SAASnB,MAO9BkzC,EAAWD,EAASzkD,QACpBC,KAAM,SAAUuR,GACZizC,EAAS51C,GAAG5O,KAAKoG,KAAKzI,MACtBA,KAAKsb,YACLtb,KAAK4T,KAAOA,GAEhBkxD,SAAU,SAAUlxD,GAAV,GACFmxD,GAAW/kE,KAAK4T,KAChBoxD,EAAkBD,EAAStxD,cAC3BA,EAAcG,EAAKH,cACnBqxD,EAAyBlxD,EAAKxU,GAAnB2lE,EAAS3lE,GAA6BwU,EAAKlM,GAAnBq9D,EAASr9D,GAAgCs9D,EAAgB5lE,GAAjCqU,EAAYrU,GAA2C4lE,EAAgBt9D,GAAjC+L,EAAY/L,CACjH,OAAOo9D,IAEXG,eAAgB,SAAUrxD,GACtB,MAAO5T,MAAK4T,KAAKmB,SAASnB,IAE9BzH,OAAQ,SAAUmO,EAAOM,GAAjB,GAWa5U,GAVbk/D,GAAW,EACX5pD,EAAWtb,KAAKsb,SAChBnhB,EAASmhB,EAASnhB,MACtB,IAAI6F,KAAK8kE,SAASlqD,GAAS,CACvB,IAAKzgB,GAA+B,EAArB6F,KAAKg8B,OAAO7hC,OACvB6F,KAAK2kE,KAAKrqD,EAAOM,OACd,CAIH,IAHKzgB,GACD6F,KAAKmlE,gBAEAn/D,EAAM,EAASsV,EAASnhB,OAAf6L,EAAuBA,IACrC,GAAIsV,EAAStV,GAAKmG,OAAOmO,EAAOM,GAAS,CACrCsqD,GAAW,CACX,OAGHA,GACDllE,KAAK2kE,KAAKrqD,EAAOM,GAGzBsqD,GAAW,EAEf,MAAOA,IAEXC,cAAe,WACX,GAAwJC,GAAUrhC,EAA9JnwB,EAAO5T,KAAK4T,KAAM0H,EAAWtb,KAAKsb,SAAU0gB,EAASh8B,KAAKg8B,OAAQ/wB,EAAS2I,EAAK3I,SAAUo6D,EAAYzxD,EAAKjQ,MAAQ,EAAG2hE,EAAa1xD,EAAKhQ,OAAS,CAErJ,KADA0X,EAAS1hB,KAAK,GAAIktD,GAAS,GAAI/2C,GAAK6D,EAAKxU,EAAGwU,EAAKlM,EAAG29D,EAAWC,IAAc,GAAIxe,GAAS,GAAI/2C,GAAK9E,EAAO7L,EAAGwU,EAAKlM,EAAG29D,EAAWC,IAAc,GAAIxe,GAAS,GAAI/2C,GAAK6D,EAAKxU,EAAG6L,EAAOvD,EAAG29D,EAAWC,IAAc,GAAIxe,GAAS,GAAI/2C,GAAK9E,EAAO7L,EAAG6L,EAAOvD,EAAG29D,EAAWC,KAC/PvhC,EAAW/H,EAAO7hC,OAAS,EAAG4pC,GAAY,EAAGA,IAC9C,IAAKqhC,EAAW,EAAc9pD,EAASnhB,OAApBirE,EAA4BA,IAC3C,GAAI9pD,EAAS8pD,GAAUj5D,OAAO6vB,EAAO+H,GAAUzpB,MAAO0hB,EAAO+H,GAAUnpB,QAAS,CAC5EohB,EAAOr2B,OAAOo+B,EAAU,EACxB,SAKhBysB,YAAa,SAAU58C,GAAV,GACL5N,GACAsV,EAAWtb,KAAKsb,SAChBnhB,EAASmhB,EAASnhB,OAClB+6B,GAAM,CACV,IAAIl1B,KAAKilE,eAAerxD,GACpB,GAAIizC,EAAS51C,GAAGu/C,YAAY/nD,KAAKzI,KAAM4T,GACnCshB,GAAM,MAEN,KAAKlvB,EAAM,EAAS7L,EAAN6L,EAAcA,IACxB,GAAIsV,EAAStV,GAAKwqD,YAAY58C,GAAO,CACjCshB,GAAM,CACN,OAKhB,MAAOA,MAGX6xB,EAAiB7kD,EAAME,QACvBmjE,UAAW,IACXljE,KAAM,SAAUyF,GACZ,GAAI09D,GAAsB3tC,EAAM73B,KAAKylE,cAAezlE,KACpD8H,GAAQu1B,KAAKlE,GAAkBqsC,GAC/B19D,EAAQu1B,KAAKnE,GAAYssC,GACzBxlE,KAAK0lE,aAETA,UAAW,WACP1lE,KAAK2lE,WACL3lE,KAAKke,KAAO,GAAI2oC,IAEpBv6C,MAAO,WACHtM,KAAK0lE,aAETD,cAAe,SAAUt/D,GACjBA,EAAEkE,KAAKu6D,WACPz+D,EAAEkE,KAAKu6D,UAAUr5D,OAAOpF,EAAEkE,MAE9BrK,KAAKmM,OAAOhG,EAAEkE,OAElB8B,OAAQ,SAAUmO,GAAV,GACAM,GAASN,EAAMM,OAAOof,IACtB4rC,EAAW5lE,KAAKulE,UAChBM,EAAU7lE,KAAK8lE,WAAWlrD,GAC1Bxb,EAAIymE,EAAQ,GAAG,GACfn+D,EAAIm+D,EAAQ,GAAG,EACf7lE,MAAK+lE,OAAOF,GACZ7lE,KAAKke,KAAK/R,OAAOmO,EAAOM,IAEnB5a,KAAK2lE,QAAQvmE,KACdY,KAAK2lE,QAAQvmE,OAEZY,KAAK2lE,QAAQvmE,GAAGsI,KACjB1H,KAAK2lE,QAAQvmE,GAAGsI,GAAK,GAAIo/C,GAAS,GAAI/2C,GAAK3Q,EAAIwmE,EAAUl+D,EAAIk+D,EAAUA,EAAUA,KAErF5lE,KAAK2lE,QAAQvmE,GAAGsI,GAAGyE,OAAOmO,EAAOM,KAGzCrP,OAAQ,SAAU+O,GACVA,EAAMsqD,WACNtqD,EAAMsqD,UAAUr5D,OAAO+O,IAG/ByrD,OAAQ,SAAUF,GACd,MAAOA,GAAQ,GAAG1rE,OAAS,GAAK0rE,EAAQ,GAAG1rE,OAAS,GAExD2rE,WAAY,SAAUlyD,GAAV,GASCxU,GAGAsI,EAXLk+D,EAAW5lE,KAAKulE,UAChB9xD,EAAcG,EAAKH,cACnBuyD,EAAUxtE,GAAKwR,MAAMyJ,EAAYrU,EAAIwmE,GACrCK,EAAUztE,GAAKwR,MAAMyJ,EAAY/L,EAAIk+D,GACrCC,SAIJ,KAASzmE,EAAI5G,GAAKwR,MAAM4J,EAAKxU,EAAIwmE,GAAgBI,GAAL5mE,EAAcA,IACtDymE,EAAQ,GAAGjsE,KAAKwF,EAEpB,KAASsI,EAAIlP,GAAKwR,MAAM4J,EAAKlM,EAAIk+D,GAAgBK,GAALv+D,EAAcA,IACtDm+D,EAAQ,GAAGjsE,KAAK8N,EAEpB,OAAOm+D,IAEXrV,YAAa,SAAU58C,GAAV,GAELsyD,GAAMC,EAAM/mE,EAAGsI,EACfwW,EAFA2nD,EAAU7lE,KAAK8lE,WAAWlyD,EAG9B,IAAI5T,KAAKke,KAAKsyC,YAAY58C,GACtB,OAAO,CAEX,KAAKsyD,EAAO,EAAUL,EAAQ,GAAG1rE,OAAlB+rE,EAA0BA,IAErC,IADA9mE,EAAIymE,EAAQ,GAAGK,GACVC,EAAO,EAAUN,EAAQ,GAAG1rE,OAAlBgsE,EAA0BA,IAGrC,GAFAz+D,EAAIm+D,EAAQ,GAAGM,GACfjoD,GAAQle,KAAK2lE,QAAQvmE,QAAUsI,GAC3BwW,GAAQA,EAAKsyC,YAAY58C,GACzB,OAAO,CAInB,QAAO,KAsDfxS,EAAQ0N,GAAGs3D,OAAO3f,GAClB9lD,EAAWmH,GACPq5B,MAAOA,EACPwC,WAAYA,EACZ6iB,UAAWA,EACXE,eAAgBA,EAChBI,SAAUA,EACVD,SAAUA,EACVE,eAAgBA,EAChBH,YAAaA,KAEnBlmD,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,yBACH,aACA,oBACA,mBACA,wBACA,gBACA,wBACA,uBACA,sBACA,2BACA,yBACA,uBACDD,IACL,aAmCkB,kBAAVC,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.dataviz.diagram.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = {\n                    width: 0,\n                    height: 0,\n                    baseline: 0\n                };\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function (e) {\n                this.trigger('geometryChange', e);\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/utils', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram = {}, deepExtend = kendo.deepExtend, isArray = $.isArray, EPSILON = 0.000001;\n        var Utils = {};\n        deepExtend(Utils, {\n            isNearZero: function (num) {\n                return Math.abs(num) < EPSILON;\n            },\n            isDefined: function (obj) {\n                return typeof obj !== 'undefined';\n            },\n            isUndefined: function (obj) {\n                return typeof obj === 'undefined' || obj === null;\n            },\n            isObject: function (obj) {\n                return obj === Object(obj);\n            },\n            has: function (obj, key) {\n                return Object.hasOwnProperty.call(obj, key);\n            },\n            isString: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object String]';\n            },\n            isBoolean: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object Boolean]';\n            },\n            isType: function (obj, type) {\n                return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n            },\n            isNumber: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n            isEmpty: function (obj) {\n                if (obj === null) {\n                    return true;\n                }\n                if (isArray(obj) || Utils.isString(obj)) {\n                    return obj.length === 0;\n                }\n                for (var key in obj) {\n                    if (Utils.has(obj, key)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            simpleExtend: function (destination, source) {\n                if (!Utils.isObject(source)) {\n                    return;\n                }\n                for (var name in source) {\n                    destination[name] = source[name];\n                }\n            },\n            initArray: function createIdArray(size, value) {\n                var array = [];\n                for (var i = 0; i < size; ++i) {\n                    array[i] = value;\n                }\n                return array;\n            },\n            serializePoints: function (points) {\n                var res = [];\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    res.push(p.x + ';' + p.y);\n                }\n                return res.join(';');\n            },\n            deserializePoints: function (s) {\n                var v = s.split(';'), points = [];\n                if (v.length % 2 !== 0) {\n                    throw 'Not an array of points.';\n                }\n                for (var i = 0; i < v.length; i += 2) {\n                    points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n                }\n                return points;\n            },\n            randomInteger: function (lower, upper) {\n                return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n            },\n            DFT: function (el, func) {\n                func(el);\n                if (el.childNodes) {\n                    for (var i = 0; i < el.childNodes.length; i++) {\n                        var item = el.childNodes[i];\n                        this.DFT(item, func);\n                    }\n                }\n            },\n            getMatrixAngle: function (m) {\n                if (m === null || m.d === 0) {\n                    return 0;\n                }\n                return Math.atan2(m.b, m.d) * 180 / Math.PI;\n            },\n            getMatrixScaling: function (m) {\n                var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n                var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n                return [\n                    sX,\n                    sY\n                ];\n            }\n        });\n        function Range(start, stop, step) {\n            if (typeof start == 'undefined' || typeof stop == 'undefined') {\n                return [];\n            }\n            if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n                throw 'The sign of the increment should allow to reach the stop-value.';\n            }\n            step = step || 1;\n            start = start || 0;\n            stop = stop || start;\n            if ((stop - start) / step === Infinity) {\n                throw 'Infinite range defined.';\n            }\n            var range = [], i = -1, j;\n            function rangeIntegerScale(x) {\n                var k = 1;\n                while (x * k % 1) {\n                    k *= 10;\n                }\n                return k;\n            }\n            var k = rangeIntegerScale(Math.abs(step));\n            start *= k;\n            stop *= k;\n            step *= k;\n            if (start > stop && step > 0) {\n                step = -step;\n            }\n            if (step < 0) {\n                while ((j = start + step * ++i) >= stop) {\n                    range.push(j / k);\n                }\n            } else {\n                while ((j = start + step * ++i) <= stop) {\n                    range.push(j / k);\n                }\n            }\n            return range;\n        }\n        function findRadian(start, end) {\n            if (start == end) {\n                return 0;\n            }\n            var sngXComp = end.x - start.x, sngYComp = start.y - end.y, atan = Math.atan(sngXComp / sngYComp);\n            if (sngYComp >= 0) {\n                return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n            }\n            return atan + Math.PI;\n        }\n        Utils.sign = function (number) {\n            return number ? number < 0 ? -1 : 1 : 0;\n        };\n        Utils.findAngle = function (center, end) {\n            return findRadian(center, end) * 180 / Math.PI;\n        };\n        Utils.forEach = function (arr, iterator, thisRef) {\n            for (var i = 0; i < arr.length; i++) {\n                iterator.call(thisRef, arr[i], i, arr);\n            }\n        };\n        Utils.any = function (arr, predicate) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (predicate(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        Utils.remove = function (arr, what) {\n            var ax;\n            while ((ax = Utils.indexOf(arr, what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n            return arr;\n        };\n        Utils.contains = function (arr, obj) {\n            return Utils.indexOf(arr, obj) !== -1;\n        };\n        Utils.indexOf = function (arr, what) {\n            return $.inArray(what, arr);\n        };\n        Utils.fold = function (list, iterator, acc, context) {\n            var initial = arguments.length > 2;\n            for (var i = 0; i < list.length; i++) {\n                var value = list[i];\n                if (!initial) {\n                    acc = value;\n                    initial = true;\n                } else {\n                    acc = iterator.call(context, acc, value, i, list);\n                }\n            }\n            if (!initial) {\n                throw 'Reduce of empty array with no initial value';\n            }\n            return acc;\n        };\n        Utils.find = function (arr, iterator, context) {\n            var result;\n            Utils.any(arr, function (value, index, list) {\n                if (iterator.call(context, value, index, list)) {\n                    result = value;\n                    return true;\n                }\n                return false;\n            });\n            return result;\n        };\n        Utils.first = function (arr, constraint, context) {\n            if (arr.length === 0) {\n                return null;\n            }\n            if (Utils.isUndefined(constraint)) {\n                return arr[0];\n            }\n            return Utils.find(arr, constraint, context);\n        };\n        Utils.insert = function (arr, element, position) {\n            arr.splice(position, 0, element);\n            return arr;\n        };\n        Utils.all = function (arr, iterator, context) {\n            var result = true;\n            var value;\n            for (var i = 0; i < arr.length; i++) {\n                value = arr[i];\n                result = result && iterator.call(context, value, i, arr);\n                if (!result) {\n                    break;\n                }\n            }\n            return result;\n        };\n        Utils.clear = function (arr) {\n            arr.splice(0, arr.length);\n        };\n        Utils.bisort = function (a, b, sortfunc) {\n            if (Utils.isUndefined(a)) {\n                throw 'First array is not specified.';\n            }\n            if (Utils.isUndefined(b)) {\n                throw 'Second array is not specified.';\n            }\n            if (a.length != b.length) {\n                throw 'The two arrays should have equal length';\n            }\n            var all = [], i;\n            for (i = 0; i < a.length; i++) {\n                all.push({\n                    'x': a[i],\n                    'y': b[i]\n                });\n            }\n            if (Utils.isUndefined(sortfunc)) {\n                all.sort(function (m, n) {\n                    return m.x - n.x;\n                });\n            } else {\n                all.sort(function (m, n) {\n                    return sortfunc(m.x, n.x);\n                });\n            }\n            Utils.clear(a);\n            Utils.clear(b);\n            for (i = 0; i < all.length; i++) {\n                a.push(all[i].x);\n                b.push(all[i].y);\n            }\n        };\n        Utils.addRange = function (arr, range) {\n            arr.push.apply(arr, range);\n        };\n        var Easing = {\n            easeInOut: function (pos) {\n                return -Math.cos(pos * Math.PI) / 2 + 0.5;\n            }\n        };\n        var Ticker = kendo.Class.extend({\n            init: function () {\n                this.adapters = [];\n                this.target = 0;\n                this.tick = 0;\n                this.interval = 20;\n                this.duration = 800;\n                this.lastTime = null;\n                this.handlers = [];\n                var _this = this;\n                this.transition = Easing.easeInOut;\n                this.timerDelegate = function () {\n                    _this.onTimerEvent();\n                };\n            },\n            addAdapter: function (a) {\n                this.adapters.push(a);\n            },\n            onComplete: function (handler) {\n                this.handlers.push(handler);\n            },\n            removeHandler: function (handler) {\n                this.handlers = $.grep(this.handlers, function (h) {\n                    return h !== handler;\n                });\n            },\n            trigger: function () {\n                var _this = this;\n                if (this.handlers) {\n                    Utils.forEach(this.handlers, function (h) {\n                        return h.call(_this.caller !== null ? _this.caller : _this);\n                    });\n                }\n            },\n            onStep: function () {\n            },\n            seekTo: function (to) {\n                this.seekFromTo(this.tick, to);\n            },\n            seekFromTo: function (from, to) {\n                this.target = Math.max(0, Math.min(1, to));\n                this.tick = Math.max(0, Math.min(1, from));\n                this.lastTime = new Date().getTime();\n                if (!this.intervalId) {\n                    this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n                }\n            },\n            stop: function () {\n                if (this.intervalId) {\n                    window.clearInterval(this.intervalId);\n                    this.intervalId = null;\n                    this.trigger();\n                }\n            },\n            play: function (origin) {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                if (origin !== null) {\n                    this.caller = origin;\n                }\n                this.initState();\n                this.seekFromTo(0, 1);\n            },\n            reverse: function () {\n                this.seekFromTo(1, 0);\n            },\n            initState: function () {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].initState();\n                }\n            },\n            propagate: function () {\n                var value = this.transition(this.tick);\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].update(value);\n                }\n            },\n            onTimerEvent: function () {\n                var now = new Date().getTime();\n                var timePassed = now - this.lastTime;\n                this.lastTime = now;\n                var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n                if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                    this.tick = this.target;\n                } else {\n                    this.tick += movement;\n                }\n                try {\n                    this.propagate();\n                } finally {\n                    this.onStep.call(this);\n                    if (this.target == this.tick) {\n                        this.stop();\n                    }\n                }\n            }\n        });\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Utils: Utils,\n            Range: Range,\n            Ticker: Ticker\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/math', [\n        'dataviz/diagram/utils',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, Utils = diagram.Utils, Point = dataviz.Point2D, isFunction = kendo.isFunction, contains = Utils.contains, map = $.map;\n        var HITTESTAREA = 3, EPSILON = 0.000001;\n        deepExtend(Point.fn, {\n            plus: function (p) {\n                return new Point(this.x + p.x, this.y + p.y);\n            },\n            minus: function (p) {\n                return new Point(this.x - p.x, this.y - p.y);\n            },\n            offset: function (value) {\n                return new Point(this.x - value, this.y - value);\n            },\n            times: function (s) {\n                return new Point(this.x * s, this.y * s);\n            },\n            normalize: function () {\n                if (this.length() === 0) {\n                    return new Point();\n                }\n                return this.times(1 / this.length());\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            toString: function () {\n                return '(' + this.x + ',' + this.y + ')';\n            },\n            lengthSquared: function () {\n                return this.x * this.x + this.y * this.y;\n            },\n            middleOf: function MiddleOf(p, q) {\n                return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n            },\n            toPolar: function (useDegrees) {\n                var factor = 1;\n                if (useDegrees) {\n                    factor = 180 / Math.PI;\n                }\n                var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n                var halfpi = Math.PI / 2;\n                var len = this.length();\n                if (this.x === 0) {\n                    if (this.y === 0) {\n                        return new Polar(0, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * halfpi);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * 3 * halfpi);\n                    }\n                } else if (this.x > 0) {\n                    if (this.y === 0) {\n                        return new Polar(len, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * a);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (4 * halfpi - a));\n                    }\n                } else {\n                    if (this.y === 0) {\n                        return new Polar(len, 2 * halfpi);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * (2 * halfpi - a));\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (2 * halfpi + a));\n                    }\n                }\n            },\n            isOnLine: function (from, to) {\n                if (from.x > to.x) {\n                    var temp = to;\n                    to = from;\n                    from = temp;\n                }\n                var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA), r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n                if (r1.union(r2).contains(this)) {\n                    if (from.x === to.x || from.y === to.y) {\n                        return true;\n                    } else if (from.y < to.y) {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - r1.y) / (r2.y - r1.y);\n                    } else {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - r1.y) / (r2.y - r1.y);\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                    }\n                    return this.x > o1 && this.x < u1;\n                }\n                return false;\n            }\n        });\n        deepExtend(Point, {\n            parse: function (str) {\n                var tempStr = str.slice(1, str.length - 1), xy = tempStr.split(','), x = parseInt(xy[0], 10), y = parseInt(xy[1], 10);\n                if (!isNaN(x) && !isNaN(y)) {\n                    return new Point(x, y);\n                }\n            }\n        });\n        var PathDefiner = Class.extend({\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        });\n        var Rect = Class.extend({\n            init: function (x, y, width, height) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.width = width || 0;\n                this.height = height || 0;\n            },\n            contains: function (point) {\n                return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n            },\n            inflate: function (dx, dy) {\n                if (dy === undefined) {\n                    dy = dx;\n                }\n                this.x -= dx;\n                this.y -= dy;\n                this.width += 2 * dx + 1;\n                this.height += 2 * dy + 1;\n                return this;\n            },\n            offset: function (dx, dy) {\n                var x = dx, y = dy;\n                if (dx instanceof Point) {\n                    x = dx.x;\n                    y = dx.y;\n                }\n                this.x += x;\n                this.y += y;\n                return this;\n            },\n            union: function (r) {\n                var x1 = Math.min(this.x, r.x);\n                var y1 = Math.min(this.y, r.y);\n                var x2 = Math.max(this.x + this.width, r.x + r.width);\n                var y2 = Math.max(this.y + this.height, r.y + r.height);\n                return new Rect(x1, y1, x2 - x1, y2 - y1);\n            },\n            center: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height / 2);\n            },\n            top: function () {\n                return new Point(this.x + this.width / 2, this.y);\n            },\n            right: function () {\n                return new Point(this.x + this.width, this.y + this.height / 2);\n            },\n            bottom: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height);\n            },\n            left: function () {\n                return new Point(this.x, this.y + this.height / 2);\n            },\n            topLeft: function () {\n                return new Point(this.x, this.y);\n            },\n            topRight: function () {\n                return new Point(this.x + this.width, this.y);\n            },\n            bottomLeft: function () {\n                return new Point(this.x, this.y + this.height);\n            },\n            bottomRight: function () {\n                return new Point(this.x + this.width, this.y + this.height);\n            },\n            clone: function () {\n                return new Rect(this.x, this.y, this.width, this.height);\n            },\n            isEmpty: function () {\n                return !this.width && !this.height;\n            },\n            equals: function (rect) {\n                return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n            },\n            rotatedBounds: function (angle) {\n                var rect = this.clone(), points = this.rotatedPoints(angle), tl = points[0], tr = points[1], br = points[2], bl = points[3];\n                rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n                rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n                rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n                rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n                return rect;\n            },\n            rotatedPoints: function (angle) {\n                var rect = this, c = rect.center(), br = rect.bottomRight().rotate(c, 360 - angle), tl = rect.topLeft().rotate(c, 360 - angle), tr = rect.topRight().rotate(c, 360 - angle), bl = rect.bottomLeft().rotate(c, 360 - angle);\n                return [\n                    tl,\n                    tr,\n                    br,\n                    bl\n                ];\n            },\n            toString: function (delimiter) {\n                delimiter = delimiter || ' ';\n                return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n            },\n            scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n                var tl = this.topLeft();\n                var thisCenter = this.center();\n                tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n                var delta = staicPoint.minus(tl);\n                var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n                var position = delta.minus(scaled);\n                tl = tl.plus(position);\n                tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n                this.x = tl.x;\n                this.y = tl.y;\n                this.width *= scaleX;\n                this.height *= scaleY;\n            },\n            zoom: function (zoom) {\n                this.x *= zoom;\n                this.y *= zoom;\n                this.width *= zoom;\n                this.height *= zoom;\n                return this;\n            },\n            overlaps: function (rect) {\n                var bottomRight = this.bottomRight();\n                var rectBottomRight = rect.bottomRight();\n                var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y || rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n                return overlaps;\n            }\n        });\n        var Size = Class.extend({\n            init: function (width, height) {\n                this.width = width;\n                this.height = height;\n            }\n        });\n        Size.prototype.Empty = new Size(0, 0);\n        Rect.toRect = function (rect) {\n            if (!(rect instanceof Rect)) {\n                rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            }\n            return rect;\n        };\n        Rect.empty = function () {\n            return new Rect(0, 0, 0, 0);\n        };\n        Rect.fromPoints = function (p, q) {\n            if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n                throw 'Some values are NaN.';\n            }\n            return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n        };\n        function isNearZero(num) {\n            return Math.abs(num) < EPSILON;\n        }\n        function intersectLine(start1, end1, start2, end2, isSegment) {\n            var tangensdiff = (end1.x - start1.x) * (end2.y - start2.y) - (end1.y - start1.y) * (end2.x - start2.x);\n            if (isNearZero(tangensdiff)) {\n                return;\n            }\n            var num1 = (start1.y - start2.y) * (end2.x - start2.x) - (start1.x - start2.x) * (end2.y - start2.y);\n            var num2 = (start1.y - start2.y) * (end1.x - start1.x) - (start1.x - start2.x) * (end1.y - start1.y);\n            var r = num1 / tangensdiff;\n            var s = num2 / tangensdiff;\n            if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n                return;\n            }\n            return new Point(start1.x + r * (end1.x - start1.x), start1.y + r * (end1.y - start1.y));\n        }\n        var Intersect = {\n            lines: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2);\n            },\n            segments: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2, true);\n            },\n            rectWithLine: function (rect, start, end) {\n                return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) || Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) || Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) || Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n            },\n            rects: function (rect1, rect2, angle) {\n                var tl = rect2.topLeft(), tr = rect2.topRight(), bl = rect2.bottomLeft(), br = rect2.bottomRight();\n                var center = rect2.center();\n                if (angle) {\n                    tl = tl.rotate(center, angle);\n                    tr = tr.rotate(center, angle);\n                    bl = bl.rotate(center, angle);\n                    br = br.rotate(center, angle);\n                }\n                var intersect = rect1.contains(tl) || rect1.contains(tr) || rect1.contains(bl) || rect1.contains(br) || Intersect.rectWithLine(rect1, tl, tr) || Intersect.rectWithLine(rect1, tl, bl) || Intersect.rectWithLine(rect1, tr, br) || Intersect.rectWithLine(rect1, bl, br);\n                if (!intersect) {\n                    tl = rect1.topLeft();\n                    tr = rect1.topRight();\n                    bl = rect1.bottomLeft();\n                    br = rect1.bottomRight();\n                    if (angle) {\n                        var reverseAngle = 360 - angle;\n                        tl = tl.rotate(center, reverseAngle);\n                        tr = tr.rotate(center, reverseAngle);\n                        bl = bl.rotate(center, reverseAngle);\n                        br = br.rotate(center, reverseAngle);\n                    }\n                    intersect = rect2.contains(tl) || rect2.contains(tr) || rect2.contains(bl) || rect2.contains(br);\n                }\n                return intersect;\n            }\n        };\n        var RectAlign = Class.extend({\n            init: function (container) {\n                this.container = Rect.toRect(container);\n            },\n            align: function (content, alignment) {\n                var alignValues = alignment.toLowerCase().split(' ');\n                for (var i = 0; i < alignValues.length; i++) {\n                    content = this._singleAlign(content, alignValues[i]);\n                }\n                return content;\n            },\n            _singleAlign: function (content, alignment) {\n                if (isFunction(this[alignment])) {\n                    return this[alignment](content);\n                } else {\n                    return content;\n                }\n            },\n            left: function (content) {\n                return this._align(content, this._left);\n            },\n            center: function (content) {\n                return this._align(content, this._center);\n            },\n            right: function (content) {\n                return this._align(content, this._right);\n            },\n            stretch: function (content) {\n                return this._align(content, this._stretch);\n            },\n            top: function (content) {\n                return this._align(content, this._top);\n            },\n            middle: function (content) {\n                return this._align(content, this._middle);\n            },\n            bottom: function (content) {\n                return this._align(content, this._bottom);\n            },\n            _left: function (container, content) {\n                content.x = container.x;\n            },\n            _center: function (container, content) {\n                content.x = (container.width - content.width) / 2 || 0;\n            },\n            _right: function (container, content) {\n                content.x = container.width - content.width;\n            },\n            _top: function (container, content) {\n                content.y = container.y;\n            },\n            _middle: function (container, content) {\n                content.y = (container.height - content.height) / 2 || 0;\n            },\n            _bottom: function (container, content) {\n                content.y = container.height - content.height;\n            },\n            _stretch: function (container, content) {\n                content.x = 0;\n                content.y = 0;\n                content.height = container.height;\n                content.width = container.width;\n            },\n            _align: function (content, alignCalc) {\n                content = Rect.toRect(content);\n                alignCalc(this.container, content);\n                return content;\n            }\n        });\n        var Polar = Class.extend({\n            init: function (r, a) {\n                this.r = r;\n                this.angle = a;\n            }\n        });\n        var Matrix = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            plus: function (m) {\n                this.a += m.a;\n                this.b += m.b;\n                this.c += m.c;\n                this.d += m.d;\n                this.e += m.e;\n                this.f += m.f;\n            },\n            minus: function (m) {\n                this.a -= m.a;\n                this.b -= m.b;\n                this.c -= m.c;\n                this.d -= m.d;\n                this.e -= m.e;\n                this.f -= m.f;\n            },\n            times: function (m) {\n                return new Matrix(this.a * m.a + this.c * m.b, this.b * m.a + this.d * m.b, this.a * m.c + this.c * m.d, this.b * m.c + this.d * m.d, this.a * m.e + this.c * m.f + this.e, this.b * m.e + this.d * m.f + this.f);\n            },\n            apply: function (p) {\n                return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n            },\n            applyRect: function (r) {\n                return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n            },\n            toString: function () {\n                return 'matrix(' + this.a + ' ' + this.b + ' ' + this.c + ' ' + this.d + ' ' + this.e + ' ' + this.f + ')';\n            }\n        });\n        deepExtend(Matrix, {\n            fromSVGMatrix: function (vm) {\n                var m = new Matrix();\n                m.a = vm.a;\n                m.b = vm.b;\n                m.c = vm.c;\n                m.d = vm.d;\n                m.e = vm.e;\n                m.f = vm.f;\n                return m;\n            },\n            fromMatrixVector: function (v) {\n                var m = new Matrix();\n                m.a = v.a;\n                m.b = v.b;\n                m.c = v.c;\n                m.d = v.d;\n                m.e = v.e;\n                m.f = v.f;\n                return m;\n            },\n            fromList: function (v) {\n                if (v.length !== 6) {\n                    throw 'The given list should consist of six elements.';\n                }\n                var m = new Matrix();\n                m.a = v[0];\n                m.b = v[1];\n                m.c = v[2];\n                m.d = v[3];\n                m.e = v[4];\n                m.f = v[5];\n                return m;\n            },\n            translation: function (x, y) {\n                var m = new Matrix();\n                m.a = 1;\n                m.b = 0;\n                m.c = 0;\n                m.d = 1;\n                m.e = x;\n                m.f = y;\n                return m;\n            },\n            unit: function () {\n                return new Matrix(1, 0, 0, 1, 0, 0);\n            },\n            rotation: function (angle, x, y) {\n                var m = new Matrix();\n                m.a = Math.cos(angle * Math.PI / 180);\n                m.b = Math.sin(angle * Math.PI / 180);\n                m.c = -m.b;\n                m.d = m.a;\n                m.e = x - x * m.a + y * m.b || 0;\n                m.f = y - y * m.a - x * m.b || 0;\n                return m;\n            },\n            scaling: function (scaleX, scaleY) {\n                var m = new Matrix();\n                m.a = scaleX;\n                m.b = 0;\n                m.c = 0;\n                m.d = scaleY;\n                m.e = 0;\n                m.f = 0;\n                return m;\n            },\n            parse: function (v) {\n                var parts, nums;\n                if (v) {\n                    v = v.trim();\n                    if (v.slice(0, 6).toLowerCase() === 'matrix') {\n                        nums = v.slice(7, v.length - 1).trim();\n                        parts = nums.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                        parts = nums.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.slice(0, 1) === '(' && v.slice(v.length - 1) === ')') {\n                        v = v.substr(1, v.length - 1);\n                    }\n                    if (v.indexOf(',') > 0) {\n                        parts = v.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.indexOf(' ') > 0) {\n                        parts = v.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                }\n                return parts;\n            }\n        });\n        var MatrixVector = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            fromMatrix: function FromMatrix(m) {\n                var v = new MatrixVector();\n                v.a = m.a;\n                v.b = m.b;\n                v.c = m.c;\n                v.d = m.d;\n                v.e = m.e;\n                v.f = m.f;\n                return v;\n            }\n        });\n        function normalVariable(mean, deviation) {\n            var x, y, r;\n            do {\n                x = Math.random() * 2 - 1;\n                y = Math.random() * 2 - 1;\n                r = x * x + y * y;\n            } while (!r || r > 1);\n            return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n        }\n        function randomId(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        }\n        var Geometry = {\n            _distanceToLineSquared: function (p, a, b) {\n                function d2(pt1, pt2) {\n                    return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n                }\n                if (a === b) {\n                    return d2(p, a);\n                }\n                var vx = b.x - a.x, vy = b.y - a.y, dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n                if (dot < 0) {\n                    return d2(a, p);\n                }\n                dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n                if (dot < 0) {\n                    return d2(b, p);\n                }\n                dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n                return dot * dot / (vx * vx + vy * vy);\n            },\n            distanceToLine: function (p, a, b) {\n                return Math.sqrt(this._distanceToLineSquared(p, a, b));\n            },\n            distanceToPolyline: function (p, points) {\n                var minimum = Number.MAX_VALUE;\n                if (Utils.isUndefined(points) || points.length === 0) {\n                    return Number.MAX_VALUE;\n                }\n                for (var s = 0; s < points.length - 1; s++) {\n                    var p1 = points[s];\n                    var p2 = points[s + 1];\n                    var d = this._distanceToLineSquared(p, p1, p2);\n                    if (d < minimum) {\n                        minimum = d;\n                    }\n                }\n                return Math.sqrt(minimum);\n            }\n        };\n        var HashTable = kendo.Class.extend({\n            init: function () {\n                this._buckets = [];\n                this.length = 0;\n            },\n            add: function (key, value) {\n                var obj = this._createGetBucket(key);\n                if (Utils.isDefined(value)) {\n                    obj.value = value;\n                }\n                return obj;\n            },\n            get: function (key) {\n                if (this._bucketExists(key)) {\n                    return this._createGetBucket(key);\n                }\n                return null;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            containsKey: function (key) {\n                return this._bucketExists(key);\n            },\n            remove: function (key) {\n                if (this._bucketExists(key)) {\n                    var hashId = this._hash(key);\n                    delete this._buckets[hashId];\n                    this.length--;\n                    return key;\n                }\n            },\n            forEach: function (func) {\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    func(bucket);\n                }\n            },\n            clone: function () {\n                var ht = new HashTable();\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    ht.add(bucket.key, bucket.value);\n                }\n                return ht;\n            },\n            _hashes: function () {\n                var hashes = [];\n                for (var hash in this._buckets) {\n                    if (this._buckets.hasOwnProperty(hash)) {\n                        hashes.push(hash);\n                    }\n                }\n                return hashes;\n            },\n            _bucketExists: function (key) {\n                var hashId = this._hash(key);\n                return Utils.isDefined(this._buckets[hashId]);\n            },\n            _createGetBucket: function (key) {\n                var hashId = this._hash(key);\n                var bucket = this._buckets[hashId];\n                if (Utils.isUndefined(bucket)) {\n                    bucket = { key: key };\n                    this._buckets[hashId] = bucket;\n                    this.length++;\n                }\n                return bucket;\n            },\n            _hash: function (key) {\n                if (Utils.isNumber(key)) {\n                    return key;\n                }\n                if (Utils.isString(key)) {\n                    return this._hashString(key);\n                }\n                if (Utils.isObject(key)) {\n                    return this._objectHashId(key);\n                }\n                throw 'Unsupported key type.';\n            },\n            _hashString: function (s) {\n                var result = 0;\n                if (s.length === 0) {\n                    return result;\n                }\n                for (var i = 0; i < s.length; i++) {\n                    var ch = s.charCodeAt(i);\n                    result = result * 32 - result + ch;\n                }\n                return result;\n            },\n            _objectHashId: function (key) {\n                var id = key._hashId;\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                    key._hashId = id;\n                }\n                return id;\n            }\n        });\n        var Dictionary = kendo.Observable.extend({\n            init: function (dictionary) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(dictionary)) {\n                    if ($.isArray(dictionary)) {\n                        for (var i = 0; i < dictionary.length; i++) {\n                            this.add(dictionary[i]);\n                        }\n                    } else {\n                        dictionary.forEach(function (k, v) {\n                            this.add(k, v);\n                        }, this);\n                    }\n                }\n            },\n            add: function (key, value) {\n                var entry = this._hashTable.get(key);\n                if (!entry) {\n                    entry = this._hashTable.add(key);\n                    this.length++;\n                    this.trigger('changed');\n                }\n                entry.value = value;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            get: function (key) {\n                var entry = this._hashTable.get(key);\n                if (entry) {\n                    return entry.value;\n                }\n                throw new Error('Cannot find key ' + key);\n            },\n            containsKey: function (key) {\n                return this._hashTable.containsKey(key);\n            },\n            remove: function (key) {\n                if (this.containsKey(key)) {\n                    this.trigger('changed');\n                    this.length--;\n                    return this._hashTable.remove(key);\n                }\n            },\n            forEach: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key, entry.value);\n                });\n            },\n            forEachValue: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.value);\n                });\n            },\n            forEachKey: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key);\n                });\n            },\n            keys: function () {\n                var keys = [];\n                this.forEachKey(function (key) {\n                    keys.push(key);\n                });\n                return keys;\n            }\n        });\n        var Queue = kendo.Class.extend({\n            init: function () {\n                this._tail = null;\n                this._head = null;\n                this.length = 0;\n            },\n            enqueue: function (value) {\n                var entry = {\n                    value: value,\n                    next: null\n                };\n                if (!this._head) {\n                    this._head = entry;\n                    this._tail = this._head;\n                } else {\n                    this._tail.next = entry;\n                    this._tail = this._tail.next;\n                }\n                this.length++;\n            },\n            dequeue: function () {\n                if (this.length < 1) {\n                    throw new Error('The queue is empty.');\n                }\n                var value = this._head.value;\n                this._head = this._head.next;\n                this.length--;\n                return value;\n            },\n            contains: function (item) {\n                var current = this._head;\n                while (current) {\n                    if (current.value === item) {\n                        return true;\n                    }\n                    current = current.next;\n                }\n                return false;\n            }\n        });\n        var Set = kendo.Observable.extend({\n            init: function (resource) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(resource)) {\n                    if (resource instanceof HashTable) {\n                        resource.forEach(function (d) {\n                            this.add(d);\n                        });\n                    } else if (resource instanceof Dictionary) {\n                        resource.forEach(function (k, v) {\n                            this.add({\n                                key: k,\n                                value: v\n                            });\n                        }, this);\n                    }\n                }\n            },\n            contains: function (item) {\n                return this._hashTable.containsKey(item);\n            },\n            add: function (item) {\n                var entry = this._hashTable.get(item);\n                if (!entry) {\n                    this._hashTable.add(item, item);\n                    this.length++;\n                    this.trigger('changed');\n                }\n            },\n            get: function (item) {\n                if (this.contains(item)) {\n                    return this._hashTable.get(item).value;\n                } else {\n                    return null;\n                }\n            },\n            hash: function (item) {\n                return this._hashTable._hash(item);\n            },\n            remove: function (item) {\n                if (this.contains(item)) {\n                    this._hashTable.remove(item);\n                    this.length--;\n                    this.trigger('changed');\n                }\n            },\n            forEach: function (func, context) {\n                this._hashTable.forEach(function (kv) {\n                    func(kv.value);\n                }, context);\n            },\n            toArray: function () {\n                var r = [];\n                this.forEach(function (d) {\n                    r.push(d);\n                });\n                return r;\n            }\n        });\n        var Node = kendo.Class.extend({\n            init: function (id, shape) {\n                this.links = [];\n                this.outgoing = [];\n                this.incoming = [];\n                this.weight = 1;\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(shape)) {\n                    this.associatedShape = shape;\n                    var b = shape.bounds();\n                    this.width = b.width;\n                    this.height = b.height;\n                    this.x = b.x;\n                    this.y = b.y;\n                } else {\n                    this.associatedShape = null;\n                }\n                this.data = null;\n                this.type = 'Node';\n                this.shortForm = 'Node \\'' + this.id + '\\'';\n                this.isVirtual = false;\n            },\n            isIsolated: function () {\n                return Utils.isEmpty(this.links);\n            },\n            bounds: function (r) {\n                if (!Utils.isDefined(r)) {\n                    return new diagram.Rect(this.x, this.y, this.width, this.height);\n                }\n                this.x = r.x;\n                this.y = r.y;\n                this.width = r.width;\n                this.height = r.height;\n            },\n            isLinkedTo: function (node) {\n                var that = this;\n                return Utils.any(that.links, function (link) {\n                    return link.getComplement(that) === node;\n                });\n            },\n            getChildren: function () {\n                if (this.outgoing.length === 0) {\n                    return [];\n                }\n                var children = [];\n                for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                    var link = this.outgoing[i];\n                    children.push(link.getComplement(this));\n                }\n                return children;\n            },\n            getParents: function () {\n                if (this.incoming.length === 0) {\n                    return [];\n                }\n                var parents = [];\n                for (var i = 0, len = this.incoming.length; i < len; i++) {\n                    var link = this.incoming[i];\n                    parents.push(link.getComplement(this));\n                }\n                return parents;\n            },\n            clone: function () {\n                var copy = new Node();\n                if (Utils.isDefined(this.weight)) {\n                    copy.weight = this.weight;\n                }\n                if (Utils.isDefined(this.balance)) {\n                    copy.balance = this.balance;\n                }\n                if (Utils.isDefined(this.owner)) {\n                    copy.owner = this.owner;\n                }\n                copy.associatedShape = this.associatedShape;\n                copy.x = this.x;\n                copy.y = this.y;\n                copy.width = this.width;\n                copy.height = this.height;\n                return copy;\n            },\n            adjacentTo: function (node) {\n                return this.isLinkedTo(node) !== null;\n            },\n            removeLink: function (link) {\n                if (link.source === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.outgoing, link);\n                    link.source = null;\n                }\n                if (link.target === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.incoming, link);\n                    link.target = null;\n                }\n            },\n            hasLinkTo: function (node) {\n                return Utils.any(this.outgoing, function (link) {\n                    return link.target === node;\n                });\n            },\n            degree: function () {\n                return this.links.length;\n            },\n            incidentWith: function (link) {\n                return contains(this.links, link);\n            },\n            getLinksWith: function (node) {\n                return Utils.all(this.links, function (link) {\n                    return link.getComplement(this) === node;\n                }, this);\n            },\n            getNeighbors: function () {\n                var neighbors = [];\n                Utils.forEach(this.incoming, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                Utils.forEach(this.outgoing, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                return neighbors;\n            }\n        });\n        var Link = kendo.Class.extend({\n            init: function (source, target, id, connection) {\n                if (Utils.isUndefined(source)) {\n                    throw 'The source of the new link is not set.';\n                }\n                if (Utils.isUndefined(target)) {\n                    throw 'The target of the new link is not set.';\n                }\n                var sourceFound, targetFound;\n                if (Utils.isString(source)) {\n                    sourceFound = new Node(source);\n                } else {\n                    sourceFound = source;\n                }\n                if (Utils.isString(target)) {\n                    targetFound = new Node(target);\n                } else {\n                    targetFound = target;\n                }\n                this.source = sourceFound;\n                this.target = targetFound;\n                this.source.links.push(this);\n                this.target.links.push(this);\n                this.source.outgoing.push(this);\n                this.target.incoming.push(this);\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(connection)) {\n                    this.associatedConnection = connection;\n                } else {\n                    this.associatedConnection = null;\n                }\n                this.type = 'Link';\n                this.shortForm = 'Link \\'' + this.source.id + '->' + this.target.id + '\\'';\n            },\n            getComplement: function (node) {\n                if (this.source !== node && this.target !== node) {\n                    throw 'The given node is not incident with this link.';\n                }\n                return this.source === node ? this.target : this.source;\n            },\n            getCommonNode: function (link) {\n                if (this.source === link.source || this.source === link.target) {\n                    return this.source;\n                }\n                if (this.target === link.source || this.target === link.target) {\n                    return this.target;\n                }\n                return null;\n            },\n            isBridging: function (v1, v2) {\n                return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n            },\n            getNodes: function () {\n                return [\n                    this.source,\n                    this.target\n                ];\n            },\n            incidentWith: function (node) {\n                return this.source === node || this.target === node;\n            },\n            adjacentTo: function (link) {\n                return contains(this.source.links, link) || contains(this.target.links, link);\n            },\n            changeSource: function (node) {\n                Utils.remove(this.source.links, this);\n                Utils.remove(this.source.outgoing, this);\n                node.links.push(this);\n                node.outgoing.push(this);\n                this.source = node;\n            },\n            changeTarget: function (node) {\n                Utils.remove(this.target.links, this);\n                Utils.remove(this.target.incoming, this);\n                node.links.push(this);\n                node.incoming.push(this);\n                this.target = node;\n            },\n            changesNodes: function (v, w) {\n                if (this.source === v) {\n                    this.changeSource(w);\n                } else if (this.target === v) {\n                    this.changeTarget(w);\n                }\n            },\n            reverse: function () {\n                var oldSource = this.source;\n                var oldTarget = this.target;\n                this.source = oldTarget;\n                Utils.remove(oldSource.outgoing, this);\n                this.source.outgoing.push(this);\n                this.target = oldSource;\n                Utils.remove(oldTarget.incoming, this);\n                this.target.incoming.push(this);\n                return this;\n            },\n            directTo: function (target) {\n                if (this.source !== target && this.target !== target) {\n                    throw 'The given node is not incident with this link.';\n                }\n                if (this.target !== target) {\n                    this.reverse();\n                }\n            },\n            createReverseEdge: function () {\n                var r = this.clone();\n                r.reverse();\n                r.reversed = true;\n                return r;\n            },\n            clone: function () {\n                var clone = new Link(this.source, this.target);\n                return clone;\n            }\n        });\n        var Graph = kendo.Class.extend({\n            init: function (idOrDiagram) {\n                this.links = [];\n                this.nodes = [];\n                this._nodeMap = new Dictionary();\n                this.diagram = null;\n                this._root = null;\n                if (Utils.isDefined(idOrDiagram)) {\n                    if (Utils.isString(idOrDiagram)) {\n                        this.id = idOrDiagram;\n                    } else {\n                        this.diagram = idOrDiagram;\n                        this.id = idOrDiagram.id;\n                    }\n                } else {\n                    this.id = randomId();\n                }\n                this.bounds = new Rect();\n                this._hasCachedRelationships = false;\n                this.type = 'Graph';\n            },\n            cacheRelationships: function (forceRebuild) {\n                if (Utils.isUndefined(forceRebuild)) {\n                    forceRebuild = false;\n                }\n                if (this._hasCachedRelationships && !forceRebuild) {\n                    return;\n                }\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    node.children = this.getChildren(node);\n                    node.parents = this.getParents(node);\n                }\n                this._hasCachedRelationships = true;\n            },\n            assignLevels: function (startNode, offset, visited) {\n                if (!startNode) {\n                    throw 'Start node not specified.';\n                }\n                if (Utils.isUndefined(offset)) {\n                    offset = 0;\n                }\n                this.cacheRelationships();\n                if (Utils.isUndefined(visited)) {\n                    visited = new Dictionary();\n                    Utils.forEach(this.nodes, function (n) {\n                        visited.add(n, false);\n                    });\n                }\n                visited.set(startNode, true);\n                startNode.level = offset;\n                var children = startNode.children;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (!child || visited.get(child)) {\n                        continue;\n                    }\n                    this.assignLevels(child, offset + 1, visited);\n                }\n            },\n            root: function (value) {\n                if (Utils.isUndefined(value)) {\n                    if (!this._root) {\n                        var found = Utils.first(this.nodes, function (n) {\n                            return n.incoming.length === 0;\n                        });\n                        if (found) {\n                            return found;\n                        }\n                        return Utils.first(this.nodes);\n                    } else {\n                        return this._root;\n                    }\n                } else {\n                    this._root = value;\n                }\n            },\n            getConnectedComponents: function () {\n                this.componentIndex = 0;\n                this.setItemIndices();\n                var componentId = Utils.initArray(this.nodes.length, -1);\n                for (var v = 0; v < this.nodes.length; v++) {\n                    if (componentId[v] === -1) {\n                        this._collectConnectedNodes(componentId, v);\n                        this.componentIndex++;\n                    }\n                }\n                var components = [], i;\n                for (i = 0; i < this.componentIndex; ++i) {\n                    components[i] = new Graph();\n                }\n                for (i = 0; i < componentId.length; ++i) {\n                    var graph = components[componentId[i]];\n                    graph.addNodeAndOutgoings(this.nodes[i]);\n                }\n                components.sort(function (a, b) {\n                    return b.nodes.length - a.nodes.length;\n                });\n                return components;\n            },\n            _collectConnectedNodes: function (setIds, nodeIndex) {\n                setIds[nodeIndex] = this.componentIndex;\n                var node = this.nodes[nodeIndex];\n                Utils.forEach(node.links, function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n            },\n            calcBounds: function () {\n                if (this.isEmpty()) {\n                    this.bounds = new Rect();\n                    return this.bounds;\n                }\n                var b = null;\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (!b) {\n                        b = node.bounds();\n                    } else {\n                        b = b.union(node.bounds());\n                    }\n                }\n                this.bounds = b;\n                return this.bounds;\n            },\n            getSpanningTree: function (root) {\n                var tree = new Graph();\n                var map = new Dictionary(), source, target;\n                tree.root = root.clone();\n                tree.root.level = 0;\n                tree.root.id = root.id;\n                map.add(root, tree.root);\n                root.level = 0;\n                var visited = [];\n                var remaining = [];\n                tree._addNode(tree.root);\n                visited.push(root);\n                remaining.push(root);\n                var levelCount = 1;\n                while (remaining.length > 0) {\n                    var next = remaining.pop();\n                    for (var ni = 0; ni < next.links.length; ni++) {\n                        var link = next.links[ni];\n                        var cn = link.getComplement(next);\n                        if (contains(visited, cn)) {\n                            continue;\n                        }\n                        cn.level = next.level + 1;\n                        if (levelCount < cn.level + 1) {\n                            levelCount = cn.level + 1;\n                        }\n                        if (!contains(remaining, cn)) {\n                            remaining.push(cn);\n                        }\n                        if (!contains(visited, cn)) {\n                            visited.push(cn);\n                        }\n                        if (map.containsKey(next)) {\n                            source = map.get(next);\n                        } else {\n                            source = next.clone();\n                            source.level = next.level;\n                            source.id = next.id;\n                            map.add(next, source);\n                        }\n                        if (map.containsKey(cn)) {\n                            target = map.get(cn);\n                        } else {\n                            target = cn.clone();\n                            target.level = cn.level;\n                            target.id = cn.id;\n                            map.add(cn, target);\n                        }\n                        var newLink = new Link(source, target);\n                        tree.addLink(newLink);\n                    }\n                }\n                var treeLevels = [];\n                for (var i = 0; i < levelCount; i++) {\n                    treeLevels.push([]);\n                }\n                Utils.forEach(tree.nodes, function (node) {\n                    treeLevels[node.level].push(node);\n                });\n                tree.treeLevels = treeLevels;\n                tree.cacheRelationships();\n                return tree;\n            },\n            takeRandomNode: function (excludedNodes, incidenceLessThan) {\n                if (Utils.isUndefined(excludedNodes)) {\n                    excludedNodes = [];\n                }\n                if (Utils.isUndefined(incidenceLessThan)) {\n                    incidenceLessThan = 4;\n                }\n                if (this.nodes.length === 0) {\n                    return null;\n                }\n                if (this.nodes.length === 1) {\n                    return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n                }\n                var pool = $.grep(this.nodes, function (node) {\n                    return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n                });\n                if (Utils.isEmpty(pool)) {\n                    return null;\n                }\n                return pool[Utils.randomInteger(0, pool.length)];\n            },\n            isEmpty: function () {\n                return Utils.isEmpty(this.nodes);\n            },\n            isHealthy: function () {\n                return Utils.all(this.links, function (link) {\n                    return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n                }, this);\n            },\n            getParents: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getParents();\n            },\n            getChildren: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getChildren();\n            },\n            addLink: function (sourceOrLink, target, owner) {\n                if (Utils.isUndefined(sourceOrLink)) {\n                    throw 'The source of the link is not defined.';\n                }\n                if (Utils.isUndefined(target)) {\n                    if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === 'Link') {\n                        this.addExistingLink(sourceOrLink);\n                        return;\n                    } else {\n                        throw 'The target of the link is not defined.';\n                    }\n                }\n                var foundSource = this.getNode(sourceOrLink);\n                if (Utils.isUndefined(foundSource)) {\n                    foundSource = this.addNode(sourceOrLink);\n                }\n                var foundTarget = this.getNode(target);\n                if (Utils.isUndefined(foundTarget)) {\n                    foundTarget = this.addNode(target);\n                }\n                var newLink = new Link(foundSource, foundTarget);\n                if (Utils.isDefined(owner)) {\n                    newLink.owner = owner;\n                }\n                this.links.push(newLink);\n                return newLink;\n            },\n            removeAllLinks: function () {\n                while (this.links.length > 0) {\n                    var link = this.links[0];\n                    this.removeLink(link);\n                }\n            },\n            addExistingLink: function (link) {\n                if (this.hasLink(link)) {\n                    return;\n                }\n                this.links.push(link);\n                if (this.hasNode(link.source.id)) {\n                    var s = this.getNode(link.source.id);\n                    link.changeSource(s);\n                } else {\n                    this.addNode(link.source);\n                }\n                if (this.hasNode(link.target.id)) {\n                    var t = this.getNode(link.target.id);\n                    link.changeTarget(t);\n                } else {\n                    this.addNode(link.target);\n                }\n            },\n            hasLink: function (linkOrId) {\n                if (Utils.isString(linkOrId)) {\n                    return Utils.any(this.links, function (link) {\n                        return link.id === linkOrId;\n                    });\n                }\n                if (linkOrId.type === 'Link') {\n                    return contains(this.links, linkOrId);\n                }\n                throw 'The given object is neither an identifier nor a Link.';\n            },\n            getNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                if (this._nodeMap.containsKey(id)) {\n                    return this._nodeMap.get(id);\n                }\n            },\n            hasNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                return this._nodeMap.containsKey(id);\n            },\n            _addNode: function (node) {\n                this.nodes.push(node);\n                this._nodeMap.add(node.id, node);\n            },\n            _removeNode: function (node) {\n                Utils.remove(this.nodes, node);\n                this._nodeMap.remove(node.id);\n            },\n            removeNode: function (nodeOrId) {\n                var n = nodeOrId;\n                if (Utils.isString(nodeOrId)) {\n                    n = this.getNode(nodeOrId);\n                }\n                if (Utils.isDefined(n)) {\n                    var links = n.links;\n                    n.links = [];\n                    for (var i = 0, len = links.length; i < len; i++) {\n                        var link = links[i];\n                        this.removeLink(link);\n                    }\n                    this._removeNode(n);\n                } else {\n                    throw 'The identifier should be a Node or the Id (string) of a node.';\n                }\n            },\n            areConnected: function (n1, n2) {\n                return Utils.any(this.links, function (link) {\n                    return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n                });\n            },\n            removeLink: function (link) {\n                Utils.remove(this.links, link);\n                Utils.remove(link.source.outgoing, link);\n                Utils.remove(link.source.links, link);\n                Utils.remove(link.target.incoming, link);\n                Utils.remove(link.target.links, link);\n            },\n            addNode: function (nodeOrId, layoutRect, owner) {\n                var newNode = null;\n                if (!Utils.isDefined(nodeOrId)) {\n                    throw 'No Node or identifier for a new Node is given.';\n                }\n                if (Utils.isString(nodeOrId)) {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = new Node(nodeOrId);\n                } else {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = nodeOrId;\n                }\n                if (Utils.isDefined(layoutRect)) {\n                    newNode.bounds(layoutRect);\n                }\n                if (Utils.isDefined(owner)) {\n                    newNode.owner = owner;\n                }\n                this._addNode(newNode);\n                return newNode;\n            },\n            addNodeAndOutgoings: function (node) {\n                if (!this.hasNode(node)) {\n                    this._addNode(node);\n                }\n                var newLinks = node.outgoing;\n                node.outgoing = [];\n                Utils.forEach(newLinks, function (link) {\n                    this.addExistingLink(link);\n                }, this);\n            },\n            setItemIndices: function () {\n                var i;\n                for (i = 0; i < this.nodes.length; ++i) {\n                    this.nodes[i].index = i;\n                }\n                for (i = 0; i < this.links.length; ++i) {\n                    this.links[i].index = i;\n                }\n            },\n            clone: function (saveMapping) {\n                var copy = new Graph();\n                var save = Utils.isDefined(saveMapping) && saveMapping === true;\n                if (save) {\n                    copy.nodeMap = new Dictionary();\n                    copy.linkMap = new Dictionary();\n                }\n                var map = new Dictionary();\n                Utils.forEach(this.nodes, function (nOriginal) {\n                    var nCopy = nOriginal.clone();\n                    map.set(nOriginal, nCopy);\n                    copy._addNode(nCopy);\n                    if (save) {\n                        copy.nodeMap.set(nCopy, nOriginal);\n                    }\n                });\n                Utils.forEach(this.links, function (linkOriginal) {\n                    if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                        var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                        if (save) {\n                            copy.linkMap.set(linkCopy, linkOriginal);\n                        }\n                    }\n                });\n                return copy;\n            },\n            linearize: function (addIds) {\n                return Graph.Utils.linearize(this, addIds);\n            },\n            depthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var visited = [];\n                this._dftIterator(foundNode, action, visited);\n            },\n            _dftIterator: function (node, action, visited) {\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child)) {\n                        continue;\n                    }\n                    this._dftIterator(child, action, visited);\n                }\n            },\n            breadthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var queue = new Queue();\n                var visited = [];\n                queue.enqueue(foundNode);\n                while (queue.length > 0) {\n                    var node = queue.dequeue();\n                    action(node);\n                    visited.push(node);\n                    var children = node.getChildren();\n                    for (var i = 0, len = children.length; i < len; i++) {\n                        var child = children[i];\n                        if (contains(visited, child) || contains(queue, child)) {\n                            continue;\n                        }\n                        queue.enqueue(child);\n                    }\n                }\n            },\n            _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n                indices.add(node, index);\n                lowLinks.add(node, index);\n                index++;\n                stack.push(node);\n                var children = node.getChildren(), next;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    next = children[i];\n                    if (!indices.containsKey(next)) {\n                        this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                        lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                    } else if (contains(stack, next)) {\n                        lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                    }\n                }\n                if (lowLinks.get(node) === indices.get(node)) {\n                    var component = [];\n                    do {\n                        next = stack.pop();\n                        component.push(next);\n                    } while (next !== node);\n                    if (!excludeSingleItems || component.length > 1) {\n                        connected.push(component);\n                    }\n                }\n            },\n            findCycles: function (excludeSingleItems) {\n                if (Utils.isUndefined(excludeSingleItems)) {\n                    excludeSingleItems = true;\n                }\n                var indices = new Dictionary();\n                var lowLinks = new Dictionary();\n                var connected = [];\n                var stack = [];\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (indices.containsKey(node)) {\n                        continue;\n                    }\n                    this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n                }\n                return connected;\n            },\n            isAcyclic: function () {\n                return Utils.isEmpty(this.findCycles());\n            },\n            isSubGraph: function (other) {\n                var otherArray = other.linearize();\n                var thisArray = this.linearize();\n                return Utils.all(otherArray, function (s) {\n                    return contains(thisArray, s);\n                });\n            },\n            makeAcyclic: function () {\n                if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                    return [];\n                }\n                if (this.nodes.length == 2) {\n                    var result = [];\n                    if (this.links.length > 1) {\n                        var oneLink = this.links[0];\n                        var oneNode = oneLink.source;\n                        for (var i = 0, len = this.links.length; i < len; i++) {\n                            var link = this.links[i];\n                            if (link.source == oneNode) {\n                                continue;\n                            }\n                            var rev = link.reverse();\n                            result.push(rev);\n                        }\n                    }\n                    return result;\n                }\n                var copy = this.clone(true);\n                var N = this.nodes.length;\n                var intensityCatalog = new Dictionary();\n                var flowIntensity = function (node) {\n                    if (node.outgoing.length === 0) {\n                        return 2 - N;\n                    } else if (node.incoming.length === 0) {\n                        return N - 2;\n                    } else {\n                        return node.outgoing.length - node.incoming.length;\n                    }\n                };\n                var catalogEqualIntensity = function (node, intensityCatalog) {\n                    var intensity = flowIntensity(node, N);\n                    if (!intensityCatalog.containsKey(intensity)) {\n                        intensityCatalog.set(intensity, []);\n                    }\n                    intensityCatalog.get(intensity).push(node);\n                };\n                Utils.forEach(copy.nodes, function (v) {\n                    catalogEqualIntensity(v, intensityCatalog);\n                });\n                var sourceStack = [];\n                var targetStack = [];\n                while (copy.nodes.length > 0) {\n                    var source, target, intensity;\n                    if (intensityCatalog.containsKey(2 - N)) {\n                        var targets = intensityCatalog.get(2 - N);\n                        while (targets.length > 0) {\n                            target = targets.pop();\n                            for (var li = 0; li < target.links.length; li++) {\n                                var targetLink = target.links[li];\n                                source = targetLink.getComplement(target);\n                                intensity = flowIntensity(source, N);\n                                Utils.remove(intensityCatalog.get(intensity), source);\n                                source.removeLink(targetLink);\n                                catalogEqualIntensity(source, intensityCatalog);\n                            }\n                            copy._removeNode(target);\n                            targetStack.unshift(target);\n                        }\n                    }\n                    if (intensityCatalog.containsKey(N - 2)) {\n                        var sources = intensityCatalog.get(N - 2);\n                        while (sources.length > 0) {\n                            source = sources.pop();\n                            for (var si = 0; si < source.links.length; si++) {\n                                var sourceLink = source.links[si];\n                                target = sourceLink.getComplement(source);\n                                intensity = flowIntensity(target, N);\n                                Utils.remove(intensityCatalog.get(intensity), target);\n                                target.removeLink(sourceLink);\n                                catalogEqualIntensity(target, intensityCatalog);\n                            }\n                            sourceStack.push(source);\n                            copy._removeNode(source);\n                        }\n                    }\n                    if (copy.nodes.length > 0) {\n                        for (var k = N - 3; k > 2 - N; k--) {\n                            if (intensityCatalog.containsKey(k) && intensityCatalog.get(k).length > 0) {\n                                var maxdiff = intensityCatalog.get(k);\n                                var v = maxdiff.pop();\n                                for (var ri = 0; ri < v.links.length; ri++) {\n                                    var ril = v.links[ri];\n                                    var u = ril.getComplement(v);\n                                    intensity = flowIntensity(u, N);\n                                    Utils.remove(intensityCatalog.get(intensity), u);\n                                    u.removeLink(ril);\n                                    catalogEqualIntensity(u, intensityCatalog);\n                                }\n                                sourceStack.push(v);\n                                copy._removeNode(v);\n                                break;\n                            }\n                        }\n                    }\n                }\n                sourceStack = sourceStack.concat(targetStack);\n                var vertexOrder = new Dictionary();\n                for (var kk = 0; kk < this.nodes.length; kk++) {\n                    vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n                }\n                var reversedEdges = [];\n                Utils.forEach(this.links, function (link) {\n                    if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                        link.reverse();\n                        reversedEdges.push(link);\n                    }\n                });\n                return reversedEdges;\n            }\n        });\n        Graph.Predefined = {\n            EightGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->4',\n                    '4->1',\n                    '3->5',\n                    '5->6',\n                    '6->7',\n                    '7->3'\n                ]);\n            },\n            Mindmap: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '0->2',\n                    '0->3',\n                    '0->4',\n                    '0->5',\n                    '1->6',\n                    '1->7',\n                    '7->8',\n                    '2->9',\n                    '9->10',\n                    '9->11',\n                    '3->12',\n                    '12->13',\n                    '13->14',\n                    '4->15',\n                    '4->16',\n                    '15->17',\n                    '15->18',\n                    '18->19',\n                    '18->20',\n                    '14->21',\n                    '14->22',\n                    '5->23',\n                    '23->24',\n                    '23->25',\n                    '6->26'\n                ]);\n            },\n            ThreeGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->1'\n                ]);\n            },\n            BinaryTree: function (levels) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 5;\n                }\n                return Graph.Utils.createBalancedTree(levels, 2);\n            },\n            Linear: function (length) {\n                if (Utils.isUndefined(length)) {\n                    length = 10;\n                }\n                return Graph.Utils.createBalancedTree(length, 1);\n            },\n            Tree: function (levels, siblingsCount) {\n                return Graph.Utils.createBalancedTree(levels, siblingsCount);\n            },\n            Forest: function (levels, siblingsCount, trees) {\n                return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n            },\n            Workflow: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '1->2',\n                    '2->3',\n                    '1->4',\n                    '4->3',\n                    '3->5',\n                    '5->6',\n                    '6->3',\n                    '6->7',\n                    '5->4'\n                ]);\n            },\n            Grid: function (n, m) {\n                var g = new diagram.Graph();\n                if (n <= 0 && m <= 0) {\n                    return g;\n                }\n                for (var i = 0; i < n + 1; i++) {\n                    var previous = null;\n                    for (var j = 0; j < m + 1; j++) {\n                        var node = new Node(i.toString() + '.' + j.toString());\n                        g.addNode(node);\n                        if (previous) {\n                            g.addLink(previous, node);\n                        }\n                        if (i > 0) {\n                            var left = g.getNode((i - 1).toString() + '.' + j.toString());\n                            g.addLink(left, node);\n                        }\n                        previous = node;\n                    }\n                }\n                return g;\n            }\n        };\n        Graph.Utils = {\n            parse: function (graphString) {\n                var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n                for (var i = 0, len = parts.length; i < len; i++) {\n                    var part = parts[i];\n                    if (Utils.isString(part)) {\n                        if (part.indexOf('->') < 0) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        var p = part.split('->');\n                        if (p.length != 2) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        previousLink = new Link(p[0], p[1]);\n                        graph.addLink(previousLink);\n                    }\n                    if (Utils.isObject(part)) {\n                        if (!previousLink) {\n                            throw 'Specification found before Link definition.';\n                        }\n                        kendo.deepExtend(previousLink, part);\n                    }\n                }\n                return graph;\n            },\n            linearize: function (graph, addIds) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'Expected an instance of a Graph object in slot one.';\n                }\n                if (Utils.isUndefined(addIds)) {\n                    addIds = false;\n                }\n                var lin = [];\n                for (var i = 0, len = graph.links.length; i < len; i++) {\n                    var link = graph.links[i];\n                    lin.push(link.source.id + '->' + link.target.id);\n                    if (addIds) {\n                        lin.push({ id: link.id });\n                    }\n                }\n                return lin;\n            },\n            _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n                if (Utils.isUndefined(p)) {\n                    p = new diagram.Point(0, 0);\n                }\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                }\n                shapeDefaults = kendo.deepExtend({\n                    width: 20,\n                    height: 20,\n                    id: id,\n                    radius: 10,\n                    fill: '#778899',\n                    data: 'circle',\n                    undoable: false,\n                    x: p.x,\n                    y: p.y\n                }, shapeDefaults);\n                return kendoDiagram.addShape(shapeDefaults);\n            },\n            _addConnection: function (diagram, from, to, options) {\n                return diagram.connect(from, to, options);\n            },\n            createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'The diagram surface is undefined.';\n                }\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph specification defined.';\n                }\n                if (Utils.isUndefined(doLayout)) {\n                    doLayout = true;\n                }\n                if (Utils.isUndefined(randomSize)) {\n                    randomSize = false;\n                }\n                var width = diagram.element.clientWidth || 200;\n                var height = diagram.element.clientHeight || 200;\n                var map = [], node, shape;\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    node = graph.nodes[i];\n                    var p = node.position;\n                    if (Utils.isUndefined(p)) {\n                        if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                            p = new Point(node.x, node.y);\n                        } else {\n                            p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                        }\n                    }\n                    var opt = {};\n                    if (node.id === '0') {\n                    } else if (randomSize) {\n                        kendo.deepExtend(opt, {\n                            width: Math.random() * 150 + 20,\n                            height: Math.random() * 80 + 50,\n                            data: 'rectangle',\n                            fill: { color: '#778899' }\n                        });\n                    }\n                    shape = this._addShape(diagram, p, node.id, opt);\n                    var bounds = shape.bounds();\n                    if (Utils.isDefined(bounds)) {\n                        node.x = bounds.x;\n                        node.y = bounds.y;\n                        node.width = bounds.width;\n                        node.height = bounds.height;\n                    }\n                    map[node.id] = shape;\n                }\n                for (var gli = 0; gli < graph.links.length; gli++) {\n                    var link = graph.links[gli];\n                    var sourceShape = map[link.source.id];\n                    if (Utils.isUndefined(sourceShape)) {\n                        continue;\n                    }\n                    var targetShape = map[link.target.id];\n                    if (Utils.isUndefined(targetShape)) {\n                        continue;\n                    }\n                    this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n                }\n                if (doLayout) {\n                    var l = new diagram.SpringLayout(diagram);\n                    l.layoutGraph(graph, { limitToView: false });\n                    for (var shi = 0; shi < graph.nodes.length; shi++) {\n                        node = graph.nodes[shi];\n                        shape = map[node.id];\n                        shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            },\n            createBalancedTree: function (levels, siblingsCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                g.root = root;\n                lastAdded.push(root);\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n                return g;\n            },\n            createBalancedForest: function (levels, siblingsCount, treeCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                if (Utils.isUndefined(treeCount)) {\n                    treeCount = 5;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                    return g;\n                }\n                for (var t = 0; t < treeCount; t++) {\n                    var root = new Node((++counter).toString());\n                    g.addNode(root);\n                    lastAdded = [root];\n                    for (var i = 0; i < levels; i++) {\n                        news = [];\n                        for (var j = 0; j < lastAdded.length; j++) {\n                            var parent = lastAdded[j];\n                            for (var k = 0; k < siblingsCount; k++) {\n                                var item = new Node((++counter).toString());\n                                g.addLink(parent, item);\n                                news.push(item);\n                            }\n                        }\n                        lastAdded = news;\n                    }\n                }\n                return g;\n            },\n            createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n                if (Utils.isUndefined(nodeCount)) {\n                    nodeCount = 40;\n                }\n                if (Utils.isUndefined(maxIncidence)) {\n                    maxIncidence = 4;\n                }\n                if (Utils.isUndefined(isTree)) {\n                    isTree = false;\n                }\n                var g = new diagram.Graph(), counter = -1;\n                if (nodeCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                if (nodeCount === 1) {\n                    return g;\n                }\n                if (nodeCount > 1) {\n                    for (var i = 1; i < nodeCount; i++) {\n                        var poolNode = g.takeRandomNode([], maxIncidence);\n                        if (!poolNode) {\n                            break;\n                        }\n                        var newNode = g.addNode(i.toString());\n                        g.addLink(poolNode, newNode);\n                    }\n                    if (!isTree && nodeCount > 1) {\n                        var randomAdditions = Utils.randomInteger(1, nodeCount);\n                        for (var ri = 0; ri < randomAdditions; ri++) {\n                            var n1 = g.takeRandomNode([], maxIncidence);\n                            var n2 = g.takeRandomNode([], maxIncidence);\n                            if (n1 && n2 && !g.areConnected(n1, n2)) {\n                                g.addLink(n1, n2);\n                            }\n                        }\n                    }\n                    return g;\n                }\n            },\n            randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n                var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n                Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n            }\n        };\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Point: Point,\n            Intersect: Intersect,\n            Geometry: Geometry,\n            Rect: Rect,\n            Size: Size,\n            RectAlign: RectAlign,\n            Matrix: Matrix,\n            MatrixVector: MatrixVector,\n            normalVariable: normalVariable,\n            randomId: randomId,\n            Dictionary: Dictionary,\n            HashTable: HashTable,\n            Queue: Queue,\n            Set: Set,\n            Node: Node,\n            Link: Link,\n            Graph: Graph,\n            PathDefiner: PathDefiner\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/svg', [\n        'kendo.drawing',\n        'dataviz/diagram/math'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, Point = diagram.Point, Rect = diagram.Rect, Matrix = diagram.Matrix, Utils = diagram.Utils, isNumber = Utils.isNumber, isString = Utils.isString, MatrixVector = diagram.MatrixVector, g = kendo.geometry, d = kendo.drawing, defined = kendo.util.defined, inArray = $.inArray;\n        var TRANSPARENT = 'transparent', Markers = {\n                none: 'none',\n                arrowStart: 'ArrowStart',\n                filledCircle: 'FilledCircle',\n                arrowEnd: 'ArrowEnd'\n            }, FULL_CIRCLE_ANGLE = 360, START = 'start', END = 'end', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y';\n        diagram.Markers = Markers;\n        function diffNumericOptions(options, fields) {\n            var elementOptions = this.options;\n            var hasChanges = false;\n            var value, field;\n            for (var i = 0; i < fields.length; i++) {\n                field = fields[i];\n                value = options[field];\n                if (isNumber(value) && elementOptions[field] !== value) {\n                    elementOptions[field] = value;\n                    hasChanges = true;\n                }\n            }\n            return hasChanges;\n        }\n        var Scale = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrix: function () {\n                return Matrix.scaling(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('scale({0},{1})', this.x, this.y);\n            },\n            invert: function () {\n                return new Scale(1 / this.x, 1 / this.y);\n            }\n        });\n        var Translation = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrixVector: function () {\n                return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n            },\n            toMatrix: function () {\n                return Matrix.translation(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('translate({0},{1})', this.x, this.y);\n            },\n            plus: function (delta) {\n                this.x += delta.x;\n                this.y += delta.y;\n            },\n            times: function (factor) {\n                this.x *= factor;\n                this.y *= factor;\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            normalize: function () {\n                if (this.Length === 0) {\n                    return;\n                }\n                this.times(1 / this.length());\n            },\n            invert: function () {\n                return new Translation(-this.x, -this.y);\n            }\n        });\n        var Rotation = Class.extend({\n            init: function (angle, x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.angle = angle;\n            },\n            toString: function () {\n                if (this.x && this.y) {\n                    return kendo.format('rotate({0},{1},{2})', this.angle, this.x, this.y);\n                } else {\n                    return kendo.format('rotate({0})', this.angle);\n                }\n            },\n            toMatrix: function () {\n                return Matrix.rotation(this.angle, this.x, this.y);\n            },\n            center: function () {\n                return new Point(this.x, this.y);\n            },\n            invert: function () {\n                return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n            }\n        });\n        Rotation.ZERO = new Rotation(0);\n        Rotation.create = function (rotation) {\n            return new Rotation(rotation.angle, rotation.x, rotation.y);\n        };\n        Rotation.parse = function (str) {\n            var values = str.slice(1, str.length - 1).split(','), angle = values[0], x = values[1], y = values[2];\n            var rotation = new Rotation(angle, x, y);\n            return rotation;\n        };\n        var CompositeTransform = Class.extend({\n            init: function (x, y, scaleX, scaleY, angle, center) {\n                this.translate = new Translation(x, y);\n                if (scaleX !== undefined && scaleY !== undefined) {\n                    this.scale = new Scale(scaleX, scaleY);\n                }\n                if (angle !== undefined) {\n                    this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n                }\n            },\n            toString: function () {\n                var toString = function (transform) {\n                    return transform ? transform.toString() : '';\n                };\n                return toString(this.translate) + toString(this.rotate) + toString(this.scale);\n            },\n            render: function (visual) {\n                visual._transform = this;\n                visual._renderTransform();\n            },\n            toMatrix: function () {\n                var m = Matrix.unit();\n                if (this.translate) {\n                    m = m.times(this.translate.toMatrix());\n                }\n                if (this.rotate) {\n                    m = m.times(this.rotate.toMatrix());\n                }\n                if (this.scale) {\n                    m = m.times(this.scale.toMatrix());\n                }\n                return m;\n            },\n            invert: function () {\n                var rotate = this.rotate ? this.rotate.invert() : undefined, rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(), scale = this.scale ? this.scale.invert() : undefined, scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n                var translatePoint = new Point(-this.translate.x, -this.translate.y);\n                translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n                var translate = new Translation(translatePoint.x, translatePoint.y);\n                var transform = new CompositeTransform();\n                transform.translate = translate;\n                transform.rotate = rotate;\n                transform.scale = scale;\n                return transform;\n            }\n        });\n        var AutoSizeableMixin = {\n            _setScale: function () {\n                var options = this.options;\n                var originWidth = this._originWidth;\n                var originHeight = this._originHeight;\n                var scaleX = options.width / originWidth;\n                var scaleY = options.height / originHeight;\n                if (!isNumber(scaleX)) {\n                    scaleX = 1;\n                }\n                if (!isNumber(scaleY)) {\n                    scaleY = 1;\n                }\n                this._transform.scale = new Scale(scaleX, scaleY);\n            },\n            _setTranslate: function () {\n                var options = this.options;\n                var x = options.x || 0;\n                var y = options.y || 0;\n                this._transform.translate = new Translation(x, y);\n            },\n            _initSize: function () {\n                var options = this.options;\n                var transform = false;\n                if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                    this._measure(true);\n                    this._setScale();\n                    transform = true;\n                }\n                if (defined(options.x) || defined(options.y)) {\n                    this._setTranslate();\n                    transform = true;\n                }\n                if (transform) {\n                    this._renderTransform();\n                }\n            },\n            _updateSize: function (options) {\n                var update = false;\n                if (this.options.autoSize !== false && this._diffNumericOptions(options, [\n                        WIDTH,\n                        HEIGHT\n                    ])) {\n                    update = true;\n                    this._measure(true);\n                    this._setScale();\n                }\n                if (this._diffNumericOptions(options, [\n                        X,\n                        Y\n                    ])) {\n                    update = true;\n                    this._setTranslate();\n                }\n                if (update) {\n                    this._renderTransform();\n                }\n                return update;\n            }\n        };\n        var Element = Class.extend({\n            init: function (options) {\n                var element = this;\n                element.options = deepExtend({}, element.options, options);\n                element.id = element.options.id;\n                element._originSize = Rect.empty();\n                element._transform = new CompositeTransform();\n            },\n            visible: function (value) {\n                return this.drawingContainer().visible(value);\n            },\n            redraw: function (options) {\n                if (options && options.id) {\n                    this.id = options.id;\n                }\n            },\n            position: function (x, y) {\n                var options = this.options;\n                if (!defined(x)) {\n                    return new Point(options.x, options.y);\n                }\n                if (defined(y)) {\n                    options.x = x;\n                    options.y = y;\n                } else if (x instanceof Point) {\n                    options.x = x.x;\n                    options.y = x.y;\n                }\n                this._transform.translate = new Translation(options.x, options.y);\n                this._renderTransform();\n            },\n            rotate: function (angle, center) {\n                if (defined(angle)) {\n                    this._transform.rotate = new Rotation(angle, center.x, center.y);\n                    this._renderTransform();\n                }\n                return this._transform.rotate || Rotation.ZERO;\n            },\n            drawingContainer: function () {\n                return this.drawingElement;\n            },\n            _renderTransform: function () {\n                var matrix = this._transform.toMatrix();\n                this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n            },\n            _hover: function () {\n            },\n            _diffNumericOptions: diffNumericOptions,\n            _measure: function (force) {\n                var rect;\n                if (!this._measured || force) {\n                    var box = this._boundingBox() || new g.Rect();\n                    var startPoint = box.topLeft();\n                    rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                    this._originSize = rect;\n                    this._originWidth = rect.width;\n                    this._originHeight = rect.height;\n                    this._measured = true;\n                } else {\n                    rect = this._originSize;\n                }\n                return rect;\n            },\n            _boundingBox: function () {\n                return this.drawingElement.rawBBox();\n            }\n        });\n        var VisualBase = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                options = this.options;\n                options.fill = normalizeDrawingOptions(options.fill);\n                options.stroke = normalizeDrawingOptions(options.stroke);\n            },\n            options: {\n                stroke: {\n                    color: 'gray',\n                    width: 1\n                },\n                fill: { color: TRANSPARENT }\n            },\n            fill: function (color, opacity) {\n                this._fill({\n                    color: getColor(color),\n                    opacity: opacity\n                });\n            },\n            stroke: function (color, width, opacity) {\n                this._stroke({\n                    color: getColor(color),\n                    width: width,\n                    opacity: opacity\n                });\n            },\n            redraw: function (options) {\n                if (options) {\n                    var stroke = options.stroke;\n                    var fill = options.fill;\n                    if (stroke) {\n                        this._stroke(normalizeDrawingOptions(stroke));\n                    }\n                    if (fill) {\n                        this._fill(normalizeDrawingOptions(fill));\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _hover: function (show) {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var hover = options.hover;\n                if (hover && hover.fill) {\n                    var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                    drawingElement.fill(fill.color, fill.opacity);\n                }\n            },\n            _stroke: function (strokeOptions) {\n                var options = this.options;\n                deepExtend(options, { stroke: strokeOptions });\n                strokeOptions = options.stroke;\n                var stroke = null;\n                if (strokeOptions.width > 0) {\n                    stroke = {\n                        color: strokeOptions.color,\n                        width: strokeOptions.width,\n                        opacity: strokeOptions.opacity,\n                        dashType: strokeOptions.dashType\n                    };\n                }\n                this.drawingElement.options.set('stroke', stroke);\n            },\n            _fill: function (fillOptions) {\n                var options = this.options;\n                deepExtend(options, { fill: fillOptions || {} });\n                var fill = options.fill;\n                if (fill.gradient) {\n                    var gradient = fill.gradient;\n                    var GradientClass = gradient.type === 'radial' ? d.RadialGradient : d.LinearGradient;\n                    this.drawingElement.fill(new GradientClass(gradient));\n                } else {\n                    this.drawingElement.fill(fill.color, fill.opacity);\n                }\n            }\n        });\n        var TextBlock = VisualBase.extend({\n            init: function (options) {\n                this._textColor(options);\n                VisualBase.fn.init.call(this, options);\n                this._font();\n                this._initText();\n                this._initSize();\n            },\n            options: {\n                fontSize: 15,\n                fontFamily: 'sans-serif',\n                stroke: { width: 0 },\n                fill: { color: 'black' },\n                autoSize: true\n            },\n            _initText: function () {\n                var options = this.options;\n                this.drawingElement = new d.Text(defined(options.text) ? options.text : '', new g.Point(), { font: options.font });\n                this._fill();\n                this._stroke();\n            },\n            _textColor: function (options) {\n                if (options && options.color) {\n                    deepExtend(options, { fill: { color: options.color } });\n                }\n            },\n            _font: function () {\n                var options = this.options;\n                if (options.fontFamily && defined(options.fontSize)) {\n                    options.font = options.fontSize + 'px ' + options.fontFamily;\n                } else {\n                    delete options.font;\n                }\n            },\n            content: function (text) {\n                return this.drawingElement.content(text);\n            },\n            redraw: function (options) {\n                if (options) {\n                    var sizeChanged = false;\n                    var textOptions = this.options;\n                    this._textColor(options);\n                    VisualBase.fn.redraw.call(this, options);\n                    if (options.fontFamily || defined(options.fontSize)) {\n                        deepExtend(textOptions, {\n                            fontFamily: options.fontFamily,\n                            fontSize: options.fontSize\n                        });\n                        this._font();\n                        this.drawingElement.options.set('font', textOptions.font);\n                        sizeChanged = true;\n                    }\n                    if (options.text) {\n                        this.content(options.text);\n                        sizeChanged = true;\n                    }\n                    if (!this._updateSize(options) && sizeChanged) {\n                        this._initSize();\n                    }\n                }\n            }\n        });\n        deepExtend(TextBlock.fn, AutoSizeableMixin);\n        var Rectangle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initPath();\n                this._setPosition();\n            },\n            _setPosition: function () {\n                var options = this.options;\n                var x = options.x;\n                var y = options.y;\n                if (defined(x) || defined(y)) {\n                    this.position(x || 0, y || 0);\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT\n                        ])) {\n                        this._drawPath();\n                    }\n                    if (this._diffNumericOptions(options, [\n                            X,\n                            Y\n                        ])) {\n                        this._setPosition();\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({\n                    stroke: options.stroke,\n                    closed: true\n                });\n                this._fill();\n                this._drawPath();\n            },\n            _drawPath: function () {\n                var drawingElement = this.drawingElement;\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var width = sizeOptions.width;\n                var height = sizeOptions.height;\n                drawingElement.segments.elements([\n                    createSegment(0, 0),\n                    createSegment(width, 0),\n                    createSegment(width, height),\n                    createSegment(0, height)\n                ]);\n            }\n        });\n        var MarkerBase = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                var anchor = this.options.anchor;\n                this.anchor = new g.Point(anchor.x, anchor.y);\n                this.createElement();\n            },\n            options: {\n                stroke: {\n                    color: TRANSPARENT,\n                    width: 0\n                },\n                fill: { color: 'black' }\n            },\n            _transformToPath: function (point, path) {\n                var transform = path.transform();\n                if (point && transform) {\n                    point = point.transformCopy(transform);\n                }\n                return point;\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.position) {\n                        this.options.position = options.position;\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            }\n        });\n        var CircleMarker = MarkerBase.extend({\n            options: {\n                radius: 4,\n                anchor: {\n                    x: 0,\n                    y: 0\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var options = this.options;\n                var position = options.position;\n                var segments = path.segments;\n                var targetSegment;\n                var point;\n                if (position == START) {\n                    targetSegment = segments[0];\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                }\n                if (targetSegment) {\n                    point = this._transformToPath(targetSegment.anchor(), path);\n                    this.drawingElement.transform(g.transform().translate(point.x, point.y));\n                }\n            }\n        });\n        var ArrowMarker = MarkerBase.extend({\n            options: {\n                path: 'M 0 0 L 10 5 L 0 10 L 3 5 z',\n                anchor: {\n                    x: 10,\n                    y: 5\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.path, {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var points = this._linePoints(path);\n                var start = points.start;\n                var end = points.end;\n                var transform = g.transform();\n                if (start) {\n                    transform.rotate(lineAngle(start, end), end);\n                }\n                if (end) {\n                    var anchor = this.anchor;\n                    var translate = end.clone().translate(-anchor.x, -anchor.y);\n                    transform.translate(translate.x, translate.y);\n                }\n                this.drawingElement.transform(transform);\n            },\n            _linePoints: function (path) {\n                var options = this.options;\n                var segments = path.segments;\n                var startPoint, endPoint, targetSegment;\n                if (options.position == START) {\n                    targetSegment = segments[0];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlOut();\n                        var nextSegment = segments[1];\n                        if (!startPoint && nextSegment) {\n                            startPoint = nextSegment.anchor();\n                        }\n                    }\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlIn();\n                        var prevSegment = segments[segments.length - 2];\n                        if (!startPoint && prevSegment) {\n                            startPoint = prevSegment.anchor();\n                        }\n                    }\n                }\n                if (endPoint) {\n                    return {\n                        start: this._transformToPath(startPoint, path),\n                        end: this._transformToPath(endPoint, path)\n                    };\n                }\n            }\n        });\n        var MarkerPathMixin = {\n            _getPath: function (position) {\n                var path = this.drawingElement;\n                if (path instanceof d.MultiPath) {\n                    if (position == START) {\n                        path = path.paths[0];\n                    } else {\n                        path = path.paths[path.paths.length - 1];\n                    }\n                }\n                if (path && path.segments.length) {\n                    return path;\n                }\n            },\n            _normalizeMarkerOptions: function (options) {\n                var startCap = options.startCap;\n                var endCap = options.endCap;\n                if (isString(startCap)) {\n                    options.startCap = { type: startCap };\n                }\n                if (isString(endCap)) {\n                    options.endCap = { type: endCap };\n                }\n            },\n            _removeMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    this.drawingContainer().remove(marker.drawingElement);\n                    delete this._markers[position];\n                }\n            },\n            _createMarkers: function () {\n                var options = this.options;\n                this._normalizeMarkerOptions(options);\n                this._markers = {};\n                this._markers[START] = this._createMarker(options.startCap, START);\n                this._markers[END] = this._createMarker(options.endCap, END);\n            },\n            _createMarker: function (options, position) {\n                var type = (options || {}).type;\n                var path = this._getPath(position);\n                var markerType, marker;\n                if (!path) {\n                    this._removeMarker(position);\n                    return;\n                }\n                if (type == Markers.filledCircle) {\n                    markerType = CircleMarker;\n                } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                    markerType = ArrowMarker;\n                } else {\n                    this._removeMarker(position);\n                }\n                if (markerType) {\n                    marker = new markerType(deepExtend({}, options, { position: position }));\n                    marker.positionMarker(path);\n                    this.drawingContainer().append(marker.drawingElement);\n                    return marker;\n                }\n            },\n            _positionMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    var path = this._getPath(position);\n                    if (path) {\n                        marker.positionMarker(path);\n                    } else {\n                        this._removeMarker(position);\n                    }\n                }\n            },\n            _capMap: {\n                start: 'startCap',\n                end: 'endCap'\n            },\n            _redrawMarker: function (pathChange, position, options) {\n                this._normalizeMarkerOptions(options);\n                var pathOptions = this.options;\n                var cap = this._capMap[position];\n                var pathCapType = (pathOptions[cap] || {}).type;\n                var optionsCap = options[cap];\n                var created = false;\n                if (optionsCap) {\n                    pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                    if (optionsCap.type && pathCapType != optionsCap.type) {\n                        this._removeMarker(position);\n                        this._markers[position] = this._createMarker(pathOptions[cap], position);\n                        created = true;\n                    } else if (this._markers[position]) {\n                        this._markers[position].redraw(optionsCap);\n                    }\n                } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                }\n                return created;\n            },\n            _redrawMarkers: function (pathChange, options) {\n                if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                    this._positionMarker(START);\n                }\n                if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                    this._positionMarker(END);\n                }\n            }\n        };\n        var Path = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._createElements();\n                this._initSize();\n            },\n            options: { autoSize: true },\n            drawingContainer: function () {\n                return this.container;\n            },\n            data: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (options.data != value) {\n                        options.data = value;\n                        this._setData(value);\n                        this._initSize();\n                        this._redrawMarkers(true, {});\n                    }\n                } else {\n                    return options.data;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    var pathOptions = this.options;\n                    var data = options.data;\n                    if (defined(data) && pathOptions.data != data) {\n                        pathOptions.data = data;\n                        this._setData(data);\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._updateSize(options);\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _createElements: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.data || '', { stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                this._createMarkers();\n            },\n            _setData: function (data) {\n                var drawingElement = this.drawingElement;\n                var multipath = d.Path.parse(data || '');\n                var paths = multipath.paths.slice(0);\n                multipath.paths.elements([]);\n                drawingElement.paths.elements(paths);\n            }\n        });\n        deepExtend(Path.fn, AutoSizeableMixin);\n        deepExtend(Path.fn, MarkerPathMixin);\n        var Line = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            redraw: function (options) {\n                if (options) {\n                    options = options || {};\n                    var from = options.from;\n                    var to = options.to;\n                    if (from) {\n                        this.options.from = from;\n                    }\n                    if (to) {\n                        this.options.to = to;\n                    }\n                    if (from || to) {\n                        this._drawPath();\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this._drawPath();\n                this.container.append(drawingElement);\n            },\n            _drawPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement;\n                var from = options.from || new Point();\n                var to = options.to || new Point();\n                drawingElement.segments.elements([\n                    createSegment(from.x, from.y),\n                    createSegment(to.x, to.y)\n                ]);\n            }\n        });\n        deepExtend(Line.fn, MarkerPathMixin);\n        var Polyline = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            points: function (points) {\n                var options = this.options;\n                if (points) {\n                    options.points = points;\n                    this._updatePath();\n                } else {\n                    return options.points;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    var points = options.points;\n                    VisualBase.fn.redraw.call(this, options);\n                    if (points && this._pointsDiffer(points)) {\n                        this.points(points);\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                if (options.points) {\n                    this._updatePath();\n                }\n            },\n            _pointsDiffer: function (points) {\n                var currentPoints = this.options.points;\n                var differ = currentPoints.length !== points.length;\n                if (!differ) {\n                    for (var i = 0; i < points.length; i++) {\n                        if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                            differ = true;\n                            break;\n                        }\n                    }\n                }\n                return differ;\n            },\n            _updatePath: function () {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var points = options.points;\n                var segments = [];\n                var point;\n                for (var i = 0; i < points.length; i++) {\n                    point = points[i];\n                    segments.push(createSegment(point.x, point.y));\n                }\n                drawingElement.segments.elements(segments);\n            },\n            options: { points: [] }\n        });\n        deepExtend(Polyline.fn, MarkerPathMixin);\n        var Image = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                this._initImage();\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.source) {\n                        this.drawingElement.src(options.source);\n                    }\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.drawingElement.rect(this._rect());\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _initImage: function () {\n                var options = this.options;\n                var rect = this._rect();\n                this.drawingElement = new d.Image(options.source, rect, {});\n            },\n            _rect: function () {\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n                var size = new g.Size(sizeOptions.width, sizeOptions.height);\n                return new g.Rect(origin, size);\n            }\n        });\n        var Group = Element.extend({\n            init: function (options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Group();\n                this._initSize();\n            },\n            options: { autoSize: false },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                this.children.push(visual);\n                this._childrenChange = true;\n            },\n            remove: function (visual) {\n                if (this._remove(visual)) {\n                    this._childrenChange = true;\n                }\n            },\n            _remove: function (visual) {\n                var index = inArray(visual, this.children);\n                if (index >= 0) {\n                    this.drawingElement.removeAt(index);\n                    this.children.splice(index, 1);\n                    return true;\n                }\n            },\n            clear: function () {\n                this.drawingElement.clear();\n                this.children = [];\n                this._childrenChange = true;\n            },\n            toFront: function (visuals) {\n                var visual;\n                for (var i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    if (this._remove(visual)) {\n                        this.append(visual);\n                    }\n                }\n            },\n            toBack: function (visuals) {\n                this._reorderChildren(visuals, 0);\n            },\n            toIndex: function (visuals, indices) {\n                this._reorderChildren(visuals, indices);\n            },\n            _reorderChildren: function (visuals, indices) {\n                var group = this.drawingElement;\n                var drawingChildren = group.children.slice(0);\n                var children = this.children;\n                var fixedPosition = isNumber(indices);\n                var i, index, toIndex, drawingElement, visual;\n                for (i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    drawingElement = visual.drawingContainer();\n                    index = inArray(visual, children);\n                    if (index >= 0) {\n                        drawingChildren.splice(index, 1);\n                        children.splice(index, 1);\n                        toIndex = fixedPosition ? indices : indices[i];\n                        drawingChildren.splice(toIndex, 0, drawingElement);\n                        children.splice(toIndex, 0, visual);\n                    }\n                }\n                group.clear();\n                group.append.apply(group, drawingChildren);\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (this._childrenChange) {\n                        this._childrenChange = false;\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                    } else {\n                        this._updateSize(options);\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _boundingBox: function () {\n                var children = this.children;\n                var boundingBox;\n                var visual, childBoundingBox;\n                for (var i = 0; i < children.length; i++) {\n                    visual = children[i];\n                    if (visual.visible() && visual._includeInBBox !== false) {\n                        childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                        if (childBoundingBox) {\n                            if (boundingBox) {\n                                boundingBox = Rect.union(boundingBox, childBoundingBox);\n                            } else {\n                                boundingBox = childBoundingBox;\n                            }\n                        }\n                    }\n                }\n                return boundingBox;\n            }\n        });\n        deepExtend(Group.fn, AutoSizeableMixin);\n        var Layout = Group.extend({\n            init: function (rect, options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n                this._initSize();\n            },\n            rect: function (rect) {\n                if (rect) {\n                    this.drawingElement.rect(toDrawingRect(rect));\n                } else {\n                    var drawingRect = this.drawingElement.rect();\n                    if (drawingRect) {\n                        return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                    }\n                }\n            },\n            reflow: function () {\n                this.drawingElement.reflow();\n            },\n            redraw: function (options) {\n                kendo.deepExtend(this.drawingElement.options, options);\n                Group.fn.redraw.call(this, options);\n            }\n        });\n        var Circle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initCircle();\n                this._initSize();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var circleOptions = this.options;\n                    if (options.center) {\n                        deepExtend(circleOptions, { center: options.center });\n                        this._center.move(circleOptions.center.x, circleOptions.center.y);\n                    }\n                    if (this._diffNumericOptions(options, ['radius'])) {\n                        this._circle.setRadius(circleOptions.radius);\n                    }\n                    this._updateSize(options);\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initCircle: function () {\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var radius = options.radius;\n                if (!defined(radius)) {\n                    if (!defined(width)) {\n                        width = height;\n                    }\n                    if (!defined(height)) {\n                        height = width;\n                    }\n                    options.radius = radius = Math.min(width, height) / 2;\n                }\n                var center = options.center || {\n                    x: radius,\n                    y: radius\n                };\n                this._center = new g.Point(center.x, center.y);\n                this._circle = new g.Circle(this._center, radius);\n                this.drawingElement = new d.Circle(this._circle, { stroke: options.stroke });\n                this._fill();\n            }\n        });\n        deepExtend(Circle.fn, AutoSizeableMixin);\n        var Canvas = Class.extend({\n            init: function (element, options) {\n                options = options || {};\n                this.element = element;\n                this.surface = d.Surface.create(element, options);\n                if (kendo.isFunction(this.surface.translate)) {\n                    this.translate = this._translate;\n                }\n                this.drawingElement = new d.Group();\n                this._viewBox = new Rect(0, 0, options.width, options.height);\n                this.size(this._viewBox);\n            },\n            bounds: function () {\n                var box = this.drawingElement.clippedBBox();\n                return new Rect(0, 0, box.width(), box.height());\n            },\n            size: function (size) {\n                var viewBox = this._viewBox;\n                if (defined(size)) {\n                    viewBox.width = size.width;\n                    viewBox.height = size.height;\n                    this.surface.setSize(size);\n                }\n                return {\n                    width: viewBox.width,\n                    height: viewBox.height\n                };\n            },\n            _translate: function (x, y) {\n                var viewBox = this._viewBox;\n                if (defined(x) && defined(y)) {\n                    viewBox.x = x;\n                    viewBox.y = y;\n                    this.surface.translate({\n                        x: x,\n                        y: y\n                    });\n                }\n                return {\n                    x: viewBox.x,\n                    y: viewBox.y\n                };\n            },\n            draw: function () {\n                this.surface.draw(this.drawingElement);\n            },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                return this;\n            },\n            remove: function (visual) {\n                this.drawingElement.remove(visual.drawingContainer());\n            },\n            insertBefore: function () {\n            },\n            clear: function () {\n                this.drawingElement.clear();\n            },\n            destroy: function (clearHtml) {\n                this.surface.destroy();\n                if (clearHtml) {\n                    $(this.element).remove();\n                }\n            }\n        });\n        function sizeOptionsOrDefault(options) {\n            return {\n                x: options.x || 0,\n                y: options.y || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n        }\n        function normalizeDrawingOptions(options) {\n            if (options) {\n                var drawingOptions = options;\n                if (isString(drawingOptions)) {\n                    drawingOptions = { color: drawingOptions };\n                }\n                if (drawingOptions.color) {\n                    drawingOptions.color = getColor(drawingOptions.color);\n                }\n                return drawingOptions;\n            }\n        }\n        function getColor(value) {\n            var color;\n            if (value != TRANSPARENT) {\n                color = new d.Color(value).toHex();\n            } else {\n                color = value;\n            }\n            return color;\n        }\n        function lineAngle(p1, p2) {\n            var xDiff = p2.x - p1.x;\n            var yDiff = p2.y - p1.y;\n            var angle = kendo.util.deg(Math.atan2(yDiff, xDiff));\n            return angle;\n        }\n        function createSegment(x, y) {\n            return new d.Segment(new g.Point(x, y));\n        }\n        function toDrawingRect(rect) {\n            if (rect) {\n                return new g.Rect([\n                    rect.x,\n                    rect.y\n                ], [\n                    rect.width,\n                    rect.height\n                ]);\n            }\n        }\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            diffNumericOptions: diffNumericOptions,\n            Element: Element,\n            Scale: Scale,\n            Translation: Translation,\n            Rotation: Rotation,\n            Circle: Circle,\n            Group: Group,\n            Rectangle: Rectangle,\n            Canvas: Canvas,\n            Path: Path,\n            Layout: Layout,\n            Line: Line,\n            MarkerBase: MarkerBase,\n            ArrowMarker: ArrowMarker,\n            CircleMarker: CircleMarker,\n            Polyline: Polyline,\n            CompositeTransform: CompositeTransform,\n            TextBlock: TextBlock,\n            Image: Image,\n            VisualBase: VisualBase\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/services', [\n        'kendo.drawing',\n        'dataviz/diagram/svg'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, dataviz = kendo.dataviz, diagram = dataviz.diagram, Class = kendo.Class, Group = diagram.Group, Rect = diagram.Rect, Rectangle = diagram.Rectangle, Utils = diagram.Utils, isUndefined = Utils.isUndefined, Point = diagram.Point, Circle = diagram.Circle, Ticker = diagram.Ticker, deepExtend = kendo.deepExtend, Movable = kendo.ui.Movable, browser = kendo.support.browser, defined = kendo.util.defined, inArray = $.inArray, proxy = $.proxy;\n        var Cursors = {\n                arrow: 'default',\n                grip: 'pointer',\n                cross: 'pointer',\n                add: 'pointer',\n                move: 'move',\n                select: 'pointer',\n                south: 's-resize',\n                east: 'e-resize',\n                west: 'w-resize',\n                north: 'n-resize',\n                rowresize: 'row-resize',\n                colresize: 'col-resize'\n            }, HIT_TEST_DISTANCE = 10, AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', DEFAULT_SNAP_SIZE = 10, DEFAULT_SNAP_ANGLE = 10, DRAG_START = 'dragStart', DRAG = 'drag', DRAG_END = 'dragEnd', ITEMROTATE = 'itemRotate', ITEMBOUNDSCHANGE = 'itemBoundsChange', MIN_SNAP_SIZE = 5, MIN_SNAP_ANGLE = 5, MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', SCROLL_MIN = -20000, SCROLL_MAX = 20000, FRICTION = 0.9, FRICTION_MOBILE = 0.93, VELOCITY_MULTIPLIER = 5, TRANSPARENT = 'transparent', PAN = 'pan', ROTATED = 'rotated';\n        diagram.Cursors = Cursors;\n        function selectSingle(item, meta) {\n            if (item.isSelected) {\n                if (meta.ctrlKey) {\n                    item.select(false);\n                }\n            } else {\n                item.diagram.select(item, { addToSelection: meta.ctrlKey });\n            }\n        }\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    this.subjects[i].position(new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick));\n                }\n            }\n        });\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                } else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = 'Diagram layout';\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        conn.visible(false);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(function (id) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(true);\n                        });\n                    });\n                    ticker.play();\n                } else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                }\n            }\n        });\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = 'Composite unit';\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, 'source');\n                }\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, 'target');\n                }\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, 'source');\n                }\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, 'target');\n                }\n                this.item.updateModel();\n            }\n        });\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, 'source');\n                this.item._updateConnector(this._undoTarget, 'target');\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, 'source');\n                this.item._updateConnector(this._redoTarget, 'target');\n                this.item.updateModel();\n            }\n        });\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = 'Delete connection';\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = 'Deletion';\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = 'Transformation';\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = 'New connection';\n            },\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = 'New shape';\n            },\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = 'Pan Unit';\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = 'Rotation';\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n            events: [\n                'undone',\n                'redone'\n            ],\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n            cancel: function () {\n                this.composite = undefined;\n            },\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n            pop: function () {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n            count: function () {\n                return this.stack.length;\n            },\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger('undone');\n                }\n            },\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger('redone');\n                }\n            },\n            _restart: function (composite, execute) {\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity;\n                }\n            },\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n        function tryActivateSelection(options, meta) {\n            var enabled = options !== false;\n            if (options.key && options.key != 'none') {\n                enabled = meta[options.key + 'Key'];\n            }\n            return enabled;\n        }\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n                var diagram = tool.toolService.diagram, canvas = diagram.canvas;\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data('kendoMobileScroller');\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n                if (defined(options.key)) {\n                    if (!options.key || options.key == 'none') {\n                        enabled = noMeta(meta);\n                    } else {\n                        enabled = meta[options.key + 'Key'] && !(meta.ctrlKey && defined(toolService.hoveredItem));\n                    }\n                }\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },\n            _move: function (args) {\n                var tool = this, diagram = tool.toolService.diagram, canvas = diagram.canvas, scrollPos = new Point(args.scrollLeft, args.scrollTop);\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, hoveredItem = toolService.hoveredItem, selectable = diagram.options.selectable;\n                if (hoveredItem) {\n                    if (tryActivateSelection(selectable, meta)) {\n                        selectSingle(hoveredItem, meta);\n                    }\n                    if (hoveredItem.adorner) {\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        });\n                    }\n                }\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, service = this.toolService, adorner = this.adorner, unit;\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, {\n                            shapes: adorner.shapes,\n                            connections: []\n                        })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n                if (service.hoveredItem) {\n                    this.toolService.triggerClick({\n                        item: service.hoveredItem,\n                        point: p,\n                        meta: meta\n                    });\n                }\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var enabled = tryActivateSelection(toolService.diagram.options.selectable, meta);\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function () {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var diagram = this.toolService.diagram, connector = this.toolService._hoveredConnector, connection = diagram._createConnection({}, connector._c, p);\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection]\n                    }) && diagram._addConnection(connection)) {\n                    this.toolService._connectionManipulation(connection, connector._c.shape, true);\n                    this.toolService._removeHover();\n                    selectSingle(this.toolService.activeConnection, meta);\n                } else {\n                    connection.source(null);\n                    this.toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, {\n                    shapes: [],\n                    connections: [connection]\n                });\n                return true;\n            },\n            end: function (p) {\n                var toolService = this.toolService, d = toolService.diagram, connection = toolService.activeConnection, hoveredItem = toolService.hoveredItem, connector = toolService._hoveredConnector, target;\n                if (!connection) {\n                    return;\n                }\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n                connection.target(target);\n                if (!d.trigger(DRAG_END, {\n                        shapes: [],\n                        connections: [connection]\n                    })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, selectable = diagram.options.selectable, item = toolService.hoveredItem, isActive = tryActivateSelection(selectable, meta) && item && item.path && !(item.isSelected && meta.ctrlKey);\n                if (isActive) {\n                    this._c = item;\n                }\n                return isActive;\n            },\n            start: function (p, meta) {\n                var connection = this._c;\n                selectSingle(connection, meta);\n                var adorner = connection.adorner;\n                if (canDrag(connection) && adorner && !this.toolService.diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection]\n                    })) {\n                    this.handle = adorner._hitTest(p);\n                    adorner.start(p);\n                } else {\n                    this.toolService.startPoint = p;\n                    this.toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, {\n                        shapes: [],\n                        connections: [this._c]\n                    });\n                    return true;\n                }\n            },\n            end: function (p, meta) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n                if (adorner) {\n                    toolService.triggerClick({\n                        item: connection,\n                        point: p,\n                        meta: meta\n                    });\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, {\n                                shapes: [],\n                                connections: [connection]\n                            })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ];\n                this.activeTool = undefined;\n            },\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.startPoint = p;\n                return true;\n            },\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {\n                    if (testKey(key, 'a')) {\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'z')) {\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'y')) {\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'c')) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'x')) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'v')) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'l')) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'd')) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n                    return true;\n                } else if (key === 27) {\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram, delta = meta.delta, z = diagram.zoom(), options = diagram.options, zoomRate = options.zoomRate, zoomOptions = {\n                        point: p,\n                        meta: meta,\n                        zoom: z\n                    };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n            triggerClick: function (data) {\n                if (this.startPoint.equals(data.point)) {\n                    this.diagram.trigger('click', data);\n                }\n            },\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break;\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow;\n                element.css({ cursor: cursor });\n                if (browser.msie && browser.version == 7) {\n                    element[0].style.cssText = element[0].style.cssText;\n                }\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n                        this.hoveredItem = hit;\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) {\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n                if (!this.activeTool || this.activeTool.type !== 'ConnectionTool') {\n                    var selectedConnections = [];\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n                return hit || this._hitTestElements(point);\n            },\n            _hitTestElements: function (point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n                if ((!this.activeTool || this.activeTool.type != 'ConnectionTool') && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n        });\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n            getBounds: function () {\n                var points = this.connection.allPoints(), s = points[0], e = points[points.length - 1], right = Math.max(s.x, e.x), left = Math.min(s.x, e.x), top = Math.min(s.y, e.y), bottom = Math.max(s.y, e.y);\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n            }\n        });\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            routePoints: function (start, end, sourceConnector, targetConnector) {\n                var result;\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n            _connectorSides: [\n                {\n                    name: 'Top',\n                    axis: 'y',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Left',\n                    axis: 'x',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Bottom',\n                    axis: 'y',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                },\n                {\n                    name: 'Right',\n                    axis: 'x',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                }\n            ],\n            _connectorSide: function (connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = kendo.util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min && (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n            _sameSideDistance: function (connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n            _connectorPoints: function (start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(start.x, pointY),\n                                new Point(end.x, pointY)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x, start.y + deltaY / 2),\n                                new Point(end.x, start.y + deltaY / 2)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(pointX, start.y),\n                                new Point(pointX, end.y)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x + deltaX / 2, start.y),\n                                new Point(start.x + deltaX / 2, start.y + deltaY)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n            _floatingPoints: function (start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [\n                    start,\n                    start,\n                    end,\n                    end\n                ];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        } else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    } else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        } else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                idx--;\n                if (cascadeStartHorizontal && idx % 2 !== 0 || !cascadeStartHorizontal && idx % 2 === 0) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n                return [\n                    points[1],\n                    points[2]\n                ];\n            },\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n                return horizontal;\n            }\n        });\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n            }\n        });\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n            options: { handles: {} },\n            _getCursor: function () {\n                return Cursors.move;\n            },\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                case -1:\n                    if (this.connection.targetConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                    }\n                    break;\n                case 1:\n                    if (this.connection.sourceConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                    }\n                    break;\n                }\n            },\n            move: function (handle, p) {\n                switch (handle) {\n                case -1:\n                    this.connection.source(p);\n                    break;\n                case 1:\n                    this.connection.target(p);\n                    break;\n                default:\n                    var delta = p.minus(this.startPoint);\n                    this.startPoint = p;\n                    if (!this.connection.sourceConnector) {\n                        this.connection.source(this.connection.sourcePoint().plus(delta));\n                    }\n                    if (!this.connection.targetConnector) {\n                        this.connection.target(this.connection.targetPoint().plus(delta));\n                    }\n                    break;\n                }\n                this.refresh();\n                return true;\n            },\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n            _hitTest: function (p) {\n                var sp = this.connection.sourcePoint(), tp = this.connection.targetPoint(), rx = this.options.handles.width / 2, ry = this.options.handles.height / 2, sb = new Rect(sp.x, sp.y).inflate(rx, ry), tb = new Rect(tp.x, tp.y).inflate(rx, ry);\n                return sb.contains(p) ? -1 : tb.contains(p) ? 1 : 0;\n            },\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that.visual.clear();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                    bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n            return result;\n        }\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind('select', function (e) {\n                    that._initialize(e.selected);\n                });\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n            options: {\n                handles: {\n                    fill: { color: '#fff' },\n                    stroke: { color: '#282828' },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: { color: '#282828' },\n                        stroke: { color: '#282828' }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: '#778899',\n                        width: 1,\n                        dashType: 'dash'\n                    },\n                    fill: { color: TRANSPARENT }\n                },\n                offset: 10\n            },\n            _initSelection: function () {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n            _resizable: function () {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n            _handleOptions: function () {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n            _createHandles: function () {\n                var handles, item, y, x;\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if (x !== 0 || y !== 0) {\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({\n                                    x: x,\n                                    y: y,\n                                    visual: item\n                                });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p), i, hit, handleBounds, handlesCount = this.map.length, handle;\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit);\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(), w = handles.width, h = handles.height, r = new Rect(0, 0, w, h);\n                    if (p.x < 0) {\n                        r.x = -w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1 - w / 2;\n                    }\n                    if (p.y < 0) {\n                        r.y = -h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1 - h / 2;\n                    }\n                    return r;\n                }\n            },\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && hit.x >= -1 && hit.x <= 1 && hit.y >= -1 && hit.y <= 1 && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n                    if (hit.x == -1 && hit.y == -1) {\n                        return 'nw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return 'se-resize';\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return 'sw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return 'ne-resize';\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return 'n-resize';\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return 's-resize';\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return 'e-resize';\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return 'w-resize';\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n            _initialize: function () {\n                var that = this, i, item, items = that.diagram.select();\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n            _hover: function (value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(), hover = handleOptions.hover, stroke = handleOptions.stroke, fill = handleOptions.fill;\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n            redraw: function () {\n                var i, handle, visibleHandles = this._resizable();\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n            angle: function (value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n                return this._angle;\n            },\n            rotate: function () {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n            move: function (handle, p) {\n                var delta, dragging, dtl = new Point(), dbr = new Point(), bounds, center, shape, i, angle, newBounds, changed = 0, staticPoint, scaleX, scaleY;\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty('layout')) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta;\n                        dragging = true;\n                    } else {\n                        if (this._angle) {\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center();\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) {\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty('layout')) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle);\n                            }\n                            changed += 1;\n                        }\n                    }\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n                    this._positions();\n                }\n                this._cp = p;\n            },\n            isDragHandle: function (handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n            cancel: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor(a % 360 / snapAngle) * snapAngle : a % 360;\n            },\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n            snapOptions: function () {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n            shouldSnap: function () {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl), br = bounds.bottomRight().plus(dbr), newBounds = Rect.fromPoints(tl, br), newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n            _diffStates: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ? this.shapes[0].bounds().clone() : this.diagram.boundingBox(this.shapes, true);\n                this.bounds(bounds);\n            },\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({\n                        width: bounds.width,\n                        height: bounds.height\n                    });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: '#778899',\n                    width: 1,\n                    dashType: 'dash'\n                },\n                fill: { color: TRANSPARENT }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({\n                        height: visualBounds.height + 1,\n                        width: visualBounds.width + 1\n                    });\n                }\n            }\n        });\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()), relative = p.minus(this._c.shape.bounds('transformed').topLeft()), value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/layout', ['dataviz/diagram/math'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Graph = diagram.Graph, Node = diagram.Node, Link = diagram.Link, deepExtend = kendo.deepExtend, Size = diagram.Size, Rect = diagram.Rect, Dictionary = diagram.Dictionary, Set = diagram.Set, HyperTree = diagram.Graph, Utils = diagram.Utils, Point = diagram.Point, EPSILON = 0.000001, DEG_TO_RAD = Math.PI / 180, contains = Utils.contains, grep = $.grep;\n        var LayoutBase = kendo.Class.extend({\n            defaultOptions: {\n                type: 'Tree',\n                subtype: 'Down',\n                roots: null,\n                animate: false,\n                limitToView: false,\n                friction: 0.9,\n                nodeDistance: 50,\n                iterations: 300,\n                horizontalSeparation: 90,\n                verticalSeparation: 50,\n                underneathVerticalTopOffset: 15,\n                underneathHorizontalOffset: 15,\n                underneathVerticalSeparation: 15,\n                grid: {\n                    width: 1500,\n                    offsetX: 50,\n                    offsetY: 50,\n                    componentSpacingX: 20,\n                    componentSpacingY: 20\n                },\n                layerSeparation: 50,\n                layeredIterations: 2,\n                startRadialAngle: 0,\n                endRadialAngle: 360,\n                radialSeparation: 150,\n                radialFirstLevelSeparation: 200,\n                keepComponentsInOneRadialLayout: false,\n                ignoreContainers: true,\n                layoutContainerChildren: false,\n                ignoreInvisible: true,\n                animateTransitions: false\n            },\n            init: function () {\n            },\n            gridLayoutComponents: function (components) {\n                if (!components) {\n                    throw 'No components supplied.';\n                }\n                Utils.forEach(components, function (c) {\n                    c.calcBounds();\n                });\n                components.sort(function (a, b) {\n                    return b.bounds.width - a.bounds.width;\n                });\n                var maxWidth = this.options.grid.width, offsetX = this.options.grid.componentSpacingX, offsetY = this.options.grid.componentSpacingY, height = 0, startX = this.options.grid.offsetX, startY = this.options.grid.offsetY, x = startX, y = startY, i, resultLinkSet = [], resultNodeSet = [];\n                while (components.length > 0) {\n                    if (x >= maxWidth) {\n                        x = startX;\n                        y += height + offsetY;\n                        height = 0;\n                    }\n                    var component = components.pop();\n                    this.moveToOffset(component, new Point(x, y));\n                    for (i = 0; i < component.nodes.length; i++) {\n                        resultNodeSet.push(component.nodes[i]);\n                    }\n                    for (i = 0; i < component.links.length; i++) {\n                        resultLinkSet.push(component.links[i]);\n                    }\n                    var boundingRect = component.bounds;\n                    var currentHeight = boundingRect.height;\n                    if (currentHeight <= 0 || isNaN(currentHeight)) {\n                        currentHeight = 0;\n                    }\n                    var currentWidth = boundingRect.width;\n                    if (currentWidth <= 0 || isNaN(currentWidth)) {\n                        currentWidth = 0;\n                    }\n                    if (currentHeight >= height) {\n                        height = currentHeight;\n                    }\n                    x += currentWidth + offsetX;\n                }\n                return {\n                    nodes: resultNodeSet,\n                    links: resultLinkSet\n                };\n            },\n            moveToOffset: function (component, p) {\n                var i, j, bounds = component.bounds, deltax = p.x - bounds.x, deltay = p.y - bounds.y;\n                for (i = 0; i < component.nodes.length; i++) {\n                    var node = component.nodes[i];\n                    var nodeBounds = node.bounds();\n                    if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                        nodeBounds = new Rect(0, 0, 0, 0);\n                    }\n                    nodeBounds.x += deltax;\n                    nodeBounds.y += deltay;\n                    node.bounds(nodeBounds);\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    var link = component.links[i];\n                    if (link.points) {\n                        var newpoints = [];\n                        var points = link.points;\n                        for (j = 0; j < points.length; j++) {\n                            var pt = points[j];\n                            pt.x += deltax;\n                            pt.y += deltay;\n                            newpoints.push(pt);\n                        }\n                        link.points = newpoints;\n                    }\n                }\n                this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n                return new Point(deltax, deltay);\n            },\n            transferOptions: function (options) {\n                this.options = kendo.deepExtend({}, this.defaultOptions);\n                if (Utils.isUndefined(options)) {\n                    return;\n                }\n                this.options = kendo.deepExtend(this.options, options || {});\n            }\n        });\n        var DiagramToHyperTreeAdapter = kendo.Class.extend({\n            init: function (diagram) {\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.finalNodes = [];\n                this.finalLinks = [];\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.hyperMap = new Dictionary();\n                this.hyperTree = new Graph();\n                this.finalGraph = null;\n                this.diagram = diagram;\n            },\n            convert: function (options) {\n                if (Utils.isUndefined(this.diagram)) {\n                    throw 'No diagram to convert.';\n                }\n                this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                }, options || {});\n                this.clear();\n                this._renormalizeShapes();\n                this._renormalizeConnections();\n                this.finalNodes = new Dictionary(this.nodes);\n                this.finalLinks = new Dictionary(this.edges);\n                this.finalGraph = new Graph();\n                this.finalNodes.forEach(function (n) {\n                    this.finalGraph.addNode(n);\n                }, this);\n                this.finalLinks.forEach(function (l) {\n                    this.finalGraph.addExistingLink(l);\n                }, this);\n                return this.finalGraph;\n            },\n            mapConnection: function (connection) {\n                return this.edgeMap.get(connection.id);\n            },\n            mapShape: function (shape) {\n                return this.nodeMap.get(shape.id);\n            },\n            getEdge: function (a, b) {\n                return Utils.first(a.links, function (link) {\n                    return link.getComplement(a) === b;\n                });\n            },\n            clear: function () {\n                this.finalGraph = null;\n                this.hyperTree = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new HyperTree() : null;\n                this.hyperMap = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new Dictionary() : null;\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.finalNodes = [];\n                this.finalLinks = [];\n            },\n            listToRoot: function (containerGraph) {\n                var list = [];\n                var s = containerGraph.container;\n                if (!s) {\n                    return list;\n                }\n                list.push(s);\n                while (s.parentContainer) {\n                    s = s.parentContainer;\n                    list.push(s);\n                }\n                list.reverse();\n                return list;\n            },\n            firstNonIgnorableContainer: function (shape) {\n                if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                    return shape;\n                }\n                return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n            },\n            isContainerConnection: function (a, b) {\n                if (a.isContainer && this.isDescendantOf(a, b)) {\n                    return true;\n                }\n                return b.isContainer && this.isDescendantOf(b, a);\n            },\n            isDescendantOf: function (scope, a) {\n                if (!scope.isContainer) {\n                    throw 'Expecting a container.';\n                }\n                if (scope === a) {\n                    return false;\n                }\n                if (contains(scope.children, a)) {\n                    return true;\n                }\n                var containers = [];\n                for (var i = 0, len = scope.children.length; i < len; i++) {\n                    var c = scope.children[i];\n                    if (c.isContainer && this.isDescendantOf(c, a)) {\n                        containers.push(c);\n                    }\n                }\n                return containers.length > 0;\n            },\n            isIgnorableItem: function (shape) {\n                if (this.options.ignoreInvisible) {\n                    if (shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    if (!shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    return true;\n                } else {\n                    return shape.isCollapsed && !this._isTop(shape);\n                }\n            },\n            isShapeMapped: function (shape) {\n                return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n            },\n            leastCommonAncestor: function (a, b) {\n                if (!a) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!b) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!this.hyperTree) {\n                    throw 'No hypertree available.';\n                }\n                var al = this.listToRoot(a);\n                var bl = this.listToRoot(b);\n                var found = null;\n                if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                    return this.hyperTree.root.data;\n                }\n                var xa = al[0];\n                var xb = bl[0];\n                var i = 0;\n                while (xa === xb) {\n                    found = al[i];\n                    i++;\n                    if (i >= al.length || i >= bl.length) {\n                        break;\n                    }\n                    xa = al[i];\n                    xb = bl[i];\n                }\n                if (!found) {\n                    return this.hyperTree.root.data;\n                } else {\n                    return grep(this.hyperTree.nodes, function (n) {\n                        return n.data.container === found;\n                    });\n                }\n            },\n            _isTop: function (item) {\n                return !item.parentContainer;\n            },\n            _isVisible: function (shape) {\n                if (!shape.visible()) {\n                    return false;\n                }\n                return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n            },\n            _isCollapsed: function (shape) {\n                if (shape.isContainer && shape.isCollapsed) {\n                    return true;\n                }\n                return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n            },\n            _renormalizeShapes: function () {\n                if (this.options.ignoreContainers) {\n                    for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                        var shape = this.diagram.shapes[i];\n                        if (this.options.ignoreInvisible && !this._isVisible(shape) || shape.isContainer) {\n                            this.ignoredShapes.push(shape);\n                            continue;\n                        }\n                        var node = new Node(shape.id, shape);\n                        node.isVirtual = false;\n                        this.nodeMap.add(shape.id, node);\n                        this.nodes.push(node);\n                    }\n                } else {\n                    throw 'Containers are not supported yet, but stay tuned.';\n                }\n            },\n            _renormalizeConnections: function () {\n                if (this.diagram.connections.length === 0) {\n                    return;\n                }\n                for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                    var conn = this.diagram.connections[i];\n                    if (this.isIgnorableItem(conn)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                    var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n                    if (!source || !sink) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (this.shapeMap.containsKey(source)) {\n                        source = this.shapeMap[source];\n                    }\n                    if (this.shapeMap.containsKey(sink)) {\n                        sink = this.shapeMap[sink];\n                    }\n                    var sourceNode = this.mapShape(source);\n                    var sinkNode = this.mapShape(sink);\n                    if (sourceNode === sinkNode || this.areConnectedAlready(sourceNode, sinkNode)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (sourceNode === null || sinkNode === null) {\n                        throw 'A shape was not mapped to a node.';\n                    }\n                    if (this.options.ignoreContainers) {\n                        if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                            this.ignoredConnections.push(conn);\n                            continue;\n                        }\n                        var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n                        this.edgeMap.add(conn.id, newEdge);\n                        this.edges.push(newEdge);\n                    } else {\n                        throw 'Containers are not supported yet, but stay tuned.';\n                    }\n                }\n            },\n            areConnectedAlready: function (n, m) {\n                return Utils.any(this.edges, function (l) {\n                    return l.source === n && l.target === m || l.source === m && l.target === n;\n                });\n            }\n        });\n        var SpringLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                var initialTemperature = this.options.nodeDistance * 9;\n                this.temperature = initialTemperature;\n                var guessBounds = this._expectedBounds();\n                this.width = guessBounds.width;\n                this.height = guessBounds.height;\n                for (var step = 0; step < this.options.iterations; step++) {\n                    this.refineStage = step >= this.options.iterations * 5 / 6;\n                    this.tick();\n                    this.temperature = this.refineStage ? initialTemperature / 30 : initialTemperature * (1 - step / (2 * this.options.iterations));\n                }\n            },\n            tick: function () {\n                var i;\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    this._repulsion(this.graph.nodes[i]);\n                }\n                for (i = 0; i < this.graph.links.length; i++) {\n                    this._attraction(this.graph.links[i]);\n                }\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    var node = this.graph.nodes[i];\n                    var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                    if (offset === 0) {\n                        return;\n                    }\n                    node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                    node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                    if (this.options.limitToView) {\n                        node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                        node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                    }\n                }\n            },\n            _shake: function (node) {\n                var rho = Math.random() * this.options.nodeDistance / 4;\n                var alpha = Math.random() * 2 * Math.PI;\n                node.x += rho * Math.cos(alpha);\n                node.y -= rho * Math.sin(alpha);\n            },\n            _InverseSquareForce: function (d, n, m) {\n                var force;\n                if (!this.refineStage) {\n                    force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n                } else {\n                    var deltax = n.x - m.x;\n                    var deltay = n.y - m.y;\n                    var wn = n.width / 2;\n                    var hn = n.height / 2;\n                    var wm = m.width / 2;\n                    var hm = m.height / 2;\n                    force = Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2) + Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2);\n                }\n                return force * 4 / 3;\n            },\n            _SquareForce: function (d, n, m) {\n                return 1 / this._InverseSquareForce(d, n, m);\n            },\n            _repulsion: function (n) {\n                n.dx = 0;\n                n.dy = 0;\n                Utils.forEach(this.graph.nodes, function (m) {\n                    if (m === n) {\n                        return;\n                    }\n                    while (n.x === m.x && n.y === m.y) {\n                        this._shake(m);\n                    }\n                    var vx = n.x - m.x;\n                    var vy = n.y - m.y;\n                    var distance = Math.sqrt(vx * vx + vy * vy);\n                    var r = this._SquareForce(distance, n, m) * 2;\n                    n.dx += vx / distance * r;\n                    n.dy += vy / distance * r;\n                }, this);\n            },\n            _attraction: function (link) {\n                var t = link.target;\n                var s = link.source;\n                if (s === t) {\n                    return;\n                }\n                while (s.x === t.x && s.y === t.y) {\n                    this._shake(t);\n                }\n                var vx = s.x - t.x;\n                var vy = s.y - t.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var a = this._InverseSquareForce(distance, s, t) * 5;\n                var dx = vx / distance * a;\n                var dy = vy / distance * a;\n                t.dx += dx;\n                t.dy += dy;\n                s.dx -= dx;\n                s.dy -= dy;\n            },\n            _expectedBounds: function () {\n                var size, N = this.graph.nodes.length, ratio = 1.5, multiplier = 4;\n                if (N === 0) {\n                    return size;\n                }\n                size = Utils.fold(this.graph.nodes, function (s, node) {\n                    var area = node.width * node.height;\n                    if (area > 0) {\n                        s += Math.sqrt(area);\n                        return s;\n                    }\n                    return 0;\n                }, 0, this);\n                var av = size / N;\n                var squareSize = av * Math.ceil(Math.sqrt(N));\n                var width = squareSize * Math.sqrt(ratio);\n                var height = squareSize / Math.sqrt(ratio);\n                return {\n                    width: width * multiplier,\n                    height: height * multiplier\n                };\n            }\n        });\n        var TreeLayoutProcessor = kendo.Class.extend({\n            init: function (options) {\n                this.center = null;\n                this.options = options;\n            },\n            layout: function (treeGraph, root) {\n                this.graph = treeGraph;\n                if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                    return;\n                }\n                if (!contains(this.graph.nodes, root)) {\n                    throw 'The given root is not in the graph.';\n                }\n                this.center = root;\n                this.graph.cacheRelationships();\n                this.layoutSwitch();\n            },\n            layoutLeft: function (left) {\n                this.setChildrenDirection(this.center, 'Left', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    node.TreeDirection = 'Left';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x - this.options.horizontalSeparation;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    var p = new Point(x - node.Size.width, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutRight: function (right) {\n                this.setChildrenDirection(this.center, 'Right', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    node.TreeDirection = 'Right';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutUp: function (up) {\n                this.setChildrenDirection(this.center, 'Up', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y, node, i;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    node.TreeDirection = 'Up';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutDown: function (down) {\n                var node, i;\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.treeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutRadialTree: function () {\n                this.setChildrenDirection(this.center, 'Radial', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.previousRoot = null;\n                var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n                var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n                if (endAngle <= startAngle) {\n                    throw 'Final angle should not be less than the start angle.';\n                }\n                this.maxDepth = 0;\n                this.origin = new Point(this.center.x, this.center.y);\n                this.calculateAngularWidth(this.center, 0);\n                if (this.maxDepth > 0) {\n                    this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n                }\n                this.center.Angle = endAngle - startAngle;\n            },\n            tipOverTree: function (down, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.setChildrenLayout(this.center, 'Underneath', false, startFromLevel);\n                var w = 0, y, node, i;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.TreeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                w -= down[down.length - 1].width;\n                w += down[down.length - 1].associatedShape.bounds().width;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            calculateAngularWidth: function (n, d) {\n                if (d > this.maxDepth) {\n                    this.maxDepth = d;\n                }\n                var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt(w * w + h * h) / d;\n                if (n.children.length > 0) {\n                    for (var i = 0, len = n.children.length; i < len; i++) {\n                        var child = n.children[i];\n                        aw += this.calculateAngularWidth(child, d + 1);\n                    }\n                    aw = Math.max(diameter, aw);\n                } else {\n                    aw = diameter;\n                }\n                n.sectorAngle = aw;\n                return aw;\n            },\n            sortChildren: function (n) {\n                var basevalue = 0, i;\n                if (n.parents.length > 1) {\n                    throw 'Node is not part of a tree.';\n                }\n                var p = n.parents[0];\n                if (p) {\n                    var pl = new Point(p.x, p.y);\n                    var nl = new Point(n.x, n.y);\n                    basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n                }\n                var count = n.children.length;\n                if (count === 0) {\n                    return null;\n                }\n                var angle = [];\n                var idx = [];\n                for (i = 0; i < count; ++i) {\n                    var c = n.children[i];\n                    var l = new Point(c.x, c.y);\n                    idx[i] = i;\n                    angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n                }\n                Utils.bisort(angle, idx);\n                var col = [];\n                var children = n.children;\n                for (i = 0; i < count; ++i) {\n                    col.push(children[idx[i]]);\n                }\n                return col;\n            },\n            normalizeAngle: function (angle) {\n                while (angle > Math.PI * 2) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < 0) {\n                    angle += Math.PI * 2;\n                }\n                return angle;\n            },\n            radialLayout: function (node, radius, startAngle, endAngle) {\n                var deltaTheta = endAngle - startAngle;\n                var deltaThetaHalf = deltaTheta / 2;\n                var parentSector = node.sectorAngle;\n                var fraction = 0;\n                var sorted = this.sortChildren(node);\n                for (var i = 0, len = sorted.length; i < len; i++) {\n                    var childNode = sorted[i];\n                    var cp = childNode;\n                    var childAngleFraction = cp.sectorAngle / parentSector;\n                    if (childNode.children.length > 0) {\n                        this.radialLayout(childNode, radius + this.options.radialSeparation, startAngle + fraction * deltaTheta, startAngle + (fraction + childAngleFraction) * deltaTheta);\n                    }\n                    this.setPolarLocation(childNode, radius, startAngle + fraction * deltaTheta + childAngleFraction * deltaThetaHalf);\n                    cp.angle = childAngleFraction * deltaTheta;\n                    fraction += childAngleFraction;\n                }\n            },\n            setPolarLocation: function (node, radius, angle) {\n                node.x = this.origin.x + radius * Math.cos(angle);\n                node.y = this.origin.y + radius * Math.sin(angle);\n                node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n            },\n            setChildrenDirection: function (node, direction, includeStart) {\n                var rootDirection = node.treeDirection;\n                this.graph.depthFirstTraversal(node, function (n) {\n                    n.treeDirection = direction;\n                });\n                if (!includeStart) {\n                    node.treeDirection = rootDirection;\n                }\n            },\n            setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                var rootLayout = node.childrenLayout;\n                if (startFromLevel > 0) {\n                    this.graph.assignLevels(node);\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    });\n                } else {\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        s.childrenLayout = layout;\n                    });\n                    if (!includeStart) {\n                        node.childrenLayout = rootLayout;\n                    }\n                }\n            },\n            measure: function (node, givenSize) {\n                var w = 0, h = 0, s;\n                var result = new Size(0, 0);\n                if (!node) {\n                    throw '';\n                }\n                var b = node.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (node.parents.length !== 1) {\n                    throw 'Node not in a spanning tree.';\n                }\n                var parent = node.parents[0];\n                if (node.treeDirection === 'Undefined') {\n                    node.treeDirection = parent.treeDirection;\n                }\n                if (Utils.isEmpty(node.children)) {\n                    result = new Size(Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth, Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n                } else if (node.children.length === 1) {\n                    switch (node.treeDirection) {\n                    case 'Radial':\n                        s = this.measure(node.children[0], givenSize);\n                        w = shapeWidth + this.options.radialSeparation * Math.cos(node.AngleToParent) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                            break;\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + this.options.horizontalSeparation + s.width;\n                            h = Math.max(shapeHeight, s.height);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Radial layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            h = shapeHeight + this.options.verticalSeparation + s.height;\n                            w = Math.max(shapeWidth, s.width);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                } else {\n                    var i, childNode;\n                    switch (node.treeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = shapeWidth;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                h += s.height + this.options.verticalSeparation;\n                            }\n                            h -= this.options.verticalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Right layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = 0;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w += s.width + this.options.horizontalSeparation;\n                                h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                            }\n                            w -= this.options.horizontalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                }\n                node.SectorAngle = Math.sqrt(w * w / 4 + h * h / 4);\n                node.Size = result;\n                return result;\n            },\n            arrange: function (n, p) {\n                var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (Utils.isEmpty(n.children)) {\n                    n.x = p.x;\n                    n.y = p.y;\n                    n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n                } else {\n                    var x, y;\n                    var selfLocation;\n                    switch (n.treeDirection) {\n                    case 'Left':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                node = node.children[i];\n                                x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = selfLocation.x - this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x - node.Size.width, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Right':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Up':\n                        selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + (shapeWidth - childrenwidth) / 2;\n                        } else {\n                            x = p.x;\n                        }\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n                    case 'Down':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                childrenwidth = 0;\n                                for (i = 0; i < n.children.length; i++) {\n                                    child = n.children[i];\n                                    childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                }\n                                childrenwidth -= this.options.horizontalSeparation;\n                                x = p.x + (shapeWidth - childrenwidth) / 2;\n                            } else {\n                                x = p.x;\n                            }\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                x += node.Size.width + this.options.horizontalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'None':\n                        break;\n                    default:\n                        throw 'Unsupported TreeDirection';\n                    }\n                }\n            },\n            layoutSwitch: function () {\n                if (!this.center) {\n                    return;\n                }\n                if (Utils.isEmpty(this.center.children)) {\n                    return;\n                }\n                var type = this.options.subtype;\n                if (Utils.isUndefined(type)) {\n                    type = 'Down';\n                }\n                var single, male, female, leftcount;\n                var children = this.center.children;\n                switch (type.toLowerCase()) {\n                case 'radial':\n                case 'radialtree':\n                    this.layoutRadialTree();\n                    break;\n                case 'mindmaphorizontal':\n                case 'mindmap':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n                case 'mindmapvertical':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n                case 'right':\n                    this.layoutRight(this.center.children);\n                    break;\n                case 'left':\n                    this.layoutLeft(this.center.children);\n                    break;\n                case 'up':\n                case 'bottom':\n                    this.layoutUp(this.center.children);\n                    break;\n                case 'down':\n                case 'top':\n                    this.layoutDown(this.center.children);\n                    break;\n                case 'tipover':\n                case 'tipovertree':\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw 'The tip-over level should be a positive integer.';\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n                case 'undefined':\n                case 'none':\n                    break;\n                }\n            }\n        });\n        var TreeLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                this.graph = adapter.convert();\n                var finalNodeSet = this.layoutComponents();\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutComponents: function () {\n                if (this.graph.isEmpty()) {\n                    return;\n                }\n                var components = this.graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                var layout = new TreeLayoutProcessor(this.options);\n                var trees = [];\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    var treeGraph = this.getTree(component);\n                    if (!treeGraph) {\n                        throw 'Failed to find a spanning tree for the component.';\n                    }\n                    var root = treeGraph.root;\n                    var tree = treeGraph.tree;\n                    layout.layout(tree, root);\n                    trees.push(tree);\n                }\n                return this.gridLayoutComponents(trees);\n            },\n            getTree: function (graph) {\n                var root = null;\n                if (this.options.roots && this.options.roots.length > 0) {\n                    for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                        var node = graph.nodes[i];\n                        for (var j = 0; j < this.options.roots.length; j++) {\n                            var givenRootShape = this.options.roots[j];\n                            if (givenRootShape === node.associatedShape) {\n                                root = node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!root) {\n                    root = graph.root();\n                    if (!root) {\n                        throw 'Unable to find a root for the tree.';\n                    }\n                }\n                return this.getTreeForRoot(graph, root);\n            },\n            getTreeForRoot: function (graph, root) {\n                var tree = graph.getSpanningTree(root);\n                if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                    return null;\n                }\n                return {\n                    tree: tree,\n                    root: tree.root\n                };\n            }\n        });\n        var LayeredLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            _initRuntimeProperties: function () {\n                for (var k = 0; k < this.graph.nodes.length; k++) {\n                    var node = this.graph.nodes[k];\n                    node.layer = -1;\n                    node.downstreamLinkCount = 0;\n                    node.upstreamLinkCount = 0;\n                    node.isVirtual = false;\n                    node.uBaryCenter = 0;\n                    node.dBaryCenter = 0;\n                    node.upstreamPriority = 0;\n                    node.downstreamPriority = 0;\n                    node.gridPosition = 0;\n                }\n            },\n            _prepare: function (graph) {\n                var current = [], i, l, link;\n                var layerMap = new Dictionary();\n                var layerCount = 0;\n                var targetLayer, next, target;\n                Utils.forEach(graph.nodes, function (node) {\n                    if (node.incoming.length === 0) {\n                        layerMap.set(node, 0);\n                        current.push(node);\n                    }\n                });\n                while (current.length > 0) {\n                    next = current.shift();\n                    for (i = 0; i < next.outgoing.length; i++) {\n                        link = next.outgoing[i];\n                        target = link.target;\n                        if (layerMap.containsKey(target)) {\n                            targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                        } else {\n                            targetLayer = layerMap.get(next) + 1;\n                        }\n                        layerMap.set(target, targetLayer);\n                        if (targetLayer > layerCount) {\n                            layerCount = targetLayer;\n                        }\n                        if (!contains(current, target)) {\n                            current.push(target);\n                        }\n                    }\n                }\n                var sortedNodes = layerMap.keys();\n                sortedNodes.sort(function (o1, o2) {\n                    var o1layer = layerMap.get(o1);\n                    var o2layer = layerMap.get(o2);\n                    return Utils.sign(o2layer - o1layer);\n                });\n                for (var n = 0; n < sortedNodes.length; ++n) {\n                    var node = sortedNodes[n];\n                    var minLayer = Number.MAX_VALUE;\n                    if (node.outgoing.length === 0) {\n                        continue;\n                    }\n                    for (l = 0; l < node.outgoing.length; ++l) {\n                        link = node.outgoing[l];\n                        minLayer = Math.min(minLayer, layerMap.get(link.target));\n                    }\n                    if (minLayer > 1) {\n                        layerMap.set(node, minLayer - 1);\n                    }\n                }\n                this.layers = [];\n                var layer;\n                for (i = 0; i < layerCount + 1; i++) {\n                    layer = [];\n                    layer.linksTo = {};\n                    this.layers.push(layer);\n                }\n                layerMap.forEach(function (node, layer) {\n                    node.layer = layer;\n                    this.layers[layer].push(node);\n                }, this);\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (i = 0; i < layer.length; i++) {\n                        layer[i].gridPosition = i;\n                    }\n                }\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph given or graph analysis of the diagram failed.';\n                }\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                graph.setItemIndices();\n                var reversedEdges = graph.makeAcyclic();\n                this._initRuntimeProperties();\n                this._prepare(graph, options);\n                this._dummify();\n                this._optimizeCrossings();\n                this._swapPairs();\n                this.arrangeNodes();\n                this._moveThingsAround();\n                this._dedummify();\n                Utils.forEach(reversedEdges, function (e) {\n                    if (e.points) {\n                        e.points.reverse();\n                    }\n                });\n            },\n            setMinDist: function (m, n, minDist) {\n                var l = m.layer;\n                var i = m.layerIndex;\n                this.minDistances[l][i] = minDist;\n            },\n            getMinDist: function (m, n) {\n                var dist = 0, i1 = m.layerIndex, i2 = n.layerIndex, l = m.layer, min = Math.min(i1, i2), max = Math.max(i1, i2);\n                for (var k = min; k < max; ++k) {\n                    dist += this.minDistances[l][k];\n                }\n                return dist;\n            },\n            placeLeftToRight: function (leftClasses) {\n                var leftPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = leftClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!leftPos.containsKey(node)) {\n                            this.placeLeft(node, leftPos, c);\n                        }\n                    }\n                    var d = Number.POSITIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var rightSibling = this.rightSibling(node);\n                        if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                            d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                        }\n                    }\n                    if (d === Number.POSITIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeLeftClass.get(neighbor) < c) {\n                                    D.push(leftPos.get(neighbor) - leftPos.get(node));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        leftPos.set(node, leftPos.get(node) + d);\n                    }\n                }\n                return leftPos;\n            },\n            placeRightToLeft: function (rightClasses) {\n                var rightPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = rightClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!rightPos.containsKey(node)) {\n                            this.placeRight(node, rightPos, c);\n                        }\n                    }\n                    var d = Number.NEGATIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var leftSibling = this.leftSibling(node);\n                        if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                            d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                        }\n                    }\n                    if (d === Number.NEGATIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeRightClass.get(neighbor) < c) {\n                                    D.push(rightPos.get(node) - rightPos.get(neighbor));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        rightPos.set(node, rightPos.get(node) + d);\n                    }\n                }\n                return rightPos;\n            },\n            _getLeftWing: function () {\n                var leftWing = { value: null };\n                var result = this.computeClasses(leftWing, 1);\n                this.nodeLeftClass = leftWing.value;\n                return result;\n            },\n            _getRightWing: function () {\n                var rightWing = { value: null };\n                var result = this.computeClasses(rightWing, -1);\n                this.nodeRightClass = rightWing.value;\n                return result;\n            },\n            computeClasses: function (wingPair, d) {\n                var currentWing = 0, wing = wingPair.value = new Dictionary();\n                for (var l = 0; l < this.layers.length; ++l) {\n                    currentWing = l;\n                    var layer = this.layers[l];\n                    for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                        var node = layer[n];\n                        if (!wing.containsKey(node)) {\n                            wing.set(node, currentWing);\n                            if (node.isVirtual) {\n                                var ndsinl = this._nodesInLink(node);\n                                for (var kk = 0; kk < ndsinl.length; kk++) {\n                                    var vnode = ndsinl[kk];\n                                    wing.set(vnode, currentWing);\n                                }\n                            }\n                        } else {\n                            currentWing = wing.get(node);\n                        }\n                    }\n                }\n                var wings = [];\n                for (var i = 0; i < this.layers.length; i++) {\n                    wings.push(null);\n                }\n                wing.forEach(function (node, classIndex) {\n                    if (wings[classIndex] === null) {\n                        wings[classIndex] = [];\n                    }\n                    wings[classIndex].push(node);\n                });\n                return wings;\n            },\n            _isVerticalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'up' || this.options.subtype.toLowerCase() === 'down' || this.options.subtype.toLowerCase() === 'vertical';\n            },\n            _isHorizontalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'left' || this.options.subtype.toLowerCase() === 'horizontal';\n            },\n            _isIncreasingLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'down';\n            },\n            _moveThingsAround: function () {\n                var i, l, node, layer, n, w;\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    layer.sort(this._gridPositionComparer);\n                }\n                this.minDistances = [];\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    this.minDistances[l] = [];\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        node.layerIndex = n;\n                        this.minDistances[l][n] = this.options.nodeDistance;\n                        if (n < layer.length - 1) {\n                            if (this._isVerticalLayout()) {\n                                this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                            } else {\n                                this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                            }\n                        }\n                    }\n                }\n                this.downNodes = new Dictionary();\n                this.upNodes = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    this.downNodes.set(node, []);\n                    this.upNodes.set(node, []);\n                }, this);\n                Utils.forEach(this.graph.links, function (link) {\n                    var origin = link.source;\n                    var dest = link.target;\n                    var down = null, up = null;\n                    if (origin.layer > dest.layer) {\n                        down = link.source;\n                        up = link.target;\n                    } else {\n                        up = link.source;\n                        down = link.target;\n                    }\n                    this.downNodes.get(up).push(down);\n                    this.upNodes.get(down).push(up);\n                }, this);\n                this.downNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                this.upNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                for (l = 0; l < this.layers.length - 1; ++l) {\n                    layer = this.layers[l];\n                    for (w = 0; w < layer.length - 1; w++) {\n                        var currentNode = layer[w];\n                        if (!currentNode.isVirtual) {\n                            continue;\n                        }\n                        var currDown = this.downNodes.get(currentNode)[0];\n                        if (!currDown.isVirtual) {\n                            continue;\n                        }\n                        for (n = w + 1; n < layer.length; ++n) {\n                            node = layer[n];\n                            if (!node.isVirtual) {\n                                continue;\n                            }\n                            var downNode = this.downNodes.get(node)[0];\n                            if (!downNode.isVirtual) {\n                                continue;\n                            }\n                            if (currDown.gridPosition > downNode.gridPosition) {\n                                var pos = currDown.gridPosition;\n                                currDown.gridPosition = downNode.gridPosition;\n                                downNode.gridPosition = pos;\n                                var i1 = currDown.layerIndex;\n                                var i2 = downNode.layerIndex;\n                                this.layers[l + 1][i1] = downNode;\n                                this.layers[l + 1][i2] = currDown;\n                                currDown.layerIndex = i2;\n                                downNode.layerIndex = i1;\n                            }\n                        }\n                    }\n                }\n                var leftClasses = this._getLeftWing();\n                var rightClasses = this._getRightWing();\n                var leftPos = this.placeLeftToRight(leftClasses);\n                var rightPos = this.placeRightToLeft(rightClasses);\n                var x = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n                });\n                var order = new Dictionary();\n                var placed = new Dictionary();\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    var sequenceStart = -1, sequenceEnd = -1;\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        order.set(node, 0);\n                        placed.set(node, false);\n                        if (node.isVirtual) {\n                            if (sequenceStart === -1) {\n                                sequenceStart = n;\n                            } else if (sequenceStart === n - 1) {\n                                sequenceStart = n;\n                            } else {\n                                sequenceEnd = n;\n                                order.set(layer[sequenceStart], 0);\n                                if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                    placed.set(layer[sequenceStart], true);\n                                } else {\n                                    placed.set(layer[sequenceStart], false);\n                                }\n                                sequenceStart = n;\n                            }\n                        }\n                    }\n                }\n                var directions = [\n                    1,\n                    -1\n                ];\n                Utils.forEach(directions, function (d) {\n                    var start = d === 1 ? 0 : this.layers.length - 1;\n                    for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                        var layer = this.layers[l];\n                        var virtualStartIndex = this._firstVirtualNode(layer);\n                        var virtualStart = null;\n                        var sequence = null;\n                        if (virtualStartIndex !== -1) {\n                            virtualStart = layer[virtualStartIndex];\n                            sequence = [];\n                            for (i = 0; i < virtualStartIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                        } else {\n                            virtualStart = null;\n                            sequence = layer;\n                        }\n                        if (sequence.length > 0) {\n                            this._sequencer(x, null, virtualStart, d, sequence);\n                            for (i = 0; i < sequence.length - 1; ++i) {\n                                this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                            }\n                            if (virtualStart) {\n                                this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                            }\n                        }\n                        while (virtualStart) {\n                            var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                            if (!virtualEnd) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, null, d, sequence);\n                                    for (i = 0; i < sequence.length - 1; ++i) {\n                                        this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                    }\n                                    this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                                }\n                            } else if (order.get(virtualStart) === d) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                var virtualEndIndex = virtualEnd.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                                }\n                                placed.set(virtualStart, true);\n                            }\n                            virtualStart = virtualEnd;\n                        }\n                        this.adjustDirections(l, d, order, placed);\n                    }\n                }, this);\n                var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n                var reachedFinalLayerIndex = function (k, ctx) {\n                    if (ctx._isIncreasingLayout()) {\n                        return k < ctx.layers.length;\n                    } else {\n                        return k >= 0;\n                    }\n                };\n                var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n                function maximumHeight(layer, ctx) {\n                    var height = Number.MIN_VALUE;\n                    for (var n = 0; n < layer.length; ++n) {\n                        var node = layer[n];\n                        if (ctx._isVerticalLayout()) {\n                            height = Math.max(height, node.height);\n                        } else {\n                            height = Math.max(height, node.width);\n                        }\n                    }\n                    return height;\n                }\n                for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                    layer = this.layers[i];\n                    var height = maximumHeight(layer, this);\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (this._isVerticalLayout()) {\n                            node.x = x.get(node);\n                            node.y = offset + height / 2;\n                        } else {\n                            node.x = offset + height / 2;\n                            node.y = x.get(node);\n                        }\n                    }\n                    offset += this.options.layerSeparation + height;\n                }\n            },\n            adjustDirections: function (l, d, order, placed) {\n                if (l + d < 0 || l + d >= this.layers.length) {\n                    return;\n                }\n                var prevBridge = null, prevBridgeTarget = null;\n                var layer = this.layers[l + d];\n                for (var n = 0; n < layer.length; ++n) {\n                    var nextBridge = layer[n];\n                    if (nextBridge.isVirtual) {\n                        var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                        if (nextBridgeTarget.isVirtual) {\n                            if (prevBridge) {\n                                var p = placed.get(prevBridgeTarget);\n                                var clayer = this.layers[l];\n                                var i1 = prevBridgeTarget.layerIndex;\n                                var i2 = nextBridgeTarget.layerIndex;\n                                for (var i = i1 + 1; i < i2; ++i) {\n                                    if (clayer[i].isVirtual) {\n                                        p = p && placed.get(clayer[i]);\n                                    }\n                                }\n                                if (p) {\n                                    order.set(prevBridge, d);\n                                    var j1 = prevBridge.layerIndex;\n                                    var j2 = nextBridge.layerIndex;\n                                    for (var j = j1 + 1; j < j2; ++j) {\n                                        if (layer[j].isVirtual) {\n                                            order.set(layer[j], d);\n                                        }\n                                    }\n                                }\n                            }\n                            prevBridge = nextBridge;\n                            prevBridgeTarget = nextBridgeTarget;\n                        }\n                    }\n                }\n            },\n            getNeighborOnLayer: function (node, l) {\n                var neighbor = this.upNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                neighbor = this.downNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                return null;\n            },\n            _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n                if (sequence.length === 1) {\n                    this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n                }\n                if (sequence.length > 1) {\n                    var r = sequence.length, t = this.intDiv(r, 2);\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                    this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n                }\n            },\n            _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n                var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n                var n = neighbors.length;\n                if (n !== 0) {\n                    if (n % 2 === 1) {\n                        x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                    } else {\n                        x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                    }\n                    if (virtualStart) {\n                        x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                    }\n                    if (virtualEnd) {\n                        x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                    }\n                }\n            },\n            combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n                for (i = 0; i < t; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) >= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            leftHeap.push({\n                                k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]),\n                                v: 2\n                            });\n                        }\n                    }\n                    leftHeap.push({\n                        k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]),\n                        v: c\n                    });\n                }\n                if (virtualStart) {\n                    leftHeap.push({\n                        k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                leftHeap.sort(this._positionDescendingComparer);\n                var rightHeap = [];\n                for (i = t; i < r; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) <= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            rightHeap.push({\n                                k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]),\n                                v: 2\n                            });\n                        }\n                    }\n                    rightHeap.push({\n                        k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]),\n                        v: c\n                    });\n                }\n                if (virtualEnd) {\n                    rightHeap.push({\n                        k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                rightHeap.sort(this._positionAscendingComparer);\n                var leftRes = 0, rightRes = 0;\n                var m = this.getMinDist(sequence[t - 1], sequence[t]);\n                while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                    if (leftRes < rightRes) {\n                        if (leftHeap.length === 0) {\n                            x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                            break;\n                        } else {\n                            pair = leftHeap.shift();\n                            leftRes = leftRes + pair.v;\n                            x.set(sequence[t - 1], pair.k);\n                            x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                        }\n                    } else {\n                        if (rightHeap.length === 0) {\n                            x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                            break;\n                        } else {\n                            pair = rightHeap.shift();\n                            rightRes = rightRes + pair.v;\n                            x.set(sequence[t], pair.k);\n                            x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                        }\n                    }\n                }\n                for (i = t - 2; i >= 0; i--) {\n                    x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n                }\n                for (i = t + 1; i < r; i++) {\n                    x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n                }\n            },\n            placeLeft: function (node, leftPos, leftClass) {\n                var pos = Number.NEGATIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var leftSibling = this.leftSibling(v);\n                    if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                        if (!leftPos.containsKey(leftSibling)) {\n                            this.placeLeft(leftSibling, leftPos, leftClass);\n                        }\n                        pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                    }\n                }, this);\n                if (pos === Number.NEGATIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    leftPos.set(v, pos);\n                });\n            },\n            placeRight: function (node, rightPos, rightClass) {\n                var pos = Number.POSITIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var rightSibling = this.rightSibling(v);\n                    if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                        if (!rightPos.containsKey(rightSibling)) {\n                            this.placeRight(rightSibling, rightPos, rightClass);\n                        }\n                        pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                    }\n                }, this);\n                if (pos === Number.POSITIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    rightPos.set(v, pos);\n                });\n            },\n            leftSibling: function (node) {\n                var layer = this.layers[node.layer], layerIndex = node.layerIndex;\n                return layerIndex === 0 ? null : layer[layerIndex - 1];\n            },\n            rightSibling: function (node) {\n                var layer = this.layers[node.layer];\n                var layerIndex = node.layerIndex;\n                return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n            },\n            _getComposite: function (node) {\n                return node.isVirtual ? this._nodesInLink(node) : [node];\n            },\n            arrangeNodes: function () {\n                var i, l, ni, layer, node;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.upstreamPriority = node.upstreamLinkCount;\n                        node.downstreamPriority = node.downstreamLinkCount;\n                    }\n                }\n                var maxLayoutIterations = 2;\n                for (var it = 0; it < maxLayoutIterations; it++) {\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        this.layoutLayer(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        this.layoutLayer(true, i);\n                    }\n                }\n                var gridPos = Number.MAX_VALUE;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        gridPos = Math.min(gridPos, node.gridPosition);\n                    }\n                }\n                if (gridPos < 0) {\n                    for (l = 0; l < this.layers.length; l++) {\n                        layer = this.layers[l];\n                        for (ni = 0; ni < layer.length; ni++) {\n                            node = layer[ni];\n                            node.gridPosition = node.gridPosition - gridPos;\n                        }\n                    }\n                }\n            },\n            layoutLayer: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var sorted = [];\n                for (var n = 0; n < considered.length; n++) {\n                    sorted.push(considered[n]);\n                }\n                sorted.sort(function (n1, n2) {\n                    var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                    var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n                    if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                        return 0;\n                    }\n                    if (n1Priority < n2Priority) {\n                        return 1;\n                    }\n                    return -1;\n                });\n                Utils.forEach(sorted, function (node) {\n                    var nodeGridPos = node.gridPosition;\n                    var nodeBaryCenter = this.calcBaryCenter(node);\n                    var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                        return;\n                    }\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                        return;\n                    }\n                    if (nodeGridPos < nodeBaryCenter) {\n                        while (nodeGridPos < nodeBaryCenter) {\n                            if (!this.moveRight(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    } else {\n                        while (nodeGridPos > nodeBaryCenter) {\n                            if (!this.moveLeft(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    }\n                }, this);\n                if (iconsidered > 0) {\n                    this.calcDownData(iconsidered - 1);\n                }\n                if (iconsidered < this.layers.length - 1) {\n                    this.calcUpData(iconsidered + 1);\n                }\n            },\n            moveRight: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === layer.length - 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                var rightNode = layer[index + 1];\n                var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n                if (rightNode.gridPosition > node.gridPosition + 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                if (rightNodePriority > priority || Math.abs(rightNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveRight(rightNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                return false;\n            },\n            moveLeft: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === 0) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                var leftNode = layer[index - 1];\n                var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n                if (leftNode.gridPosition < node.gridPosition - 1) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                if (leftNodePriority > priority || Math.abs(leftNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveLeft(leftNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                return false;\n            },\n            mapVirtualNode: function (node, link) {\n                this.nodeToLinkMap.set(node, link);\n                if (!this.linkToNodeMap.containsKey(link)) {\n                    this.linkToNodeMap.set(link, []);\n                }\n                this.linkToNodeMap.get(link).push(node);\n            },\n            _nodesInLink: function (node) {\n                return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n            },\n            _dummify: function () {\n                this.linkToNodeMap = new Dictionary();\n                this.nodeToLinkMap = new Dictionary();\n                var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n                var layers = this.layers;\n                var addLinkBetweenLayers = function (upLayer, downLayer, link) {\n                    layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                    layers[upLayer].linksTo[downLayer].push(link);\n                };\n                for (l = 0; l < links.length; l++) {\n                    var link = links[l];\n                    var o = link.source;\n                    var d = link.target;\n                    var oLayer = o.layer;\n                    var dLayer = d.layer;\n                    var oPos = o.gridPosition;\n                    var dPos = d.gridPosition;\n                    var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n                    var p = o;\n                    if (oLayer - dLayer > 1) {\n                        for (i = oLayer - 1; i > dLayer; i--) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - dLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                        link.changeSource(p);\n                        link.depthOfDumminess = oLayer - dLayer - 1;\n                    } else if (oLayer - dLayer < -1) {\n                        for (i = oLayer + 1; i < dLayer; i++) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - oLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            pos &= pos;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, link);\n                        link.changeSource(p);\n                        link.depthOfDumminess = dLayer - oLayer - 1;\n                    } else {\n                        addLinkBetweenLayers(oLayer, dLayer, link);\n                    }\n                }\n            },\n            _dedummify: function () {\n                var dedum = true;\n                while (dedum) {\n                    dedum = false;\n                    for (var l = 0; l < this.graph.links.length; l++) {\n                        var link = this.graph.links[l];\n                        if (!link.depthOfDumminess) {\n                            continue;\n                        }\n                        var points = [];\n                        points.unshift({\n                            x: link.target.x,\n                            y: link.target.y\n                        });\n                        points.unshift({\n                            x: link.source.x,\n                            y: link.source.y\n                        });\n                        var temp = link;\n                        var depthOfDumminess = link.depthOfDumminess;\n                        for (var d = 0; d < depthOfDumminess; d++) {\n                            var node = temp.source;\n                            var prevLink = node.incoming[0];\n                            points.unshift({\n                                x: prevLink.source.x,\n                                y: prevLink.source.y\n                            });\n                            temp = prevLink;\n                        }\n                        link.changeSource(temp.source);\n                        link.depthOfDumminess = 0;\n                        if (points.length > 2) {\n                            points.splice(0, 1);\n                            points.splice(points.length - 1);\n                            link.points = points;\n                        } else {\n                            link.points = [];\n                        }\n                        dedum = true;\n                        break;\n                    }\n                }\n            },\n            _optimizeCrossings: function () {\n                var moves = -1, i;\n                var maxIterations = 3;\n                var iter = 0;\n                while (moves !== 0) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    moves = 0;\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        moves += this.optimizeLayerCrossings(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        moves += this.optimizeLayerCrossings(true, i);\n                    }\n                }\n            },\n            calcUpData: function (layer) {\n                if (layer === 0) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var upLayer = new Set();\n                var temp = this.layers[layer - 1];\n                for (i = 0; i < temp.length; i++) {\n                    upLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (upLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (upLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.uBaryCenter = sum / total;\n                        node.upstreamLinkCount = total;\n                    } else {\n                        node.uBaryCenter = i;\n                        node.upstreamLinkCount = 0;\n                    }\n                }\n            },\n            calcDownData: function (layer) {\n                if (layer === this.layers.length - 1) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var downLayer = new Set();\n                var temp = this.layers[layer + 1];\n                for (i = 0; i < temp.length; i++) {\n                    downLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (downLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (downLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.dBaryCenter = sum / total;\n                        node.downstreamLinkCount = total;\n                    } else {\n                        node.dBaryCenter = i;\n                        node.downstreamLinkCount = 0;\n                    }\n                }\n            },\n            optimizeLayerCrossings: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var presorted = considered.slice(0);\n                if (down) {\n                    this.calcUpData(iconsidered);\n                } else {\n                    this.calcDownData(iconsidered);\n                }\n                var that = this;\n                considered.sort(function (n1, n2) {\n                    var n1BaryCenter = that.calcBaryCenter(n1), n2BaryCenter = that.calcBaryCenter(n2);\n                    if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                        if (n1.degree() === n2.degree()) {\n                            return that.compareByIndex(n1, n2);\n                        } else if (n1.degree() < n2.degree()) {\n                            return 1;\n                        }\n                        return -1;\n                    }\n                    var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                    if (compareValue > 0) {\n                        return -1;\n                    } else if (compareValue < 0) {\n                        return 1;\n                    }\n                    return that.compareByIndex(n1, n2);\n                });\n                var i, moves = 0;\n                for (i = 0; i < considered.length; i++) {\n                    if (considered[i] !== presorted[i]) {\n                        moves++;\n                    }\n                }\n                if (moves > 0) {\n                    var inode = 0;\n                    for (i = 0; i < considered.length; i++) {\n                        var node = considered[i];\n                        node.gridPosition = inode++;\n                    }\n                }\n                return moves;\n            },\n            _swapPairs: function () {\n                var maxIterations = this.options.layeredIterations;\n                var iter = 0;\n                while (true) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    var downwards = iter % 4 <= 1;\n                    var secondPass = iter % 4 === 1;\n                    for (var l = downwards ? 0 : this.layers.length - 1; downwards ? l <= this.layers.length - 1 : l >= 0; l += downwards ? 1 : -1) {\n                        var layer = this.layers[l];\n                        var hasSwapped = false;\n                        var calcCrossings = true;\n                        var memCrossings = 0;\n                        for (var n = 0; n < layer.length - 1; n++) {\n                            var up = 0;\n                            var down = 0;\n                            var crossBefore = 0;\n                            if (calcCrossings) {\n                                if (l !== 0) {\n                                    up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                                }\n                                if (l !== this.layers.length - 1) {\n                                    down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                                }\n                                if (downwards) {\n                                    up *= 2;\n                                } else {\n                                    down *= 2;\n                                }\n                                crossBefore = up + down;\n                            } else {\n                                crossBefore = memCrossings;\n                            }\n                            if (crossBefore === 0) {\n                                continue;\n                            }\n                            var node1 = layer[n];\n                            var node2 = layer[n + 1];\n                            var node1GridPos = node1.gridPosition;\n                            var node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n                            up = 0;\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            down = 0;\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            } else {\n                                down *= 2;\n                            }\n                            var crossAfter = up + down;\n                            var revert = false;\n                            if (secondPass) {\n                                revert = crossAfter >= crossBefore;\n                            } else {\n                                revert = crossAfter > crossBefore;\n                            }\n                            if (revert) {\n                                node1 = layer[n];\n                                node2 = layer[n + 1];\n                                node1GridPos = node1.gridPosition;\n                                node2GridPos = node2.gridPosition;\n                                layer[n] = node2;\n                                layer[n + 1] = node1;\n                                node1.gridPosition = node2GridPos;\n                                node2.gridPosition = node1GridPos;\n                                memCrossings = crossBefore;\n                                calcCrossings = false;\n                            } else {\n                                hasSwapped = true;\n                                calcCrossings = true;\n                            }\n                        }\n                        if (hasSwapped) {\n                            if (l !== this.layers.length - 1) {\n                                this.calcUpData(l + 1);\n                            }\n                            if (l !== 0) {\n                                this.calcDownData(l - 1);\n                            }\n                        }\n                    }\n                }\n            },\n            countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n                var links = this.layers[ulayer].linksTo[dlayer];\n                var link1, link2, n11, n12, n21, n22, l1, l2;\n                var crossings = 0;\n                var length = links.length;\n                for (l1 = 0; l1 < length; l1++) {\n                    link1 = links[l1];\n                    for (l2 = l1 + 1; l2 < length; l2++) {\n                        link2 = links[l2];\n                        if (link1.target.layer === dlayer) {\n                            n11 = link1.source;\n                            n12 = link1.target;\n                        } else {\n                            n11 = link1.target;\n                            n12 = link1.source;\n                        }\n                        if (link2.target.layer === dlayer) {\n                            n21 = link2.source;\n                            n22 = link2.target;\n                        } else {\n                            n21 = link2.target;\n                            n22 = link2.source;\n                        }\n                        var n11gp = n11.gridPosition;\n                        var n12gp = n12.gridPosition;\n                        var n21gp = n21.gridPosition;\n                        var n22gp = n22.gridPosition;\n                        if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                            crossings++;\n                        }\n                    }\n                }\n                return crossings;\n            },\n            calcBaryCenter: function (node) {\n                var upstreamLinkCount = node.upstreamLinkCount;\n                var downstreamLinkCount = node.downstreamLinkCount;\n                var uBaryCenter = node.uBaryCenter;\n                var dBaryCenter = node.dBaryCenter;\n                if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                    return (uBaryCenter + dBaryCenter) / 2;\n                }\n                if (upstreamLinkCount > 0) {\n                    return uBaryCenter;\n                }\n                if (downstreamLinkCount > 0) {\n                    return dBaryCenter;\n                }\n                return 0;\n            },\n            _gridPositionComparer: function (x, y) {\n                if (x.gridPosition < y.gridPosition) {\n                    return -1;\n                }\n                if (x.gridPosition > y.gridPosition) {\n                    return 1;\n                }\n                return 0;\n            },\n            _positionAscendingComparer: function (x, y) {\n                return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n            },\n            _positionDescendingComparer: function (x, y) {\n                return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n            },\n            _firstVirtualNode: function (layer) {\n                for (var c = 0; c < layer.length; c++) {\n                    if (layer[c].isVirtual) {\n                        return c;\n                    }\n                }\n                return -1;\n            },\n            compareByIndex: function (o1, o2) {\n                var i1 = o1.index;\n                var i2 = o2.index;\n                if (i1 < i2) {\n                    return 1;\n                }\n                if (i1 > i2) {\n                    return -1;\n                }\n                return 0;\n            },\n            intDiv: function (numerator, denominator) {\n                return (numerator - numerator % denominator) / denominator;\n            },\n            nextVirtualNode: function (layer, node) {\n                var nodeIndex = node.layerIndex;\n                for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                    if (layer[i].isVirtual) {\n                        return layer[i];\n                    }\n                }\n                return null;\n            }\n        });\n        var LayoutState = kendo.Class.extend({\n            init: function (diagram, graphOrNodes) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram given';\n                }\n                this.diagram = diagram;\n                this.nodeMap = new Dictionary();\n                this.linkMap = new Dictionary();\n                this.capture(graphOrNodes ? graphOrNodes : diagram);\n            },\n            capture: function (diagramOrGraphOrNodes) {\n                var node, nodes, shape, i, conn, link, links;\n                if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n                    for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                        node = diagramOrGraphOrNodes.nodes[i];\n                        shape = node.associatedShape;\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                    for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                        link = diagramOrGraphOrNodes.links[i];\n                        conn = link.associatedConnection;\n                        this.linkMap.set(conn.visual.id, link.points());\n                    }\n                } else if (diagramOrGraphOrNodes instanceof Array) {\n                    nodes = diagramOrGraphOrNodes;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                } else if (diagramOrGraphOrNodes.hasOwnProperty('links') && diagramOrGraphOrNodes.hasOwnProperty('nodes')) {\n                    nodes = diagramOrGraphOrNodes.nodes;\n                    links = diagramOrGraphOrNodes.links;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                    for (i = 0; i < links.length; i++) {\n                        link = links[i];\n                        conn = link.associatedConnection;\n                        if (conn) {\n                            this.linkMap.set(conn.visual.id, link.points);\n                        }\n                    }\n                } else {\n                    var shapes = this.diagram.shapes;\n                    var connections = this.diagram.connections;\n                    for (i = 0; i < shapes.length; i++) {\n                        shape = shapes[i];\n                        this.nodeMap.set(shape.visual.id, shape.bounds());\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        conn = connections[i];\n                        this.linkMap.set(conn.visual.id, conn.points());\n                    }\n                }\n            }\n        });\n        deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            SpringLayout: SpringLayout,\n            TreeLayout: TreeLayout,\n            GraphAdapter: DiagramToHyperTreeAdapter,\n            LayeredLayout: LayeredLayout,\n            LayoutBase: LayoutBase,\n            LayoutState: LayoutState\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/dom', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.toolbar',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.dropdownlist',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var dataviz = kendo.dataviz, draw = kendo.drawing, geom = kendo.geometry, diagram = dataviz.diagram, Widget = kendo.ui.Widget, Class = kendo.Class, proxy = $.proxy, deepExtend = kendo.deepExtend, extend = $.extend, HierarchicalDataSource = kendo.data.HierarchicalDataSource, Canvas = diagram.Canvas, Group = diagram.Group, Rectangle = diagram.Rectangle, Circle = diagram.Circle, CompositeTransform = diagram.CompositeTransform, Rect = diagram.Rect, Path = diagram.Path, DeleteShapeUnit = diagram.DeleteShapeUnit, DeleteConnectionUnit = diagram.DeleteConnectionUnit, TextBlock = diagram.TextBlock, Image = diagram.Image, Point = diagram.Point, Intersect = diagram.Intersect, ConnectionEditAdorner = diagram.ConnectionEditAdorner, UndoRedoService = diagram.UndoRedoService, ToolService = diagram.ToolService, Selector = diagram.Selector, ResizingAdorner = diagram.ResizingAdorner, ConnectorsAdorner = diagram.ConnectorsAdorner, Cursors = diagram.Cursors, Utils = diagram.Utils, Observable = kendo.Observable, ToBackUnit = diagram.ToBackUnit, ToFrontUnit = diagram.ToFrontUnit, PolylineRouter = diagram.PolylineRouter, CascadingRouter = diagram.CascadingRouter, isUndefined = Utils.isUndefined, isDefined = Utils.isDefined, defined = kendo.util.defined, isArray = $.isArray, isFunction = kendo.isFunction, isString = Utils.isString, isPlainObject = $.isPlainObject, math = Math;\n        var NS = '.kendoDiagram', CASCADING = 'cascading', ITEMBOUNDSCHANGE = 'itemBoundsChange', CHANGE = 'change', CLICK = 'click', DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ERROR = 'error', AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', MAXINT = 9007199254740992, SELECT = 'select', ITEMROTATE = 'itemRotate', PAN = 'pan', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', NONE = 'none', DEFAULT_CANVAS_WIDTH = 600, DEFAULT_CANVAS_HEIGHT = 600, DEFAULT_SHAPE_TYPE = 'rectangle', DEFAULT_SHAPE_WIDTH = 100, DEFAULT_SHAPE_HEIGHT = 100, DEFAULT_SHAPE_MINWIDTH = 20, DEFAULT_SHAPE_MINHEIGHT = 20, DEFAULT_SHAPE_POSITION = 0, DEFAULT_CONNECTION_BACKGROUND = 'Yellow', MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, ABSOLUTE = 'absolute', TRANSFORMED = 'transformed', ROTATED = 'rotated', TRANSPARENT = 'transparent', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y', MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, MOBILE_ZOOM_RATE = 0.05, MOBILE_PAN_DISTANCE = 5, BUTTON_TEMPLATE = '<a class=\"k-button k-button-icontext #=className#\" href=\"\\\\#\"><span class=\"#=iconClass# #=imageClass#\"></span>#=text#</a>', CONNECTION_CONTENT_OFFSET = 5;\n        diagram.DefaultConnectors = [\n            { name: TOP },\n            { name: BOTTOM },\n            { name: LEFT },\n            { name: RIGHT },\n            {\n                name: AUTO,\n                position: function (shape) {\n                    return shape.getPosition('center');\n                }\n            }\n        ];\n        var defaultButtons = {\n            cancel: {\n                text: 'Cancel',\n                imageClass: 'k-cancel',\n                className: 'k-diagram-cancel',\n                iconClass: 'k-icon'\n            },\n            update: {\n                text: 'Update',\n                imageClass: 'k-update',\n                className: 'k-diagram-update',\n                iconClass: 'k-icon'\n            }\n        };\n        diagram.shapeDefaults = function (extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: '',\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: { angle: 0 }\n            };\n            Utils.simpleExtend(defaults, extra);\n            return defaults;\n        };\n        function mwDelta(e) {\n            var origEvent = e.originalEvent, delta = 0;\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n            return delta;\n        }\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n        function closestConnector(point, shape) {\n            var minimumDistance = MAXINT, resCtr, ctrs = shape.connectors;\n            for (var i = 0; i < ctrs.length; i++) {\n                var ctr = ctrs[i];\n                if (!isAutoConnector(ctr)) {\n                    var dist = point.distanceTo(ctr.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = ctr;\n                    }\n                }\n            }\n            return resCtr;\n        }\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: { align: 'center middle' },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n            bounds: function () {\n            },\n            refresh: function () {\n                this.visual.redraw();\n            },\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n            toString: function () {\n                return this.options.id;\n            },\n            serialize: function () {\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n                return this.options.content.text;\n            },\n            _createContentVisual: function (options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n            _updateContentVisual: function (options) {\n                this._contentVisual.redraw(options);\n            },\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {}, elementTemplate = kendo.template(that.options.content.template, { paramName: 'dataItem' });\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n            toJSON: function () {\n                return { id: this.options.id };\n            }\n        });\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: { color: DEFAULT_CONNECTION_BACKGROUND },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(':'), id = tempStr[0], name = tempStr[1] || AUTO;\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n                that._createConnectors();\n            },\n            options: diagram.shapeDefaults(),\n            _setOptionsFromModel: function (model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n                this.redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n            updateOptionsFromModel: function (model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\n                                'x',\n                                'y',\n                                'width',\n                                'height'\n                            ])) {\n                            if (this.options.visual) {\n                                this.redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this.redrawVisual();\n                            }\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n            redrawVisual: function () {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n            updateModel: function (syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set('x', bounds.x);\n                        }\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set('y', bounds.y);\n                        }\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set('width', bounds.width);\n                        }\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set('height', bounds.height);\n                        }\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n            updateBounds: function () {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n            content: function (content) {\n                var result = this._content(content);\n                this._alignContent();\n                return result;\n            },\n            _alignContent: function () {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n            _createConnectors: function () {\n                var options = this.options, length = options.connectors.length, connectorDefaults = options.connectorDefaults, connector, i;\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(this, deepExtend({}, connectorDefaults, options.connectors[i]));\n                    this.connectors.push(connector);\n                }\n            },\n            bounds: function (value) {\n                var bounds;\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                        case TRANSFORMED:\n                            bounds = this._transformedBounds();\n                            break;\n                        case ABSOLUTE:\n                            bounds = this._transformedBounds();\n                            var pan = this.diagram._pan;\n                            bounds.x += pan.x;\n                            bounds.y += pan.y;\n                            break;\n                        case ROTATED:\n                            bounds = this._rotatedBounds();\n                            break;\n                        default:\n                            bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n                return bounds;\n            },\n            _setBounds: function (rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n                this._bounds = new Rect(x, y, width, height);\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                json.options.id = diagram.randomId();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Shape(json.options);\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            rotate: function (angle, center, undoable) {\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n                    var b = this.bounds(), sc = new Point(b.width / 2, b.height / 2), deltaAngle, newPosition;\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n                    this.refreshConnections();\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n                return rotate;\n            },\n            connections: function (type) {\n                var result = [], i, j, con, cons, ctr;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == 'out') {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == 'in') {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n                return result;\n            },\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n            getPosition: function (side) {\n                var b = this.bounds(), fnName = side.charAt(0).toLowerCase() + side.slice(1);\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n                return b.center();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n                    this.shapeVisual.redraw(this._visualOptions(options));\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n                    shapeOptions = deepExtend(shapeOptions, options);\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n            _updateConnectors: function () {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n            _diffNumericOptions: diagram.diffNumericOptions,\n            _visualOptions: function (options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {\n                        item: this,\n                        bounds: this._bounds.clone()\n                    });\n                }\n            },\n            _transformPoint: function (point) {\n                var rotate = this.rotate(), bounds = this.bounds(), tl = bounds.topLeft();\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n                return point;\n            },\n            _transformedBounds: function () {\n                var bounds = this.bounds(), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(tl, br);\n            },\n            _rotate: function () {\n                var rotation = this.options.rotation;\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n                this._rotationOffset = new Point();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint, angle = this.rotate().angle;\n                    if (value.isEmpty && !value.isEmpty()) {\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else {\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle);\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n            toJSON: function () {\n                return { shapeId: this.options.id };\n            },\n            createShapeVisual: function () {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + '').toLocaleLowerCase();\n                var shapeVisual;\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n                if (isFunction(visualTemplate)) {\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == 'rectangle') {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == 'circle') {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == 'text') {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == 'image') {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n            options: {\n                hover: { stroke: {} },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConenctor: AUTO\n            },\n            _setOptionsFromModel: function (model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n            updateOptionsFromModel: function (model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                                from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n                        this.dataItem = model;\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n            updateModel: function (syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField('from', model);\n                                clearField('fromConnector', model);\n                                model.set('fromX', this.options.fromX);\n                                model.set('fromY', this.options.fromY);\n                            } else {\n                                model.set('from', this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set('fromConnector', this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField('fromX', model);\n                                clearField('fromY', model);\n                            }\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField('to', model);\n                                clearField('toConnector', model);\n                                model.set('toX', this.options.toX);\n                                model.set('toY', this.options.toY);\n                            } else {\n                                model.set('to', this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set('toConnector', this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField('toX', model);\n                                clearField('toY', model);\n                            }\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set('type', this.options.type);\n                            }\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n            _setSource: function (source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (source !== undefined) {\n                    this.from = source;\n                }\n                this._removeFromSourceConnector();\n                if (source === null) {\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n            _setFromOptions: function (from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n            _setTarget: function (target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (target !== undefined) {\n                    this.to = target;\n                }\n                this._removeFromTargetConnector();\n                if (target === null) {\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n            _setToOptions: function (to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n            _updateConnectors: function () {\n                this._updateConnector(this.source(), 'source');\n                this._updateConnector(this.target(), 'target');\n            },\n            _updateConnector: function (instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function () {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                        setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n            content: function (content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n            _createContentVisual: function (options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n                return visual;\n            },\n            _updateContentVisual: function (options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n            _alignContent: function () {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n                    if (alignToPath && points.length > 2 && distance > 0 && (startPoint.y === endPoint.y && distance < width || startPoint.x === endPoint.x && distance < height)) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n                    var point;\n                    if (alignToPath) {\n                        var angle = kendo.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || 0 < angle && angle < 90) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n                    this._contentVisual.position(point);\n                }\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n            _initRouter: function () {\n                var type = (this.options.type || '').toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty('x') && definition.hasOwnProperty('y')) {\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw 'A Connection point needs to be a Point or an object with x and y properties.';\n                        }\n                    }\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n            _resolveConnectors: function () {\n                var connection = this, sourcePoint, targetPoint, source = connection.source(), target = connection.target(), autoSourceShape, autoTargetShape;\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        autoSourceShape = source.shape;\n                    } else {\n                        connection._resolvedSourceConnector = source;\n                        sourcePoint = source.position();\n                    }\n                }\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        autoTargetShape = target.shape;\n                    } else {\n                        connection._resolvedTargetConnector = target;\n                        targetPoint = target.position();\n                    }\n                }\n                if (sourcePoint) {\n                    if (autoTargetShape) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, autoTargetShape);\n                    }\n                } else if (autoSourceShape) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, autoSourceShape);\n                    } else if (autoTargetShape) {\n                        this._resolveAutoConnectors(autoSourceShape, autoTargetShape);\n                    }\n                }\n            },\n            _resolveAutoConnectors: function (autoSourceShape, autoTargetShape) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var sourceConnectors = autoSourceShape.connectors;\n                var targetConnectors;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n                        targetConnectors = autoTargetShape.connectors;\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n            _testRoutePoints: function (sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector), start, end, rect;\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y), math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n                    var points = this.options.points;\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n                    if (options && options.content || options.text) {\n                        this.content(options.content);\n                    }\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Connection(this.from, this.to, json.options);\n            },\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(), to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                json.options.points = this.points();\n                return json;\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n                this.path.redraw({ stroke: { color: color } });\n            },\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route();\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n                this.path.redraw({ points: [source].concat(points, [target]) });\n            },\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n            _removeFromSourceConnector: function () {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n            _removeFromTargetConnector: function () {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n            toJSON: function () {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n                that._initTheme();\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._initCanvas();\n                that.mainLayer = new Group({ id: 'main-layer' });\n                that.canvas.append(that.mainLayer);\n                that._shapesQuadTree = new ShapesQuadTree(that);\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({ id: 'adorner-layer' });\n                that.canvas.append(that.adornerLayer);\n                that._createHandlers();\n                that._initialize();\n                that._fetchFreshData();\n                that._createGlobalToolBar();\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n                that.selector = new Selector(that);\n                that._clipboard = [];\n                that.pauseMouseHandlers = false;\n                that._createOptionElements();\n                that.zoom(that.options.zoom);\n                that.canvas.draw();\n            },\n            options: {\n                name: 'Diagram',\n                theme: 'default',\n                layout: '',\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: '',\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: { key: 'ctrl' },\n                selectable: { key: 'none' },\n                tooltip: {\n                    enabled: true,\n                    format: '{0}'\n                },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: { tools: [] },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN,\n                SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                'toolBarClick',\n                'save',\n                'cancel',\n                'edit',\n                'remove',\n                'add',\n                'dataBound',\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n            items: function () {\n                return $();\n            },\n            _createGlobalToolBar: function () {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\n                            'createShape',\n                            'undo',\n                            'redo',\n                            'rotateClockwise',\n                            'rotateAnticlockwise'\n                        ];\n                    }\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n                        this.toolBar.element.css({ textAlign: 'left' });\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n            createShape: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n                    if (!this.trigger('add', { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n            _createShape: function (dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n            createConnection: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n            _createConnection: function (dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n                return connection;\n            },\n            editModel: function (dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n                if (editorType == 'shape') {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == 'connection') {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, {\n                        from: connectionSelectorHandler,\n                        to: connectionSelectorHandler\n                    }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n                this.trigger('edit', this._editArgs());\n            },\n            edit: function (item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? 'shape' : 'connection';\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n            cancelEdit: function () {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n                    this._destroyEditor();\n                }\n            },\n            saveEdit: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n            _update: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n            _cancel: function () {\n                if (this.editor && !this.trigger('cancel', this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n            _getEditDataSource: function () {\n                return this.editor.options.type === 'shape' ? this.dataSource : this.connectionsDataSource;\n            },\n            _editArgs: function () {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n            _destroyEditor: function () {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n            _initElements: function () {\n                this.wrapper = this.element.empty().css('position', 'relative').attr('tabindex', 0).addClass('k-widget k-diagram');\n                this.scrollable = $('<div />').appendTo(this.element);\n            },\n            _initDefaults: function (userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\n                        'drag',\n                        'remove',\n                        'connect'\n                    ]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\n                        'drag',\n                        'remove'\n                    ]);\n                }\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n            _initCanvas: function () {\n                var canvasContainer = $('<div class=\\'k-layer\\'></div>').appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that));\n                if (!kendo.support.touch && !kendo.support.mobileOS) {\n                    that.toolService = new ToolService(that);\n                    this.scroller.wrapper.on('mousemove' + NS, proxy(that._mouseMove, that)).on('mouseup' + NS, proxy(that._mouseUp, that)).on('mousedown' + NS, proxy(that._mouseDown, that)).on('mouseover' + NS, proxy(that._mouseover, that)).on('mouseout' + NS, proxy(that._mouseout, that));\n                    element.on('keydown' + NS, proxy(that._keydown, that));\n                } else {\n                    that._userEvents = new kendo.UserEvents(element, {\n                        multiTouch: true,\n                        tap: proxy(that._tap, that)\n                    });\n                    that._userEvents.bind([\n                        'gesturestart',\n                        'gesturechange',\n                        'gestureend'\n                    ], {\n                        gesturestart: proxy(that._gestureStart, that),\n                        gesturechange: proxy(that._gestureChange, that),\n                        gestureend: proxy(that._gestureEnd, that)\n                    });\n                    that.toolService = new ToolService(that);\n                    if (that.options.pannable !== false) {\n                        that.scroller.enable();\n                    }\n                }\n                this._syncHandler = proxy(that._syncChanges, that);\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n            _tap: function (e) {\n                var toolService = this.toolService;\n                var p = this._caculateMobilePosition(e);\n                toolService._updateHoveredItem(p);\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n                    if (this.options.selectable !== false) {\n                        this._destroyToolBar();\n                        if (item.isSelected) {\n                            item.select(false);\n                        } else {\n                            this.select(item, { addToSelection: true });\n                        }\n                        this._createToolBar();\n                    }\n                    this.trigger('click', {\n                        item: item,\n                        point: p\n                    });\n                }\n            },\n            _caculateMobilePosition: function (e) {\n                return this.documentToModel(Point(e.x.location, e.y.location));\n            },\n            _gestureStart: function (e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n            _gestureChange: function (e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n                e.preventDefault();\n            },\n            _gestureEnd: function () {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n            _resize: function () {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n            _mouseover: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n            _mouseout: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n            _initTheme: function () {\n                var that = this, themes = dataviz.ui.themes || {}, themeName = ((that.options || {}).theme || '').toLowerCase(), themeOptions = (themes[themeName] || {}).diagram;\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, { editable: (themeOptions || {}).editable });\n                }\n            },\n            _createOptionElements: function () {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n                if (shapesLength) {\n                    this._createShapes();\n                }\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n            _createShapes: function () {\n                var that = this, options = that.options, shapes = options.shapes, shape, i;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n            _createConnections: function () {\n                var diagram = this, options = diagram.options, defaults = options.connectionDefaults, connections = options.connections, conn, source, target, i;\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n            _findConnectionTarget: function (options) {\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n                return target;\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n            destroyScroller: function () {\n                var scroller = this.scroller;\n                if (!scroller) {\n                    return;\n                }\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n                return json;\n            },\n            focus: function () {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element, scrollContainer = element[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n                    element.focus();\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                }\n            },\n            load: function (options) {\n                this.clear();\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n            setOptions: function (options) {\n                deepExtend(this.options, options);\n            },\n            clear: function () {\n                var that = this;\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target, deepExtend({}, this.options.connectionDefaults, options));\n                    this.addConnection(connection);\n                }\n                return connection;\n            },\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddConnectionUnit(connection, this), false);\n                }\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n                return connection;\n            },\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n                        return connection;\n                    }\n                } else if (!this.trigger('add', { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n            addShape: function (item, undoable) {\n                var shape, shapeDefaults = this.options.shapeDefaults;\n                if (item instanceof Shape) {\n                    shape = item;\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                } else {\n                    return;\n                }\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n                return shape;\n            },\n            _addShape: function (shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n                    if (!this.trigger('add', { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger('add', { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n            remove: function (items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                    this._removeItem(shapes[i], undoable, connections);\n                }\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n                this._resumeModelRefresh();\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n            _removeShapeDataItem: function (item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n            _removeConnectionDataItem: function (item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n            _triggerRemove: function (items) {\n                var toRemove = [];\n                var item, args, editable;\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger('remove', args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n                    var addToSelection = options.addToSelection, items = [], selected = [], i, element;\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n                    this._internalSelection = true;\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [item];\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n                    this._selectionChanged(selected, []);\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n            selectAll: function () {\n                this.select(this.shapes.concat(this.connections));\n            },\n            selectArea: function (rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n            deselect: function (item) {\n                this._internalSelection = true;\n                var deselected = [], items = [], element, i;\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            bringIntoView: function (item, options) {\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n                options = deepExtend({\n                    animate: false,\n                    align: 'center middle'\n                }, options);\n                if (options.align == 'none') {\n                    options.align = 'center middle';\n                }\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n                original = rect.clone();\n                rect.zoom(this._zoom);\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n                this._zoomMainLayer();\n                current = rect.clone();\n                aligner.align(rect, options.align);\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = 'Left';\n                }\n                var items = this.select(), val, item, i;\n                if (items.length === 0) {\n                    return;\n                }\n                switch (direction.toLowerCase()) {\n                case 'left':\n                case 'top':\n                    val = MAX_VALUE;\n                    break;\n                case 'right':\n                case 'bottom':\n                    val = MIN_VALUE;\n                    break;\n                }\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                            val = math.min(val, item.options.x);\n                            break;\n                        case 'top':\n                            val = math.min(val, item.options.y);\n                            break;\n                        case 'right':\n                            val = math.max(val, item.options.x);\n                            break;\n                        case 'bottom':\n                            val = math.max(val, item.options.y);\n                            break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                        case 'right':\n                            item.position(new Point(val, item.options.y));\n                            break;\n                        case 'top':\n                        case 'bottom':\n                            item.position(new Point(item.options.x, val));\n                            break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    zoom = this._zoom = this._getValidZoom(zoom);\n                    if (!isUndefined(staticPoint)) {\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n                    this._panTransform();\n                    this._updateAdorners();\n                }\n                return this._zoom;\n            },\n            _getPan: function (pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function () {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                }\n            },\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n                if (this.toolBar) {\n                    height -= this.toolBar.element.outerHeight();\n                }\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, 'source', mapping, offset);\n                            this._updateCopiedConnection(copied, item, 'target', mapping, offset);\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n                    this._syncChanges();\n                    this._copyOffset += 1;\n                }\n            },\n            _updateCopiedConnection: function (connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function (item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + 'Point']().x + offset.x, sourceConnection[connectorName + 'Point']().y + offset.y));\n                }\n            },\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp, di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n            _containerOffset: function () {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += this.toolBar.element.outerHeight();\n                }\n                return containerOffset;\n            },\n            documentToView: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function (point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function (point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function (point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function (point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function (point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                } else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix), br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            setConnectionsDataSource: function (dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n            layout: function (options) {\n                this._layouting = true;\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = 'Tree';\n                } else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                case 'tree':\n                    l = new diagram.TreeLayout(this);\n                    break;\n                case 'layered':\n                    l = new diagram.LayeredLayout(this);\n                    break;\n                case 'forcedirected':\n                case 'force':\n                case 'spring':\n                case 'springembedder':\n                    l = new diagram.SpringLayout(this);\n                    break;\n                default:\n                    throw 'Layout algorithm \\'' + type + '\\' is not supported.';\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n            _extendLayoutOptions: function (options) {\n                if (options.layout) {\n                    options.layout = deepExtend(diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, {\n                        selected: selected,\n                        deselected: deselected\n                    });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this, pan = pos || diagram._pan;\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n            _finishPan: function () {\n                this.trigger(PAN, {\n                    total: this._pan,\n                    delta: Number.NaN\n                });\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function (canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0, conPos = toFront ? this.connections.length - 1 : 0, i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n                return result;\n            },\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n                this.mainLayer.remove(item.visual);\n            },\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector, sources = [], targets = [];\n                this.toolService._removeHover();\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n                Utils.remove(this.connections, connection);\n            },\n            _removeDataItems: function (items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n            _removeShapeConnections: function (shape) {\n                var connections = shape.connections();\n                var idx;\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n            _addDataItem: function (dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n            _addDataItemByUid: function (dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n            _addDataItems: function (items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) {\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n            _refreshSource: function (e) {\n                var that = this, node = e.node, action = e.action, items = e.items, options = that.options, idx, dataBound;\n                if (e.field) {\n                    return;\n                }\n                if (action == 'remove') {\n                    this._removeDataItems(e.items, true);\n                } else {\n                    if ((!action || action === 'itemloaded') && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n                    if (!action && !node) {\n                        that.clear();\n                    }\n                    this._addDataItems(items, node);\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n                if (options.layout && (dataBound || action == 'remove' || action == 'add')) {\n                    that.layout(options.layout);\n                }\n                if (dataBound) {\n                    this.trigger('dataBound');\n                    this._bindingRoots = false;\n                }\n            },\n            _mouseDown: function (e) {\n                var p = this._calculatePosition(e);\n                if (e.which == 1 && this.toolService.start(p, this._meta(e))) {\n                    this._destroyToolBar();\n                    e.preventDefault();\n                }\n            },\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n            _mouseUp: function (e) {\n                var p = this._calculatePosition(e);\n                if (e.which == 1 && this.toolService.end(p, this._meta(e))) {\n                    this._createToolBar();\n                    e.preventDefault();\n                }\n            },\n            _createToolBar: function () {\n                var diagram = this.toolService.diagram;\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\n                                    'edit',\n                                    'rotateClockwise',\n                                    'rotateAnticlockwise'\n                                ];\n                            } else if (element instanceof Connection) {\n                                tools = ['edit'];\n                            }\n                            if (editable && editable.remove !== false) {\n                                tools.push('delete');\n                            }\n                        }\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true\n                            });\n                            var popupWidth = this.singleToolBar._popup.element.outerWidth();\n                            var popupHeight = this.singleToolBar._popup.element.outerHeight();\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = Point(shapeBounds.x, shapeBounds.y).minus(Point((popupWidth - shapeBounds.width) / 2, popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n                                point = Point(connectionBounds.x, connectionBounds.y).minus(Point((popupWidth - connectionBounds.width - 20) / 2, popupHeight + padding));\n                            }\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n            _toolBarClick: function (e) {\n                this.trigger('toolBarClick', e);\n                this._destroyToolBar();\n            },\n            _mouseMove: function (e) {\n                if (this.pauseMouseHandlers) {\n                    return;\n                }\n                var p = this._calculatePosition(e);\n                if ((e.which === 0 || e.which == 1) && this.toolService.move(p, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _wheel: function (e) {\n                var delta = mwDelta(e), p = this._calculatePosition(e), meta = deepExtend(this._meta(e), { delta: delta });\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n            _meta: function (e) {\n                return {\n                    ctrlKey: e.ctrlKey,\n                    metaKey: e.metaKey,\n                    altKey: e.altKey,\n                    shiftKey: e.shiftKey\n                };\n            },\n            _calculatePosition: function (e) {\n                var pointEvent = e.pageX === undefined ? e.originalEvent : e, point = new Point(pointEvent.pageX, pointEvent.pageY), offset = this.documentToModel(point);\n                return offset;\n            },\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n            _dataSource: function () {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource.unbind('change', this._shapesRefreshHandler).unbind('requestStart', this._shapesRequestStartHandler).unbind('error', this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n                    this.dataSource = kendo.data.DataSource.create(ds).bind('change', this._shapesRefreshHandler).bind('requestStart', this._shapesRequestStartHandler).bind('error', this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n            _connectionDataSource: function () {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource.unbind('change', this._connectionsRefreshHandler).unbind('requestStart', this._connectionsRequestStartHandler).unbind('error', this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds).bind('change', this._connectionsRefreshHandler).bind('requestStart', this._connectionsRequestStartHandler).bind('error', this._connectionsErrorHandler);\n                }\n            },\n            _shapesRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingShapes = true;\n                }\n            },\n            _connectionsRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingConnections = true;\n                }\n            },\n            _error: function () {\n                this._loadingShapes = false;\n            },\n            _connectionsError: function () {\n                this._loadingConnections = false;\n            },\n            _refreshShapes: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === 'add') {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === 'sync') {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n            _shouldRefresh: function () {\n                return !this._suspended;\n            },\n            _suspendModelRefresh: function () {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n            _resumeModelRefresh: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n            refresh: function () {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _rebindShapesAndConnections: function () {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger('dataBound');\n            },\n            refreshConnections: function () {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _redrawConnections: function () {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n            _removeShapes: function (items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n            _syncShapes: function () {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function (inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n            _updateShapes: function (items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n            _addShapes: function (dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n            _refreshConnections: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === 'add') {\n                    this._addConnections(e.items);\n                } else if (e.action === 'sync') {\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n            _removeConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n            _updateConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n            _addConnections: function (connections, undoable) {\n                var length = connections.length;\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n            _addConnectionDataItem: function (dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n            _validateConnector: function (value) {\n                var connector;\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n                return connector;\n            },\n            _treeDataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n                that.dataSource = HierarchicalDataSource.create(dataSource).bind(CHANGE, that._refreshHandler).bind(ERROR, that._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    } else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n            _updateAdorners: function () {\n                var adorners = this._adorners;\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n            _destroyToolBar: function () {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n            _destroyGlobalToolBar: function () {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n            exportDOMVisual: function () {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform().translate(-viewBox.x, -viewBox.y);\n                var viewRect = new geom.Rect([\n                    0,\n                    0\n                ], [\n                    viewBox.width,\n                    viewBox.height\n                ]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n                clipWrap.append(wrap);\n                wrap.children.push(root);\n                return clipWrap;\n            },\n            exportVisual: function () {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({ transform: scale });\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n                return wrap;\n            },\n            _syncChanges: function () {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n            _syncShapeChanges: function () {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n            _syncConnectionChanges: function () {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function () {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            return result;\n        }\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n            return result;\n        }\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function (diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n                this.bind(this.events, options);\n            },\n            events: ['click'],\n            createPopup: function () {\n                this.container = $('<div/>').append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n            appendTools: function () {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n            createToolBar: function () {\n                this.element = $('<div/>');\n                this._toolBar = this.element.kendoToolBar({\n                    click: proxy(this.click, this),\n                    resizable: false\n                }).getKendoToolBar();\n                this.element.css('border', 'none');\n            },\n            createTools: function () {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n            createTool: function (tool) {\n                var toolName = (isPlainObject(tool) ? tool.name : tool) + 'Tool';\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(tool);\n                }\n            },\n            showAt: function (point) {\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n                }\n            },\n            hide: function () {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n            newGroup: function () {\n                return {\n                    type: 'buttonGroup',\n                    buttons: []\n                };\n            },\n            editTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-pencil',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Edit',\n                    attributes: this._setAttributes({ action: 'edit' })\n                });\n            },\n            deleteTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-close',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Delete',\n                    attributes: this._setAttributes({ action: 'delete' })\n                });\n            },\n            rotateAnticlockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotateccw',\n                    showText: 'overflow',\n                    text: 'RotateAnticlockwise',\n                    group: 'rotate',\n                    attributes: this._setAttributes({\n                        action: 'rotateAnticlockwise',\n                        step: options.step\n                    })\n                });\n            },\n            rotateClockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotatecw',\n                    attributes: this._setAttributes({\n                        action: 'rotateClockwise',\n                        step: options.step\n                    }),\n                    showText: 'overflow',\n                    text: 'RotateClockwise',\n                    group: 'rotate'\n                });\n            },\n            createShapeTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-shape',\n                    showText: 'overflow',\n                    text: 'CreateShape',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createShape' })\n                });\n            },\n            createConnectionTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-connector',\n                    showText: 'overflow',\n                    text: 'CreateConnection',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createConnection' })\n                });\n            },\n            undoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-undo',\n                    showText: 'overflow',\n                    text: 'Undo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'undo' })\n                });\n            },\n            redoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-redo',\n                    showText: 'overflow',\n                    text: 'Redo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'redo' })\n                });\n            },\n            _appendGroup: function (name) {\n                var prop = '_' + name + 'Group';\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n            _setAttributes: function (attributes) {\n                var attr = {};\n                if (attributes.action) {\n                    attr[kendo.attr('action')] = attributes.action;\n                }\n                if (attributes.step) {\n                    attr[kendo.attr('step')] = attributes.step;\n                }\n                return attr;\n            },\n            _getAttributes: function (element) {\n                var attr = {};\n                var action = element.attr(kendo.attr('action'));\n                if (action) {\n                    attr.action = action;\n                }\n                var step = element.attr(kendo.attr('step'));\n                if (step) {\n                    attr.step = step;\n                }\n                return attr;\n            },\n            click: function (e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n                if (action) {\n                    this[action](attributes);\n                }\n                this.trigger('click', this.eventData(action));\n            },\n            eventData: function (action) {\n                var element = this.selectedElements(), shapes = [], connections = [];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action\n                };\n            },\n            'delete': function () {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n            edit: function () {\n                this.diagram.edit(this.selectedElements()[0]);\n            },\n            rotateClockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n            rotateAnticlockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n            _rotate: function (angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n            selectedElements: function () {\n                return this.diagram.select();\n            },\n            createShape: function () {\n                this.diagram.createShape();\n            },\n            createConnection: function () {\n                this.diagram.createConnection();\n            },\n            undo: function () {\n                this.diagram.undo();\n            },\n            redo: function () {\n                this.diagram.redo();\n            },\n            destroy: function () {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n            options: { editors: {} },\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n            _isEditable: function (field) {\n                return this.model.editable && this.model.editable(field);\n            },\n            _getFields: function () {\n                var fields = [];\n                var modelFields = this.model.fields;\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n                this.open();\n            },\n            events: [\n                'update',\n                'cancel'\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid);\n                var formContent = '';\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n                formContent += this._renderButtons();\n                this.wrapper.append($('<div class=\"k-edit-form-container\"/>').append(formContent));\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        e.sender.element.focus();\n                        that._cancelClick(e);\n                    }\n                });\n                this._attachButtonEvents();\n            },\n            _renderTemplate: function () {\n                var template = this.options.template;\n                if (typeof template === 'string') {\n                    template = window.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                return template;\n            },\n            _renderFields: function () {\n                var form = '';\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || '') + '</label></div>';\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr('container-for') + '=\"' + field.field + '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n                return form;\n            },\n            _renderButtons: function () {\n                var form = '<div class=\"k-edit-buttons k-state-default\">';\n                form += this._createButton('update');\n                form += this._createButton('cancel');\n                form += '</div>';\n                return form;\n            },\n            _createButton: function (name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n            _attachButtonEvents: function () {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n            },\n            _updateClick: function (e) {\n                e.preventDefault();\n                this.trigger('update');\n            },\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger('cancel');\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? 'text' : model.idField;\n                $('<input name=\\'' + options.field + '\\' />').appendTo(container).kendoDropDownList({\n                    dataValueField: model.idField,\n                    dataTextField: textField,\n                    dataSource: this.dataSource.data().toJSON(),\n                    optionLabel: ' ',\n                    valuePrimitive: true\n                });\n            }\n        }\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function (callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n            activate: function () {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function (items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n            forEach: function (callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n            getByUid: function (uid) {\n                return this.items[uid];\n            },\n            remove: function (item) {\n                delete this.items[item.uid];\n            }\n        };\n        var QuadRoot = Class.extend({\n            init: function () {\n                this.shapes = [];\n            },\n            _add: function (shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n            insert: function (shape, bounds) {\n                this._add(shape, bounds);\n            },\n            remove: function (shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect)) {\n                        return true;\n                    }\n                }\n            },\n            _testRect: function (shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n        var QuadNode = QuadRoot.extend({\n            init: function (rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n            inBounds: function (rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n            overlapsBounds: function (rect) {\n                return this.rect.overlaps(rect);\n            },\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n                return inserted;\n            },\n            _initChildren: function () {\n                var rect = this.rect, children = this.children, shapes = this.shapes, center = rect.center(), halfWidth = rect.width / 2, halfHeight = rect.height / 2, childIdx, shapeIdx;\n                children.push(new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight)));\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect)) {\n                        hit = true;\n                    } else {\n                        for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect)) {\n                                hit = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return hit;\n            }\n        });\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n            init: function (diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n            initRoots: function () {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n            clear: function () {\n                this.initRoots();\n            },\n            _boundsChange: function (e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n            insert: function (shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(new Rect(x * rootSize, y * rootSize, rootSize, rootSize));\n                    }\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n            remove: function (shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n            inRoot: function (sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n            getSectors: function (rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [\n                    [],\n                    []\n                ];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n            hitTestRect: function (rect) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n                if (this.root.hitTestRect(rect)) {\n                    return true;\n                }\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n            return new kendo.data.ObservableObject(model);\n        }\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n        dataviz.ui.plugin(Diagram);\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.diagram', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.userevents',\n        'kendo.mobile.scroller',\n        'kendo.drawing',\n        'dataviz/diagram/utils',\n        'dataviz/diagram/math',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout',\n        'dataviz/diagram/dom'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.diagram',\n        name: 'Diagram',\n        category: 'dataviz',\n        description: 'The Kendo DataViz Diagram ',\n        depends: [\n            'data',\n            'userevents',\n            'mobile.scroller',\n            'draganddrop',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes',\n            'toolbar'\n        ],\n        features: [\n            {\n                id: 'dataviz.diagram-pdf-export',\n                name: 'PDF export',\n                description: 'Export Diagram as PDF',\n                depends: ['pdf']\n            },\n            {\n                id: 'dataviz.diagram-editing',\n                name: 'Editing',\n                description: 'Support for model editing',\n                depends: [\n                    'editable',\n                    'window',\n                    'dropdownlist'\n                ]\n            }\n        ]\n    };\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}