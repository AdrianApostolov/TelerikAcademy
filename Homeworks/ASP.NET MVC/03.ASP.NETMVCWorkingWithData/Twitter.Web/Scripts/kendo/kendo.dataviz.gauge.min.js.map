{"version":3,"sources":["kendo.dataviz.gauge.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals",1,10,100,2,20,200,3,30,300,4,40,400,5,50,500,6,60,600,7,70,700,8,80,800,9,90,900,1000,"values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","Math","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","measureText","style","measureBox","TextMetrics","current","measure","doc","document","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","baselineMarker","styleKey","cacheKey","cachedResult","width","height","baseline","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","e","geometryChange","suspend","resume","_observerField","field","mixins","_buildLabel","label","labelBox","textBox","children","border","background","elements","Group","wrapper","Path","fromRect","Rect","x1","y1","stroke","Text","Point","font","fill","styleGeometry","_pad","bbox","clone","padding","styleBox","dashType","lineJoin","lineCap","getRange","range","from","MIN_VALUE","to","origin","getOrigin","getSize","spacing","getSpacing","setOrigin","left","y","top","setSize","right","bottom","_unpad","ArrowLinearPointerAnimation","BarLinearPointerAnimation","Widget","ui","autoMajorUnit","ChartElement","NumericAxis","Axis","Box2D","interpolateValue","geo","geometry","draw","ANGULAR_SPEED","LINEAR_SPEED","ARROW","ARROW_POINTER","BAR_POINTER","BLACK","CAP_SIZE","COORD_PRECISION","DEFAULT_HEIGHT","DEFAULT_LINE_WIDTH","DEFAULT_WIDTH","DEFAULT_MIN_WIDTH","DEFAULT_MIN_HEIGHT","DEFAULT_MARGIN","DEGREE","GEO_ARC_ADJUST_ANGLE","INSIDE","LINEAR","NEEDLE","OUTSIDE","RADIAL_POINTER","X","Y","Pointer","scale","pointer","scaleOptions","fn","call","newValue","that","_oldValue","repaint","RadialPointer","shape","cap","arrow","animation","type","duration","setRadius","radius","clear","render","parent","center","setAngle","angle","transform","rotate","oldAngle","slotAngle","newAngle","transitions","RadialPointerAnimation","play","arc","startAngle","reverse","_renderNeedle","_renderCap","_renderArrow","reflow","getRadiusX","capSize","fromPoints","minorTickSize","minorTicks","needleColor","needlePath","moveTo","lineTo","close","capColor","circle","Circle","RadialScale","majorUnit","minorUnit","majorTicks","align","visible","endAngle","labels","position","renderArc","labelElements","renderLabels","ticks","renderTicks","ranges","renderRanges","repositionRanges","halfWidth","halfHeight","labelAngle","lp","cx","cy","isInside","lbl","labelPos","prevLabelPos","labelTransform","majorTickSize","tickAngles","count","labelsOptions","rangeDistance","rangeSize","labelsGroup","setRadiusX","setRadiusY","pointAt","cos","sin","translate","union","rangeRadius","newRadius","getRangeRadius","_geometry","segment","rangeGeom","segments","rangeSegments","segmentsCount","Arc","radiusX","radiusY","opacity","rangeSegment","j","gauge","defaultColor","rangePlaceholderColor","drawTicks","unit","tickOptions","tickStart","tickEnd","labelsPosition","allTicks","tickArc","majorTickAngles","_tickDifference","minorTickAngles","normalizeTickAngles","angles","skip","ring","stepValue","tickCount","step","positions","repositionTicks","minor","newPoint","xDiff","yDiff","diff","anchor","Transformation","Gauge","userOptions","themeOptions","themeName","theme","themes","destroy","empty","_originalOptions","isArray","addClass","surface","_createSurface","redraw","plotArea","renderAs","gaugeArea","pointers","_setValueOptions","_draw","_visuals","exportVisual","allValues","concat","_resize","t","_getSize","_createGaugeArea","css","_createModel","_gaugeAreaMargin","areaGeometry","margin","wrap","appendTo","Surface","RadialGauge","radialGauge","notify","_initialPlotArea","fitScale","alignScale","_buildVisual","visuals","minDiff","midDiff","maxDiff","mid","oldDiff","plotAreaBox","abs","getDiff","staleFlag","getPlotBox","plotBbox","plotBox","plotBoxCenter","boxCenter","paddingX","paddingY","LinearGauge","linearGauge","vertical","bboxX","bboxY","bbox2D","_getBox","_alignElements","_shrinkElements","scaleElements","currentOptions","LinearScale","ArrowLinearPointer","BarLinearPointer","y2","x2","scaleBox","pointerBox","mirror","line","_alignLines","scaleLine","renderLine","scaleTicks","slot","slotX","slotY","getSlot","lineBox","linePath","tickPositions","skipUnit","tickLineOptions","tickX","tickY","renderAxisTick","getMajorTickPositions","getMinorTickPositions","start","end","tickPath","LinearPointer","track","pointerRangeBox","trackBox","trackSize","pointerHalfSize","space","pad","getElementOptions","_margin","pointerShape","halfSize","sign","setup","elementOptions","p2","p3","p4","dir","minSlot","axis","sizeAxis","p1","pointerPath","oldShape","oldPoints","newPoints","group","Animation","easing","anim","AnimationFactory","register","fromScale","toScale","distanceTo","translateX","translateY","speed","_set","setter","toUpperCase","points","plugin","ExportMixin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,aAAc,cAAeD,IACtC,WA8UE,MA7UC,YAGG,QAASE,GAAQC,GACb,aAAcA,KAAUC,EAE5B,QAASC,GAAMF,EAAOG,GAClB,GAAIC,GAAQC,EAAIF,EAChB,OAAOG,GAAKJ,MAAMF,EAAQI,GAASA,EAEvC,QAASC,GAAIE,GACT,MAAIA,GACOD,EAAKD,IAAI,GAAIE,GAEb,EAGf,QAASC,GAAWR,EAAOS,EAAKC,GAC5B,MAAOJ,GAAKI,IAAIJ,EAAKG,IAAIT,EAAOU,GAAMD,GAE1C,QAASE,GAAIC,GACT,MAAOA,GAAUC,EAErB,QAASC,GAAIC,GACT,MAAOA,GAAUF,EAErB,QAASG,GAASC,GACd,MAAsB,gBAARA,KAAqBC,MAAMD,GAE7C,QAASE,GAAenB,EAAOoB,GAC3B,MAAOrB,GAAQC,GAASA,EAAQoB,EAEpC,QAASC,GAAIrB,GACT,MAAOA,GAAQA,EAEnB,QAASsB,GAAUC,GAAnB,GAEaC,GADLC,IACJ,KAASD,IAAOD,GACZE,EAAMC,KAAKF,EAAMD,EAAOC,GAE5B,OAAOC,GAAME,OAAOC,KAAK,IAE7B,QAASC,GAAQC,GAAjB,GAEaC,GADLC,EAAO,UACX,KAASD,EAAI,EAAOD,EAAIG,OAARF,IAAkBA,EAC9BC,IAASA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IAAMA,GAAQ,IACzEA,GAAQF,EAAII,WAAWH,EAE3B,OAAOC,KAAS,EAEpB,QAASG,GAAWZ,GAChB,MAAOM,GAAQP,EAAUC,IAQ7B,QAASa,GAAYC,GACjB,GAAyBN,GAArBE,EAASI,EAAIJ,OAAWxB,EAAM6B,EAAS5B,EAAM6B,CACjD,KAAKR,EAAI,EAAOE,EAAJF,EAAYA,IACpBrB,EAAMJ,EAAKI,IAAIA,EAAK2B,EAAIN,IACxBtB,EAAMH,EAAKG,IAAIA,EAAK4B,EAAIN,GAE5B,QACItB,IAAKA,EACLC,IAAKA,GAGb,QAAS8B,GAASH,GACd,MAAOD,GAAYC,GAAK5B,IAE5B,QAASgC,GAASJ,GACd,MAAOD,GAAYC,GAAK3B,IAE5B,QAASgC,GAAeL,GACpB,MAAOM,GAAkBN,GAAK5B,IAElC,QAASmC,GAAeP,GACpB,MAAOM,GAAkBN,GAAK3B,IAElC,QAASiC,GAAkBN,GAA3B,GAEaN,GAAOE,EACRY,EAFJpC,EAAM6B,EAAS5B,EAAM6B,CACzB,KAASR,EAAI,EAAGE,EAASI,EAAIJ,OAAYA,EAAJF,EAAYA,IACzCc,EAAIR,EAAIN,GACF,OAANc,GAAcC,SAASD,KACvBpC,EAAMH,EAAKG,IAAIA,EAAKoC,GACpBnC,EAAMJ,EAAKI,IAAIA,EAAKmC,GAG5B,QACIpC,IAAKA,IAAQ6B,EAAUS,OAAYtC,EACnCC,IAAKA,IAAQ6B,EAAUQ,OAAYrC,GAG3C,QAASsC,GAAKC,GACV,MAAIA,GACOA,EAAMA,EAAMhB,OAAS,GADhC,OAIJ,QAASiB,GAAOC,EAAOC,GAEnB,MADAD,GAAMzB,KAAK2B,MAAMF,EAAOC,GACjBD,EAEX,QAASG,GAAeC,GACpB,MAAOC,GAAMC,SAASF,GAClBG,cAAc,EACdC,UAAW,MAGnB,QAASC,GAAWC,EAAM7D,GACtB,MAAOD,GAAQC,IAAoB,OAAVA,EAAiB,IAAM6D,EAAO,KAAQ7D,EAAQ,KAAQ,GAEnF,QAAS8D,GAAcC,GAAvB,GAEahC,GADLiC,EAAS,EACb,KAASjC,EAAI,EAAOgC,EAAM9B,OAAVF,EAAkBA,IAC9BiC,GAAUJ,EAAWG,EAAMhC,GAAG,GAAIgC,EAAMhC,GAAG,GAE/C,OAAOiC,GAEX,QAASC,GAAYF,GAArB,GAEahC,GACD/B,EAFJgE,EAAS,EACb,KAASjC,EAAI,EAAOgC,EAAM9B,OAAVF,EAAkBA,IAC1B/B,EAAQ+D,EAAMhC,GAAG,GACjBhC,EAAQC,KACRgE,GAAUD,EAAMhC,GAAG,GAAK,IAAM/B,EAAQ,IAG9C,OAAe,KAAXgE,EACOA,EADX,OAIJ,QAASE,GAAWC,GAIhB,MAHoB,gBAATA,KACPA,GAAQ,MAELA,EAEX,QAASC,GAAUC,GAAnB,GAGY5C,GACKM,EAHTuC,IACJ,IAAID,EAEA,IADI5C,EAAQ+B,EAAMe,UAAUF,GAAKG,MAAM,KAC9BzC,EAAI,EAAON,EAAMQ,OAAVF,EAAkBA,IAC9BuC,EAAO5C,KAAK,SAAWD,EAAMM,GAGrC,OAAOuC,GAAO1C,KAAK,KAEvB,QAAS6C,GAAcC,GACnB,MAAiB,KAAVA,GAA0B,OAAVA,GAA4B,SAAVA,GAA8B,gBAAVA,IAA4B3E,EAAQ2E,GAErG,QAASC,GAAc9B,GA8DnB,IA9DJ,GACQ+B,IACAC,EAAG,IACHC,GAAI,IACJC,IAAK,IACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,EAAG,MACHC,GAAI,MACJC,IAAK,MACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,EAAG,IACHC,GAAI,IACJC,IAAK,IACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,EAAG,MACHC,GAAI,MACJC,IAAK,MACLC,EAAG,OACHC,GAAI,OACJC,IAAK,OACLC,EAAG,KACHC,GAAI,KACJC,IAAK,KACLC,IAAM,KAENC,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEAC,EAAQ,GACL7D,EAAI,GACC4D,EAAO,GAAX5D,EACA4D,EAAOE,SAEPD,GAAS9B,EAAS6B,EAAO,IACzB5D,GAAK4D,EAAO,GAGpB,OAAOC,GAEX,QAASE,GAAcC,GAAvB,GAEQC,GASA9G,EAAW+G,EACNhF,EACDiF,CADR,KAXAH,EAAIA,EAAEI,cACFH,GACA/E,EAAG,EACHiF,EAAG,EACHE,EAAG,GACHC,EAAG,GACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAEHtH,EAAQ,EAAG+G,EAAO,EACbhF,EAAI,EAAO8E,EAAE5E,OAANF,IAAgBA,EAAG,CAE/B,GADIiF,EAAIF,EAAOD,EAAEU,OAAOxF,KACnBiF,EACD,MAAO,KAEXhH,IAASgH,EACLA,EAAID,IACJ/G,GAAS,EAAI+G,GAEjBA,EAAOC,EAEX,MAAOhH,GAEX,QAASwH,GAAQ3H,GACb,GAAI4H,GAAQC,OAAOC,OAAO,KAC1B,OAAO,YAAA,GAEM5F,GADL6F,EAAK,EACT,KAAS7F,EAAI8F,UAAU5F,SAAUF,GAAK,GAClC6F,GAAM,IAAMC,UAAU9F,EAE1B,OAAI6F,KAAMH,GACCA,EAAMG,GAEV/H,EAAEwD,MAAMyE,KAAMD,YAG7B,QAASE,GAAWC,GAEhB,IADA,GAAsDhI,GAAOiI,EAAzDjE,KAAakE,EAAU,EAAGjG,EAAS+F,EAAO/F,OAC7BA,EAAViG,GACHlI,EAAQgI,EAAO9F,WAAWgG,KACtBlI,GAAS,OAAkB,OAATA,GAA4BiC,EAAViG,GACpCD,EAAQD,EAAO9F,WAAWgG,KACH,QAAV,MAARD,GACDjE,EAAOtC,OAAe,KAAR1B,IAAiB,KAAe,KAARiI,GAAgB,QAEtDjE,EAAOtC,KAAK1B,GACZkI,MAGJlE,EAAOtC,KAAK1B,EAGpB,OAAOgE,GAEX,QAASmE,GAAWlF,GAChB,MAAOA,GAAMmF,IAAI,SAAUpI,GACvB,GAAIgE,GAAS,EAOb,OANIhE,GAAQ,QACRA,GAAS,MACTgE,GAAUqE,OAAOC,aAAatI,IAAU,GAAK,KAAO,OACpDA,EAAQ,MAAgB,KAARA,GAEpBgE,GAAUqE,OAAOC,aAAatI,KAE/B4B,KAAK,IAlSf,GACOtB,GAAOiI,KAAM/E,EAAQgF,OAAOhF,MAAOiF,EAAajF,EAAMiF,WACtD5H,EAAaP,EAAKoI,GAAK,IAAKpG,EAAUqG,OAAOC,UAAWrG,GAAWoG,OAAOC,UAAW3I,EAAY,YAmDjG4I,EAAMC,KAAKD,GACVA,KACDA,EAAM,WACF,OAAO,GAAIC,OAAOC,YA4O1BN,EAAWjF,GACPwF,MACI1G,QAASA,EACTC,QAASA,EACTW,OAAQA,EACRd,YAAaA,EACbI,SAAUA,EACVC,SAAUA,EACV1C,QAASA,EACTe,IAAKA,EACLe,QAASA,EACTM,WAAYA,EACZnB,SAAUA,EACVyD,cAAeA,EACfzB,KAAMA,EACNxC,WAAYA,EACZqI,IAAKA,EACLvH,UAAWA,EACXpB,MAAOA,EACPS,IAAKA,EACLiD,WAAYA,EACZE,cAAeA,EACfM,UAAWA,EACXF,WAAYA,EACZD,YAAaA,EACbX,eAAgBA,EAChBX,kBAAmBA,EACnBD,eAAgBA,EAChBE,eAAgBA,EAChBvB,IAAKA,EACLF,eAAgBA,EAChByF,cAAeA,EACfjC,cAAeA,EACf6C,QAASA,EACTW,WAAYA,EACZJ,WAAYA,KAGpBvE,EAAMyF,QAAQD,KAAOxF,EAAMwF,KAC3BxF,EAAM0F,QAAQF,KAAOxF,EAAMwF,QAExBR,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,qBACH,aACA,aACDD,IACL,YACG,SAAU0J,GA8FP,QAASC,GAAYjG,EAAMkG,EAAOC,GAC9B,MAAOC,GAAYC,QAAQC,QAAQtG,EAAMkG,EAAOC,GA/FvD,GACOI,GAAMC,SAAUvG,EAAQgF,OAAOhF,MAAOwG,EAAQxG,EAAMwG,MAAOhB,EAAOxF,EAAMwF,KAAMjJ,EAAUiJ,EAAKjJ,QAC7FkK,EAAWD,EAAME,QACjBC,KAAM,SAAUhG,GACZ2D,KAAKsC,MAAQjG,EACb2D,KAAKuC,QAAU,EACfvC,KAAKwC,SAETC,IAAK,SAAU/I,EAAKxB,GAChB,GAAIwK,GAAM1C,KAAMM,EAAMoC,EAAIF,KAAMG,GACxBjJ,IAAKA,EACLxB,MAAOA,EAEfoI,GAAI5G,GAAOiJ,EACND,EAAIE,OAGLF,EAAIG,MAAMC,MAAQH,EAClBA,EAAMI,MAAQL,EAAIG,MAClBH,EAAIG,MAAQF,GAJZD,EAAIE,MAAQF,EAAIG,MAAQF,EAMxBD,EAAIH,SAAWG,EAAIJ,OACnBhC,EAAIoC,EAAIE,MAAMlJ,KAAO,KACrBgJ,EAAIE,MAAQF,EAAIE,MAAME,MACtBJ,EAAIE,MAAMG,MAAQ,MAElBL,EAAIH,WAGZS,IAAK,SAAUtJ,GACX,GAAIgJ,GAAM1C,KAAM2C,EAAQD,EAAIF,KAAK9I,EACjC,OAAIiJ,IACIA,IAAUD,EAAIE,OAASD,IAAUD,EAAIG,QACrCH,EAAIE,MAAQD,EAAMG,MAClBJ,EAAIE,MAAMG,MAAQ,MAElBJ,IAAUD,EAAIG,QACVF,EAAMI,QACNJ,EAAMI,MAAMD,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMC,MAAQJ,EAAMI,OAE9BJ,EAAMI,MAAQL,EAAIG,MAClBF,EAAMG,MAAQ,KACdJ,EAAIG,MAAMC,MAAQH,EAClBD,EAAIG,MAAQF,GAETA,EAAMzK,OAfjB,UAmBJ+K,EAAoBxB,EAAE,2RAAuS,GAC7TI,EAAcK,EAAME,QACpBC,KAAM,SAAUa,GACZlD,KAAKmD,OAAS,GAAIhB,GAAS,KAC3BnC,KAAKoD,aAAaF,IAEtBA,SAAWG,mBAAoB,GAC/BtB,QAAS,SAAUtG,EAAMkG,EAAO2B,GAAvB,GAKDjH,GAKAuF,EACA2B,EACK7J,EACDxB,EAZJsL,EAAWtC,EAAK1H,UAAUmI,GAAQ8B,EAAWvC,EAAKnH,QAAQ0B,EAAO+H,GAAWE,EAAe1D,KAAKmD,OAAOH,IAAIS,EAC/G,IAAIC,EACA,MAAOA,EAEPrH,IACAsH,MAAO,EACPC,OAAQ,EACRC,SAAU,GAEVjC,EAAa0B,EAAMA,EAAML,EACzBM,EAAiBvD,KAAK8D,kBAAkBC,WAAU,EACtD,KAASrK,IAAOiI,GACRzJ,EAAQyJ,EAAMjI,GACdzB,EAAQC,KACR0J,EAAWD,MAAMjI,GAAOxB,EAehC,OAZAuJ,GAAEG,GAAYnG,KAAKA,GACnBmG,EAAWoC,YAAYT,GACvBvB,EAAIiC,KAAKD,YAAYpC,IAChBnG,EAAO,IAAItB,SACZkC,EAAKsH,MAAQ/B,EAAWsC,YAAclE,KAAKkD,QAAQG,mBACnDhH,EAAKuH,OAAShC,EAAWuC,aACzB9H,EAAKwH,SAAWN,EAAea,UAAYpE,KAAKkD,QAAQG,oBAExDhH,EAAKsH,MAAQ,GAAKtH,EAAKuH,OAAS,GAChC5D,KAAKmD,OAAOV,IAAIgB,EAAUpH,GAE9BuF,EAAWyC,WAAWC,YAAY1C,GAC3BvF,GAEXyH,gBAAiB,WACb,MAAOrC,GAAE,gGAA+GzB,KAAKkD,QAAQG,mBAAqB,eAAiBrD,KAAKkD,QAAQG,mBAAqB,4BAAkC,KAGvPxB,GAAYC,QAAU,GAAID,GAI1BnG,EAAMwF,KAAKW,YAAcA,EACzBnG,EAAMwF,KAAKiB,SAAWA,EACtBzG,EAAMwF,KAAKQ,YAAcA,GAC3BhB,OAAOhF,MAAM6I,SACC,kBAAVvM,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,eAAgB,aAAcD,IACvC,WAgDE,MA/CC,YAGG,QAASyM,GAAaC,GAAtB,GAEQC,GAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EADpC9I,EAAS,GAETjC,EAAI,CAER,KADAwK,EAAQQ,EAAWR,GACRA,EAAMtK,OAAVF,GACHyK,EAAOD,EAAMrK,WAAWH,KACxB0K,EAAOF,EAAMrK,WAAWH,KACxB2K,EAAOH,EAAMrK,WAAWH,KACxB4K,EAAOH,GAAQ,EACfI,GAAe,EAAPJ,IAAa,EAAIC,GAAQ,EACjCI,GAAe,GAAPJ,IAAc,EAAIC,GAAQ,EAClCI,EAAc,GAAPJ,EACHxL,MAAMuL,GACNI,EAAOC,EAAO,GACP5L,MAAMwL,KACbI,EAAO,IAEX9I,EAASA,EAASgJ,EAAQzF,OAAOoF,GAAQK,EAAQzF,OAAOqF,GAAQI,EAAQzF,OAAOsF,GAAQG,EAAQzF,OAAOuF,EAE1G,OAAO9I,GAEX,QAAS+I,GAAWR,GAApB,GAEaxK,GACDqF,EAFJpD,EAAS,EACb,KAASjC,EAAI,EAAOwK,EAAMtK,OAAVF,EAAkBA,IAC1BqF,EAAImF,EAAMrK,WAAWH,GACjB,IAAJqF,EACApD,GAAUsE,EAAalB,GACZ,KAAJA,GACPpD,GAAUsE,EAAa,IAAMlB,IAAM,GACnCpD,GAAUsE,EAAa,IAAU,GAAJlB,IAClB,MAAJA,IACPpD,GAAUsE,EAAa,IAAMlB,IAAM,IACnCpD,GAAUsE,EAAa,IAAMlB,IAAM,EAAI,IACvCpD,GAAUsE,EAAa,IAAU,GAAJlB,GAGrC,OAAOpD,GAxCd,GACOR,GAAQgF,OAAOhF,MAAOiF,EAAajF,EAAMiF,WAAYH,EAAeD,OAAOC,aAC3E0E,EAAU,mEAwCdvE,GAAWjF,EAAMwF,MACbsD,aAAcA,EACdS,WAAYA,OAGbvE,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,oBAAqB,cAAeD,IAC7C,WA8DE,MA7DC,UAAU0J,GAAV,GACOjJ,GAAOiI,KAAM/E,EAAQgF,OAAOhF,MAAOiF,EAAajF,EAAMiF,WAAYwE,EAAU1D,EAAE0D,QAC9EC,GACAC,UAAW,WAEP,MADArF,MAAKsF,WAAatF,KAAKsF,gBAG3BC,YAAa,SAAUC,GAMnB,MALKxF,MAAKsF,WAGNtF,KAAKsF,WAAW1L,KAAK4L,GAFrBxF,KAAKsF,YAAcE,GAIhBxF,MAEXyF,eAAgB,SAAUD,GAAV,GACRH,GAAYrF,KAAKqF,YACjBK,EAAQP,EAAQK,EAASH,EAI7B,OAHa,IAATK,GACAL,EAAUM,OAAOD,EAAO,GAErB1F,MAEX4F,QAAS,SAAUC,EAAYC,GAAtB,GAEDC,GACAC,EAFAX,EAAYrF,KAAKsF,UAGrB,IAAID,IAAcrF,KAAKiG,WACnB,IAAKD,EAAM,EAASX,EAAUlL,OAAhB6L,EAAwBA,IAClCD,EAAWV,EAAUW,GACjBD,EAASF,IACTE,EAASF,GAAYC,EAIjC,OAAO9F,OAEXkG,cAAe,SAAUC,GACrBnG,KAAK4F,QAAQ,gBAAiBO,IAElCC,eAAgB,SAAUD,GACtBnG,KAAK4F,QAAQ,iBAAkBO,IAEnCE,QAAS,WAEL,MADArG,MAAKiG,YAAcjG,KAAKiG,YAAc,GAAK,EACpCjG,MAEXsG,OAAQ,WAEJ,MADAtG,MAAKiG,WAAazN,EAAKI,KAAKoH,KAAKiG,YAAc,GAAK,EAAG,GAChDjG,MAEXuG,eAAgB,SAAUC,EAAOtO,GACzB8H,KAAKwG,IACLxG,KAAKwG,GAAOf,eAAezF,MAE/BA,KAAKwG,GAAStO,EACdA,EAAMqN,YAAYvF,OAG1BW,GAAWjF,GAAS+K,QAAUrB,eAAgBA,MAChD1E,OAAOhF,MAAM6I,QACR7D,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD,OAEV,SAAUxJ,EAAGC,QACVA,OAAO,uBACH,qBACA,gBACA,wBACDD,IACL,WA09CE,MA/8CC,UAAU0J,EAAGxG,GAi4CV,QAASyL,GAAYC,EAAOzD,GAA5B,GACQ0D,GAAWD,EAAMrD,IACjBuD,EAAUF,EAAMG,SAAS,GAAGxD,IAC5ByD,EAAS7D,EAAQ6D,WACjBC,EAAa9D,EAAQ8D,YAAc,GACnCC,EAAW,GAAIC,GACUC,EACnBC,EAAKC,SAAS,GAAIC,IACxBV,EAASW,GACTX,EAASY,KAETZ,EAASjD,QACTiD,EAAShD,YACP6D,YACFhM,EAAO,GAAIiM,GAAKf,EAAMlL,KAAM,GAAIkM,GAAMd,EAAQU,GAAIV,EAAQW,KAC1DI,KAAM1E,EAAQ0E,KACdC,MAAQjL,MAAOsG,EAAQtG,SAVbkL,EAYEC,EAAKtM,EAAKuM,OAAOC,QAAS/E,EAAQgF,SAZ9CC,EAaOf,EAAKC,SAASS,GACrBL,QACI7K,MAAOmK,EAAOpD,MAAQoD,EAAOnK,MAAQ,GACrC+G,MAAOoD,EAAOpD,MACdyE,SAAUrB,EAAOqB,SACjBC,SAAU,QACVC,QAAS,SAEbT,MAAQjL,MAAOoK,IAKnB,OAHAC,GAAS7L,OAAO+L,GAChBF,EAAS7L,OAAO+M,GAChBlB,EAAS7L,OAAOK,GACTwL,EAEX,QAASsB,GAASC,EAAO7P,EAAKC,GAA9B,GACQ6P,GAAOxQ,EAAQuQ,EAAMC,MAAQD,EAAMC,KAAOC,EAC1CC,EAAK1Q,EAAQuQ,EAAMG,IAAMH,EAAMG,GAAK7H,CAGxC,OAFA0H,GAAMC,KAAOjQ,EAAKI,IAAIJ,EAAKG,IAAIgQ,EAAIF,GAAO9P,GAC1C6P,EAAMG,GAAKnQ,EAAKG,IAAIH,EAAKI,IAAI+P,EAAIF,GAAO7P,GACjC4P,EAEX,QAAST,GAAKC,EAAM9P,GAApB,GACQ0Q,GAASZ,EAAKa,YACdxM,EAAO2L,EAAKc,UACZC,EAAUC,EAAW9Q,EASzB,OARA8P,GAAKiB,WACDL,EAAOxJ,EAAI2J,EAAQG,KACnBN,EAAOO,EAAIJ,EAAQK,MAEvBpB,EAAKqB,SACDhN,EAAKsH,OAASoF,EAAQG,KAAOH,EAAQO,OACrCjN,EAAKuH,QAAUmF,EAAQK,IAAML,EAAQQ,UAElCvB,EAEX,QAASwB,GAAOxB,EAAM9P,GAClB,GAAI6Q,GAAUC,EAAW9Q,EAKzB,OAJA6Q,GAAQG,MAAQH,EAAQG,KACxBH,EAAQK,KAAOL,EAAQK,IACvBL,EAAQO,OAASP,EAAQO,MACzBP,EAAQQ,QAAUR,EAAQQ,OACnBxB,EAAKC,EAAMe,GA97CzB,GAq0COU,GA+BAC,EAn2CAlR,EAAOiI,KAAM/E,EAAQgF,OAAOhF,MAAOwF,EAAOxF,EAAMwF,KAAMyI,EAASjO,EAAMkO,GAAGD,OAAQhJ,EAAajF,EAAMiF,WAAYS,EAAU1F,EAAM0F,QAASyI,EAAgBzI,EAAQyI,cAAeC,EAAe1I,EAAQ0I,aAAcC,EAAc3I,EAAQ2I,YAAaC,EAAO5I,EAAQ4I,KAAMC,EAAQ7I,EAAQ6I,MAAO/H,EAAQxG,EAAMwG,MAAOjK,EAAUiJ,EAAKjJ,QAASiB,EAAWgI,EAAKhI,SAAUgR,EAAmB9I,EAAQ8I,iBAAkBlB,EAAa5H,EAAQ4H,WAAY5Q,EAAQgJ,EAAQhJ,MAAO+R,EAAM/I,EAAQgJ,SAAUC,EAAOjJ,EAAQD,QAASwG,EAAQwC,EAAIxC,MAAOT,EAAQmD,EAAKnD,MAAOE,EAAOiD,EAAKjD,KAAME,EAAO6C,EAAI7C,KAAMI,EAAO2C,EAAK3C,KACrlB4C,EAAgB,IAAKC,EAAe,IAAKC,EAAQ,QAASC,EAAgB,eAAgBC,EAAc,aAAcC,EAAQ,OAAQC,EAAW,IAAMC,EAAkBzJ,EAAQyJ,gBAAiB/J,EAAYD,OAAOC,UAAW4H,GAAa7H,OAAOC,UAAWgK,EAAiB,IAAKC,EAAqB,GAAKC,EAAgB,IAAKC,EAAoB,GAAIC,EAAqB,GAAIC,EAAiB,EAAGC,EAAS5S,EAAKoI,GAAK,IAAKyK,EAAuB,IAAKC,EAAS,SAAUC,EAAS,SAAUC,EAAS,SAAUC,EAAU,UAAWC,GAAiB,gBAAiBC,GAAI,IAAKC,GAAI,IAC1jBC,GAAU3J,EAAME,QAChBC,KAAM,SAAUyJ,EAAO5I,GAAjB,GACE6I,GAAU/L,KACVgM,EAAeF,EAAM5I,OACzB4G,GAAamC,GAAG5J,KAAK6J,KAAKH,EAAS7I,GACnCA,EAAU6I,EAAQ7I,QAClBA,EAAQ2E,KAAO3E,EAAQtG,MACvBmP,EAAQD,MAAQA,EAEZ5I,EAAQhL,MADRD,EAAQiL,EAAQhL,OACAM,EAAKG,IAAIH,EAAKI,IAAIsK,EAAQhL,MAAO8T,EAAarT,KAAMqT,EAAapT,KAEjEoT,EAAarT,KAGrCuK,SAAWtG,MAAO+N,GAClBzS,MAAO,SAAUiU,GAAV,GACCC,GAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfhL,EAAQgL,EAAQhL,MAChB8T,EAAeI,EAAKN,MAAM5I,OAC9B,OAAyB,KAArBnD,UAAU5F,OACHjC,GAEXgL,EAAQmJ,UAAYnJ,EAAQmJ,YAAcpR,EAAYiI,EAAQhL,MAAQ8T,EAAarT,IACnFuK,EAAQhL,MAAQM,EAAKG,IAAIH,EAAKI,IAAIuT,EAAUH,EAAarT,KAAMqT,EAAapT,KACxEwT,EAAKnF,UACLmF,EAAKE,UAHTpJ,MAOJqJ,GAAgBV,GAAQzJ,QACxBc,SACIsJ,MAAOhB,EACPiB,KAAOpQ,KAAMuO,GACb8B,OACI/I,MAAO,GACPC,OAAQ,IAEZ+I,WACIC,KAAMlB,GACNmB,SAAUvC,IAGlBwC,UAAW,SAAUC,GACjB,GAAIX,GAAOpM,IACP+M,KACAX,EAAKnF,SAAS+F,QACdZ,EAAKa,OAAOb,EAAKc,OAAQd,EAAKe,OAAQJ,KAG9CK,SAAU,SAAUC,GAChBrN,KAAKiH,SAASqG,UAAUnD,EAAImD,YAAYC,OAAOF,EAAOrN,KAAKmN,UAE/Db,QAAS,WAAA,GACDF,GAAOpM,KACP8L,EAAQM,EAAKN,MACb5I,EAAUkJ,EAAKlJ,QACfsK,EAAW1B,EAAM2B,UAAUvK,EAAQmJ,WACnCqB,EAAW5B,EAAM2B,UAAUvK,EAAQhL,MACnCgL,GAAQyJ,UAAUgB,eAAgB,EAClCvB,EAAKgB,SAASM,GAEd,GAAIE,IAAuBxB,EAAKnF,SAAUtG,EAAWuC,EAAQyJ,WACzDa,SAAUA,EACVE,SAAUA,KACVG,QAGZZ,OAAQ,WAAA,GACAb,GAAOpM,KACP8L,EAAQM,EAAKN,MACbqB,EAASrB,EAAMgC,IAAIX,OACnBjK,EAAUkJ,EAAKlJ,QACf+D,EAAW,GAAIC,EAenB,OAdIhE,GAAQyJ,aAAc,GACtBhM,EAAWuC,EAAQyJ,WACfoB,WAAY,EACZZ,OAAQA,EACRa,QAASlC,EAAM5I,QAAQ8K,UAG3B9K,EAAQsJ,QAAUhB,EAClBvE,EAAS7L,OAAOgR,EAAK6B,gBAAiB7B,EAAK8B,cAE3CjH,EAAS7L,OAAOgR,EAAK+B,gBAEzB/B,EAAKnF,SAAWA,EAChBmF,EAAKgB,SAAShC,GACPnE,GAEXmH,OAAQ,SAAUN,GAAV,GACA1B,GAAOpM,KACPmN,EAASf,EAAKe,OAASW,EAAIX,OAC3BJ,EAASX,EAAKW,OAASe,EAAIO,aAC3BC,EAAUlC,EAAKkC,QAAU7N,KAAKrI,MAAM2U,EAASX,EAAKlJ,QAAQuJ,IAAIpQ,KAClE+P,GAAKpE,KAAOV,EAAKiH,WAAW,GAAI5G,GAAMwF,EAAO/N,EAAIkP,EAASnB,EAAOhE,EAAImF,GAAU,GAAI3G,GAAMwF,EAAO/N,EAAIkP,EAASnB,EAAOhE,EAAImF,KAE5HL,cAAe,WAAA,GACP7B,GAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfsL,EAAgBpC,EAAKN,MAAM5I,QAAQuL,WAAWpS,KAC9C8Q,EAASf,EAAKe,OACduB,EAAcxL,EAAQtG,MACtB+R,EAAa,GAAIvH,IACjBS,MAAQjL,MAAO8R,GACfjH,QACI7K,MAAO8R,EACP/K,MAAOoH,IAIf,OADA4D,GAAWC,OAAOzB,EAAO/N,EAAIgN,EAAKW,OAASyB,EAAerB,EAAOhE,GAAG0F,OAAO1B,EAAO/N,EAAG+N,EAAOhE,EAAIiD,EAAKkC,QAAU,GAAGO,OAAO1B,EAAO/N,EAAG+N,EAAOhE,EAAIiD,EAAKkC,QAAU,GAAGQ,QACzJH,GAEXT,WAAY,WAAA,GACJ9B,GAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf6L,EAAW7L,EAAQuJ,IAAI7P,OAASsG,EAAQtG,MACxCoS,EAAS,GAAI7E,GAAI8E,OAAO7C,EAAKe,OAAQf,EAAKkC,SAC1C7B,EAAM,GAAIpC,GAAK4E,OAAOD,GACtBnH,MAAQjL,MAAOmS,GACftH,QAAU7K,MAAOmS,IAErB,OAAOtC,MAGXyC,GAAcnF,EAAY3H,QAC1BC,KAAM,SAAUa,GACZ,GAAI4I,GAAQ9L,IACZ8L,GAAM5I,QAAUvC,KAAemL,EAAM5I,QAASA,GAC9C4I,EAAM5I,QAAQiM,UAAYrD,EAAM5I,QAAQiM,WAAatF,EAAciC,EAAM5I,QAAQvK,IAAKmT,EAAM5I,QAAQtK,KACpGkT,EAAM5I,QAAQkM,UAAYtD,EAAM5I,QAAQkM,WAAatD,EAAM5I,QAAQiM,UAAY,GAC/EnF,EAAKiC,GAAG5J,KAAK6J,KAAKJ,EAAOA,EAAM5I,UAEnCA,SACIvK,IAAK,EACLC,IAAK,IACLyW,YACIhT,KAAM,GACNiT,MAAOhE,EACP1O,MAAO+N,EACPhH,MAAOoH,EACPwE,SAAS,GAEbd,YACIpS,KAAM,GACNiT,MAAOhE,EACP1O,MAAO+N,EACPhH,MAAOoH,EACPwE,SAAS,GAEbxB,WAAY,IACZyB,SAAU,IACVC,QACIC,SAAUpE,EACVpD,QAAS,IAGjB+E,OAAQ,SAAUE,EAAQJ,GAAlB,GACAX,GAAOpM,KACP8N,EAAM1B,EAAKuD,UAAUxC,EAAQJ,EACjCX,GAAKpE,KAAO8F,EAAI9F,OAChBoE,EAAKwD,cAAgBxD,EAAKyD,eAC1BzD,EAAK0D,MAAQ1D,EAAK2D,cAClB3D,EAAK4D,OAAS5D,EAAK6D,gBAEvB7B,OAAQ,SAAUpG,GAAV,GACAoE,GAAOpM,KACPmN,EAASnF,EAAKmF,SACdJ,EAASvU,EAAKG,IAAIqP,EAAKpE,SAAUoE,EAAKrE,SAAW,CACrD,OAAIyI,GAAKpE,OAAS/M,EAMPmR,EAAKa,OAAOE,EAAQJ,IAL3BX,EAAKpE,KAAOoE,EAAK0B,IAAI9F,OACrBoE,EAAKW,OAAOX,EAAK0B,IAAIO,cACrBjC,EAAK8D,mBACL9D,EAAKyD,eAHLzD,IAQRqB,UAAW,SAAUvV,GAAV,GAOHsE,GANA0G,EAAUlD,KAAKkD,QACf6K,EAAa7K,EAAQ6K,WACrBC,EAAU9K,EAAQ8K,QAClBX,EAAQnK,EAAQsM,SAAWzB,EAC3BpV,EAAMuK,EAAQvK,IACdC,EAAMsK,EAAQtK,GAOlB,OAJI4D,GADAwR,EACS9K,EAAQsM,UAAYtX,EAAQS,IAAQC,EAAMD,GAAO0U,GAEhDnV,EAAQS,IAAQC,EAAMD,GAAO0U,EAAQU,EAE5CvR,EAAS6O,GAEpBwE,aAAc,WAAA,GAcNM,GAAWC,EAAYC,EACvBhD,EAAO1G,EAAO2J,EAAIrW,EAAGsW,EAAIC,EAAIC,EAE7BC,EAAKC,EAAUC,EAAcC,EAhB7BzE,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf4N,EAAgB5N,EAAQmM,WAAWhT,KACnCyR,EAAM1B,EAAK0B,IAAI7F,QACf8E,EAASe,EAAIO,aACb0C,EAAa3E,EAAK2E,WAAWjD,EAAK5K,EAAQiM,WAC1CM,EAASrD,EAAKqD,OACduB,EAAQvB,EAAOtV,OACf8W,EAAgB/N,EAAQuM,OACxBvH,EAAU+I,EAAc/I,QACxBgJ,EAAyB,IAATnE,EAChBoE,EAAYjO,EAAQiO,UAAYjO,EAAQiO,WAAsB,GAATpE,EACrDiD,EAAS9M,EAAQ8M,WAGjBoB,EAAc,GAAIlK,EActB,KAZIkF,EAAKlJ,QAAQgO,gBAAkBjW,EAC/BiW,EAAgB9E,EAAKlJ,QAAQgO,cAE7B9E,EAAKlJ,QAAQgO,cAAgBA,EAE7BD,EAAcvB,WAAapE,IAC3ByB,GAAU+D,EACNd,EAAO7V,QAAUiS,EAAKwD,gBAAkB3U,IACxC8R,GAAUoE,EAAYD,GAE1BpD,EAAIuD,WAAWtE,GAAQuE,WAAWvE,IAEjC9S,EAAI,EAAO+W,EAAJ/W,EAAWA,IACnB0M,EAAQ8I,EAAOxV,GACfkW,EAAYxJ,EAAMrD,IAAIK,QAAU,EAChCyM,EAAazJ,EAAMrD,IAAIM,SAAW,EAClCyJ,EAAQ0D,EAAW9W,GACnBoW,GAAchD,EAAQhC,GAAwBD,EAC9CqF,EAAWQ,EAAcvB,WAAapE,EACtCgF,EAAKxC,EAAIyD,QAAQlE,GACjBkD,EAAKD,EAAGlR,EAAI5G,EAAKgZ,IAAInB,IAAeF,EAAYjI,IAAYuI,EAAW,EAAI,IAC3ED,EAAKF,EAAGnH,EAAI3Q,EAAKiZ,IAAIpB,IAAeD,EAAalI,IAAYuI,EAAW,EAAI,IAC5E9J,EAAMyH,OAAO,GAAIhN,GAAQ6I,MAAMsG,EAAKJ,EAAWK,EAAKJ,EAAYG,EAAKJ,EAAWK,EAAKJ,IACrFO,EAAW,GAAIhJ,GAAMhB,EAAMrD,IAAIiE,GAAIZ,EAAMrD,IAAIkE,IACzC4E,EAAKwD,gBAAkB3U,GACvByV,EAAMhK,EAAYC,EAAOzD,EAAQuM,QACjC2B,EAAYhW,OAAOsV,KAEnBA,EAAMtE,EAAKwD,cAAc9I,SAAS7M,GAClC2W,EAAeF,EAAI1I,OAAOY,OAC1BiI,EAAiBH,EAAIpD,aAAenD,EAAImD,YACxCuD,EAAea,UAAUf,EAASvR,EAAIwR,EAAaxR,EAAGuR,EAASxH,EAAIyH,EAAazH,GAChFuH,EAAIpD,UAAUuD,IAElBzE,EAAKpE,KAAOV,EAAKqK,MAAMvF,EAAKpE,KAAM0I,EAAI1I,OAE1C,OAAOoJ,IAEXlB,iBAAkB,WAAA,GAKV0B,GAAaC,EAOJ5X,EAXTmS,EAAOpM,KACPgQ,EAAS5D,EAAK4D,OAAOlJ,SACrBqK,EAAY/E,EAAKlJ,QAAQiO,UACzBD,EAAgB9E,EAAKlJ,QAAQgO,aAEjC,IAAIlB,EAAO7V,OAAS,EAAG,CAMnB,IALAyX,EAAcxF,EAAK0F,iBACf1F,EAAKlJ,QAAQuM,OAAOC,WAAapE,IACjCsG,GAAeT,EAAYD,GAE/BW,EAAYD,EAAcT,EAAY,EAC7BlX,EAAI,EAAO+V,EAAO7V,OAAXF,EAAmBA,IAC/B+V,EAAO/V,GAAG8X,UAAUV,WAAWQ,GAAWP,WAAWO,EAEzDzF,GAAKpE,KAAOV,EAAKqK,MAAMvF,EAAKpE,KAAMoE,EAAK4D,OAAOhI,UAGtDiI,aAAc,WAAA,GAINxH,GAAME,EAMNqJ,EAASJ,EAAaK,EAAWhY,EATjCmS,EAAOpM,KACP8N,EAAM1B,EAAK0B,IACXtR,EAAS,GAAI0K,GAEbgL,EAAW9F,EAAK+F,gBAChBC,EAAgBF,EAAS/X,OACzB6T,EAAU5B,EAAKlJ,QAAQ8K,QACvBmD,EAAY/E,EAAKlJ,QAAQiO,UACzBD,EAAgB9E,EAAKlJ,QAAQgO,aAEjC,IAAIkB,EAGA,IAFAR,EAAcxF,EAAK0F,iBACnB1F,EAAKW,OAAOX,EAAKW,SAAWoE,EAAYD,GACnCjX,EAAI,EAAOmY,EAAJnY,EAAmBA,IAC3B+X,EAAUE,EAASjY,GACnBwO,EAAO2D,EAAKqB,UAAUuE,EAAQhE,EAAU,KAAO,SAC/CrF,EAAKyD,EAAKqB,UAAUuE,EAAShE,EAAiB,OAAP,OACnCrF,EAAKF,IAAS,IACdwJ,EAAY,GAAI9H,GAAIkI,IAAIvE,EAAIX,QACxBmF,QAASV,EAAcT,EAAY,EACnCoB,QAASX,EAAcT,EAAY,EACnCpD,WAAYtF,EACZ+G,SAAU7G,IAEdnM,EAAOpB,OAAO,GAAIiP,GAAKgI,IAAIJ,GACvBxK,QACI9D,MAAOwN,EACPvU,MAAOoV,EAAQpV,MACf4V,QAASR,EAAQQ,YAMrC,OAAOhW,IAEX2V,cAAe,WAaX,QAASM,GAAahK,EAAME,EAAI/L,EAAO4V,GACnC,OACI/J,KAAMA,EACNE,GAAIA,EACJ/L,MAAOA,EACP4V,QAASA,GAlBN,GAKPhK,GACA4J,EAGAJ,EAGA/X,EAAGyY,EAXHC,EAAQ3S,KACRkD,EAAUyP,EAAMzP,QAChB8M,EAAS9M,EAAQ8M,WACjBgB,EAAQhB,EAAO7V,OAGfyY,EAAe1P,EAAQ2P,sBACvBX,KAEAvZ,EAAMuK,EAAQvK,IACdC,EAAMsK,EAAQtK,GAUlB,IAAIoY,EAEA,IADAkB,EAAStY,KAAK6Y,EAAa9Z,EAAKC,EAAKga,IAChC3Y,EAAI,EAAO+W,EAAJ/W,EAAWA,IAGnB,IAFAuO,EAAQD,EAASyH,EAAO/V,GAAItB,EAAKC,GACjCwZ,EAAgBF,EAAS/X,OACpBuY,EAAI,EAAON,EAAJM,EAAmBA,IAE3B,GADAV,EAAUE,EAASQ,GACClK,EAAMC,MAAtBuJ,EAAQvJ,MAAoCuJ,EAAQrJ,IAAtBH,EAAMC,KAAoB,CACxDyJ,EAAStY,KAAK6Y,EAAajK,EAAMC,KAAMD,EAAMG,GAAIH,EAAM5L,MAAO4L,EAAMgK,UAChDhK,EAAMG,IAAtBqJ,EAAQvJ,MAAgCuJ,EAAQrJ,IAApBH,EAAMG,IAClCuJ,EAAStY,KAAK6Y,EAAajK,EAAMG,GAAIqJ,EAAQrJ,GAAIiK,EAAcpK,EAAMgK,UAEzER,EAAQrJ,GAAKH,EAAMC,IACnB,OAKhB,MAAOyJ,IAEXJ,eAAgB,WAAA,GAOR/S,GANAqN,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf4N,EAAgB5N,EAAQmM,WAAWhT,KACnC8U,EAAYjO,EAAQiO,UACpBD,EAAgBhO,EAAQgO,cACxBpD,EAAM1B,EAAK0B,GAOf,OAJI/O,GADAmE,EAAQuM,OAAOC,WAAajE,EACxBqC,EAAIO,aAAeyC,EAAgBI,EAAgBC,EAEnDrD,EAAIO,aAAe8C,GAI/BxB,UAAW,SAAUxC,EAAQJ,GAAlB,GACHX,GAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf4K,EAAM1B,EAAK0B,IAAM,GAAI3D,GAAIkI,IAAIlF,GAC7BmF,QAASvF,EACTwF,QAASxF,EACTgB,WAAY7K,EAAQ6K,WAAa1C,EACjCmE,SAAUtM,EAAQsM,SAAWnE,GAEjC,OAAOyC,IAEXiC,YAAa,WAUT,QAAS+C,GAAUhF,EAAKiD,EAAYgC,EAAMC,GACtC,GAAyE/Y,GAAGgZ,EAAWC,EAAnFpD,EAAQ,GAAI5I,GAASiG,EAASW,EAAIX,OAAQJ,EAASe,EAAIO,aAAqCkB,EAAUyD,EAAYzD,OACtH,IAAIA,EACA,IAAKtV,EAAI,EAAO8W,EAAW5W,OAAfF,EAAuBA,IAC/BgZ,EAAYnF,EAAIyD,QAAQR,EAAW9W,IACnCiZ,EAAU,GAAIvL,GAAMwF,EAAO/N,EAAI2N,EAASiG,EAAY3W,KAAM8Q,EAAOhE,GAAGoE,OAAOwD,EAAW9W,GAAIkT,GAC1F2C,EAAM1U,OAAO,GAAIgM,IACbK,QACI7K,MAAOoW,EAAYpW,MACnB+G,MAAOqP,EAAYrP,SAExBiL,OAAOqE,GAAWpE,OAAOqE,GAGpC,OAAOpD,GAxBF,GACL1D,GAAOpM,KACP8N,EAAM1B,EAAK0B,IACX5K,EAAUkJ,EAAKlJ,QACfiQ,EAAiBjQ,EAAQuM,OAAOC,SAChC0D,EAAW,GAAIlM,GACf4J,EAAgB5N,EAAQmM,WAAWhT,KACnCmS,EAAgBtL,EAAQuL,WAAWpS,KACnCgX,EAAUvF,EAAI7F,QACd8E,EAASsG,EAAQhF,YA2BrB,OAVAjC,GAAKkH,gBAAkBlH,EAAK2E,WAAWjD,EAAK5K,EAAQiM,WACpD/C,EAAKiD,WAAayD,EAAUO,EAASjH,EAAKkH,gBAAiBpQ,EAAQiM,UAAWjM,EAAQmM,YACtF+D,EAAShY,OAAOgR,EAAKiD,YACrBjD,EAAKmH,gBAAkBzC,EAAgBtC,EACnC2E,IAAmB1H,GACnB4H,EAAQhC,WAAWtE,EAAS+D,EAAgBtC,GAAe8C,WAAWvE,EAAS+D,EAAgBtC,GAEnGpC,EAAKoH,gBAAkBpH,EAAKqH,oBAAoBrH,EAAK2E,WAAWjD,EAAK5K,EAAQkM,YAC7EhD,EAAKqC,WAAaqE,EAAUO,EAASjH,EAAKoH,gBAAiBtQ,EAAQkM,UAAWlM,EAAQuL,WAAYvL,EAAQiM,WAC1GiE,EAAShY,OAAOgR,EAAKqC,YACd2E,GAEXK,oBAAqB,SAAUC,GAAV,GAIRzZ,GAHLmS,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfyQ,EAAOzQ,EAAQiM,UAAYjM,EAAQkM,SACvC,KAASnV,EAAIyZ,EAAOvZ,OAAS,EAAGF,GAAK,EAAGA,IAChCA,EAAI0Z,IAAS,GACbD,EAAO/N,OAAO1L,EAAG,EAGzB,OAAOyZ,IAEX3C,WAAY,SAAU6C,EAAMC,GAAhB,GAUJ5Z,GATA6R,EAAQ9L,KACRkD,EAAU4I,EAAM5I,QAChB8K,EAAU9K,EAAQ8K,QAClBxF,EAAQtF,EAAQtK,IAAMsK,EAAQvK,IAC9B0U,EAAQuG,EAAKpE,SAAWoE,EAAK7F,WAC7BxR,EAAMqX,EAAK7F,WACX+F,EAAYtL,EAAQqL,EACpBE,EAAO1G,EAAQyG,EACfE,IAMJ,KAJIhG,IACAzR,GAAO8Q,EACP0G,GAAQA,GAEP9Z,EAAI,EAAO6Z,EAAJ7Z,EAAeA,IACvB+Z,EAAUpa,KAAKxB,EAAMmE,EAAKsO,IAC1BtO,GAAOwX,CAKX,OAHI3b,GAAMmE,IAAQqX,EAAKpE,UACnBwE,EAAUpa,KAAK2C,GAEZyX,GAEXjH,OAAQ,SAAUA,GACd,GAAIX,GAAOpM,IACX,OAAI+M,IACAX,EAAK0B,IAAIuD,WAAWtE,GAAQuE,WAAWvE,GACvCX,EAAK6H,gBAAgB7H,EAAKiD,WAAWvI,SAAUsF,EAAKkH,iBACpDlH,EAAK6H,gBAAgB7H,EAAKqC,WAAW3H,SAAUsF,EAAKoH,iBAAiB,GAFrEpH,GAIOA,EAAK0B,IAAIO,cAGxB4F,gBAAiB,SAAUnE,EAAOiB,EAAYmD,GAA7B,GASJja,GACDka,EACAjC,EACAkC,EACAC,EAZJjI,EAAOpM,KACPsU,EAAOJ,EAAQ9H,EAAKmH,iBAAmB,EAAI,EAC3CF,EAAUjH,EAAK0B,IACff,EAASsG,EAAQhF,YAKrB,KAJI6F,GAAS9H,EAAKlJ,QAAQuM,OAAOC,WAAajE,GAAoB,IAAT6I,IACrDjB,EAAUjH,EAAK0B,IAAI7F,QACnBoL,EAAQhC,WAAWtE,EAASuH,GAAMhD,WAAWvE,EAASuH,IAEjDra,EAAI,EAAO6V,EAAM3V,OAAVF,EAAkBA,IAC1Bka,EAAWd,EAAQ9B,QAAQR,EAAW9W,IACtCiY,EAAWpC,EAAM7V,GAAGiY,SACpBkC,EAAQD,EAAS/U,EAAI8S,EAAS,GAAGqC,SAASnV,EAC1CiV,EAAQF,EAAShL,EAAI+I,EAAS,GAAGqC,SAASpL,EAC9C2G,EAAM7V,GAAGqT,WAAU,GAAInD,GAAIqK,gBAAiB9C,UAAU0C,EAAOC,OAIrEI,GAAQ9K,EAAOvH,QACfC,KAAM,SAAUmD,EAASkP,GAAnB,GAEExR,GACAyR,EACAC,EAEAC,EAYS5a,EAjBT0Y,EAAQ3S,KAIR8U,EAAS1T,EAAQwI,GAAGkL,UAYxB,IAVApZ,EAAMqZ,QAAQvP,GACd/D,EAAE+D,GAASwP,QACXrL,EAAOsC,GAAG5J,KAAK6J,KAAKyG,EAAOnN,GAC3BmN,EAAMxL,QAAUwL,EAAMnN,QACtBmN,EAAMsC,iBAAmBtU,KAAe+T,GACxCxR,EAAUvC,KAAegS,EAAMzP,QAASwR,GACxCE,EAAY1R,EAAQ2R,MACpBA,EAAQC,EAAOF,IAAcE,EAAOF,EAAUzV,eAC9CwV,EAAeC,GAAaC,EAAQA,EAAMlC,SAC1CA,EAAMzP,QAAUvC,KAAegU,EAAczR,GACzCzB,EAAEyT,QAAQhS,EAAQ6I,SAClB,IAAS9R,EAAI,EAAOiJ,EAAQ6I,QAAQ5R,OAApBF,EAA4BA,IACxC0Y,EAAMzP,QAAQ6I,QAAQ9R,GAAK0G,KAAegU,EAAa5I,QAAS7I,EAAQ6I,QAAQ9R,GAGxF0Y,GAAMnN,QAAQ2P,SAAS,WACvBxC,EAAMyC,QAAUzC,EAAM0C,iBACtB1C,EAAM2C,UAEVpS,SACIqS,YACAV,MAAO,UACPW,SAAU,GACVzJ,WACAD,SACA2J,cAEJV,QAAS,WACL/U,KAAKoV,QAAQL,UACbpL,EAAOsC,GAAG8I,QAAQ7I,KAAKlM,OAE3B9H,MAAO,SAAUA,GAAV,GACCkU,GAAOpM,KACP+L,EAAUK,EAAKsJ,SAAS,EAC5B,OAAyB,KAArB3V,UAAU5F,OACH4R,EAAQ7T,SAEnB6T,EAAQ7T,MAAMA,GACdkU,EAAKuJ,iBAAiBzd,GADtB6T,IAGJ6J,MAAO,WACH,GAAIR,GAAUpV,KAAKoV,OACnBA,GAAQpI,QACRoI,EAAQ/K,KAAKrK,KAAK6V,WAEtBC,aAAc,WACV,MAAO9V,MAAK6V,UAEhBE,UAAW,SAAUpX,GAAV,GAIH1E,GAHAmS,EAAOpM,KACP0V,EAAWtJ,EAAKsJ,SAChBK,IAEJ,IAAyB,IAArBhW,UAAU5F,OAAc,CACxB,IAAKF,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IAC7B8b,EAAUnc,KAAK8b,EAASzb,GAAG/B,QAE/B,OAAO6d,GAEX,GAAItU,EAAEyT,QAAQvW,GACV,IAAK1E,EAAI,EAAO0E,EAAOxE,OAAXF,EAAmBA,IACvBf,EAASyF,EAAO1E,KAChByb,EAASzb,GAAG/B,MAAMyG,EAAO1E,GAIrCmS,GAAKuJ,iBAAiBhX,IAE1BgX,iBAAkB,SAAUhX,GAAV,GAGL1E,GAFLyb,KAAcM,OAAOhW,KAAKkD,QAAQ6I,QAEtC,KADApN,KAAYqX,OAAOrX,GACV1E,EAAI,EAAO0E,EAAOxE,OAAXF,EAAmBA,IAC/Byb,EAASzb,GAAG/B,MAAQyG,EAAO1E,IAGnCgc,QAAS,WAAA,GAGDhc,GAFAmS,EAAOpM,KACPkW,EAAI9J,EAAKlJ,QAAQyK,WAGrB,KADAvB,EAAKlJ,QAAQyK,aAAc,EACtB1T,EAAI,EAAOmS,EAAKsJ,SAASvb,OAAlBF,EAA0BA,IAClCmS,EAAKsJ,SAASzb,GAAGiJ,QAAQyJ,UAAUgB,aAAc,CAIrD,KAFAvB,EAAKkJ,SACLlJ,EAAKlJ,QAAQyK,YAAcuI,EACtBjc,EAAI,EAAOmS,EAAKsJ,SAASvb,OAAlBF,EAA0BA,IAClCmS,EAAKsJ,SAASzb,GAAGiJ,QAAQyJ,UAAUgB,YAAcuI,GAGzDZ,OAAQ,WAAA,GAUAtN,GATAoE,EAAOpM,KACP3D,EAAOsE,EAAWyL,EAAK+J,WAAY/J,EAAKlJ,QAAQuS,WAChDtO,EAAU,GAAIG,IACd,EACA,IAEAjL,EAAKsH,MACLtH,EAAKuH,QAGTwI,GAAKgJ,QAAQpI,QACbZ,EAAKqJ,UAAYrJ,EAAKgK,mBACtBhK,EAAKgJ,QAAQ5P,QAAQ6Q,KACjB1S,MAAOtH,EAAKsH,MACZC,OAAQvH,EAAKuH,SAEjBwI,EAAKkK,eACLtO,EAAOwB,EAAOrC,EAAQa,OAAQoE,EAAKmK,kBACnCnK,EAAKgC,OAAOpG,IAEhBoO,iBAAkB,WAAA,GAgBVX,GAfArJ,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QAAQuS,UACvBpZ,EAAO+P,EAAKgJ,QAAQ/Y,OACpB0K,EAAS7D,EAAQ6D,WACjByP,EAAe,GAAIlP,IACnB,EACA,IAEAjL,EAAKsH,MACLtH,EAAKuH,QAgBT,OAdAwI,GAAKmK,iBAAmBrT,EAAQuT,QAAUtL,EACtCpE,EAAOpD,MAAQ,IACf6S,EAAehN,EAAOgN,EAAczP,EAAOpD,QAE3C8R,EAAYrO,EAAKC,SAASmP,GAC1B/O,QACI7K,MAAOmK,EAAOpD,MAAQoD,EAAOnK,MAAQ,GACrC+G,MAAOoD,EAAOpD,MACdyE,SAAUrB,EAAOqB,SACjBC,SAAU,QACVC,QAAS,SAEbT,MAAQjL,MAAOsG,EAAQ8D,eAI/BqO,eAAgB,WAAA,GAKRqB,GAJAtK,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf7G,EAAO+P,EAAK+J,UAMhB,OALA9Z,GAAO6G,EAAQuS,UAAY9U,EAAWtE,EAAM6G,EAAQuS,WAAapZ,EAC7Dqa,EAAOjV,EAAE,eAAekV,SAASvK,EAAK5G,SAAS6Q,KAC/C1S,MAAOtH,EAAKsH,MACZC,OAAQvH,EAAKuH,SAEV,GAAIyG,GAAKuM,QAAQ/W,OAAO6W,GAAQ9J,KAAM1J,EAAQsS,YAEzD1M,QAAS,WACL,MAAO9I,MAAKmW,YAEhBA,SAAU,WAAA,GACF/J,GAAOpM,KACPwF,EAAU4G,EAAK5G,QACf7B,EAAQ6B,EAAQ7B,QAChBC,EAAS4B,EAAQ5B,QAOrB,OANKD,KACDA,EAAQqH,GAEPpH,IACDA,EAASkH,IAGTnH,MAAOA,EACPC,OAAQA,MAIhBiT,GAAcpC,GAAMrS,QACpBC,KAAM,SAAUmD,EAAStC,GACrB,GAAI4T,GAAc9W,IAClByU,IAAMxI,GAAG5J,KAAK6J,KAAK4K,EAAatR,EAAStC,GACzCxH,EAAMqb,OAAOD,EAAa1V,EAAQwI,KAEtC1G,SACInH,KAAM,cACN4R,aAAa,EACb8H,WAAazO,WAAY,KAE7BoH,OAAQ,SAAUpG,GAAV,GAKK/N,GAJLmS,EAAOpM,KACP0V,EAAWtJ,EAAKsJ,QAGpB,KAFAtJ,EAAKN,MAAMsC,OAAOpG,GAClBoE,EAAK4K,iBAAmB5K,EAAKN,MAAM9D,KAC1B/N,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjCyb,EAASzb,GAAGmU,OAAOhC,EAAKN,MAAMgC,KAC9B1B,EAAK4K,iBAAmB1P,EAAKqK,MAAMvF,EAAK4K,iBAAkBtB,EAASzb,GAAG+N,KAE1EoE,GAAK6K,SAASjP,GACdoE,EAAK8K,WAAWlP,GAChBoE,EAAK+K,aAAa/K,EAAKqJ,UAAWC,EAAUtJ,EAAKN,OACjDM,EAAKwJ,SAETuB,aAAc,SAAU1B,EAAWC,EAAU5J,GAA/B,GAENhK,GAIK7H,EALLmd,EAAU,GAAIlQ,EAKlB,KAHAkQ,EAAQhc,OAAOqa,GACf2B,EAAQhc,OAAO0Q,EAAMgE,OACrBsH,EAAQhc,OAAO0Q,EAAMkE,QACZ/V,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjC6H,EAAU4T,EAASzb,GACnB6H,EAAQmL,SACRmK,EAAQhc,OAAO0G,EAAQmF,UACvBnF,EAAQ5J,MAAM4J,EAAQoB,QAAQhL,MAElCkf,GAAQhc,OAAO0Q,EAAM8D,eACrB5P,KAAK6V,SAAWuB,GAEpBH,SAAU,SAAUjP,GAWhB,IAXM,GAQFqP,GAASC,EAASC,EAASC,EAAKC,EAPhCrL,EAAOpM,KACP8L,EAAQM,EAAKN,MACbgC,EAAMhC,EAAMgC,IACZ4J,EAActL,EAAK4K,iBACnBjD,EAAOvb,EAAKmf,IAAIvL,EAAKwL,QAAQF,EAAa1P,IAC1CrP,EAAMP,EAAM2b,EAAMlJ,GAClBjS,EAAMR,GAAO2b,EAAMlJ,GAEnBgN,EAAY,EACZ5d,EAAI,MACDA,IAAM,OACT4d,EAAYJ,IAAYF,EAAUM,EAAY,EAAI,EAC9CA,EAAY,IAGZlf,GAAO6e,IACPH,EAAUjL,EAAK0L,WAAWnf,EAAKqP,EAAM8F,GAC5BuJ,GAAL,GAA2B,GAAXA,IAIpBze,GAAO4e,IACPD,EAAUnL,EAAK0L,WAAWlf,EAAKoP,EAAM8F,GAC5ByJ,GAAL,GAA2B,GAAXA,KAKpBC,EADAH,EAAU,GAAKE,EAAU,EACb,EAAN5e,EACW,EAAV0e,GAAyB,EAAVE,EACV,EAAN3e,EAEAR,GAAOO,EAAMC,GAAO,GAAK,EAAGiS,GAEtCyM,EAAUlL,EAAK0L,WAAWN,EAAKxP,EAAM8F,GAC5BwJ,GAAL,GAA2B,GAAXA,KAGpBG,EAAUF,EACND,EAAU,GACV1e,EAAM4e,EACND,EAAUD,IAEV3e,EAAM6e,EACNH,EAAUC,IAItBQ,WAAY,SAAU/D,EAAM/L,EAAM8F,GAAtB,GAUC7T,GATLmS,EAAOpM,KACP8L,EAAQM,EAAKN,MACb4J,EAAWtJ,EAAKsJ,SAChB3I,EAASe,EAAIO,YAMjB,KALAP,EAAMA,EAAI7F,QACV6F,EAAIuD,WAAWtE,EAASgH,GAAMzC,WAAWvE,EAASgH,GAClDjI,EAAMgC,IAAMA,EACZhC,EAAMsC,OAAOpG,GACboE,EAAK2L,SAAWjM,EAAM9D,KACb/N,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjCyb,EAASzb,GAAGmU,OAAON,GACnB1B,EAAK2L,SAAWzQ,EAAKqK,MAAMvF,EAAK2L,SAAUrC,EAASzb,GAAG+N,KAE1D,OAAOoE,GAAKwL,QAAQxL,EAAK2L,SAAU/P,IAEvC4P,QAAS,SAAUI,EAAS1U,GACxB,MAAO9K,GAAKG,IAAI2K,EAAIK,QAAUqU,EAAQrU,QAASL,EAAIM,SAAWoU,EAAQpU,WAE1EsT,WAAY,SAAUlP,GAAV,GAWC/N,GAVLmS,EAAOpM,KACPiY,EAAgB7L,EAAK2L,SAAS5K,SAC9B+K,EAAYlQ,EAAKmF,SACjBgL,EAAWF,EAAc7Y,EAAI8Y,EAAU9Y,EACvCgZ,EAAWH,EAAc9O,EAAI+O,EAAU/O,EACvC2C,EAAQM,EAAKN,MACb4J,EAAWtJ,EAAKsJ,QAIpB,KAHA5J,EAAMgC,IAAIX,OAAO/N,GAAK+Y,EACtBrM,EAAMgC,IAAIX,OAAOhE,GAAKiP,EACtBtM,EAAMsC,OAAOpG,GACJ/N,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjCyb,EAASzb,GAAGmU,OAAOtC,EAAMgC,KACzB1B,EAAK2L,SAAWzQ,EAAKqK,MAAM7F,EAAM9D,KAAM0N,EAASzb,GAAG+N,OAG3DsO,aAAc,WAAA,GAKNxU,GAGK7H,EAPLmS,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfwS,EAAWxS,EAAQ6I,QACnBD,EAAQM,EAAKN,MAAQ,GAAIoD,IAAYhM,EAAQ4I,MAIjD,KAFAM,EAAKsJ,YACLA,EAAWjU,EAAEyT,QAAQQ,GAAYA,GAAYA,GACpCzb,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjC6H,EAAU,GAAIyK,IAAcT,EAAOnL,KAAe+U,EAASzb,IAAM0S,WAAagB,YAAazK,EAAQyK,gBACnGvB,EAAKsJ,SAAS9b,KAAKkI,MAI3BuW,GAAc5D,GAAMrS,QACpBC,KAAM,SAAUmD,EAAStC,GACrB,GAAIoV,GAActY,IAClByU,IAAMxI,GAAG5J,KAAK6J,KAAKoM,EAAa9S,EAAStC,GACzCxH,EAAMqb,OAAOuB,EAAalX,EAAQwI,KAEtC1G,SACInH,KAAM,cACN4R,aAAa,EACb8H,WAAazO,WAAY,IACzB8E,OAASyM,UAAU,IAEvBnK,OAAQ,SAAUpG,GAAV,GAOK/N,GANLmS,EAAOpM,KACP0V,EAAWtJ,EAAKsJ,SAChB8C,EAAQxQ,EAAKY,OAAOxJ,EACpBqZ,EAAQzQ,EAAKY,OAAOO,EACpBuP,EAAS,GAAItX,GAAQ6I,MAAMuO,EAAOA,EAAOA,EAAQxQ,EAAKrE,QAAS8U,EAAQzQ,EAAKpE,SAEhF,KADAwI,EAAKN,MAAMsC,OAAOsK,GACTze,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjCyb,EAASzb,GAAGmU,QAEhBhC,GAAKpE,KAAOoE,EAAKuM,QAAQD,GACzBtM,EAAKwM,iBACLxM,EAAKyM,kBACLzM,EAAK+K,eACL/K,EAAKwJ,SAETuB,aAAc,WAAA,GAKNrV,GAGK7H,EAPLmS,EAAOpM,KACPoX,EAAU,GAAIlQ,GACd4R,EAAgB1M,EAAKN,MAAMmB,SAC3ByI,EAAWtJ,EAAKsJ,QAIpB,KAFA0B,EAAQhc,OAAOgR,EAAKqJ,WACpB2B,EAAQhc,OAAO0d,GACN7e,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjC6H,EAAU4T,EAASzb,GACnBmd,EAAQhc,OAAO0G,EAAQmL,UACvBnL,EAAQ5J,MAAM4J,EAAQoB,QAAQhL,MAElCkU,GAAKyJ,SAAWuB,GAEpBd,aAAc,WAAA,GAKNxU,GAASiX,EAGJ9e,EAPLmS,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfwS,EAAWxS,EAAQ6I,QACnBD,EAAQM,EAAKN,MAAQ,GAAIkN,IAAY9V,EAAQ4I,MAIjD,KAFAM,EAAKsJ,YACLA,EAAWjU,EAAEyT,QAAQQ,GAAYA,GAAYA,GACpCzb,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjC8e,EAAiBpY,KAAe+U,EAASzb,IAAM0S,WAAagB,YAAazK,EAAQyK,eAE7E7L,EADAiX,EAAevM,QAAUhC,EACf,GAAIyO,IAAmBnN,EAAOiN,GAE9B,GAAIG,IAAiBpN,EAAOiN,GAE1C3M,EAAKsJ,SAAS9b,KAAKkI,IAG3BqU,SAAU,WAAA,GACFxD,GAAQ3S,KACRwF,EAAUmN,EAAMnN,QAChB7B,EAAQ6B,EAAQ7B,QAChBC,EAAS4B,EAAQ5B,SACjB2U,EAAW5F,EAAMzP,QAAQ4I,MAAMyM,QAOnC,OANK5U,KACDA,EAAQ4U,EAAWtN,EAAoBD,GAEtCpH,IACDA,EAAS2U,EAAWzN,EAAiBI,IAGrCvH,MAAOA,EACPC,OAAQA,IAGhB+U,QAAS,SAAUrV,GAAV,GAMDjH,GACKpC,EANLmS,EAAOpM,KACP8L,EAAQM,EAAKN,MACb4J,EAAWtJ,EAAKsJ,SAChBwC,EAAY5U,EAAI6J,SAChBuK,EAAchC,EAAS,GAAGpS,IAAI2E,QAAQyO,KAAK5K,EAAMxI,IAErD,KAASrJ,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IACjCyd,EAAYhB,KAAKhB,EAASzb,GAAGqJ,IAAI2E,QASrC,OAPI6D,GAAM5I,QAAQqV,UACdlc,EAAOqb,EAAY/T,QAAU,EAC7B+T,EAAc,GAAIzN,GAAMiO,EAAU9Y,EAAI/C,EAAMiH,EAAIkE,GAAI0Q,EAAU9Y,EAAI/C,EAAMiH,EAAI6V,MAE5E9c,EAAOqb,EAAY9T,SAAW,EAC9B8T,EAAc,GAAIzN,GAAM3G,EAAIiE,GAAI2Q,EAAU/O,EAAI9M,EAAMiH,EAAI8V,GAAIlB,EAAU/O,EAAI9M,IAEvEqb,GAEXkB,eAAgB,WAAA,GAORtE,GAAMra,EANNmS,EAAOpM,KACP8L,EAAQM,EAAKN,MACb4J,EAAWtJ,EAAKsJ,SAChB2D,EAAWvN,EAAMxI,IACjBA,EAAMoS,EAAS,GAAGpS,IAAI2E,QAAQyO,KAAK5K,EAAMxI,KACzCoU,EAActL,EAAKpE,IAEvB,KAAK/N,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IAC7BqJ,EAAIoT,KAAKhB,EAASzb,GAAGqJ,IAAI2E,QAS7B,KAPI6D,EAAM5I,QAAQqV,UACdjE,EAAOoD,EAAYvK,SAAS/N,EAAIkE,EAAI6J,SAAS/N,EAC7C0M,EAAMsC,OAAO,GAAInE,GAAMoP,EAAS9R,GAAK+M,EAAMoD,EAAYlQ,GAAI6R,EAASD,GAAK9E,EAAMoD,EAAYyB,OAE3F7E,EAAOoD,EAAYvK,SAAShE,EAAI7F,EAAI6J,SAAShE,EAC7C2C,EAAMsC,OAAO,GAAInE,GAAMyN,EAAYnQ,GAAI8R,EAAS7R,GAAK8M,EAAMoD,EAAY0B,GAAIC,EAASF,GAAK7E,KAExFra,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IAC7Byb,EAASzb,GAAGmU,OAAOhC,EAAKpE,OAGhC6Q,gBAAiB,WAAA,GAOT5e,GANAmS,EAAOpM,KACP8L,EAAQM,EAAKN,MACb4J,EAAWtJ,EAAKsJ,SAChB2D,EAAWvN,EAAMxI,IAAI2E,QACrB1L,EAAMuP,EAAM5I,QAAQqV,SAAW,IAAM,IACrCe,EAAa5D,EAAS,GAAGpS,GAE7B,KAAKrJ,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IAC7Bqf,EAAW5C,KAAKhB,EAASzb,GAAGqJ,IAAI2E,QAKpC,KAHAoR,EAAS9c,EAAM,IAAM/D,EAAKI,IAAIygB,EAAS9c,EAAM,GAAK+c,EAAW/c,EAAM,GAAI,GACvE8c,EAAS9c,EAAM,IAAM/D,EAAKI,IAAI0gB,EAAW/c,EAAM,GAAK8c,EAAS9c,EAAM,GAAI,GACvEuP,EAAMsC,OAAOiL,GACRpf,EAAI,EAAOyb,EAASvb,OAAbF,EAAqBA,IAC7Byb,EAASzb,GAAGmU,OAAOhC,EAAKpE,SAIhCgR,GAAcjP,EAAY3H,QAC1BC,KAAM,SAAUa,GACZ,GAAI4I,GAAQ9L,IACZ8L,GAAM5I,QAAUvC,KAAemL,EAAM5I,QAASA,GAC9C4I,EAAM5I,QAAUvC,KAAemL,EAAM5I,SAAWuM,QAAU8J,OAAQzN,EAAM5I,QAAQqW,UAChFzN,EAAM5I,QAAQiM,UAAYrD,EAAM5I,QAAQiM,WAAatF,EAAciC,EAAM5I,QAAQvK,IAAKmT,EAAM5I,QAAQtK,KACpGoR,EAAKiC,GAAG5J,KAAK6J,KAAKJ,EAAOA,EAAM5I,SAC/B4I,EAAM5I,QAAQkM,UAAYtD,EAAM5I,QAAQkM,WAAatD,EAAM5I,QAAQiM,UAAY,IAEnFjM,SACIvK,IAAK,EACLC,IAAK,GACLyW,YACIhT,KAAM,GACNiT,MAAOhE,EACP1O,MAAO+N,EACPhH,MAAOoH,EACPwE,SAAS,GAEbd,YACIpS,KAAM,GACNiT,MAAOhE,EACP1O,MAAO+N,EACPhH,MAAOoH,EACPwE,SAAS,GAEbiK,MAAQ7V,MAAOoH,GACf0E,QACIC,SAAUpE,EACVpD,QAAS,GAEbqR,QAAQ,EACRE,aAAa,GAEjBxM,OAAQ,WAAA,GACAb,GAAOpM,KACPiH,EAAWmF,EAAKnF,SAAW,GAAIC,GAC/BuI,EAASrD,EAAKyD,eACd6J,EAAYtN,EAAKuN,aACjBC,EAAaxN,EAAK2D,cAClBC,EAAS5D,EAAK6D,cAElB,OADAhJ,GAAS7L,OAAOse,EAAWjK,EAAQmK,EAAY5J,GACxC/I,GAEXgJ,aAAc,WAAA,GAWNzH,GAAOqR,EAAMC,EAAOC,EAAO9f,EAV3BmS,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfvK,EAAMuK,EAAQvK,IACdC,EAAMsK,EAAQtK,IACdoX,EAAS9M,EAAQ8M,WACjBuI,EAAWrV,EAAQqV,SACnBgB,EAASrW,EAAQuM,OAAO8J,OACxBtS,EAAW,GAAIC,GACf8J,EAAQhB,EAAO7V,OACfgX,EAAYjO,EAAQiO,WAAajO,EAAQuL,WAAWpS,KAAO,CAE/D,IAAI2U,EACA,IAAK/W,EAAI,EAAO+W,EAAJ/W,EAAWA,IACnBuO,EAAQD,EAASyH,EAAO/V,GAAItB,EAAKC,GACjCihB,EAAOzN,EAAK4N,QAAQxR,EAAMC,KAAMD,EAAMG,IACtCmR,EAAQvB,EAAWnM,EAAK6N,UAAYJ,EACpCE,EAAQxB,EAAWsB,EAAOzN,EAAK6N,UAC3B1B,EACAuB,EAAMvS,IAAM4J,GAAaoI,EAAS,GAAK,GAEvCQ,EAAMZ,IAAMhI,GAAaoI,EAAS,GAAK,GAE3CtS,EAAS7L,OAAOgM,EAAKC,SAAS,GAAIC,IAC9BwS,EAAMvS,GACNwS,EAAMvS,KAENsS,EAAMV,GAAKU,EAAMvS,GACjBwS,EAAMZ,GAAKY,EAAMvS,MAEjBK,MACIjL,MAAO4L,EAAM5L,MACb4V,QAAShK,EAAMgK,SAEnB/K,YAIZ,OAAOR,IAEX4I,aAAc,WAAA,GAKD5V,GAJLmS,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfuM,EAASrD,EAAKqD,OACdxI,EAAW,GAAIC,EACnB,KAASjN,EAAI,EAAOwV,EAAOtV,OAAXF,EAAmBA,IAC/BgN,EAAS7L,OAAOsL,EAAY+I,EAAOxV,GAAIiJ,EAAQuM,QAEnD,OAAOxI,IAEX0S,WAAY,WAAA,GAKJO,GAJA9N,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACfsW,EAAOtW,EAAQsW,KACfS,EAAU7N,EAAK6N,UAEfhT,EAAW,GAAIC,EAYnB,OAXIsS,GAAK7V,MAAQ,GAAK6V,EAAKjK,UACvB2K,EAAW,GAAI9S,IACXK,QACI7K,MAAO4c,EAAK5c,MACZwL,SAAUoR,EAAKpR,SACfzE,MAAO6V,EAAK7V,SAGpBuW,EAAStL,OAAOqL,EAAQ1S,GAAI0S,EAAQzS,IAAIqH,OAAOoL,EAAQb,GAAIa,EAAQd,IACnElS,EAAS7L,OAAO8e,IAEbjT,GAEX8I,YAAa,WAWT,QAAS9C,GAAOkN,EAAenH,GAC3B,GAAI/Y,GAAG+W,EAAQmJ,EAAchgB,MAC7B,IAAI6Y,EAAYzD,QACZ,IAAKtV,EAAI+Y,EAAYW,KAAU3C,EAAJ/W,EAAWA,GAAK+Y,EAAYe,KAC/C9Z,EAAI+Y,EAAYoH,WAAa,IAGjCC,EAAgBC,MAAQf,EAASU,EAAQb,GAAKa,EAAQb,GAAKpG,EAAY3W,KACvEge,EAAgBE,MAAQhB,EAASU,EAAQzS,GAAKwL,EAAY3W,KAAO4d,EAAQzS,GACzE6S,EAAgB3K,SAAWyK,EAAclgB,GACzC6V,EAAM1U,OAAOgR,EAAKoO,eAAeH,EAAiBrH,KArBrD,GACL5G,GAAOpM,KACP8P,EAAQ,GAAI5I,GACZhE,EAAUkJ,EAAKlJ,QACf+W,EAAU7N,EAAK6N,UACfV,EAASrW,EAAQuM,OAAO8J,OACxBpK,EAAYjM,EAAQmM,WAAWE,QAAUrM,EAAQiM,UAAY,EAC7DkL,GACAZ,YAAavW,EAAQuW,YACrBlB,SAAUrV,EAAQqV,SAkBtB,OAFAtL,GAAOb,EAAKqO,wBAAyBvX,EAAQmM,YAC7CpC,EAAOb,EAAKsO,wBAAyB/Z,MAAiByZ,SAAUjL,EAAYjM,EAAQkM,WAAalM,EAAQuL,aAClGqB,GAEX0K,eAAgB,SAAUtX,EAAS8P,GAAnB,GAIR2H,GAAOC,EAAKC,EAHZP,EAAQpX,EAAQoX,MAChBC,EAAQrX,EAAQqX,MAChB7K,EAAWxM,EAAQwM,QAevB,OAbIxM,GAAQqV,UACRoC,EAAQ,GAAIhT,GAAM2S,EAAO5K,GACzBkL,EAAM,GAAIjT,GAAM2S,EAAQtH,EAAY3W,KAAMqT,KAE1CiL,EAAQ,GAAIhT,GAAM+H,EAAU6K,GAC5BK,EAAM,GAAIjT,GAAM+H,EAAU6K,EAAQvH,EAAY3W,OAElDwe,EAAW,GAAIzT,IACXK,QACI7K,MAAOoW,EAAYpW,MACnB+G,MAAOqP,EAAYrP,SAExBiL,OAAO+L,GAAO9L,OAAO+L,MAI5BE,GAAgBjP,GAAQzJ,QACxBC,KAAM,SAAUyJ,EAAO5I,GACnB,GAAI6I,GAAU/L,IACd6L,IAAQI,GAAG5J,KAAK6J,KAAKH,EAASD,EAAO5I,GACrC6I,EAAQ7I,QAAUvC,GAAaoa,OAASxL,QAAStX,EAAQiL,EAAQ6X,SAAYhP,EAAQ7I,UAEzFA,SACIsJ,MAAO9B,EACPqQ,OAAShU,QAAUpD,MAAO,IAC1B/G,MAAO+N,EACP5D,QAAUpD,MAAO,GACjB6O,QAAS,EACTiE,OAAQzN,EAAW,GACnB2D,WAAaC,KAAMlC,GACnB6E,SAAS,GAEbnB,OAAQ,WAAA,GAWAkL,GAAY0B,EAAiBC,EAV7BlP,EAAU/L,KACVkD,EAAU6I,EAAQ7I,QAClB4I,EAAQC,EAAQD,MAChB4N,EAAY5N,EAAMmO,UAClBiB,EAAYhY,EAAQ6X,MAAM1e,MAAQ6G,EAAQ7G,KAC1C8e,EAAkBjY,EAAQ7G,KAAO,EACjCkd,EAASzN,EAAM5I,QAAQqW,OACvB9C,EAASzN,EAAW9F,EAAQuT,QAC5B8B,EAAWzM,EAAM5I,QAAQqV,SACzB6C,EAAQ7C,EAAW9B,EAAO8C,EAAS,OAAS,SAAW9C,EAAO8C,EAAS,SAAW,MAEtF6B,GAAQ7B,GAAU6B,EAAQA,EACtB7C,GACA0C,EAAW,GAAIhR,GAAMyP,EAAUnS,GAAK6T,EAAO1B,EAAUlS,GAAIkS,EAAUnS,GAAK6T,EAAO1B,EAAUP,IACrFI,EACA0B,EAAS1T,IAAM2T,EAEfD,EAAS7B,IAAM8B,EAEfhY,EAAQsJ,QAAU9B,IAClBsQ,EAAkB,GAAI/Q,GAAMyP,EAAUN,GAAKgC,EAAO1B,EAAUlS,GAAK2T,EAAiBzB,EAAUN,GAAKgC,EAAO1B,EAAUP,GAAKgC,GACvH7B,EAAa0B,KAGjBC,EAAW,GAAIhR,GAAMyP,EAAUnS,GAAImS,EAAUlS,GAAK4T,EAAO1B,EAAUN,GAAIM,EAAUlS,GAAK4T,GAClF7B,EACA0B,EAAS9B,IAAM+B,EAEfD,EAASzT,IAAM0T,EAEfhY,EAAQsJ,QAAU9B,IAClBsQ,EAAkB,GAAI/Q,GAAMyP,EAAUnS,GAAK4T,EAAiBzB,EAAUlS,GAAK4T,EAAO1B,EAAUN,GAAK+B,EAAiBzB,EAAUlS,GAAK4T,GACjI9B,EAAa0B,IAGrBjP,EAAQkP,SAAWA,EACnBlP,EAAQiP,gBAAkBA,EAC1BjP,EAAQzI,IAAMgW,GAAc2B,EAAShT,QAAQoT,IAAInY,EAAQ6D,OAAOpD,QAEpE2X,kBAAmB,WACf,GAAIpY,GAAUlD,KAAKkD,OACnB,QACI2E,MACIjL,MAAOsG,EAAQtG,MACf4V,QAAStP,EAAQsP,SAErB/K,OAAQxP,EAAQiL,EAAQ6D,SACpBnK,MAAOsG,EAAQ6D,OAAOpD,MAAQT,EAAQ6D,OAAOnK,OAASsG,EAAQtG,MAAQ,GACtE+G,MAAOT,EAAQ6D,OAAOpD,MACtByE,SAAUlF,EAAQ6D,OAAOqB,SACzBoK,QAAStP,EAAQsP,SACjB,OAGZ+I,QAAS,WAAA,GACDxP,GAAU/L,KACVkD,EAAU6I,EAAQ7I,QAClB4I,EAAQC,EAAQD,MAChByN,EAASzN,EAAM5I,QAAQqW,OACvB9C,EAASzN,EAAW9F,EAAQuT,QAC5B8B,EAAWzM,EAAM5I,QAAQqV,SACzB6C,EAAQ7C,EAAW9B,EAAO8C,EAAS,OAAS,SAAW9C,EAAO8C,EAAS,SAAW,MACtF,OAAO6B,MAGXnC,GAAqB6B,GAAc1Y,QACnCC,KAAM,SAAUyJ,EAAO5I,GACnB4X,GAAc7O,GAAG5J,KAAK6J,KAAKlM,KAAM8L,EAAO5I,GACpClD,KAAKkD,QAAQ7G,OAASpB,IACtB+E,KAAKkD,QAAQ7G,KAA4C,GAArC2D,KAAK8L,MAAM5I,QAAQmM,WAAWhT,OAG1Dmf,aAAc,WAAA,GASNjf,GAAKiQ,EARLJ,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf4I,EAAQM,EAAKN,MACbzP,EAAO6G,EAAQ7G,KACfkc,EAAWzM,EAAM5I,QAAQqV,SACzBkD,EAAWpf,EAAO,EAClBqf,EAAO5P,EAAM5I,QAAQqW,OAAS,GAAK,EACnCvL,EAAUlC,EAAM5I,QAAQ8K,OAiB5B,OAfIuK,IACAhc,EAAMyR,EAAU,KAAO,KACvBxB,GACI,GAAI7E,GAAM,EAAG,EAAI8T,GACjB,GAAI9T,GAAM,EAAI+T,EAAOrf,EAAM,GAC3B,GAAIsL,GAAM,EAAG,EAAI8T,MAGrBlf,EAAMyR,EAAU,KAAO,KACvBxB,GACI,GAAI7E,GAAM,EAAI8T,EAAU,GACxB,GAAI9T,GAAM,EAAG,EAAI+T,EAAOrf,GACxB,GAAIsL,GAAM,EAAI8T,EAAU,KAGzBjP,GAEXF,QAAS,WAAA,GACDF,GAAOpM,KACP8L,EAAQM,EAAKN,MACb5I,EAAUkJ,EAAKlJ,QACfyJ,EAAY,GAAIlD,GAA4B2C,EAAKnF,SAAUtG,EAAWuC,EAAQyJ,WAC9E4L,SAAUzM,EAAM5I,QAAQqV,SACxBgB,OAAQzN,EAAM5I,QAAQqW,OACtB9C,OAAQrK,EAAKmP,QAAQrY,EAAQuT,QAC7BhO,KAAMqD,EAAMkO,QAAQ9W,EAAQmJ,WAC5B1D,GAAImD,EAAMkO,QAAQ9W,EAAQhL,SAE1BgL,GAAQyJ,UAAUgB,eAAgB,IAClChB,EAAUzJ,QAAQ2J,SAAW,GAEjCF,EAAUgP,QACVhP,EAAUkB,QAEdZ,OAAQ,WAAA,GAYA4M,GAXAzN,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf+D,EAAW,GAAIC,GACf4E,EAAQM,EAAKN,MACb8P,EAAiBxP,EAAKkP,oBACtB9O,EAAQJ,EAAKoP,aAAatY,EAAQhL,MAStC,OARAgL,GAAQyJ,UAAUC,KAAOnC,EACzBxD,EAAW,GAAIG,IACXK,OAAQmU,EAAenU,OACvBI,KAAM+T,EAAe/T,OACtB+G,OAAOpC,EAAM,IAAIqC,OAAOrC,EAAM,IAAIqC,OAAOrC,EAAM,IAAIsC,QAClD+K,EAAO/N,EAAMkO,QAAQ9W,EAAQhL,OACjC+O,EAASqG,UAAUnD,EAAImD,YAAYoE,UAAUmI,EAAKtS,GAAIsS,EAAKrS,KAC3D4E,EAAKnF,SAAWA,EACTA,KAGXiS,GAAmB4B,GAAc1Y,QACjCC,KAAM,SAAUyJ,EAAO5I,GACnB4X,GAAc7O,GAAG5J,KAAK6J,KAAKlM,KAAM8L,EAAO5I,GACpClD,KAAKkD,QAAQ7G,OAASpB,IACtB+E,KAAKkD,QAAQ7G,KAA4C,GAArC2D,KAAK8L,MAAM5I,QAAQmM,WAAWhT,OAG1Dmf,aAAc,SAAUtjB,GAAV,GAgBN2jB,GAUAC,EACAC,EA1BA3P,EAAOpM,KACPkD,EAAUkJ,EAAKlJ,QACf4I,EAAQM,EAAKN,MACbyM,EAAWzM,EAAM5I,QAAQqV,SACzBgB,EAASzN,EAAM5I,QAAQqW,OACvByC,EAAMzC,GAAUhB,EAAW,GAAK,EAChClc,EAAO6G,EAAQ7G,KAAO2f,EACtBC,EAAUnQ,EAAMkO,QAAQlO,EAAM5I,QAAQvK,KACtCkhB,EAAO/N,EAAMkO,QAAQ9hB,GACrBgkB,EAAO3D,EAAW3M,GAAID,GACtBwQ,EAAW5D,EAAW5M,GAAIC,GAC1B6K,EAASrK,EAAKmP,UAAYS,EAC1BI,EAAK,GAAIzU,EAsBb,OArBAyU,GAAGF,GAAQD,EAAQC,EAAO,KAC1BE,EAAGD,GAAYF,EAAQE,EAAW,KAC9BN,EAAK,GAAIlU,GACbkU,EAAGK,GAAQrC,EAAKqC,EAAO,KACvBL,EAAGM,GAAYtC,EAAKsC,EAAW,KAC3B5D,GACA6D,EAAG1K,UAAU+E,EAAQ,GACrBoF,EAAGnK,UAAU+E,EAAQ,KAErB2F,EAAG1K,UAAU,EAAG+E,GAChBoF,EAAGnK,UAAU,EAAG+E,IAEhBqF,EAAKD,EAAG5T,QACR8T,EAAKK,EAAGnU,QACRsQ,GACAuD,EAAGpK,UAAUrV,EAAM,GACnB0f,EAAGrK,UAAUrV,EAAM,KAEnByf,EAAGpK,UAAU,EAAGrV,GAChB0f,EAAGrK,UAAU,EAAGrV,KAGhB+f,EACAP,EACAC,EACAC,IAGRzP,QAAS,WAAA,GAQDK,GAPAP,EAAOpM,KACP8L,EAAQM,EAAKN,MACb5I,EAAUkJ,EAAKlJ,QACfsJ,EAAQJ,EAAKoP,aAAatY,EAAQhL,OAClCmkB,EAAcjQ,EAAKnF,SAASH,SAAS,GACrCwV,EAAWlQ,EAAKoP,aAAatY,EAAQmJ,UACzCgQ,GAAYzN,OAAOpC,EAAM,IAAIqC,OAAOrC,EAAM,IAAIqC,OAAOrC,EAAM,IAAIqC,OAAOrC,EAAM,IAAIsC,QAC5EnC,EAAY,GAAIjD,GAA0B2S,EAAa1b,EAAWuC,EAAQyJ,WAC1EqB,QAASlC,EAAM5I,QAAQ8K,QACvBuK,SAAUzM,EAAM5I,QAAQqV,SACxBgE,WACID,EAAS,GACTA,EAAS,IAEbE,WACIhQ,EAAM,GACNA,EAAM,OAGVtJ,EAAQyJ,UAAUgB,eAAgB,IAClChB,EAAUzJ,QAAQ2J,SAAW,GAEjCF,EAAUgP,QACVhP,EAAUkB,QAEdZ,OAAQ,WAAA,GACAb,GAAOpM,KACPyc,EAAQ,GAAIvV,GACZ0U,EAAiBxP,EAAKkP,oBACtBvP,EAAU,GAAI3E,IACdK,OAAQmU,EAAenU,OACvBI,KAAM+T,EAAe/T,MAIzB,OAFA4U,GAAMrhB,OAAO2Q,GACbK,EAAKnF,SAAWwV,EACTA,KAGX7O,GAAyBvD,EAAKqS,UAAUta,QACxCC,KAAM,SAAUmD,EAAStC,GACrBmH,EAAKqS,UAAUzQ,GAAG5J,KAAK6J,KAAKlM,KAAMwF,EAAStC,GAC3CA,EAAUlD,KAAKkD,QACfA,EAAQ2J,SAAWrU,EAAKI,IAAIJ,EAAKmf,IAAIzU,EAAQwK,SAAWxK,EAAQsK,UAAYtK,EAAQ2J,SAAW,IAAM,IAEzG3J,SACIyZ,OAAQpR,EACRsB,SAAUvC,GAEdyJ,KAAM,SAAUxX,GAAV,GACEqgB,GAAO5c,KACPkD,EAAU0Z,EAAK1Z,QACfmK,EAAQnD,EAAiBhH,EAAQsK,SAAUtK,EAAQwK,SAAUnR,EACjEqgB,GAAKpX,QAAQ8H,UAAUnD,EAAImD,YAAYC,OAAOF,EAAOnK,EAAQiK,WAGrE9C,GAAKwS,iBAAiB/a,QAAQgb,SAASpR,GAAgBkC,IACnDnE,EAA8BY,EAAKqS,UAAUta,QAC7Cc,SACIyZ,OAAQpR,EACRsB,SAAUtC,GAEdoR,MAAO,WAAA,GAaCoB,GACAC,EAbA9Z,EAAUlD,KAAKkD,QACfuT,EAASvT,EAAQuT,OACjBhO,EAAOvF,EAAQuF,KACfE,EAAKzF,EAAQyF,GACbuT,EAAOhZ,EAAQqV,SAAW,KAAO,IACjCrV,GAAQqW,QAAUrW,EAAQqV,UAC1B9P,EAAKyT,IAASzF,EACd9N,EAAGuT,IAASzF,IAEZhO,EAAKyT,IAASzF,EACd9N,EAAGuT,IAASzF,GAEZsG,EAAY/c,KAAK+c,UAAY,GAAIpV,GAAMc,EAAKlB,GAAIkB,EAAKjB,IACrDwV,EAAUhd,KAAKgd,QAAU,GAAIrV,GAAMgB,EAAGpB,GAAIoB,EAAGnB,IACxB,IAArBtE,EAAQ2J,WACR3J,EAAQ2J,SAAWrU,EAAKI,IAAImkB,EAAUE,WAAWD,GAAW9Z,EAAQ2J,SAAW,IAAM,KAG7FkH,KAAM,SAAUxX,GAAV,GACE2gB,GAAahT,EAAiBlK,KAAK+c,UAAU3d,EAAGY,KAAKgd,QAAQ5d,EAAG7C,GAChE4gB,EAAajT,EAAiBlK,KAAK+c,UAAU5T,EAAGnJ,KAAKgd,QAAQ7T,EAAG5M,EACpEyD,MAAKwF,QAAQ8H,UAAUnD,EAAImD,YAAYoE,UAAUwL,EAAYC,OAGrE9S,EAAKwS,iBAAiB/a,QAAQgb,SAASrS,EAAehB,GAClDC,EAA4BW,EAAKqS,UAAUta,QAC3Cc,SACIyZ,OAAQpR,EACR6R,MAAO7S,GAEXoR,MAAO,WAAA,GACCzY,GAAUlD,KAAKkD,QACfsZ,EAAYtZ,EAAQsZ,UACpBD,EAAYrZ,EAAQqZ,UACpBL,EAAOlc,KAAKkc,KAAOhZ,EAAQqV,SAAW3M,GAAID,GAC1ChD,EAAK3I,KAAK2I,GAAK6T,EAAU,GAAGN,GAC5BzT,EAAOzI,KAAKyI,KAAO8T,EAAU,GAAGL,EACX,KAArBhZ,EAAQ2J,WACR3J,EAAQ2J,SAAWrU,EAAKI,IAAIJ,EAAKmf,IAAIhP,EAAKF,GAAQvF,EAAQka,MAAQ,IAAM,IAE5Epd,KAAKqd,KAAK5U,IAEdsL,KAAM,SAAUxX,GACZ,GAAIrE,GAAQgS,EAAiBlK,KAAKyI,KAAMzI,KAAK2I,GAAIpM,EACjDyD,MAAKqd,KAAKnlB,IAEdmlB,KAAM,SAAUnlB,GAAV,GACEolB,GAAS,MAAQtd,KAAKkc,KAAKqB,cAC3BC,EAASxd,KAAKkD,QAAQsZ,SAC1BgB,GAAO,GAAGF,GAAQplB,GAClBslB,EAAO,GAAGF,GAAQplB,MAG1BmS,EAAKwS,iBAAiB/a,QAAQgb,SAASpS,EAAahB,GAgEpDtI,EAAQwI,GAAG6T,OAAO5G,IAClBzV,EAAQwI,GAAG6T,OAAOpF,IAClBjX,EAAQsc,YAAYtb,OAAOqS,GAAMxI,IACjCtL,EAAWS,GACPqT,MAAOA,GACPlI,cAAeA,GACfuO,cAAeA,GACf7B,mBAAoBA,GACpBC,iBAAkBA,GAClBF,YAAaA,GACb9J,YAAaA,GACbmJ,YAAaA,GACbxB,YAAaA,MAEnBnW,OAAOhF,MAAM6I,QACR7D,OAAOhF,OACE,kBAAV1D,SAAwBA,OAAOqJ,IAAMrJ,OAAS,SAAUsJ,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.dataviz.gauge.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                if (id in cache) {\n                    return cache[id];\n                }\n                return f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = {\n                    width: 0,\n                    height: 0,\n                    baseline: 0\n                };\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function (e) {\n                this.trigger('geometryChange', e);\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.gauge', [\n        'kendo.dataviz.core',\n        'kendo.drawing',\n        'kendo.dataviz.themes'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.gauge',\n        name: 'Gauge',\n        category: 'dataviz',\n        description: 'Radial and Linear gauges.',\n        depends: [\n            'dataviz.core',\n            'dataviz.themes'\n        ]\n    };\n    (function ($, undefined) {\n        var math = Math, kendo = window.kendo, util = kendo.util, Widget = kendo.ui.Widget, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, autoMajorUnit = dataviz.autoMajorUnit, ChartElement = dataviz.ChartElement, NumericAxis = dataviz.NumericAxis, Axis = dataviz.Axis, Box2D = dataviz.Box2D, Class = kendo.Class, defined = util.defined, isNumber = util.isNumber, interpolateValue = dataviz.interpolateValue, getSpacing = dataviz.getSpacing, round = dataviz.round, geo = dataviz.geometry, draw = dataviz.drawing, Point = geo.Point, Group = draw.Group, Path = draw.Path, Rect = geo.Rect, Text = draw.Text;\n        var ANGULAR_SPEED = 150, LINEAR_SPEED = 250, ARROW = 'arrow', ARROW_POINTER = 'arrowPointer', BAR_POINTER = 'barPointer', BLACK = '#000', CAP_SIZE = 0.05, COORD_PRECISION = dataviz.COORD_PRECISION, MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, DEFAULT_HEIGHT = 200, DEFAULT_LINE_WIDTH = 0.5, DEFAULT_WIDTH = 200, DEFAULT_MIN_WIDTH = 60, DEFAULT_MIN_HEIGHT = 60, DEFAULT_MARGIN = 5, DEGREE = math.PI / 180, GEO_ARC_ADJUST_ANGLE = 180, INSIDE = 'inside', LINEAR = 'linear', NEEDLE = 'needle', OUTSIDE = 'outside', RADIAL_POINTER = 'radialPointer', X = 'x', Y = 'y';\n        var Pointer = Class.extend({\n            init: function (scale, options) {\n                var pointer = this;\n                var scaleOptions = scale.options;\n                ChartElement.fn.init.call(pointer, options);\n                options = pointer.options;\n                options.fill = options.color;\n                pointer.scale = scale;\n                if (defined(options.value)) {\n                    options.value = math.min(math.max(options.value, scaleOptions.min), scaleOptions.max);\n                } else {\n                    options.value = scaleOptions.min;\n                }\n            },\n            options: { color: BLACK },\n            value: function (newValue) {\n                var that = this;\n                var options = that.options;\n                var value = options.value;\n                var scaleOptions = that.scale.options;\n                if (arguments.length === 0) {\n                    return value;\n                }\n                options._oldValue = options._oldValue !== undefined ? options.value : scaleOptions.min;\n                options.value = math.min(math.max(newValue, scaleOptions.min), scaleOptions.max);\n                if (that.elements) {\n                    that.repaint();\n                }\n            }\n        });\n        var RadialPointer = Pointer.extend({\n            options: {\n                shape: NEEDLE,\n                cap: { size: CAP_SIZE },\n                arrow: {\n                    width: 16,\n                    height: 14\n                },\n                animation: {\n                    type: RADIAL_POINTER,\n                    duration: ANGULAR_SPEED\n                }\n            },\n            setRadius: function (radius) {\n                var that = this;\n                if (radius) {\n                    that.elements.clear();\n                    that.render(that.parent, that.center, radius);\n                }\n            },\n            setAngle: function (angle) {\n                this.elements.transform(geo.transform().rotate(angle, this.center));\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var oldAngle = scale.slotAngle(options._oldValue);\n                var newAngle = scale.slotAngle(options.value);\n                if (options.animation.transitions === false) {\n                    that.setAngle(newAngle);\n                } else {\n                    new RadialPointerAnimation(that.elements, deepExtend(options.animation, {\n                        oldAngle: oldAngle,\n                        newAngle: newAngle\n                    })).play();\n                }\n            },\n            render: function () {\n                var that = this;\n                var scale = that.scale;\n                var center = scale.arc.center;\n                var options = that.options;\n                var elements = new Group();\n                if (options.animation !== false) {\n                    deepExtend(options.animation, {\n                        startAngle: 0,\n                        center: center,\n                        reverse: scale.options.reverse\n                    });\n                }\n                if (options.shape === NEEDLE) {\n                    elements.append(that._renderNeedle(), that._renderCap());\n                } else {\n                    elements.append(that._renderArrow());\n                }\n                that.elements = elements;\n                that.setAngle(DEGREE);\n                return elements;\n            },\n            reflow: function (arc) {\n                var that = this;\n                var center = that.center = arc.center;\n                var radius = that.radius = arc.getRadiusX();\n                var capSize = that.capSize = Math.round(radius * that.options.cap.size);\n                that.bbox = Rect.fromPoints(new Point(center.x - capSize, center.y - capSize), new Point(center.x + capSize, center.y + capSize));\n            },\n            _renderNeedle: function () {\n                var that = this;\n                var options = that.options;\n                var minorTickSize = that.scale.options.minorTicks.size;\n                var center = that.center;\n                var needleColor = options.color;\n                var needlePath = new Path({\n                    fill: { color: needleColor },\n                    stroke: {\n                        color: needleColor,\n                        width: DEFAULT_LINE_WIDTH\n                    }\n                });\n                needlePath.moveTo(center.x + that.radius - minorTickSize, center.y).lineTo(center.x, center.y - that.capSize / 2).lineTo(center.x, center.y + that.capSize / 2).close();\n                return needlePath;\n            },\n            _renderCap: function () {\n                var that = this;\n                var options = that.options;\n                var capColor = options.cap.color || options.color;\n                var circle = new geo.Circle(that.center, that.capSize);\n                var cap = new draw.Circle(circle, {\n                    fill: { color: capColor },\n                    stroke: { color: capColor }\n                });\n                return cap;\n            }\n        });\n        var RadialScale = NumericAxis.extend({\n            init: function (options) {\n                var scale = this;\n                scale.options = deepExtend({}, scale.options, options);\n                scale.options.majorUnit = scale.options.majorUnit || autoMajorUnit(scale.options.min, scale.options.max);\n                scale.options.minorUnit = scale.options.minorUnit || scale.options.majorUnit / 10;\n                Axis.fn.init.call(scale, scale.options);\n            },\n            options: {\n                min: 0,\n                max: 100,\n                majorTicks: {\n                    size: 15,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                minorTicks: {\n                    size: 10,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                startAngle: -30,\n                endAngle: 210,\n                labels: {\n                    position: INSIDE,\n                    padding: 2\n                }\n            },\n            render: function (center, radius) {\n                var that = this;\n                var arc = that.renderArc(center, radius);\n                that.bbox = arc.bbox();\n                that.labelElements = that.renderLabels();\n                that.ticks = that.renderTicks();\n                that.ranges = that.renderRanges();\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var center = bbox.center();\n                var radius = math.min(bbox.height(), bbox.width()) / 2;\n                if (that.bbox !== undefined) {\n                    that.bbox = that.arc.bbox();\n                    that.radius(that.arc.getRadiusX());\n                    that.repositionRanges();\n                    that.renderLabels();\n                } else {\n                    return that.render(center, radius);\n                }\n            },\n            slotAngle: function (value) {\n                var options = this.options;\n                var startAngle = options.startAngle;\n                var reverse = options.reverse;\n                var angle = options.endAngle - startAngle;\n                var min = options.min;\n                var max = options.max;\n                var result;\n                if (reverse) {\n                    result = options.endAngle - (value - min) / (max - min) * angle;\n                } else {\n                    result = (value - min) / (max - min) * angle + startAngle;\n                }\n                return result + GEO_ARC_ADJUST_ANGLE;\n            },\n            renderLabels: function () {\n                var that = this;\n                var options = that.options;\n                var majorTickSize = options.majorTicks.size;\n                var arc = that.arc.clone();\n                var radius = arc.getRadiusX();\n                var tickAngles = that.tickAngles(arc, options.majorUnit);\n                var labels = that.labels;\n                var count = labels.length;\n                var labelsOptions = options.labels;\n                var padding = labelsOptions.padding;\n                var rangeDistance = radius * 0.05;\n                var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n                var ranges = options.ranges || [];\n                var halfWidth, halfHeight, labelAngle;\n                var angle, label, lp, i, cx, cy, isInside;\n                var labelsGroup = new Group();\n                var lbl, labelPos, prevLabelPos, labelTransform;\n                if (that.options.rangeDistance !== undefined) {\n                    rangeDistance = that.options.rangeDistance;\n                } else {\n                    that.options.rangeDistance = rangeDistance;\n                }\n                if (labelsOptions.position === INSIDE) {\n                    radius -= majorTickSize;\n                    if (ranges.length && that.labelElements === undefined) {\n                        radius -= rangeSize + rangeDistance;\n                    }\n                    arc.setRadiusX(radius).setRadiusY(radius);\n                }\n                for (i = 0; i < count; i++) {\n                    label = labels[i];\n                    halfWidth = label.box.width() / 2;\n                    halfHeight = label.box.height() / 2;\n                    angle = tickAngles[i];\n                    labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n                    isInside = labelsOptions.position === INSIDE;\n                    lp = arc.pointAt(angle);\n                    cx = lp.x + math.cos(labelAngle) * (halfWidth + padding) * (isInside ? 1 : -1);\n                    cy = lp.y + math.sin(labelAngle) * (halfHeight + padding) * (isInside ? 1 : -1);\n                    label.reflow(new dataviz.Box2D(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n                    labelPos = new Point(label.box.x1, label.box.y1);\n                    if (that.labelElements === undefined) {\n                        lbl = _buildLabel(label, options.labels);\n                        labelsGroup.append(lbl);\n                    } else {\n                        lbl = that.labelElements.children[i];\n                        prevLabelPos = lbl.bbox().origin;\n                        labelTransform = lbl.transform() || geo.transform();\n                        labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                        lbl.transform(labelTransform);\n                    }\n                    that.bbox = Rect.union(that.bbox, lbl.bbox());\n                }\n                return labelsGroup;\n            },\n            repositionRanges: function () {\n                var that = this;\n                var ranges = that.ranges.children;\n                var rangeSize = that.options.rangeSize;\n                var rangeDistance = that.options.rangeDistance;\n                var rangeRadius, newRadius;\n                if (ranges.length > 0) {\n                    rangeRadius = that.getRangeRadius();\n                    if (that.options.labels.position === INSIDE) {\n                        rangeRadius += rangeSize + rangeDistance;\n                    }\n                    newRadius = rangeRadius + rangeSize / 2;\n                    for (var i = 0; i < ranges.length; i++) {\n                        ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n                    }\n                    that.bbox = Rect.union(that.bbox, that.ranges.bbox());\n                }\n            },\n            renderRanges: function () {\n                var that = this;\n                var arc = that.arc;\n                var result = new Group();\n                var from, to;\n                var segments = that.rangeSegments();\n                var segmentsCount = segments.length;\n                var reverse = that.options.reverse;\n                var rangeSize = that.options.rangeSize;\n                var rangeDistance = that.options.rangeDistance;\n                var segment, rangeRadius, rangeGeom, i;\n                if (segmentsCount) {\n                    rangeRadius = that.getRangeRadius();\n                    that.radius(that.radius() - rangeSize - rangeDistance);\n                    for (i = 0; i < segmentsCount; i++) {\n                        segment = segments[i];\n                        from = that.slotAngle(segment[reverse ? 'to' : 'from']);\n                        to = that.slotAngle(segment[!reverse ? 'to' : 'from']);\n                        if (to - from !== 0) {\n                            rangeGeom = new geo.Arc(arc.center, {\n                                radiusX: rangeRadius + rangeSize / 2,\n                                radiusY: rangeRadius + rangeSize / 2,\n                                startAngle: from,\n                                endAngle: to\n                            });\n                            result.append(new draw.Arc(rangeGeom, {\n                                stroke: {\n                                    width: rangeSize,\n                                    color: segment.color,\n                                    opacity: segment.opacity\n                                }\n                            }));\n                        }\n                    }\n                }\n                return result;\n            },\n            rangeSegments: function () {\n                var gauge = this;\n                var options = gauge.options;\n                var ranges = options.ranges || [];\n                var count = ranges.length;\n                var range;\n                var segmentsCount;\n                var defaultColor = options.rangePlaceholderColor;\n                var segments = [];\n                var segment;\n                var min = options.min;\n                var max = options.max;\n                var i, j;\n                function rangeSegment(from, to, color, opacity) {\n                    return {\n                        from: from,\n                        to: to,\n                        color: color,\n                        opacity: opacity\n                    };\n                }\n                if (count) {\n                    segments.push(rangeSegment(min, max, defaultColor));\n                    for (i = 0; i < count; i++) {\n                        range = getRange(ranges[i], min, max);\n                        segmentsCount = segments.length;\n                        for (j = 0; j < segmentsCount; j++) {\n                            segment = segments[j];\n                            if (segment.from <= range.from && range.from <= segment.to) {\n                                segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n                                if (segment.from <= range.to && range.to <= segment.to) {\n                                    segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                                }\n                                segment.to = range.from;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return segments;\n            },\n            getRangeRadius: function () {\n                var that = this;\n                var options = that.options;\n                var majorTickSize = options.majorTicks.size;\n                var rangeSize = options.rangeSize;\n                var rangeDistance = options.rangeDistance;\n                var arc = that.arc;\n                var r;\n                if (options.labels.position === OUTSIDE) {\n                    r = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n                } else {\n                    r = arc.getRadiusX() - rangeSize;\n                }\n                return r;\n            },\n            renderArc: function (center, radius) {\n                var that = this;\n                var options = that.options;\n                var arc = that.arc = new geo.Arc(center, {\n                    radiusX: radius,\n                    radiusY: radius,\n                    startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n                    endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n                });\n                return arc;\n            },\n            renderTicks: function () {\n                var that = this;\n                var arc = that.arc;\n                var options = that.options;\n                var labelsPosition = options.labels.position;\n                var allTicks = new Group();\n                var majorTickSize = options.majorTicks.size;\n                var minorTickSize = options.minorTicks.size;\n                var tickArc = arc.clone();\n                var radius = tickArc.getRadiusX();\n                function drawTicks(arc, tickAngles, unit, tickOptions) {\n                    var ticks = new Group(), center = arc.center, radius = arc.getRadiusX(), i, tickStart, tickEnd, visible = tickOptions.visible;\n                    if (visible) {\n                        for (i = 0; i < tickAngles.length; i++) {\n                            tickStart = arc.pointAt(tickAngles[i]);\n                            tickEnd = new Point(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n                            ticks.append(new Path({\n                                stroke: {\n                                    color: tickOptions.color,\n                                    width: tickOptions.width\n                                }\n                            }).moveTo(tickStart).lineTo(tickEnd));\n                        }\n                    }\n                    return ticks;\n                }\n                that.majorTickAngles = that.tickAngles(arc, options.majorUnit);\n                that.majorTicks = drawTicks(tickArc, that.majorTickAngles, options.majorUnit, options.majorTicks);\n                allTicks.append(that.majorTicks);\n                that._tickDifference = majorTickSize - minorTickSize;\n                if (labelsPosition === OUTSIDE) {\n                    tickArc.setRadiusX(radius - majorTickSize + minorTickSize).setRadiusY(radius - majorTickSize + minorTickSize);\n                }\n                that.minorTickAngles = that.normalizeTickAngles(that.tickAngles(arc, options.minorUnit));\n                that.minorTicks = drawTicks(tickArc, that.minorTickAngles, options.minorUnit, options.minorTicks, options.majorUnit);\n                allTicks.append(that.minorTicks);\n                return allTicks;\n            },\n            normalizeTickAngles: function (angles) {\n                var that = this;\n                var options = that.options;\n                var skip = options.majorUnit / options.minorUnit;\n                for (var i = angles.length - 1; i >= 0; i--) {\n                    if (i % skip === 0) {\n                        angles.splice(i, 1);\n                    }\n                }\n                return angles;\n            },\n            tickAngles: function (ring, stepValue) {\n                var scale = this;\n                var options = scale.options;\n                var reverse = options.reverse;\n                var range = options.max - options.min;\n                var angle = ring.endAngle - ring.startAngle;\n                var pos = ring.startAngle;\n                var tickCount = range / stepValue;\n                var step = angle / tickCount;\n                var positions = [];\n                var i;\n                if (reverse) {\n                    pos += angle;\n                    step = -step;\n                }\n                for (i = 0; i < tickCount; i++) {\n                    positions.push(round(pos, COORD_PRECISION));\n                    pos += step;\n                }\n                if (round(pos) <= ring.endAngle) {\n                    positions.push(pos);\n                }\n                return positions;\n            },\n            radius: function (radius) {\n                var that = this;\n                if (radius) {\n                    that.arc.setRadiusX(radius).setRadiusY(radius);\n                    that.repositionTicks(that.majorTicks.children, that.majorTickAngles);\n                    that.repositionTicks(that.minorTicks.children, that.minorTickAngles, true);\n                } else {\n                    return that.arc.getRadiusX();\n                }\n            },\n            repositionTicks: function (ticks, tickAngles, minor) {\n                var that = this;\n                var diff = minor ? that._tickDifference || 0 : 0;\n                var tickArc = that.arc;\n                var radius = tickArc.getRadiusX();\n                if (minor && that.options.labels.position === OUTSIDE && diff !== 0) {\n                    tickArc = that.arc.clone();\n                    tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n                }\n                for (var i = 0; i < ticks.length; i++) {\n                    var newPoint = tickArc.pointAt(tickAngles[i]);\n                    var segments = ticks[i].segments;\n                    var xDiff = newPoint.x - segments[0].anchor().x;\n                    var yDiff = newPoint.y - segments[0].anchor().y;\n                    ticks[i].transform(new geo.Transformation().translate(xDiff, yDiff));\n                }\n            }\n        });\n        var Gauge = Widget.extend({\n            init: function (element, userOptions) {\n                var gauge = this;\n                var options;\n                var themeOptions;\n                var themeName;\n                var themes = dataviz.ui.themes || {};\n                var theme;\n                kendo.destroy(element);\n                $(element).empty();\n                Widget.fn.init.call(gauge, element);\n                gauge.wrapper = gauge.element;\n                gauge._originalOptions = deepExtend({}, userOptions);\n                options = deepExtend({}, gauge.options, userOptions);\n                themeName = options.theme;\n                theme = themes[themeName] || themes[themeName.toLowerCase()];\n                themeOptions = themeName && theme ? theme.gauge : {};\n                gauge.options = deepExtend({}, themeOptions, options);\n                if ($.isArray(options.pointer)) {\n                    for (var i = 0; i < options.pointer.length; i++) {\n                        gauge.options.pointer[i] = deepExtend({}, themeOptions.pointer, options.pointer[i]);\n                    }\n                }\n                gauge.element.addClass('k-gauge');\n                gauge.surface = gauge._createSurface();\n                gauge.redraw();\n            },\n            options: {\n                plotArea: {},\n                theme: 'default',\n                renderAs: '',\n                pointer: {},\n                scale: {},\n                gaugeArea: {}\n            },\n            destroy: function () {\n                this.surface.destroy();\n                Widget.fn.destroy.call(this);\n            },\n            value: function (value) {\n                var that = this;\n                var pointer = that.pointers[0];\n                if (arguments.length === 0) {\n                    return pointer.value();\n                }\n                pointer.value(value);\n                that._setValueOptions(value);\n            },\n            _draw: function () {\n                var surface = this.surface;\n                surface.clear();\n                surface.draw(this._visuals);\n            },\n            exportVisual: function () {\n                return this._visuals;\n            },\n            allValues: function (values) {\n                var that = this;\n                var pointers = that.pointers;\n                var allValues = [];\n                var i;\n                if (arguments.length === 0) {\n                    for (i = 0; i < pointers.length; i++) {\n                        allValues.push(pointers[i].value());\n                    }\n                    return allValues;\n                }\n                if ($.isArray(values)) {\n                    for (i = 0; i < values.length; i++) {\n                        if (isNumber(values[i])) {\n                            pointers[i].value(values[i]);\n                        }\n                    }\n                }\n                that._setValueOptions(values);\n            },\n            _setValueOptions: function (values) {\n                var pointers = [].concat(this.options.pointer);\n                values = [].concat(values);\n                for (var i = 0; i < values.length; i++) {\n                    pointers[i].value = values[i];\n                }\n            },\n            _resize: function () {\n                var that = this;\n                var t = that.options.transitions;\n                var i;\n                that.options.transitions = false;\n                for (i = 0; i < that.pointers.length; i++) {\n                    that.pointers[i].options.animation.transitions = false;\n                }\n                that.redraw();\n                that.options.transitions = t;\n                for (i = 0; i < that.pointers.length; i++) {\n                    that.pointers[i].options.animation.transitions = t;\n                }\n            },\n            redraw: function () {\n                var that = this;\n                var size = deepExtend(that._getSize(), that.options.gaugeArea);\n                var wrapper = new Rect([\n                    0,\n                    0\n                ], [\n                    size.width,\n                    size.height\n                ]);\n                var bbox;\n                that.surface.clear();\n                that.gaugeArea = that._createGaugeArea();\n                that.surface.element.css({\n                    width: size.width,\n                    height: size.height\n                });\n                that._createModel();\n                bbox = _unpad(wrapper.bbox(), that._gaugeAreaMargin);\n                that.reflow(bbox);\n            },\n            _createGaugeArea: function () {\n                var that = this;\n                var options = that.options.gaugeArea;\n                var size = that.surface.size();\n                var border = options.border || {};\n                var areaGeometry = new Rect([\n                    0,\n                    0\n                ], [\n                    size.width,\n                    size.height\n                ]);\n                that._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n                if (border.width > 0) {\n                    areaGeometry = _unpad(areaGeometry, border.width);\n                }\n                var gaugeArea = Path.fromRect(areaGeometry, {\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType,\n                        lineJoin: 'round',\n                        lineCap: 'round'\n                    },\n                    fill: { color: options.background }\n                });\n                return gaugeArea;\n            },\n            _createSurface: function () {\n                var that = this;\n                var options = that.options;\n                var size = that._getSize();\n                size = options.gaugeArea ? deepExtend(size, options.gaugeArea) : size;\n                var wrap = $('<div></div>').appendTo(that.element).css({\n                    width: size.width,\n                    height: size.height\n                });\n                return new draw.Surface.create(wrap, { type: options.renderAs });\n            },\n            getSize: function () {\n                return this._getSize();\n            },\n            _getSize: function () {\n                var that = this;\n                var element = that.element;\n                var width = element.width();\n                var height = element.height();\n                if (!width) {\n                    width = DEFAULT_WIDTH;\n                }\n                if (!height) {\n                    height = DEFAULT_HEIGHT;\n                }\n                return {\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        var RadialGauge = Gauge.extend({\n            init: function (element, options) {\n                var radialGauge = this;\n                Gauge.fn.init.call(radialGauge, element, options);\n                kendo.notify(radialGauge, dataviz.ui);\n            },\n            options: {\n                name: 'RadialGauge',\n                transitions: true,\n                gaugeArea: { background: '' }\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var pointers = that.pointers;\n                that.scale.reflow(bbox);\n                that._initialPlotArea = that.scale.bbox;\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.scale.arc);\n                    that._initialPlotArea = Rect.union(that._initialPlotArea, pointers[i].bbox);\n                }\n                that.fitScale(bbox);\n                that.alignScale(bbox);\n                that._buildVisual(that.gaugeArea, pointers, that.scale);\n                that._draw();\n            },\n            _buildVisual: function (gaugeArea, pointers, scale) {\n                var visuals = new Group();\n                var current;\n                visuals.append(gaugeArea);\n                visuals.append(scale.ticks);\n                visuals.append(scale.ranges);\n                for (var i = 0; i < pointers.length; i++) {\n                    current = pointers[i];\n                    current.render();\n                    visuals.append(current.elements);\n                    current.value(current.options.value);\n                }\n                visuals.append(scale.labelElements);\n                this._visuals = visuals;\n            },\n            fitScale: function (bbox) {\n                var that = this;\n                var scale = that.scale;\n                var arc = scale.arc;\n                var plotAreaBox = that._initialPlotArea;\n                var step = math.abs(that.getDiff(plotAreaBox, bbox));\n                var min = round(step, COORD_PRECISION);\n                var max = round(-step, COORD_PRECISION);\n                var minDiff, midDiff, maxDiff, mid, oldDiff;\n                var staleFlag = 0;\n                var i = 0;\n                while (i++ < 100) {\n                    staleFlag = oldDiff === maxDiff ? staleFlag + 1 : 0;\n                    if (staleFlag > 5) {\n                        break;\n                    }\n                    if (min != mid) {\n                        minDiff = that.getPlotBox(min, bbox, arc);\n                        if (0 <= minDiff && minDiff <= 2) {\n                            break;\n                        }\n                    }\n                    if (max != mid) {\n                        maxDiff = that.getPlotBox(max, bbox, arc);\n                        if (0 <= maxDiff && maxDiff <= 2) {\n                            break;\n                        }\n                    }\n                    if (minDiff > 0 && maxDiff > 0) {\n                        mid = min * 2;\n                    } else if (minDiff < 0 && maxDiff < 0) {\n                        mid = max * 2;\n                    } else {\n                        mid = round((min + max) / 2 || 1, COORD_PRECISION);\n                    }\n                    midDiff = that.getPlotBox(mid, bbox, arc);\n                    if (0 <= midDiff && midDiff <= 2) {\n                        break;\n                    }\n                    oldDiff = maxDiff;\n                    if (midDiff > 0) {\n                        max = mid;\n                        maxDiff = midDiff;\n                    } else {\n                        min = mid;\n                        minDiff = midDiff;\n                    }\n                }\n            },\n            getPlotBox: function (step, bbox, arc) {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var radius = arc.getRadiusX();\n                arc = arc.clone();\n                arc.setRadiusX(radius + step).setRadiusY(radius + step);\n                scale.arc = arc;\n                scale.reflow(bbox);\n                that.plotBbox = scale.bbox;\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(arc);\n                    that.plotBbox = Rect.union(that.plotBbox, pointers[i].bbox);\n                }\n                return that.getDiff(that.plotBbox, bbox);\n            },\n            getDiff: function (plotBox, box) {\n                return math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n            },\n            alignScale: function (bbox) {\n                var that = this;\n                var plotBoxCenter = that.plotBbox.center();\n                var boxCenter = bbox.center();\n                var paddingX = plotBoxCenter.x - boxCenter.x;\n                var paddingY = plotBoxCenter.y - boxCenter.y;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                scale.arc.center.x -= paddingX;\n                scale.arc.center.y -= paddingY;\n                scale.reflow(bbox);\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(scale.arc);\n                    that.plotBbox = Rect.union(scale.bbox, pointers[i].bbox);\n                }\n            },\n            _createModel: function () {\n                var that = this;\n                var options = that.options;\n                var pointers = options.pointer;\n                var scale = that.scale = new RadialScale(options.scale);\n                var current;\n                that.pointers = [];\n                pointers = $.isArray(pointers) ? pointers : [pointers];\n                for (var i = 0; i < pointers.length; i++) {\n                    current = new RadialPointer(scale, deepExtend({}, pointers[i], { animation: { transitions: options.transitions } }));\n                    that.pointers.push(current);\n                }\n            }\n        });\n        var LinearGauge = Gauge.extend({\n            init: function (element, options) {\n                var linearGauge = this;\n                Gauge.fn.init.call(linearGauge, element, options);\n                kendo.notify(linearGauge, dataviz.ui);\n            },\n            options: {\n                name: 'LinearGauge',\n                transitions: true,\n                gaugeArea: { background: '' },\n                scale: { vertical: true }\n            },\n            reflow: function (bbox) {\n                var that = this;\n                var pointers = that.pointers;\n                var bboxX = bbox.origin.x;\n                var bboxY = bbox.origin.y;\n                var bbox2D = new dataviz.Box2D(bboxX, bboxX, bboxX + bbox.width(), bboxY + bbox.height());\n                that.scale.reflow(bbox2D);\n                for (var i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow();\n                }\n                that.bbox = that._getBox(bbox2D);\n                that._alignElements();\n                that._shrinkElements();\n                that._buildVisual();\n                that._draw();\n            },\n            _buildVisual: function () {\n                var that = this;\n                var visuals = new Group();\n                var scaleElements = that.scale.render();\n                var pointers = that.pointers;\n                var current;\n                visuals.append(that.gaugeArea);\n                visuals.append(scaleElements);\n                for (var i = 0; i < pointers.length; i++) {\n                    current = pointers[i];\n                    visuals.append(current.render());\n                    current.value(current.options.value);\n                }\n                that._visuals = visuals;\n            },\n            _createModel: function () {\n                var that = this;\n                var options = that.options;\n                var pointers = options.pointer;\n                var scale = that.scale = new LinearScale(options.scale);\n                var current, currentOptions;\n                that.pointers = [];\n                pointers = $.isArray(pointers) ? pointers : [pointers];\n                for (var i = 0; i < pointers.length; i++) {\n                    currentOptions = deepExtend({}, pointers[i], { animation: { transitions: options.transitions } });\n                    if (currentOptions.shape === ARROW) {\n                        current = new ArrowLinearPointer(scale, currentOptions);\n                    } else {\n                        current = new BarLinearPointer(scale, currentOptions);\n                    }\n                    that.pointers.push(current);\n                }\n            },\n            _getSize: function () {\n                var gauge = this;\n                var element = gauge.element;\n                var width = element.width();\n                var height = element.height();\n                var vertical = gauge.options.scale.vertical;\n                if (!width) {\n                    width = vertical ? DEFAULT_MIN_WIDTH : DEFAULT_WIDTH;\n                }\n                if (!height) {\n                    height = vertical ? DEFAULT_HEIGHT : DEFAULT_MIN_HEIGHT;\n                }\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            _getBox: function (box) {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var boxCenter = box.center();\n                var plotAreaBox = pointers[0].box.clone().wrap(scale.box);\n                var size;\n                for (var i = 0; i < pointers.length; i++) {\n                    plotAreaBox.wrap(pointers[i].box.clone());\n                }\n                if (scale.options.vertical) {\n                    size = plotAreaBox.width() / 2;\n                    plotAreaBox = new Box2D(boxCenter.x - size, box.y1, boxCenter.x + size, box.y2);\n                } else {\n                    size = plotAreaBox.height() / 2;\n                    plotAreaBox = new Box2D(box.x1, boxCenter.y - size, box.x2, boxCenter.y + size);\n                }\n                return plotAreaBox;\n            },\n            _alignElements: function () {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var scaleBox = scale.box;\n                var box = pointers[0].box.clone().wrap(scale.box);\n                var plotAreaBox = that.bbox;\n                var diff, i;\n                for (i = 0; i < pointers.length; i++) {\n                    box.wrap(pointers[i].box.clone());\n                }\n                if (scale.options.vertical) {\n                    diff = plotAreaBox.center().x - box.center().x;\n                    scale.reflow(new Box2D(scaleBox.x1 + diff, plotAreaBox.y1, scaleBox.x2 + diff, plotAreaBox.y2));\n                } else {\n                    diff = plotAreaBox.center().y - box.center().y;\n                    scale.reflow(new Box2D(plotAreaBox.x1, scaleBox.y1 + diff, plotAreaBox.x2, scaleBox.y2 + diff));\n                }\n                for (i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.bbox);\n                }\n            },\n            _shrinkElements: function () {\n                var that = this;\n                var scale = that.scale;\n                var pointers = that.pointers;\n                var scaleBox = scale.box.clone();\n                var pos = scale.options.vertical ? 'y' : 'x';\n                var pointerBox = pointers[0].box;\n                var i;\n                for (i = 0; i < pointers.length; i++) {\n                    pointerBox.wrap(pointers[i].box.clone());\n                }\n                scaleBox[pos + 1] += math.max(scaleBox[pos + 1] - pointerBox[pos + 1], 0);\n                scaleBox[pos + 2] -= math.max(pointerBox[pos + 2] - scaleBox[pos + 2], 0);\n                scale.reflow(scaleBox);\n                for (i = 0; i < pointers.length; i++) {\n                    pointers[i].reflow(that.bbox);\n                }\n            }\n        });\n        var LinearScale = NumericAxis.extend({\n            init: function (options) {\n                var scale = this;\n                scale.options = deepExtend({}, scale.options, options);\n                scale.options = deepExtend({}, scale.options, { labels: { mirror: scale.options.mirror } });\n                scale.options.majorUnit = scale.options.majorUnit || autoMajorUnit(scale.options.min, scale.options.max);\n                Axis.fn.init.call(scale, scale.options);\n                scale.options.minorUnit = scale.options.minorUnit || scale.options.majorUnit / 10;\n            },\n            options: {\n                min: 0,\n                max: 50,\n                majorTicks: {\n                    size: 15,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                minorTicks: {\n                    size: 10,\n                    align: INSIDE,\n                    color: BLACK,\n                    width: DEFAULT_LINE_WIDTH,\n                    visible: true\n                },\n                line: { width: DEFAULT_LINE_WIDTH },\n                labels: {\n                    position: INSIDE,\n                    padding: 2\n                },\n                mirror: false,\n                _alignLines: false\n            },\n            render: function () {\n                var that = this;\n                var elements = that.elements = new Group();\n                var labels = that.renderLabels();\n                var scaleLine = that.renderLine();\n                var scaleTicks = that.renderTicks();\n                var ranges = that.renderRanges();\n                elements.append(scaleLine, labels, scaleTicks, ranges);\n                return elements;\n            },\n            renderRanges: function () {\n                var that = this;\n                var options = that.options;\n                var min = options.min;\n                var max = options.max;\n                var ranges = options.ranges || [];\n                var vertical = options.vertical;\n                var mirror = options.labels.mirror;\n                var elements = new Group();\n                var count = ranges.length;\n                var rangeSize = options.rangeSize || options.minorTicks.size / 2;\n                var range, slot, slotX, slotY, i;\n                if (count) {\n                    for (i = 0; i < count; i++) {\n                        range = getRange(ranges[i], min, max);\n                        slot = that.getSlot(range.from, range.to);\n                        slotX = vertical ? that.lineBox() : slot;\n                        slotY = vertical ? slot : that.lineBox();\n                        if (vertical) {\n                            slotX.x1 -= rangeSize * (mirror ? -1 : 1);\n                        } else {\n                            slotY.y2 += rangeSize * (mirror ? -1 : 1);\n                        }\n                        elements.append(Path.fromRect(new Rect([\n                            slotX.x1,\n                            slotY.y1\n                        ], [\n                            slotX.x2 - slotX.x1,\n                            slotY.y2 - slotY.y1\n                        ]), {\n                            fill: {\n                                color: range.color,\n                                opacity: range.opacity\n                            },\n                            stroke: {}\n                        }));\n                    }\n                }\n                return elements;\n            },\n            renderLabels: function () {\n                var that = this;\n                var options = that.options;\n                var labels = that.labels;\n                var elements = new Group();\n                for (var i = 0; i < labels.length; i++) {\n                    elements.append(_buildLabel(labels[i], options.labels));\n                }\n                return elements;\n            },\n            renderLine: function () {\n                var that = this;\n                var options = that.options;\n                var line = options.line;\n                var lineBox = that.lineBox();\n                var linePath;\n                var elements = new Group();\n                if (line.width > 0 && line.visible) {\n                    linePath = new Path({\n                        stroke: {\n                            color: line.color,\n                            dashType: line.dashType,\n                            width: line.width\n                        }\n                    });\n                    linePath.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                    elements.append(linePath);\n                }\n                return elements;\n            },\n            renderTicks: function () {\n                var that = this;\n                var ticks = new Group();\n                var options = that.options;\n                var lineBox = that.lineBox();\n                var mirror = options.labels.mirror;\n                var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n                var tickLineOptions = {\n                    _alignLines: options._alignLines,\n                    vertical: options.vertical\n                };\n                function render(tickPositions, tickOptions) {\n                    var i, count = tickPositions.length;\n                    if (tickOptions.visible) {\n                        for (i = tickOptions.skip; i < count; i += tickOptions.step) {\n                            if (i % tickOptions.skipUnit === 0) {\n                                continue;\n                            }\n                            tickLineOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                            tickLineOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                            tickLineOptions.position = tickPositions[i];\n                            ticks.append(that.renderAxisTick(tickLineOptions, tickOptions));\n                        }\n                    }\n                }\n                render(that.getMajorTickPositions(), options.majorTicks);\n                render(that.getMinorTickPositions(), deepExtend({}, { skipUnit: majorUnit / options.minorUnit }, options.minorTicks));\n                return ticks;\n            },\n            renderAxisTick: function (options, tickOptions) {\n                var tickX = options.tickX;\n                var tickY = options.tickY;\n                var position = options.position;\n                var start, end, tickPath;\n                if (options.vertical) {\n                    start = new Point(tickX, position);\n                    end = new Point(tickX + tickOptions.size, position);\n                } else {\n                    start = new Point(position, tickY);\n                    end = new Point(position, tickY + tickOptions.size);\n                }\n                tickPath = new Path({\n                    stroke: {\n                        color: tickOptions.color,\n                        width: tickOptions.width\n                    }\n                }).moveTo(start).lineTo(end);\n                return tickPath;\n            }\n        });\n        var LinearPointer = Pointer.extend({\n            init: function (scale, options) {\n                var pointer = this;\n                Pointer.fn.init.call(pointer, scale, options);\n                pointer.options = deepExtend({ track: { visible: defined(options.track) } }, pointer.options);\n            },\n            options: {\n                shape: BAR_POINTER,\n                track: { border: { width: 1 } },\n                color: BLACK,\n                border: { width: 1 },\n                opacity: 1,\n                margin: getSpacing(3),\n                animation: { type: BAR_POINTER },\n                visible: true\n            },\n            reflow: function () {\n                var pointer = this;\n                var options = pointer.options;\n                var scale = pointer.scale;\n                var scaleLine = scale.lineBox();\n                var trackSize = options.track.size || options.size;\n                var pointerHalfSize = options.size / 2;\n                var mirror = scale.options.mirror;\n                var margin = getSpacing(options.margin);\n                var vertical = scale.options.vertical;\n                var space = vertical ? margin[mirror ? 'left' : 'right'] : margin[mirror ? 'bottom' : 'top'];\n                var pointerBox, pointerRangeBox, trackBox;\n                space = mirror ? -space : space;\n                if (vertical) {\n                    trackBox = new Box2D(scaleLine.x1 + space, scaleLine.y1, scaleLine.x1 + space, scaleLine.y2);\n                    if (mirror) {\n                        trackBox.x1 -= trackSize;\n                    } else {\n                        trackBox.x2 += trackSize;\n                    }\n                    if (options.shape !== BAR_POINTER) {\n                        pointerRangeBox = new Box2D(scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize, scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize);\n                        pointerBox = pointerRangeBox;\n                    }\n                } else {\n                    trackBox = new Box2D(scaleLine.x1, scaleLine.y1 - space, scaleLine.x2, scaleLine.y1 - space);\n                    if (mirror) {\n                        trackBox.y2 += trackSize;\n                    } else {\n                        trackBox.y1 -= trackSize;\n                    }\n                    if (options.shape !== BAR_POINTER) {\n                        pointerRangeBox = new Box2D(scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space, scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space);\n                        pointerBox = pointerRangeBox;\n                    }\n                }\n                pointer.trackBox = trackBox;\n                pointer.pointerRangeBox = pointerRangeBox;\n                pointer.box = pointerBox || trackBox.clone().pad(options.border.width);\n            },\n            getElementOptions: function () {\n                var options = this.options;\n                return {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: defined(options.border) ? {\n                        color: options.border.width ? options.border.color || options.color : '',\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: options.opacity\n                    } : null\n                };\n            },\n            _margin: function () {\n                var pointer = this;\n                var options = pointer.options;\n                var scale = pointer.scale;\n                var mirror = scale.options.mirror;\n                var margin = getSpacing(options.margin);\n                var vertical = scale.options.vertical;\n                var space = vertical ? margin[mirror ? 'left' : 'right'] : margin[mirror ? 'bottom' : 'top'];\n                return space;\n            }\n        });\n        var ArrowLinearPointer = LinearPointer.extend({\n            init: function (scale, options) {\n                LinearPointer.fn.init.call(this, scale, options);\n                if (this.options.size === undefined) {\n                    this.options.size = this.scale.options.majorTicks.size * 0.6;\n                }\n            },\n            pointerShape: function () {\n                var that = this;\n                var options = that.options;\n                var scale = that.scale;\n                var size = options.size;\n                var vertical = scale.options.vertical;\n                var halfSize = size / 2;\n                var sign = scale.options.mirror ? -1 : 1;\n                var reverse = scale.options.reverse;\n                var pos, shape;\n                if (vertical) {\n                    pos = reverse ? 'y2' : 'y1';\n                    shape = [\n                        new Point(0, 0 - halfSize),\n                        new Point(0 - sign * size, 0),\n                        new Point(0, 0 + halfSize)\n                    ];\n                } else {\n                    pos = reverse ? 'x1' : 'x2';\n                    shape = [\n                        new Point(0 - halfSize, 0),\n                        new Point(0, 0 + sign * size),\n                        new Point(0 + halfSize, 0)\n                    ];\n                }\n                return shape;\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var animation = new ArrowLinearPointerAnimation(that.elements, deepExtend(options.animation, {\n                    vertical: scale.options.vertical,\n                    mirror: scale.options.mirror,\n                    margin: that._margin(options.margin),\n                    from: scale.getSlot(options._oldValue),\n                    to: scale.getSlot(options.value)\n                }));\n                if (options.animation.transitions === false) {\n                    animation.options.duration = 0;\n                }\n                animation.setup();\n                animation.play();\n            },\n            render: function () {\n                var that = this;\n                var options = that.options;\n                var elements = new Group();\n                var scale = that.scale;\n                var elementOptions = that.getElementOptions();\n                var shape = that.pointerShape(options.value);\n                options.animation.type = ARROW_POINTER;\n                elements = new Path({\n                    stroke: elementOptions.stroke,\n                    fill: elementOptions.fill\n                }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n                var slot = scale.getSlot(options.value);\n                elements.transform(geo.transform().translate(slot.x1, slot.y1));\n                that.elements = elements;\n                return elements;\n            }\n        });\n        var BarLinearPointer = LinearPointer.extend({\n            init: function (scale, options) {\n                LinearPointer.fn.init.call(this, scale, options);\n                if (this.options.size === undefined) {\n                    this.options.size = this.scale.options.majorTicks.size * 0.3;\n                }\n            },\n            pointerShape: function (value) {\n                var that = this;\n                var options = that.options;\n                var scale = that.scale;\n                var vertical = scale.options.vertical;\n                var mirror = scale.options.mirror;\n                var dir = mirror == vertical ? -1 : 1;\n                var size = options.size * dir;\n                var minSlot = scale.getSlot(scale.options.min);\n                var slot = scale.getSlot(value);\n                var axis = vertical ? Y : X;\n                var sizeAxis = vertical ? X : Y;\n                var margin = that._margin() * dir;\n                var p1 = new Point();\n                p1[axis] = minSlot[axis + '1'];\n                p1[sizeAxis] = minSlot[sizeAxis + '1'];\n                var p2 = new Point();\n                p2[axis] = slot[axis + '1'];\n                p2[sizeAxis] = slot[sizeAxis + '1'];\n                if (vertical) {\n                    p1.translate(margin, 0);\n                    p2.translate(margin, 0);\n                } else {\n                    p1.translate(0, margin);\n                    p2.translate(0, margin);\n                }\n                var p3 = p2.clone();\n                var p4 = p1.clone();\n                if (vertical) {\n                    p3.translate(size, 0);\n                    p4.translate(size, 0);\n                } else {\n                    p3.translate(0, size);\n                    p4.translate(0, size);\n                }\n                return [\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ];\n            },\n            repaint: function () {\n                var that = this;\n                var scale = that.scale;\n                var options = that.options;\n                var shape = that.pointerShape(options.value);\n                var pointerPath = that.elements.children[0];\n                var oldShape = that.pointerShape(options._oldValue);\n                pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n                var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n                    reverse: scale.options.reverse,\n                    vertical: scale.options.vertical,\n                    oldPoints: [\n                        oldShape[1],\n                        oldShape[2]\n                    ],\n                    newPoints: [\n                        shape[1],\n                        shape[2]\n                    ]\n                }));\n                if (options.animation.transitions === false) {\n                    animation.options.duration = 0;\n                }\n                animation.setup();\n                animation.play();\n            },\n            render: function () {\n                var that = this;\n                var group = new Group();\n                var elementOptions = that.getElementOptions();\n                var pointer = new Path({\n                    stroke: elementOptions.stroke,\n                    fill: elementOptions.fill\n                });\n                group.append(pointer);\n                that.elements = group;\n                return group;\n            }\n        });\n        var RadialPointerAnimation = draw.Animation.extend({\n            init: function (element, options) {\n                draw.Animation.fn.init.call(this, element, options);\n                options = this.options;\n                options.duration = math.max(math.abs(options.newAngle - options.oldAngle) / options.duration * 1000, 1);\n            },\n            options: {\n                easing: LINEAR,\n                duration: ANGULAR_SPEED\n            },\n            step: function (pos) {\n                var anim = this;\n                var options = anim.options;\n                var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n                anim.element.transform(geo.transform().rotate(angle, options.center));\n            }\n        });\n        draw.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n        var ArrowLinearPointerAnimation = draw.Animation.extend({\n            options: {\n                easing: LINEAR,\n                duration: LINEAR_SPEED\n            },\n            setup: function () {\n                var options = this.options;\n                var margin = options.margin;\n                var from = options.from;\n                var to = options.to;\n                var axis = options.vertical ? 'x1' : 'y1';\n                if (options.mirror == options.vertical) {\n                    from[axis] -= margin;\n                    to[axis] -= margin;\n                } else {\n                    from[axis] += margin;\n                    to[axis] += margin;\n                }\n                var fromScale = this.fromScale = new Point(from.x1, from.y1);\n                var toScale = this.toScale = new Point(to.x1, to.y1);\n                if (options.duration !== 0) {\n                    options.duration = math.max(fromScale.distanceTo(toScale) / options.duration * 1000, 1);\n                }\n            },\n            step: function (pos) {\n                var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n                var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n                this.element.transform(geo.transform().translate(translateX, translateY));\n            }\n        });\n        draw.AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\n        var BarLinearPointerAnimation = draw.Animation.extend({\n            options: {\n                easing: LINEAR,\n                speed: LINEAR_SPEED\n            },\n            setup: function () {\n                var options = this.options;\n                var newPoints = options.newPoints;\n                var oldPoints = options.oldPoints;\n                var axis = this.axis = options.vertical ? Y : X;\n                var to = this.to = newPoints[0][axis];\n                var from = this.from = oldPoints[0][axis];\n                if (options.duration !== 0) {\n                    options.duration = math.max(math.abs(to - from) / options.speed * 1000, 1);\n                }\n                this._set(from);\n            },\n            step: function (pos) {\n                var value = interpolateValue(this.from, this.to, pos);\n                this._set(value);\n            },\n            _set: function (value) {\n                var setter = 'set' + this.axis.toUpperCase();\n                var points = this.options.newPoints;\n                points[0][setter](value);\n                points[1][setter](value);\n            }\n        });\n        draw.AnimationFactory.current.register(BAR_POINTER, BarLinearPointerAnimation);\n        function _buildLabel(label, options) {\n            var labelBox = label.box;\n            var textBox = label.children[0].box;\n            var border = options.border || {};\n            var background = options.background || '';\n            var elements = new Group();\n            var styleBox, styleGeometry, wrapper;\n            wrapper = Path.fromRect(new Rect([\n                labelBox.x1,\n                labelBox.y1\n            ], [\n                labelBox.width(),\n                labelBox.height()\n            ]), { stroke: {} });\n            var text = new Text(label.text, new Point(textBox.x1, textBox.y1), {\n                font: options.font,\n                fill: { color: options.color }\n            });\n            styleGeometry = _pad(text.bbox().clone(), options.padding);\n            styleBox = Path.fromRect(styleGeometry, {\n                stroke: {\n                    color: border.width ? border.color : '',\n                    width: border.width,\n                    dashType: border.dashType,\n                    lineJoin: 'round',\n                    lineCap: 'round'\n                },\n                fill: { color: background }\n            });\n            elements.append(wrapper);\n            elements.append(styleBox);\n            elements.append(text);\n            return elements;\n        }\n        function getRange(range, min, max) {\n            var from = defined(range.from) ? range.from : MIN_VALUE;\n            var to = defined(range.to) ? range.to : MAX_VALUE;\n            range.from = math.max(math.min(to, from), min);\n            range.to = math.min(math.max(to, from), max);\n            return range;\n        }\n        function _pad(bbox, value) {\n            var origin = bbox.getOrigin();\n            var size = bbox.getSize();\n            var spacing = getSpacing(value);\n            bbox.setOrigin([\n                origin.x - spacing.left,\n                origin.y - spacing.top\n            ]);\n            bbox.setSize([\n                size.width + (spacing.left + spacing.right),\n                size.height + (spacing.top + spacing.bottom)\n            ]);\n            return bbox;\n        }\n        function _unpad(bbox, value) {\n            var spacing = getSpacing(value);\n            spacing.left = -spacing.left;\n            spacing.top = -spacing.top;\n            spacing.right = -spacing.right;\n            spacing.bottom = -spacing.bottom;\n            return _pad(bbox, spacing);\n        }\n        dataviz.ui.plugin(RadialGauge);\n        dataviz.ui.plugin(LinearGauge);\n        dataviz.ExportMixin.extend(Gauge.fn);\n        deepExtend(dataviz, {\n            Gauge: Gauge,\n            RadialPointer: RadialPointer,\n            LinearPointer: LinearPointer,\n            ArrowLinearPointer: ArrowLinearPointer,\n            BarLinearPointer: BarLinearPointer,\n            LinearScale: LinearScale,\n            RadialScale: RadialScale,\n            LinearGauge: LinearGauge,\n            RadialGauge: RadialGauge\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}