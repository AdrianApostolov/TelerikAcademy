{"version":3,"sources":["kendo.upload.js"],"names":["f","define","$","undefined","getFileName","input","map","inputFiles","file","name","join","$input","files","getAllFileInfo","stripPath","value","extension","getFileExtension","size","rawFiles","getFileInfo","rawFile","fileName","kendo","htmlEncode","fileSize","matches","match","rFileExtension","slashIndex","lastIndexOf","substr","assignGuidToFiles","unique","uid","guid","shouldRemoveFileEntry","upload","multiple","wrapper","length","removeUploadedFile","fileEntry","data","fileNames","_supportsRemove","_submitRemove","textStatus","xhr","_removeFileEntry","trigger","SUCCESS","operation","response","XMLHttpRequest","ERROR","logToConsole","responseText","tryParseJSON","onSuccess","onError","success","json","parseJSON","normalizeJSON","e","stopEvent","stopPropagation","preventDefault","bindDragEventWrappers","element","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","on","Date","setInterval","sinceLastDrag","clearInterval","isFileUploadStarted","is","getFileEntry","target","closest","iframeUploadModule","formDataUploadModule","window","Widget","ui","antiForgeryTokens","NS","SELECT","UPLOAD","COMPLETE","CANCEL","PROGRESS","REMOVE","Upload","extend","init","options","activeInput","ns","initialFiles","that","this","fn","call","localization","_wrapInput","_activeInput","toggle","enabled","_ns","proxy","_onParentFormSubmit","_onParentFormReset","async","saveUrl","_module","_supportsFormData","_async","_renderInitialFiles","syncUploadModule","_supportsDrop","_setupDropZone","_onFileAction","_onUploadSelected","val","_onInputChange","events","showFileList","template","removeVerb","autoUpload","withCredentials","select","cancel","retry","remove","uploadSelectedFiles","dropFilesHere","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusUploaded","setOptions","attr","_supportsMultiple","enable","disable","toggleClass","prop","destroy","document","add","off","_addInput","sourceInput","nodeType","clone","insertAfter","hide","removeAttr","focus","hasClass","parent","addClass","removeClass","_onInputKeyDown","firstButton","find","keyCode","keys","TAB","_inputFiles","_isAsyncNonBatch","prevented","onSelect","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","splice","batch","currentFile","idx","_enqueueFile","width","prepend","_fileAction","_prepareTemplateData","filesData","templateData","totalSize","_prepareDefaultFileEntryTemplate","defaultTemplate","substring","existingFileEntries","removeEventArgs","fileUid","fileList","appendTo","angular","elements","onRemove","allFiles","allCompletedFiles","_hideUploadButton","_hideHeaderUploadstatus","fileElement","actionKey","classDictionary","iconsClassDictionary","hasOwnProperty","_clearFileAction","append","show","_renderAction","_fileState","stateKey","states","uploading","text","uploaded","failed","currentState","actionClass","actionText","iconClass","empty","button","icon","eventArgs","onCancel","_checkAllComplete","_updateHeaderUploadStatus","onRetry","onSaveSelected","_onFileProgress","percentComplete","progressPct","_onUploadSuccess","_onUploadError","uploadPercentage","_showUploadButton","uploadButton","_showHeaderUploadStatus","dropZone","headerUploadStatus","after","failedUploads","headerUploadStatusIcon","currentlyUploading","not","onAbort","setTimeout","FormData","windows","_userAgent","indexOf","support","browser","opera","safari","userAgent","toLowerCase","isChrome","test","isSafari","isWindowsSafari","navigator","wrap","removeUrl","removeField","params","jQuery","ajax","type","dataType","dataFilter","url","traditional","error","xhrFields","prototype","relatedInput","iframes","_frameId","prepareUpload","performUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","key","dataInput","cleanupFrame","unregisterFrame","body","prependTo","one","onIframeLoad","submit","module","each","started","contents","ex","processResponse","fakeXHR","jsonResult","statusText","status","stopFrameSubmit","id","action","stop","execCommand","push","grep","sourceElement","fileEntries","enqueueFiles","i","filesLength","formData","createFormData","createXHR","removeFileEntry","populateFormData","postFormData","stopUploadRequest","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","send","raiseError","cleanupFileEntry","uploadComplete","Math","round","loaded","total","abort","plugin","amd","a1","a2","a3"],"mappings":"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","file":"kendo.upload.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.upload', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'upload',\n        name: 'Upload',\n        category: 'web',\n        description: 'The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, antiForgeryTokens = kendo.antiForgeryTokens, logToConsole = kendo.logToConsole, rFileExtension = /\\.([^\\.]+)$/, NS = '.kendoUpload', SELECT = 'select', UPLOAD = 'upload', SUCCESS = 'success', ERROR = 'error', COMPLETE = 'complete', CANCEL = 'cancel', PROGRESS = 'progress', REMOVE = 'remove';\n        var Upload = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.localization = that.options.localization;\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest('.k-upload');\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n                var ns = that._ns = NS + '-' + kendo.guid();\n                activeInput.closest('form').on('submit' + ns, $.proxy(that._onParentFormSubmit, that)).on('reset' + ns, $.proxy(that._onParentFormReset, that));\n                if (that.options.async.saveUrl) {\n                    that._module = that._supportsFormData() ? new formDataUploadModule(that) : new iframeUploadModule(that);\n                    that._async = true;\n                    var initialFiles = that.options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n                if (that._supportsDrop()) {\n                    that._setupDropZone();\n                }\n                that.wrapper.on('click', '.k-upload-action', $.proxy(that._onFileAction, that)).on('click', '.k-upload-selected', $.proxy(that._onUploadSelected, that));\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                PROGRESS,\n                REMOVE\n            ],\n            options: {\n                name: 'Upload',\n                enabled: true,\n                multiple: true,\n                showFileList: true,\n                template: '',\n                files: [],\n                async: {\n                    removeVerb: 'POST',\n                    autoUpload: true,\n                    withCredentials: true\n                },\n                localization: {\n                    'select': 'Select files...',\n                    'cancel': 'Cancel',\n                    'retry': 'Retry',\n                    'remove': 'Remove',\n                    'uploadSelectedFiles': 'Upload files',\n                    'dropFilesHere': 'drop files here to upload',\n                    'statusUploading': 'uploading',\n                    'statusUploaded': 'uploaded',\n                    'statusWarning': 'warning',\n                    'statusFailed': 'failed',\n                    'headerStatusUploading': 'Uploading...',\n                    'headerStatusUploaded': 'Done'\n                }\n            },\n            setOptions: function (options) {\n                var that = this, activeInput = that.element;\n                Widget.fn.setOptions.call(that, options);\n                that.multiple = that.options.multiple;\n                activeInput.attr('multiple', that._supportsMultiple() ? that.multiple : false);\n                that.toggle(that.options.enabled);\n            },\n            enable: function (enable) {\n                enable = typeof enable === 'undefined' ? true : enable;\n                this.toggle(enable);\n            },\n            disable: function () {\n                this.toggle(false);\n            },\n            toggle: function (enable) {\n                enable = typeof enable === 'undefined' ? enable : !enable;\n                this.wrapper.toggleClass('k-state-disabled', enable);\n                this.element.prop('disabled', enable);\n            },\n            destroy: function () {\n                var that = this;\n                $(document).add($('.k-dropzone', that.wrapper)).add(that.wrapper.closest('form')).off(that._ns);\n                $(that.element).off(NS);\n                Widget.fn.destroy.call(that);\n            },\n            _addInput: function (sourceInput) {\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n                var that = this, input = sourceInput.clone().val('');\n                input.insertAfter(that.element).data('kendoUpload', that);\n                $(that.element).hide().attr('tabindex', '-1').removeAttr('id').off(NS);\n                that._activeInput(input);\n                that.element.focus();\n            },\n            _activeInput: function (input) {\n                var that = this, wrapper = that.wrapper;\n                that.element = input;\n                input.attr('multiple', that._supportsMultiple() ? that.multiple : false).attr('autocomplete', 'off').on('click' + NS, function (e) {\n                    if (wrapper.hasClass('k-state-disabled')) {\n                        e.preventDefault();\n                    }\n                }).on('focus' + NS, function () {\n                    $(this).parent().addClass('k-state-focused');\n                }).on('blur' + NS, function () {\n                    $(this).parent().removeClass('k-state-focused');\n                }).on('change' + NS, $.proxy(that._onInputChange, that)).on('keydown' + NS, $.proxy(that._onInputKeyDown, that));\n            },\n            _onInputKeyDown: function (e) {\n                var that = this;\n                var firstButton = that.wrapper.find('.k-upload-action:first');\n                if (e.keyCode === kendo.keys.TAB && firstButton.length > 0) {\n                    e.preventDefault();\n                    firstButton.focus();\n                }\n            },\n            _onInputChange: function (e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n            _onDrop: function (e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n                stopEvent(e);\n                if (droppedFiles.length > 0 && !that.wrapper.hasClass('k-state-disabled')) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $('.k-dropzone', that.wrapper) }, files);\n                    }\n                }\n            },\n            _isAsyncNonBatch: function () {\n                return this._async && !this.options.async.batch || false;\n            },\n            _renderInitialFiles: function (files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass('k-file-success').data('files', [files[idx]]);\n                    $('.k-progress', fileEntry).width('100%');\n                    if (!that.options.template) {\n                        $('.k-upload-status', fileEntry).prepend('<span class=\\'k-upload-pct\\'>100%</span>');\n                    }\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n            _prepareTemplateData: function (name, data) {\n                var filesData = data.fileNames, templateData = {}, totalSize = 0, idx = 0;\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n                return templateData;\n            },\n            _prepareDefaultFileEntryTemplate: function (name, data) {\n                var extension = '';\n                var defaultTemplate = $('<li class=\\'k-file\\'>' + '<span class=\\'k-progress\\'></span>' + '<span class=\\'k-icon\\'></span>' + '<span class=\\'k-filename\\' title=\\'' + name + '\\'>' + name + '</span>' + '<strong class=\\'k-upload-status\\'></strong>' + '</li>');\n                if (data.fileNames.length == 1 && !!data.fileNames[0].extension) {\n                    extension = data.fileNames[0].extension.substring(1);\n                    $('.k-icon', defaultTemplate).addClass('k-i-' + extension);\n                }\n                return defaultTemplate;\n            },\n            _enqueueFile: function (name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $('.k-upload-files', that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                if (fileList.length === 0) {\n                    fileList = $('<ul class=\\'k-upload-files k-reset\\'></ul>').appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n                    that.wrapper.removeClass('k-upload-empty');\n                }\n                existingFileEntries = $('.k-file', fileList);\n                if (!template) {\n                    fileEntry = that._prepareDefaultFileEntryTemplate(name, data);\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n                    fileEntry = $('<li class=\\'k-file\\'>' + template(templateData) + '</li>');\n                    fileEntry.find('.k-upload-action').addClass('k-button k-button-bare');\n                    that.angular('compile', function () {\n                        return {\n                            elements: fileEntry,\n                            data: [templateData]\n                        };\n                    });\n                }\n                fileEntry.attr(kendo.attr('uid'), fileUid).appendTo(fileList).data(data);\n                if (!that._async) {\n                    $('.k-progress', fileEntry).width('100%');\n                }\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = { files: existingFileEntries.data('fileNames') };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs.data);\n                    }\n                }\n                return fileEntry;\n            },\n            _removeFileEntry: function (fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest('.k-upload-files');\n                var allFiles;\n                var allCompletedFiles;\n                fileEntry.remove();\n                allFiles = $('.k-file', fileList);\n                allCompletedFiles = $('.k-file-success, .k-file-error', fileList);\n                if (allCompletedFiles.length === allFiles.length) {\n                    this._hideUploadButton();\n                }\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass('k-upload-empty');\n                    that._hideHeaderUploadstatus();\n                }\n            },\n            _fileAction: function (fileElement, actionKey) {\n                var classDictionary = {\n                    remove: 'k-delete',\n                    cancel: 'k-cancel',\n                    retry: 'k-retry'\n                };\n                var iconsClassDictionary = {\n                    remove: 'k-i-close',\n                    cancel: 'k-i-close',\n                    retry: 'k-i-refresh'\n                };\n                if (!classDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                this._clearFileAction(fileElement);\n                if (!this.options.template) {\n                    fileElement.find('.k-upload-status .k-upload-action').remove();\n                    fileElement.find('.k-upload-status').append(this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey]));\n                } else {\n                    fileElement.find('.k-upload-action').addClass('k-button k-button-bare').append('<span class=\\'k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                }\n            },\n            _fileState: function (fileEntry, stateKey) {\n                var localization = this.localization, states = {\n                        uploading: { text: localization.statusUploading },\n                        uploaded: { text: localization.statusUploaded },\n                        failed: { text: localization.statusFailed }\n                    }, currentState = states[stateKey];\n                if (currentState) {\n                    $('.k-icon:not(.k-delete, .k-cancel, .k-retry)', fileEntry).text(currentState.text);\n                }\n            },\n            _renderAction: function (actionClass, actionText, iconClass) {\n                if (actionClass !== '') {\n                    return $('<button type=\\'button\\' class=\\'k-button k-button-bare k-upload-action\\'>' + '<span class=\\'k-icon ' + iconClass + ' ' + actionClass + '\\' title=\\'' + actionText + '\\'></span>' + '</button>');\n                } else {\n                    return $('<button type=\\'button\\' class=\\'k-button\\'>' + actionText + '</button>');\n                }\n            },\n            _clearFileAction: function (fileElement) {\n                $('.k-upload-action', fileElement).empty().hide();\n            },\n            _onFileAction: function (e) {\n                var that = this;\n                if (!that.wrapper.hasClass('k-state-disabled')) {\n                    var button = $(e.target).closest('.k-upload-action'), icon = button.find('.k-icon'), fileEntry = button.closest('.k-file'), eventArgs = { files: fileEntry.data('fileNames') };\n                    if (icon.hasClass('k-delete')) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs.data);\n                        }\n                    } else if (icon.hasClass('k-cancel')) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        this._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-retry')) {\n                        $('.k-warning', fileEntry).remove();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                    }\n                }\n                return false;\n            },\n            _onUploadSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                if (!wrapper.hasClass('k-state-disabled')) {\n                    this._module.onSaveSelected();\n                }\n                return false;\n            },\n            _onFileProgress: function (e, percentComplete) {\n                var progressPct;\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n                if (!this.options.template) {\n                    progressPct = $('.k-upload-pct', e.target);\n                    if (progressPct.length === 0) {\n                        $('.k-upload-status', e.target).prepend('<span class=\\'k-upload-pct\\'></span>');\n                    }\n                    $('.k-upload-pct', e.target).text(percentComplete + '%');\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                } else {\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                }\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data('fileNames'),\n                    percentComplete: percentComplete\n                });\n            },\n            _onUploadSuccess: function (e, response, xhr) {\n                var fileEntry = getFileEntry(e);\n                this._fileState(fileEntry, 'uploaded');\n                fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n                this._updateHeaderUploadStatus();\n                this.trigger(SUCCESS, {\n                    files: fileEntry.data('fileNames'),\n                    response: response,\n                    operation: 'upload',\n                    XMLHttpRequest: xhr\n                });\n                if (this._supportsRemove()) {\n                    this._fileAction(fileEntry, REMOVE);\n                } else {\n                    this._clearFileAction(fileEntry);\n                }\n                this._checkAllComplete();\n            },\n            _onUploadError: function (e, xhr) {\n                var fileEntry = getFileEntry(e);\n                var uploadPercentage = $('.k-upload-pct', fileEntry);\n                this._fileState(fileEntry, 'failed');\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n                $('.k-progress', fileEntry).width('100%');\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.empty().removeClass('k-upload-pct').addClass('k-icon k-warning');\n                } else {\n                    $('.k-upload-status', fileEntry).prepend('<span class=\\'k-icon k-warning\\'></span>');\n                }\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, 'retry');\n                this.trigger(ERROR, {\n                    operation: 'upload',\n                    files: fileEntry.data('fileNames'),\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n                this._checkAllComplete();\n            },\n            _showUploadButton: function () {\n                var uploadButton = $('.k-upload-selected', this.wrapper);\n                if (uploadButton.length === 0) {\n                    uploadButton = this._renderAction('', this.localization.uploadSelectedFiles).addClass('k-upload-selected');\n                }\n                this.wrapper.append(uploadButton);\n            },\n            _hideUploadButton: function () {\n                $('.k-upload-selected', this.wrapper).remove();\n            },\n            _showHeaderUploadStatus: function () {\n                var localization = this.localization;\n                var dropZone = $('.k-dropzone', this.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n                headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\">' + localization.headerStatusUploading + '<span class=\"k-icon k-loading\">' + localization.statusUploading + '</span>' + '</strong>';\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', this.wrapper).after(headerUploadStatus);\n                }\n            },\n            _updateHeaderUploadStatus: function () {\n                var that = this;\n                var localization = that.localization;\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error');\n                var failedUploads;\n                var headerUploadStatus;\n                var headerUploadStatusIcon;\n                if (currentlyUploading.length === 0) {\n                    failedUploads = $('.k-file.k-file-error', that.wrapper);\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass('k-loading').addClass(failedUploads.length !== 0 ? 'k-warning' : 'k-i-tick').text(failedUploads.length !== 0 ? localization.statusWarning : localization.statusUploaded);\n                    headerUploadStatus.text(that.localization.headerStatusUploaded).append(headerUploadStatusIcon);\n                }\n            },\n            _hideHeaderUploadstatus: function () {\n                $('.k-upload-status-total', this.wrapper).remove();\n            },\n            _onParentFormSubmit: function () {\n                var upload = this, element = upload.element;\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n                if (!element.value) {\n                    var input = $(element);\n                    input.attr('disabled', 'disabled');\n                    window.setTimeout(function () {\n                        input.removeAttr('disabled');\n                    }, 0);\n                }\n            },\n            _onParentFormReset: function () {\n                $('.k-upload-files', this.wrapper).remove();\n            },\n            _supportsFormData: function () {\n                return typeof FormData != 'undefined';\n            },\n            _supportsMultiple: function () {\n                var windows = this._userAgent().indexOf('Windows') > -1;\n                return !kendo.support.browser.opera && !(kendo.support.browser.safari && windows);\n            },\n            _supportsDrop: function () {\n                var userAgent = this._userAgent().toLowerCase(), isChrome = /chrome/.test(userAgent), isSafari = !isChrome && /safari/.test(userAgent), isWindowsSafari = isSafari && /windows/.test(userAgent);\n                return !isWindowsSafari && this._supportsFormData() && this.options.async.saveUrl;\n            },\n            _userAgent: function () {\n                return navigator.userAgent;\n            },\n            _setupDropZone: function () {\n                var that = this;\n                $('.k-upload-button', this.wrapper).wrap('<div class=\\'k-dropzone\\'></div>');\n                var ns = that._ns;\n                var dropZone = $('.k-dropzone', that.wrapper).append($('<em>' + that.localization.dropFilesHere + '</em>')).on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(this._onDrop, this));\n                bindDragEventWrappers(dropZone, ns, function () {\n                    if (!dropZone.closest('.k-upload').hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                });\n                bindDragEventWrappers($(document), ns, function () {\n                    if (!dropZone.closest('.k-upload').hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-active');\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-active');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                });\n            },\n            _supportsRemove: function () {\n                return !!this.options.async.removeUrl;\n            },\n            _submitRemove: function (fileNames, data, onSuccess, onError) {\n                var upload = this, removeField = upload.options.async.removeField || 'fileNames', params = $.extend(data, antiForgeryTokens());\n                params[removeField] = fileNames;\n                jQuery.ajax({\n                    type: this.options.async.removeVerb,\n                    dataType: 'json',\n                    dataFilter: normalizeJSON,\n                    url: this.options.async.removeUrl,\n                    traditional: true,\n                    data: params,\n                    success: onSuccess,\n                    error: onError,\n                    xhrFields: { withCredentials: this.options.async.withCredentials }\n                });\n            },\n            _wrapInput: function (input) {\n                var that = this;\n                var options = that.options;\n                input.wrap('<div class=\\'k-widget k-upload k-header\\'><div class=\\'k-button k-upload-button\\'></div></div>');\n                if (!options.async.saveUrl) {\n                    input.closest('.k-upload').addClass('k-upload-sync');\n                }\n                input.closest('.k-upload').addClass('k-upload-empty');\n                input.closest('.k-button').append('<span>' + this.localization.select + '</span>');\n                return input.closest('.k-upload');\n            },\n            _checkAllComplete: function () {\n                if ($('.k-file.k-file-progress', this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n            _inputFiles: function (sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n        var syncUploadModule = function (upload) {\n            this.name = 'syncUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element.closest('form').attr('enctype', 'multipart/form-data').attr('encoding', 'multipart/form-data');\n        };\n        syncUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                upload._addInput(sourceInput);\n                var file = upload._enqueueFile(getFileName(sourceInput), {\n                    'relatedInput': sourceInput,\n                    'fileNames': files\n                });\n                upload._fileAction(file, REMOVE);\n            },\n            onRemove: function (e) {\n                var fileEntry = getFileEntry(e);\n                fileEntry.data('relatedInput').remove();\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n        var iframeUploadModule = function (upload) {\n            this.name = 'iframeUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n        Upload._frameId = 0;\n        iframeUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload, sourceInput = $(e.target);\n                var fileEntry = this.prepareUpload(sourceInput, files);\n                if (upload.options.async.autoUpload) {\n                    this.performUpload(fileEntry);\n                } else {\n                    if (upload._supportsRemove()) {\n                        this.upload._fileAction(fileEntry, REMOVE);\n                    }\n                    upload._showUploadButton();\n                }\n            },\n            prepareUpload: function (sourceInput, files) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr('name');\n                upload._addInput(sourceInput);\n                sourceInput.attr('name', name);\n                var iframe = this.createFrame(upload.name + '_' + Upload._frameId++);\n                this.registerFrame(iframe);\n                var form = this.createForm(upload.options.async.saveUrl, iframe.attr('name')).append(activeInput);\n                var fileEntry = upload._enqueueFile(getFileName(sourceInput), {\n                    'frame': iframe,\n                    'relatedInput': activeInput,\n                    'fileNames': files\n                });\n                iframe.data({\n                    'form': form,\n                    'file': fileEntry\n                });\n                return fileEntry;\n            },\n            performUpload: function (fileEntry) {\n                var e = { files: fileEntry.data('fileNames') }, iframe = fileEntry.data('frame'), upload = this.upload;\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideUploadButton();\n                    upload._showHeaderUploadStatus();\n                    iframe.appendTo(document.body);\n                    var form = iframe.data('form').attr('action', upload.options.async.saveUrl).appendTo(document.body);\n                    e.data = $.extend({}, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find('input[name=\\'' + key + '\\']');\n                        if (dataInput.length === 0) {\n                            dataInput = $('<input>', {\n                                type: 'hidden',\n                                name: key\n                            }).prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    iframe.one('load', $.proxy(this.onIframeLoad, this));\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data('file'));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this), started = isFileUploadStarted(fileEntry);\n                    if (!started) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onIframeLoad: function (e) {\n                var iframe = $(e.target), responseText;\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = 'Error trying to get server response: ' + ex;\n                }\n                this.processResponse(iframe, responseText);\n            },\n            processResponse: function (iframe, responseText) {\n                var fileEntry = iframe.data('file'), module = this, fakeXHR = { responseText: responseText };\n                tryParseJSON(responseText, function (jsonResult) {\n                    $.extend(fakeXHR, {\n                        statusText: 'OK',\n                        status: '200'\n                    });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                }, function () {\n                    $.extend(fakeXHR, {\n                        statusText: 'error',\n                        status: '500'\n                    });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                });\n            },\n            onCancel: function (e) {\n                var iframe = $(e.target).data('frame');\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data('file'));\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, data) {\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data('frame');\n                if (iframe) {\n                    this.unregisterFrame(iframe);\n                    this.upload._removeFileEntry(fileEntry);\n                    this.cleanupFrame(iframe);\n                } else {\n                    removeUploadedFile(fileEntry, this.upload, data);\n                }\n            },\n            onAbort: function () {\n                var element = this.element, module = this;\n                $.each(this.iframes, function () {\n                    $('input', this.data('form')).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data('form').remove();\n                    this.remove();\n                });\n                this.iframes = [];\n            },\n            createFrame: function (id) {\n                return $('<iframe' + ' name=\\'' + id + '\\'' + ' id=\\'' + id + '\\'' + ' style=\\'display:none;\\' />');\n            },\n            createForm: function (action, target) {\n                return $('<form enctype=\\'multipart/form-data\\' method=\\'POST\\'' + ' action=\\'' + action + '\\'' + ' target=\\'' + target + '\\'' + '/>');\n            },\n            stopFrameSubmit: function (frame) {\n                if (typeof frame.stop != 'undefined') {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand('Stop');\n                }\n            },\n            registerFrame: function (frame) {\n                this.iframes.push(frame);\n            },\n            unregisterFrame: function (frame) {\n                this.iframes = $.grep(this.iframes, function (value) {\n                    return value.attr('name') != frame.attr('name');\n                });\n            },\n            cleanupFrame: function (frame) {\n                var form = frame.data('form');\n                frame.data('file').data('frame', null);\n                setTimeout(function () {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n        var formDataUploadModule = function (upload) {\n            this.name = 'formDataUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n        };\n        formDataUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload, module = this, sourceElement = $(e.target), fileEntries = this.prepareUpload(sourceElement, files);\n                $.each(fileEntries, function () {\n                    if (upload.options.async.autoUpload) {\n                        module.performUpload(this);\n                    } else {\n                        if (upload._supportsRemove()) {\n                            upload._fileAction(this, REMOVE);\n                        }\n                        upload._showUploadButton();\n                    }\n                });\n            },\n            prepareUpload: function (sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n                if (sourceElement.is('input')) {\n                    $.each(fileEntries, function () {\n                        $(this).data('relatedInput', sourceElement);\n                    });\n                    sourceElement.data('relatedFileEntries', fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n                return fileEntries;\n            },\n            enqueueFiles: function (files) {\n                var upload = this.upload, name, i, filesLength = files.length, currentFile, fileEntry, fileEntries = [];\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function (file) {\n                        return file.name;\n                    }).join(', ');\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data('files', files);\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data('files', [currentFile]);\n                        fileEntries.push(fileEntry);\n                    }\n                }\n                return fileEntries;\n            },\n            performUpload: function (fileEntry) {\n                var upload = this.upload, formData = this.createFormData(), xhr = this.createXHR(), e = {\n                        files: fileEntry.data('fileNames'),\n                        XMLHttpRequest: xhr\n                    };\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._hideUploadButton();\n                    upload._showHeaderUploadStatus();\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({}, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n                        this.populateFormData(formData, fileEntry.data('files'));\n                    }\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this), started = isFileUploadStarted(fileEntry);\n                    if (!started) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onCancel: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, data) {\n                var fileEntry = getFileEntry(e);\n                if (fileEntry.hasClass('k-file-success')) {\n                    removeUploadedFile(fileEntry, this.upload, data);\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n            createXHR: function () {\n                return new XMLHttpRequest();\n            },\n            postFormData: function (url, data, fileEntry, xhr) {\n                var module = this;\n                fileEntry.data('request', xhr);\n                xhr.addEventListener('load', function (e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n                xhr.addEventListener(ERROR, function (e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n                xhr.upload.addEventListener('progress', function (e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n                xhr.open('POST', url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n                xhr.send(data);\n            },\n            createFormData: function () {\n                return new FormData();\n            },\n            populateFormData: function (data, files) {\n                var upload = this.upload, i, length = files.length;\n                for (i = 0; i < length; i++) {\n                    data.append(upload.options.async.saveField || upload.name, files[i].rawFile);\n                }\n                return data;\n            },\n            onRequestSuccess: function (e, fileEntry) {\n                var xhr = e.target, module = this;\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText, function (jsonResult) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }, raiseError);\n                } else {\n                    raiseError();\n                }\n            },\n            onRequestError: function (e, fileEntry) {\n                var xhr = e.target;\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n            cleanupFileEntry: function (fileEntry) {\n                var relatedInput = fileEntry.data('relatedInput'), uploadComplete = true;\n                if (relatedInput) {\n                    $.each(relatedInput.data('relatedFileEntries') || [], function () {\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass('k-file-success');\n                        }\n                    });\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n            removeFileEntry: function (fileEntry) {\n                this.cleanupFileEntry(fileEntry);\n                this.upload._removeFileEntry(fileEntry);\n            },\n            onRequestProgress: function (e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n            stopUploadRequest: function (fileEntry) {\n                fileEntry.data('request').abort();\n            }\n        };\n        function getFileName(input) {\n            return $.map(inputFiles(input), function (file) {\n                return file.name;\n            }).join(', ');\n        }\n        function inputFiles($input) {\n            var input = $input[0];\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                        name: stripPath(input.value),\n                        extension: getFileExtension(input.value),\n                        size: null\n                    }];\n            }\n        }\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function (file) {\n                return getFileInfo(file);\n            });\n        }\n        function getFileInfo(rawFile) {\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: rawFile.size || rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : '';\n        }\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf('\\\\');\n            return slashIndex != -1 ? name.substr(slashIndex + 1) : name;\n        }\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n            return $.map(files, function (file) {\n                file.uid = unique ? kendo.guid() : uid;\n                return file;\n            });\n        }\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $('.k-file', upload.wrapper).length > 1;\n        }\n        function removeUploadedFile(fileEntry, upload, data) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                return;\n            }\n            var files = fileEntry.data('fileNames');\n            var fileNames = $.map(files, function (file) {\n                return file.name;\n            });\n            upload._submitRemove(fileNames, data, function onSuccess(data, textStatus, xhr) {\n                upload._removeFileEntry(fileEntry);\n                upload.trigger(SUCCESS, {\n                    operation: 'remove',\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n            }, function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                upload.trigger(ERROR, {\n                    operation: 'remove',\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n            });\n        }\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false, json = '';\n            try {\n                json = $.parseJSON(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n            if (success) {\n                onSuccess(json);\n            }\n        }\n        function normalizeJSON(input) {\n            if (typeof input === 'undefined' || input === '') {\n                input = '{}';\n            }\n            return input;\n        }\n        function stopEvent(e) {\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n            element.on('dragenter' + namespace, function () {\n                onDragEnter();\n                lastDrag = new Date();\n                if (!hideInterval) {\n                    hideInterval = setInterval(function () {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            }).on('dragover' + namespace, function () {\n                lastDrag = new Date();\n            });\n        }\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is('.k-file-progress, .k-file-success, .k-file-error');\n        }\n        function getFileEntry(e) {\n            return $(e.target).closest('.k-file');\n        }\n        kendo.ui.plugin(Upload);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}